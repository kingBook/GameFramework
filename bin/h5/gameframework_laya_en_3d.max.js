/***********************************/
/*http://www.layabox.com 2015/12/20*/
/***********************************/
window.Laya=(function(window,document){
	var Laya={
		__internals:[],
		__packages:{},
		__classmap:{'Object':Object,'Function':Function,'Array':Array,'String':String},
		__sysClass:{'object':'Object','array':'Array','string':'String','dictionary':'Dictionary'},
		__propun:{writable: true,enumerable: false,configurable: true},
		__presubstr:String.prototype.substr,
		__substr:function(ofs,sz){return arguments.length==1?Laya.__presubstr.call(this,ofs):Laya.__presubstr.call(this,ofs,sz>0?sz:(this.length+sz));},
		__init:function(_classs){_classs.forEach(function(o){o.__init$ && o.__init$();});},
		__parseInt:function(value){return !value?0:parseInt(value);},
		__isClass:function(o){return o && (o.__isclass || o==Object || o==String || o==Array);},
		__newvec:function(sz,value){
			var d=[];
			d.length=sz;
			for(var i=0;i<sz;i++) d[i]=value;
			return d;
		},
		__extend:function(d,b){
			for (var p in b){
				if (!b.hasOwnProperty(p)) continue;
				var g = b.__lookupGetter__(p), s = b.__lookupSetter__(p); 
				if ( g || s ) {
					g && d.__defineGetter__(p, g);
					s && d.__defineSetter__(p, s);
				} 
				else d[p] = b[p];
			}
			function __() { Laya.un(this,'constructor',d); }__.prototype=b.prototype;d.prototype=new __();Laya.un(d.prototype,'__imps',Laya.__copy({},b.prototype.__imps));
		},
		__copy:function(dec,src){
			if(!src) return null;
			dec=dec||{};
			for(var i in src) dec[i]=src[i];
			return dec;
		},
		__package:function(name,o){
			if(Laya.__packages[name]) return;
			Laya.__packages[name]=true;
			var p=window,strs=name.split('.');
			if(strs.length>1){
				for(var i=0,sz=strs.length-1;i<sz;i++){
					var c=p[strs[i]];
					p=c?c:(p[strs[i]]={});
				}
			}
			p[strs[strs.length-1]] || (p[strs[strs.length-1]]=o||{});
		},
		__hasOwnProperty:function(name,o){
			o=o ||this;
		    function classHas(name,o){
				if(Object.hasOwnProperty.call(o.prototype,name)) return true;
				var s=o.prototype.__super;
				return s==null?null:classHas(name,s);
			}
			return (Object.hasOwnProperty.call(o,name)) || classHas(name,o.__class);
		},
		__typeof:function(o,value){
			if(!o || !value) return false;
			if(value==String) return (typeof o=='string');
			if(value==Number) return (typeof o=='number');
			if(value.__interface__) value=value.__interface__;
			else if(typeof value!='string')  return (o instanceof value);
			return (o.__imps && o.__imps[value]) || (o.__class==value);
		},
		__as:function(value,type){
			return (this.__typeof(value,type))?value:null;
		},		
		interface:function(name,_super){
			Laya.__package(name,{});
			var ins=Laya.__internals;
			var a=ins[name]=ins[name] || {};
			a.self=name;
			if(_super)a.extend=ins[_super]=ins[_super] || {};
			var o=window,words=name.split('.');
			for(var i=0;i<words.length-1;i++) o=o[words[i]];o[words[words.length-1]]={__interface__:name};
		},
		class:function(o,fullName,dic,_super,miniName){
			dic && (Laya.un(o.prototype,'toString',LAYABOX.toStringForDic));
			_super && Laya.__extend(o,_super);
			if(fullName){
				Laya.__package(fullName,o);
				Laya.__classmap[fullName]=o;
				if(fullName.indexOf('.')>0){
					if(fullName.indexOf('laya.')==0){
						var paths=fullName.split('.');
						miniName=miniName || paths[paths.length-1];
						if(Laya[miniName]) debugger;
						Laya[miniName]=o;
					}					
				}
				else {
					if(fullName=="Main")
						window.Main=o;
					else{
						if(Laya[fullName]){
							console.log("Err!,Same class:"+fullName,Laya[fullName]);
							debugger;
						}
						Laya[fullName]=o;
					}
				}
			}
			var un=Laya.un,p=o.prototype;
			un(p,'hasOwnProperty',Laya.__hasOwnProperty);
			un(p,'__class',o);
			un(p,'__super',_super);
			un(p,'__className',fullName);
			un(o,'__super',_super);
			un(o,'__className',fullName);
			un(o,'__isclass',true);
			un(o,'super',function(o){this.__super.call(o);});
		},
		imps:function(dec,src){
			if(!src) return null;
			var d=dec.__imps|| Laya.un(dec,'__imps',{});
			for(var i in src){
				d[i]=src[i];
				var c=i;
				while((c=this.__internals[c]) && (c=c.extend) ){
					c=c.self;d[c]=true;
				}
			}
		},		
		getset:function(isStatic,o,name,getfn,setfn){
			if(!isStatic){
				getfn && Laya.un(o,'_$get_'+name,getfn);
				setfn && Laya.un(o,'_$set_'+name,setfn);
			}
			else{
				getfn && (o['_$GET_'+name]=getfn);
				setfn && (o['_$SET_'+name]=setfn);
			}
			if(getfn && setfn) 
				Object.defineProperty(o,name,{get:getfn,set:setfn,enumerable:false});
			else{
				getfn && Object.defineProperty(o,name,{get:getfn,enumerable:false});
				setfn && Object.defineProperty(o,name,{set:setfn,enumerable:false});
			}
		},
		static:function(_class,def){
				for(var i=0,sz=def.length;i<sz;i+=2){
					if(def[i]=='length') 
						_class.length=def[i+1].call(_class);
					else{
						function tmp(){
							var name=def[i];
							var getfn=def[i+1];
							Object.defineProperty(_class,name,{
								get:function(){delete this[name];return this[name]=getfn.call(this);},
								set:function(v){delete this[name];this[name]=v;},enumerable: true,configurable: true});
						}
						tmp();
					}
				}
		},		
		un:function(obj,name,value){
			arguments.length<3 &&(value=obj[name]);
			Laya.__propun.value=value;
			Object.defineProperty(obj, name, Laya.__propun);
			return value;
		},
		uns:function(obj,names){
			names.forEach(function(o){Laya.un(obj,o)});
		}
	};

	window.console=window.console || ({log:function(){}});
	window.trace=window.console.log;
	Error.prototype.throwError=function(){throw arguments;};
	String.prototype.substr=Laya.__substr;
	Object.defineProperty(Array.prototype,'fixed',{enumerable: false});
	var iflash=window.iflash={utils:{}};
	var LAYABOX=window.LAYABOX=window.LAYABOX || {
		classmap:Laya.__classmap,
		systemClass:Laya.__sysClass,
	};
	Function.prototype.BIND$ = function(o) {
			this.__$BiD___ || (this.__$BiD___ = LAYABOX.__bindid++);
			o.BIND$__ || (o.BIND$__={});
			var fn=o.BIND$__[this.__$BiD___];
			if(fn) return fn;
			return o.BIND$__[this.__$BiD___]=this.bind(o);
	};
	Array.CASEINSENSITIVE = 1;
	Array.DESCENDING = 2;
	Array.NUMERIC = 16;
	Array.RETURNINDEXEDARRAY = 8;
	Array.UNIQUESORT = 4;
	Object.defineProperty(Array.prototype,'fixed',{enumerable: false});
	(function(defs){
		var p=Date.prototype;
		Object.defineProperty(p,'millisecondsUTC',{get:p.getUTCMilliseconds,enumerable: false});
		Object.defineProperty(p,'minutesUTC',{get:p.getUTCMinutes,enumerable: false});
		Object.defineProperty(p,'mouthUTC',{get:p.getUTCMonth,enumerable: false});
		for(var i=0;i<defs.length;i++)
			Object.defineProperty(p,defs[i],{get:p['get'+defs[i].charAt(0).toUpperCase()+defs[i].substr(1)]})
	})(['date','day','fullYear','hours','millseconds','minutes','month','seconds','time','timezoneOffset','dateUTC','dayUTC','fullYearUTC','hoursUTC']);
	LAYABOX.__bindid=1;	
	LAYABOX.sortonNameArray2=function(array,name,options){
		(options===void 0)&& (options=0);
		var name0=name[0],name1=name[1],type=1;
		if (options==(16 | 2))type=-1;
		return array.sort(function(a,b){
			if (b[name0]==a[name0]){
				 return type *(a[name1]-b[name1]);
			}else return type *(a[name0]-b[name0]);
		});
	};
	LAYABOX.sortonNameArray=function(array,name,options){
		(options===void 0)&& (options=0);
		var name0=name[0],type=1;
		(options==(16 | 2)) && (type=-1);
		return array.sort(function(a,b){
			if (b[name0]==a[name0]){
				for (var i=1,sz=name.length;i < sz;i++){
					var tmp=name[i];
					if (b[tmp]!=a[tmp])return type *(a[tmp]-b[tmp]);
				}
				return 0;
			}
			else return type *(a[name0]-b[name0]);
		});
	};
	LAYABOX.arraypresort=Array.prototype.sort;
	Laya.un(Array.prototype,'sortOn',function(name,options){
		if(name instanceof Function) return this.sort(name);
		if((name instanceof Array)){
			if(name.length==0)return this;
			if(name.length==2)return LAYABOX.sortonNameArray2(this,name,options);
			if(name.length>2)return LAYABOX.sortonNameArray(this,name,options);name=name[0];
		}
		if (options==16)return this.sort(function(a,b){return a[name]-b[name];});
		if (options==2)return this.sort(function(a,b){return b[name]-a[name];});
		if (options==(16 | 2))return this.sort(function(a,b){return b[name]-a[name];});
		if (options==1) return this.sort();
		return this.sort(function(a,b){return a[name]-b[name];});
	});
	Laya.un(Array.prototype,'sort',function(value){
		if(value==16) return LAYABOX.arraypresort.call(this,function (a, b) {return a - b;});
		if(value==(16|2)) return LAYABOX.arraypresort.call(this,function (a, b) {return b - a;});
		if(value==1) return LAYABOX.arraypresort.call(this);
		return LAYABOX.arraypresort.call(this,value);
	});
	LAYABOX.bind=function(obj,fn){
		return obj==null || fn==null?null:fn.BIND$(obj);
	};
LAYABOX.ENABLE3D=true;
	var Dictionary=window.Dictionary=iflash.utils.Dictionary=function(){};	window.Dictionary.prototype=Object.prototype;
	Laya.__classmap['Dictionary']=Dictionary;
	LAYABOX.DICKEY=0;
	LAYABOX.DICKEYS=[];
	LAYABOX.toStringForDic=function(){(!this.__DICKEY__) && (Laya.un(this,'__DICKEY__',--LAYABOX.DICKEY),LAYABOX.DICKEYS['&layadic_'+this.__DICKEY__]=this);return '&layadic_'+this.__DICKEY__;};

	return Laya;
})(window,document);

	var __un=Laya.un,__uns=Laya.uns,__static=Laya.static,__class=Laya.class,__getset=Laya.getset,__newvec=Laya.__newvec,__bind=LAYABOX.bind;
	var LAYAFNVOID=function(){};
	var LAYAFNSTR=function(){return '';}
	var LAYAFNNULL=function(){return null;}
	var LAYAFNTRUE=function(){return true;}
	var LAYAFNFALSE=function(){return false;}
	var LAYAFN0=function(){return 0;}
	var LAYAFNARRAY = function() { return []; }
	var GETEACH = function(a) { return a?a:[]; }

	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/igraphicsfill.as
	Laya.interface('iflash.display.IGraphicsFill');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/idynamicpropertyoutput.as
	Laya.interface('iflash.net.IDynamicPropertyOutput');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/idynamicpropertywriter.as
	Laya.interface('iflash.net.IDynamicPropertyWriter');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/system/iobject.as
	Laya.interface('iflash.laya.system.IObject');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/xml/ixmlelement.as
	Laya.interface('iflash.xml.IXMLElement');
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/ibroadphase.as
	Laya.interface('Box2D.Collision.IBroadPhase');
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/animation/ianimatable.as
	Laya.interface('starling.animation.IAnimatable');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/igraphicsstroke.as
	Laya.interface('iflash.display.IGraphicsStroke');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/ibitmapdrawable.as
	Laya.interface('iflash.display.IBitmapDrawable');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/igraphicsdata.as
	Laya.interface('iflash.display.IGraphicsData');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/ieventdispatcher.as
	Laya.interface('iflash.events.IEventDispatcher');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/igraphicspath.as
	Laya.interface('iflash.display.IGraphicsPath');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/iexternalizable.as
	Laya.interface('iflash.utils.IExternalizable');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/idataoutput.as
	Laya.interface('iflash.utils.IDataOutput');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/idatainput.as
	Laya.interface('iflash.utils.IDataInput');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/idataoutput.jas
	Laya.interface('iflash.utils.IDataOutput');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/idatainput.jas
	Laya.interface('iflash.utils.IDataInput');
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/browser.as
	//class Browser
	var Browser=(function(){
		function Browser(){};
		__class(Browser,'Browser',true);
		__getset(1,Browser,'frameRate',function(){
			return Browser._driver_.frameRate;
			},function(num){
			Browser._driver_.frameRate=num;
		});

		Browser.__init__=function(sprite){
			/*__JS__ */Browser._driver_=new iflash.laya.driver.Driver(sprite);
		}

		Browser.__start__=function(){
			Browser._driver_.start();
			Browser._driver_.regEvent();
		}

		Browser.eval=function(str,target){
			target=target || Browser.window;
			/*__JS__ */return target.eval(str);
		}

		Browser.err=function(e){
			console.log("err:"+e);
		}

		Browser._createRootCanvas_=function(){
			var canvas=Browser._driver_.getRootCanvas();
			canvas["id"]="canvas";
			canvas.size(Browser.window.innerWidth,Browser.window.innerHeight);
			if (Laya.HTMLVER){
				Browser.document.body.appendChild(canvas);
				/*__JS__ */if(!Laya.CONCHVER){canvas.style.position='absolute';canvas.style.left=canvas.style.top=0;};
			}
			return canvas;
		}

		Browser.addToBody=function(htmlElement){
			Browser.document.body.appendChild(htmlElement);
		}

		Browser.removeFromBody=function(htmlElement){
			if(htmlElement&&htmlElement.parentNode){
				htmlElement.parentNode.removeChild(htmlElement);
			}
		}

		Browser._createWebGLCanvas_=function(){
			if (Laya.CONCHVER)return Browser._createRootCanvas_();
			var canvas=Browser.document.createElement("canvas");
			canvas.size(Browser.window.innerWidth,Browser.window.innerHeight);
			if (Laya.HTMLVER){
				Browser.document.body.appendChild(canvas);
				/*__JS__ */if(!Laya.CONCHVER){canvas.style.position='absolute';canvas.style.left=canvas.style.top=0;canvas.style.zIndex=-1000;};
			}
			return canvas;
		}

		Browser._debugger_=function(){
			/*__JS__ */debugger;
		}

		Browser.alert=function(e){
			/*__JS__ */alert(e);
		}

		Browser._createModle_=function(type,id,node){
			return Browser._driver_.createModle(type,id,node);
		}

		Browser.createHttpRequest=function(){
			return Browser._driver_.createHttpRequest();
		}

		Browser.setCursor=function(cursor){
			Browser._driver_.cursor(cursor);
			Browser._cursors_.push(cursor);
		}

		Browser.restoreCursor=function(){
			if (Browser._cursors_.length==0)return;
			Browser._cursors_.pop();
			Browser._driver_.cursor(Browser._cursors_.length>0?Browser._cursors_[Browser._cursors_.length-1]:"default");
		}

		Browser.hideSystemLoading=function(){
			if (Laya.CONCHVER){
				Browser.window.conchMarket&&Browser.window.conchMarket.sendMessageToPlatform('{"type":"ge_load_game_end"}',function(){});
				/*__JS__ */conch.showLoadingView(false);
			}
		}

		Browser.refresh=function(){
			Browser.location.reload();
		}

		Browser.window=null;
		Browser.document=null;
		Browser.location=null
		Browser.navigator=null
		Browser.input=null
		Browser._driver_=null
		Browser._cursors_=[];
		Browser.__init$=function(){
			/*__JS__ */window.Browser=Browser;
		}

		return Browser;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/typeas.as
	Laya.__package('iflash.method');
	iflash.method.typeAs=function(value,type){
		/*__JS__ */return (Laya.__typeof(value,type))?value:null;
	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/transformcoords.as
	Laya.__package('starling.utils');
	starling.utils.transformCoords=function(matrix,x,y,resultPoint){
		if (!starling.utils.deprecationNotified){
			starling.utils.deprecationNotified=true;
			console.log("[Starling] The method 'transformCoords' is deprecated. "+
			"Please use 'MatrixUtil.transformCoords' instead.");
		}

		if (resultPoint==null)resultPoint=new Point();
		resultPoint.x=matrix.a *x+matrix.c *y+matrix.tx;
		resultPoint.y=matrix.d *y+matrix.b *x+matrix.ty;
		return resultPoint;
	};


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/sendtourl.as
	Laya.__package('iflash.net');
	iflash.net.sendToURL=function(request){}
		
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/formatstring.as
	Laya.__package('starling.utils');
	starling.utils.formatString=function(format,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		for (var i=0;i<args.length;++i)
		format=format.replace(new RegExp("\\{"+i+"\\}","g"),args[i]);
		return format;
	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/execute.as
	Laya.__package('starling.utils');
	starling.utils.execute=function(func,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		if (func !=null){
			/*__JS__ */func.apply(func,args);return;
			var i=0;
			var maxNumArgs=func.length;
			for (i=args.length;i<maxNumArgs;++i)
			args[i]=null;
			switch (maxNumArgs){
				case 0:func();break ;
				case 1:func(args[0]);break ;
				case 2:func(args[0],args[1]);break ;
				case 3:func(args[0],args[1],args[2]);break ;
				case 4:func(args[0],args[1],args[2],args[3]);break ;
				case 5:func(args[0],args[1],args[2],args[3],args[4]);break ;
				case 6:func(args[0],args[1],args[2],args[3],args[4],args[5]);break ;
				case 7:func(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);break ;
				default :func.apply(null,args.slice(0,maxNumArgs));break ;
				}
		}

	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/getnextpoweroftwo.as
	Laya.__package('starling.utils');
	starling.utils.getNextPowerOfTwo=function(number){
		if (((typeof number=='number')&& Math.floor(number)==number)&& number > 0 && (number & (number-1))==0)
			return number;
		else{
			var result=1;
			number-=0.000000001;
			while (result < number)result <<=1;
			return result;
		}

	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/dickey.as
	Laya.__package('iflash.method');
	iflash.method.DICKEY=function(o){
		/*__JS__ */if(typeof o!='string' || o.indexOf('&layadic_')!=0)return o;
		/*__JS__ */return LAYABOX.DICKEYS[o.toString()];
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/fns.as
	/*__JS__ */LAYABOX.getInterfaceDefinitionByName=function (name){var words=name.split('.');var o=Laya;for (var i=0;i < words.length;i++){o=o[words[i]];if(!o){return null}}return o;};
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/settimeout.as
	Laya.__package('iflash.utils');
	iflash.utils.setTimeout=function(closure,delay,____){
		var __=[];for(var i=2,sz=arguments.length;i<sz;i++)__.push(arguments[i]);arguments=__;
		return new SetIntervalTimer(closure,delay,false,arguments).id;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/getnetworktype.as
	Laya.__package('iflash.method');
	iflash.method.getNetworkType=function(){
		var nt=-1;
		if(Laya.CONCHVER)
			nt=/*__JS__ */window.conchConfig.getNetworkType();
		return nt;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/regxmlattr.as
	Laya.__package('iflash.laya.utils');
	iflash.laya.utils.regXmlAttr=function(_class,fndef,set_get,htmlNeed){
		(htmlNeed===void 0)&& (htmlNeed=true);
		DynamicProperties.reg(_class,fndef,set_get,htmlNeed);
		return 1;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/importjs.as
	Laya.__package('iflash.method');
	iflash.method.importJS=function(jsFile,callback,evalJs){
		(evalJs===void 0)&& (evalJs=true);
		LAYABOX.importsJS=LAYABOX.importsJS || [];
		if ((jsFile instanceof Array)){
			var s=jsFile.length;
			for (var i=0;i < jsFile.length;i++){
				jsFile[i]=Method.formatUrl(jsFile[i]);
				iflash.method.importJS(jsFile[i],function(){
					s--;
					if (s==0)callback();
				},false);
			}
			return;
		}

		jsFile=Method.formatUrl(jsFile);
		console.log("import JavaScript:"+jsFile);
		if (LAYABOX.importsJS[jsFile]){
			callback();
			return;
		};

		var xhr=/*__JS__ */new XMLHttpRequest();
		xhr.onload=function (e){
			/*__JS__ */window.eval(xhr.responseText);
			LAYABOX.importsJS[jsFile]=true;
			callback();
		}

		xhr.onerror=function (e){
			throw "下载js"+jsFile+"失败";
		}

		xhr.open("GET",jsFile,true);
		xhr.send();
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/setinterval.as
	Laya.__package('iflash.utils');
	iflash.utils.setInterval=function(closure,delay,____){
		var __=[];for(var i=2,sz=arguments.length;i<sz;i++)__.push(arguments[i]);arguments=__;
		return new SetIntervalTimer(closure,delay,true,arguments).id;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/escapemultibyte.as
	Laya.__package('iflash.utils');
	iflash.utils.escapeMultiByte=function(source){
		return /*__JS__ */encodeURIComponent(source).replace('_','%5F').replace('.','%2E');
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/clearinterval.as
	Laya.__package('iflash.utils');
	iflash.utils.clearInterval=function(id){
		SetIntervalTimer.clearInterval(id);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/regclass.as
	Laya.__package('iflash.utils');
	iflash.utils.regClass=function(name,_class){
		/*__JS__ */LAYABOX.classmap[name]=_class;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/xmllength.as
	Laya.__package('iflash.method');
	iflash.method.xmlLength=function(xml){
		return xml?xml.lengths():0;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/classdic.as
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/getqualifiedclassname.as
	Laya.__package('iflash.utils');
	iflash.utils.getQualifiedClassName=function(value){
		if(!value)return null;
		if((typeof value=='string'))
			return "String";
		else if((value instanceof Array))
		return "Array";
		else {
			if(typeof(value)=="function"){
				if(value.__className){
					/*__JS__ */var index=value.__className.lastIndexOf(".");
					return /*__JS__ */index !=-1 ? value.__className.substr(0,index)+"::"+value.__className.substr(index+1,value.__className.length):value.__className;
					}else{
					return value.name||value.lin;
				}
			}
			if(value.__interface__){
				/*__JS__ */var index=value.__interface__.lastIndexOf(".");
				return /*__JS__ */index !=-1 ? value.__interface__.substr(0,index)+"::"+value.__interface__.substr(index+1,value.__interface__.length):value.__interface__;
			}
			/*__JS__ */var _value=value.__className?value.__className:LAYABOX.systemClass[(typeof value)];
			/*__JS__ */var index=_value.lastIndexOf(".");
			return /*__JS__ */index !=-1 ? _value.substr(0,index)+"::"+_value.substr(index+1,_value.length):_value;
		}

	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/core/starling_internal.as
	this.__namespace_starling_internal;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/namespaces/frameworkinternal.as
	this.__namespace_frameworkInternal="gameFramework_laya_internal";
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/deg2rad.as
	Laya.__package('starling.utils');
	starling.utils.deg2rad=function(deg){
		return deg / 180.0 *Math.PI;
	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/rad2deg.as
	Laya.__package('starling.utils');
	starling.utils.rad2deg=function(rad){
		return rad / Math.PI *180.0;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/gettimer.as
	Laya.__package('iflash.utils');
	iflash.utils.getTimer=function(){
		return (/*__JS__ */Date.now()-Timer.__STARTTIME__)*Timer.__SPEED__;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/cleartimeout.as
	Laya.__package('iflash.utils');
	iflash.utils.clearTimeout=function(id){
		SetIntervalTimer.clearInterval(id);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/getqualifiedsuperclassname.as
	Laya.__package('iflash.utils');
	iflash.utils.getQualifiedSuperclassName=function(value){
		/*__JS__ */return iflash.utils.getQualifiedClassName(value.__super);
	}


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/cleanmasterstring.as
	Laya.__package('starling.utils');
	starling.utils.cleanMasterString=function(str){
		return ("_"+str).substr(1);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/dic.as
	Laya.__package('iflash.method');
	iflash.method.DIC=function(o){
		/*__JS__ */if(!o || o.__DICKEY__)return o;
		/*__JS__ */if(typeof o=='string' || typeof o=='number')return o;
		/*__JS__ */o.toString=LAYABOX.toStringForDic;
		/*__JS__ */o.toString();return o;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/registerclassalias.as
	Laya.__package('iflash.net');
	iflash.net.registerClassAlias=function(aliasName,classObject){
		iflash.net.classDic[aliasName]=classObject;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/dicclear.as
	Laya.__package('iflash.method');
	iflash.method.DICCLEAR=function(dic,dickey){
		(LAYABOX.DICKEYS[dickey] !=null)&& (delete LAYABOX.DICKEYS[dickey]);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/fscommand.as
	Laya.__package('iflash.system');
	iflash.system.fscommand=function(command,args){
		(args===void 0)&& (args="");
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/bind.as
	Laya.__package('iflash.method');
	iflash.method.bind=function(context,fun,nothing){
		(nothing===void 0)&& (nothing=true);
		return (fun==null)?null:fun.BIND$(context);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/getdefinitionbyname.as
	Laya.__package('iflash.utils');
	iflash.utils.getDefinitionByName=function(param1){
		param1=param1.replace("::",".");
		return /*__JS__ */LAYABOX.classmap[param1];
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/getaliasname.as
	Laya.__package('iflash.utils');
	iflash.utils.getAliasName=function(param1){return ""}
		
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/formatstring.as
	Laya.__package('iflash.utils');
	iflash.utils.formatString=function(format,__args){
		var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
		for (var i=0;i<args.length;++i)
		format=format.replace(new RegExp("\\{"+i+"\\}","g"),args[i]);
		return format;
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/flash_proxy.as
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/getclassbyalias.as
	Laya.__package('iflash.net');
	iflash.net.getClassByAlias=function(aliasName){
		return iflash.net.classDic[aliasName];
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/navigatetourl.as
	Laya.__package('iflash.net');
	iflash.net.navigateToURL=function(request,_window){
		/*__JS__ */window.open(request.url || request,_window?_window:'_blank');
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/describetype.as
	Laya.__package('iflash.utils');
	iflash.utils.describeType=function(value){
		var name=iflash.utils.getQualifiedClassName(value);
		while(name.indexOf('.')!=-1){
			name=name.replace('.','');
		}

		name='dst'+name.replace('::','_');
		return new XML(iflash.utils.getDefinitionByName('DescribeTypeClass')[name]());
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/byteat.as
	Laya.__package('iflash.method');
	iflash.method.byteAt=function(byteArray,index){
		return byteArray._byteAt_(index);
	}


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/b2internal.as
	this.__namespace_b2internal="http://www.box2d.org/ns/b2internal";
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/method/byteset.as
	Laya.__package('iflash.method');
	iflash.method.byteSet=function(byteArray,index,value){
		byteArray._byteSet_(index,value);
	}


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/bytearray.jas
	//class iflash.utils.ByteArray
	var ByteArray=(function(){
		function ByteArray(){
			this._length=0;
			this._objectEncoding_=0;
			this._position_=0;
			this._allocated_=8;
			this._data_=null;
			this._littleEndian_=false;
			this._byteView_=null;
			this._strTable=null;
			this._objTable=null;
			this._traitsTable=null;
			/*__JS__ */this.___resizeBuffer(this._allocated_);
		}

		__class(ByteArray,'iflash.utils.ByteArray',false);
		var __proto=ByteArray.prototype;
		__proto.clear=function(){
			this._strTable=[];
			this._objTable=[];
			this._traitsTable=[];
			this._position_=0;
			this.length=0;
		}

		__proto.ensureWrite=function(lengthToEnsure){
			if (this._length < lengthToEnsure)this.length=lengthToEnsure;
		}

		__proto.readBoolean=function(){
			return (this.readByte ()!=0);
		}

		__proto.readByte=function(){
			return this._data_.getInt8 (this._position_++);
		}

		__proto.readBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			if (offset < 0 || length < 0){
				throw "Read error - Out of bounds";
			}
			if (length==0)length=this._length-this._position_;
			bytes.ensureWrite (offset+length);
			bytes._byteView_.set (this._byteView_.subarray(this._position_,this._position_+length),offset);
			bytes.position=offset;
			this._position_+=length;
			if (bytes.position+length > bytes.length)bytes.length=bytes.position+length;
		}

		__proto.readDouble=function(){
			var double=this._data_.getFloat64 (this._position_,this._littleEndian_);
			this._position_+=8;
			return double;
		}

		__proto.readFloat=function(){
			var float=this._data_.getFloat32 (this._position_,this._littleEndian_);
			this._position_+=4;
			return float;
		}

		__proto.readFullBytes=function(bytes,pos,len){
			this.ensureWrite (len);
			for(var i=pos;i < pos+len;i++){
				this._data_.setInt8 (this._position_++,bytes.get(i));
			}
		}

		__proto.readInt=function(){
			var tInt=this._data_.getInt32 (this._position_,this._littleEndian_);
			this._position_+=4;
			return tInt;
		}

		__proto.readShort=function(){
			var short=this._data_.getInt16 (this._position_,this._littleEndian_);
			this._position_+=2;
			return short;
		}

		__proto.readUnsignedByte=function(){
			return this._data_.getUint8 (this._position_++);
		}

		__proto.readUnsignedInt=function(){
			var uInt=this._data_.getUint32 (this._position_,this._littleEndian_);
			this._position_+=4;
			return int(uInt);
		}

		__proto.readUnsignedShort=function(){
			var uShort=this._data_.getUint16 (this._position_,this._littleEndian_);
			this._position_+=2;
			return uShort;
		}

		__proto.readUTF=function(){
			return this.readUTFBytes (this.readUnsignedShort ());
		}

		__proto.readUnicode=function(length){
			var value="";
			var max=this._position_+length;
			var c1=0,c2=0;
			while (this._position_ < max){
				c2=this._byteView_[this._position_++];
				c1=this._byteView_[this._position_++];
				value+=String.fromCharCode(c1<<8 | c2);
			}
			return value;
		}

		__proto.readMultiByte=function(length,charSet){
			if(charSet=="UNICODE" || charSet=="unicode"){
				return this.readUnicode(length);
			}
			return this.readUTFBytes (length);
		}

		__proto.readUTFBytes=function(len){
			var value="";
			var max=this._position_+len;
			var c=0,c2=0,c3=0;
			while (this._position_ < max){
				c=this._data_.getUint8 (this._position_++);
				if (c < 0x80){
					if (c !=0){
						value+=String.fromCharCode (c);
					}
					}else if (c < 0xE0){
					value+=String.fromCharCode (((c & 0x3F)<< 6)| (this._data_.getUint8 (this._position_++)& 0x7F));
					}else if (c < 0xF0){
					c2=this._data_.getUint8 (this._position_++);
					value+=String.fromCharCode (((c & 0x1F)<< 12)| ((c2 & 0x7F)<< 6)| (this._data_.getUint8 (this._position_++)& 0x7F));
					}else {
					c2=this._data_.getUint8 (this._position_++);
					c3=this._data_.getUint8 (this._position_++);
					value+=String.fromCharCode (((c & 0x0F)<< 18)| ((c2 & 0x7F)<< 12)| ((c3 << 6)& 0x7F)| (this._data_.getUint8 (this._position_++)& 0x7F));
				}
			}
			return value;
		}

		__proto.toString=function(){
			var cachePosition=this._position_;
			this._position_=0;
			var value=this.readUTFBytes (this.length);
			this._position_=cachePosition;
			return value;
		}

		__proto.writeBoolean=function(value){
			this.writeByte (value ? 1 :0);
		}

		__proto.writeByte=function(value){
			this.ensureWrite (this._position_+1);
			this._data_.setInt8 (this._position_,value);
			this._position_+=1;
		}

		__proto.writeBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			if (offset < 0 || length < 0)throw "writeBytes error - Out of bounds";
			if(length==0)length=bytes.length-offset;
			this.ensureWrite (this._position_+length);
			/*__JS__ */this._byteView_.set(bytes._byteView_.subarray (offset,offset+length),this._position_);
			this._position_+=length;
		}

		__proto.writeArrayBuffer=function(arraybuffer,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			if (offset < 0 || length < 0)throw "writeArrayBuffer error - Out of bounds";
			if(length==0)length=arraybuffer.byteLength-offset;
			this.ensureWrite (this._position_+length);
			var uint8array=/*__JS__ */new Uint8Array(arraybuffer);
			/*__JS__ */this._byteView_.set(uint8array.subarray (offset,offset+length),this._position_);
			this._position_+=length;
		}

		__proto.writeDouble=function(x){
			this.ensureWrite (this._position_+8);
			this._data_.setFloat64 (this._position_,x,this._littleEndian_);
			this._position_+=8;
		}

		__proto.writeFloat=function(x){
			this.ensureWrite (this._position_+4);
			this._data_.setFloat32 (this._position_,x,this._littleEndian_);
			this._position_+=4;
		}

		__proto.writeInt=function(value){
			/*__JS__ */this.ensureWrite (this._position_+4);
			/*__JS__ */this._data_.setInt32 (this._position_,value,this._littleEndian_);
			this._position_+=4;
		}

		__proto.writeShort=function(value){
			this.ensureWrite (this._position_+2);
			this._data_.setInt16 (this._position_,value,this._littleEndian_);
			this._position_+=2;
		}

		__proto.writeUnsignedInt=function(value){
			this.ensureWrite (this._position_+4);
			this._data_.setUint32 (this._position_,value,this._littleEndian_);
			this._position_+=4;
		}

		__proto.writeUnsignedShort=function(value){
			this.ensureWrite (this._position_+2);
			this._data_.setUint16 (this._position_,value,this._littleEndian_);
			this._position_+=2;
		}

		__proto.writeUTF=function(value){
			value=value+"";
			this.writeUnsignedShort (this._getUTFBytesCount(value));this.writeUTFBytes (value);
		}

		__proto.writeUnicode=function(value){
			value=value+"";
			this.ensureWrite (this._position_+value.length*2);
			var c=0;
			for(var i=0,sz=value.length;i<sz;i++){
				c=value.charCodeAt(i);
				this._byteView_[this._position_++]=c&0xff;
				this._byteView_[this._position_++]=c>>8;
			}
		}

		__proto.writeMultiByte=function(value,charSet){
			value=value+"";
			if(charSet=="UNICODE" || charSet=="unicode"){
				return this.writeUnicode(value);
			}
			this.writeUTFBytes(value);
		}

		__proto.writeUTFBytes=function(value){
			value=value+"";
			this.ensureWrite(this._position_+value.length*4);
			for (var i=0,sz=value.length;i < sz;i++){
				var c=value.charCodeAt(i);
				if (c <=0x7F){
					this.writeByte (c);
					}else if (c <=0x7FF){
					this.writeByte (0xC0 | (c >> 6));
					this.writeByte (0x80 | (c & 63));
					}else if (c <=0xFFFF){
					this.writeByte(0xE0 | (c >> 12));
					this.writeByte(0x80 | ((c >> 6)& 63));
					this.writeByte(0x80 | (c & 63));
					}else {
					this.writeByte(0xF0 | (c >> 18));
					this.writeByte(0x80 | ((c >> 12)& 63));
					this.writeByte(0x80 | ((c >> 6)& 63));
					this.writeByte(0x80 | (c & 63));
				}
			}
			this.length=this._position_;
		}

		__proto.__fromBytes=function(inBytes){
			this._byteView_=/*__JS__ */new Uint8Array(inBytes.getData ());
			this.length=this._byteView_.length;
			this._allocated_=this.length;
		}

		__proto.__get=function(pos){
			return this._data_.getUint8(pos);
		}

		__proto._getUTFBytesCount=function(value){
			var count=0;
			value=value+"";
			for (var i=0,sz=value.length;i < sz;i++){
				var c=value.charCodeAt(i);
				if (c <=0x7F){
					count+=1;
					}else if (c <=0x7FF){
					count+=2;
					}else if (c <=0xFFFF){
					count+=3;
					}else {
					count+=4;
				}
			}
			return count;
		}

		__proto._byteAt_=function(index){
			return this._byteView_[index];
		}

		__proto._byteSet_=function(index,value){
			this.ensureWrite (index+1);
			this._byteView_[index]=value;
		}

		__proto.uncompress=function(algorithm){
			(algorithm===void 0)&& (algorithm="zlib");
			/*__JS__ */var inflate=new Zlib.Inflate(this._byteView_);
			/*__JS__ */this._byteView_=inflate.decompress();
			/*__JS__ */this._data_=new DataView(this._byteView_ .buffer);;
			this._allocated_=this._length=this._byteView_.byteLength;
			this._position_=0;
		}

		__proto.compress=function(algorithm){
			(algorithm===void 0)&& (algorithm="zlib");
			/*__JS__ */var deflate=new Zlib.Deflate(this._byteView_);
			/*__JS__ */this._byteView_=deflate.compress();
			/*__JS__ */this._data_=new DataView(this._byteView_.buffer);;
			this._position_=this._allocated_=this._length=this._byteView_.byteLength;
		}

		__proto.___resizeBuffer=function(len){
			try{
				var newByteView=/*__JS__ */new Uint8Array(len);
				if (this._byteView_!=null){
					if (this._byteView_.length <=len)newByteView.set (this._byteView_);
					else newByteView.set (this._byteView_.subarray (0,len));
				}
				this._byteView_=newByteView;
				this._data_=/*__JS__ */new DataView(newByteView.buffer);
			}
			catch (err){
				throw "___resizeBuffer err:"+len;
			}
		}

		__proto.__getBuffer=function(){
			this._data_.buffer.byteLength=this.length;
			return this._data_.buffer;
		}

		__proto.__set=function(pos,v){
			this._data_.setUint8 (pos,v);
		}

		__proto.setUint8Array=function(data){
			this._byteView_=data;
			this._data_=/*__JS__ */new DataView(data.buffer);
			this._length=data.byteLength;
			this._position_=0;
		}

		__proto.readObject=function(){
			this._strTable=[];
			this._objTable=[];
			this._traitsTable=[];
			return this.readObject2();
		}

		__proto.readObject2=function(){
			var type=this.readByte();
			return this.readObjectValue(type);
		}

		__proto.readObjectValue=function(type){
			var value;
			switch (type){
				case 1:
					break ;
				case 6:
					value=this.__readString();
					break ;
				case 4:
					value=this.readInterger();
					break ;
				case 2:
					value=false;
					break ;
				case 3:
					value=true;
					break ;
				case 10:
					value=this.readScriptObject();
					break ;
				case 9:
					value=this.readArray();
					break ;
				case 5:
					value=this.readDouble();
					break ;
				case 12:
					value=this.readByteArray();
					break ;
				default :
					console.log("Unknown object type tag!!!"+type);
				}
			return value;
		}

		__proto.readByteArray=function(){
			var ref=this.readUInt29();
			if ((ref & 1)==0){
				return this.getObjRef(ref >> 1);
			}
			else{
				var len=(ref >> 1);
				var ba=new ByteArray();
				this._objTable.push(ba);
				this.readBytes(ba,0,len);
				return ba;
			}
		}

		__proto.readInterger=function(){
			var i=this.readUInt29();
			i=(i << 3)>> 3;
			return int(i);
		}

		__proto.getStrRef=function(ref){
			return this._strTable[ref];
		}

		__proto.getObjRef=function(ref){
			return this._objTable[ref];
		}

		__proto.__readString=function(){
			var ref=this.readUInt29();
			if ((ref & 1)==0){
				return this.getStrRef(ref >> 1);
			};
			var len=(ref >> 1);
			if (0==len){
				return "";
			};
			var str=this.readUTFBytes(len);
			this._strTable.push(str);
			return str;
		}

		__proto.readTraits=function(ref){
			var ti;
			if ((ref & 3)==1){
				ti=this.getTraitReference(ref >> 2);
				return ti.propoties?ti:{obj:{}};
			}
			else{
				var externalizable=((ref & 4)==4);
				var isDynamic=((ref & 8)==8);
				var count=(ref >> 4);
				var className=this.__readString();
				ti={};
				ti.className=className;
				ti.propoties=[];
				ti.dynamic=isDynamic;
				ti.externalizable=externalizable;
				if(count>0){
					for(var i=0;i<count;i++){
						var propName=this.__readString();
						ti.propoties.push(propName);
					}
				}
				this._traitsTable.push(ti);
				return ti;
			}
		}

		__proto.readScriptObject=function(){
			var ref=this.readUInt29();
			if ((ref & 1)==0){
				return this.getObjRef(ref >> 1);
			}
			else{
				var objref=this.readTraits(ref);
				var className=objref.className;
				var externalizable=objref.externalizable;
				var obj;
				var propName;
				var pros=objref.propoties;
				if(className&&className!=""){
					var rst=iflash.net.getClassByAlias(className);
					if(rst){
						obj=new rst();
						}else{
						obj={};
					}
					}else{
					obj={};
				}
				this._objTable.push(obj);
				if(pros){
					for(var d=0;d<pros.length;d++){
						obj[pros[d]]=this.readObject2();
					}
				}
				if(objref.dynamic){
					for (;;){
						propName=this.__readString();
						if (propName==null || propName.length==0)break ;
						obj[propName]=this.readObject2();
					}
				}
				return obj;
			}
		}

		__proto.readArray=function(){
			var ref=this.readUInt29();
			if ((ref & 1)==0){
				return this.getObjRef(ref >> 1);
			};
			var obj=null;
			var count=(ref >> 1);
			var propName;
			for (;;){
				propName=this.__readString();
				if (propName==null || propName.length==0)break ;
				if (obj==null){
					obj={};
					this._objTable.push(obj);
				}
				obj[propName]=this.readObject2();
			}
			if (obj==null){
				obj=[];
				this._objTable.push(obj);
				var i=0;
				for (i=0;i < count;i++){
					obj.push(this.readObject2());
				}
				}else {
				for (i=0;i < count;i++){
					obj[i.toString()]=this.readObject2();
				}
			}
			return obj;
		}

		__proto.readUInt29=function(){
			var value=0;
			var b=this.readByte()& 0xFF;
			if (b < 128){
				return b;
			}
			value=(b & 0x7F)<< 7;
			b=this.readByte()& 0xFF;
			if (b < 128){
				return (value | b);
			}
			value=(value | (b & 0x7F))<< 7;
			b=this.readByte()& 0xFF;
			if (b < 128){
				return (value | b);
			}
			value=(value | (b & 0x7F))<< 8;
			b=this.readByte()& 0xFF;
			return (value | b);
		}

		__proto.writeObject=function(o){
			this._strTable=[];
			this._objTable=[];
			this._traitsTable=[];
			this.writeObject2(o);
		}

		__proto.writeObject2=function(o){
			if(o==null){
				this.writeAMFNull();
				return;
			};
			var type=typeof(o);
			if("string"==type){
				this.writeAMFString(o);
			}
			else if("boolean"==type){
				this.writeAMFBoolean(o);
			}
			else if("number"==type){
				if(String(o).indexOf(".")!=-1){
					this.writeAMFDouble(o);
				}
				else{
					this.writeAMFInt(o);
				}
			}
			else if("object"==type){
				if((o instanceof Array)){
					this.writeArray(o);
				}
				else if((o instanceof iflash.utils.ByteArray )){
					this.writeAMFByteArray(o);
				}
				else{
					this.writeCustomObject(o);
				}
			}
		}

		__proto.writeAMFNull=function(){
			this.writeByte(1);
		}

		__proto.writeAMFString=function(s){
			this.writeByte(6);
			this.writeStringWithoutType(s);
		}

		__proto.writeStringWithoutType=function(s){
			if (s.length==0){
				this.writeUInt29(1);
				return;
			};
			var ref=this._strTable.indexOf(s);
			if(ref>=0){
				this.writeUInt29(ref << 1);
				}else{
				var utflen=this._getUTFBytesCount(s);
				this.writeUInt29((utflen << 1)| 1);
				this.writeUTFBytes(s);
				this._strTable.push(s);
			}
		}

		__proto.writeAMFInt=function(i){
			if (i >=ByteArray.INT28_MIN_VALUE && i <=0x0FFFFFFF){
				i=i & 0x1FFFFFFF;
				this.writeByte(4);
				this.writeUInt29(i);
				}else {
				this.writeAMFDouble(i);
			}
		}

		__proto.writeAMFDouble=function(d){
			this.writeByte(5);
			this.writeDouble(d);
		}

		__proto.writeAMFBoolean=function(b){
			if (b)
				this.writeByte(3);
			else
			this.writeByte(2);
		}

		__proto.writeCustomObject=function(o){
			this.writeByte(10);
			var refNum=this._objTable.indexOf(o);
			if(refNum!=-1){
				this.writeUInt29(refNum << 1);
			}
			else{
				this._objTable.push(o);
				var traitsInfo=new Object();
				traitsInfo.className=this.getAliasByObj(o);
				traitsInfo.dynamic=false;
				traitsInfo.externalizable=false;
				traitsInfo.properties=[];
				for(var prop in o){
					if((typeof (o[prop])=='function'))continue ;
					traitsInfo.properties.push(prop);
					traitsInfo.properties.sort();
				};
				var tRef=ByteArray.getTraitsInfoRef(this._traitsTable,traitsInfo);
				var count=traitsInfo.properties.length;
				var i=0;
				if(tRef>=0){
					this.writeUInt29((tRef << 2)| 1);
					}else{
					this._traitsTable.push(traitsInfo);
					this.writeUInt29(3 | (traitsInfo.externalizable ? 4 :0)| (traitsInfo.dynamic ? 8 :0)| (count << 4));
					this.writeStringWithoutType(traitsInfo.className);
					for(i=0;i<count;i++){
						this.writeStringWithoutType(traitsInfo.properties[i]);
					}
				}
				for(i=0;i<count;i++){
					this.writeObject2(o[traitsInfo.properties[i]]);
				}
			}
		}

		__proto.getAliasByObj=function(obj){
			var tClassName=iflash.utils.getQualifiedClassName(obj);
			if(tClassName==null || tClassName=="")return "";
			var tClass=iflash.utils.getDefinitionByName(tClassName);
			if(tClass==null)return "";
			var tkey;
			for(tkey in iflash.net.classDic){
				if(iflash.net.classDic[tkey]==tClass){
					return tkey;
				}
			}
			return "";
		}

		__proto.writeArray=function(value){
			this.writeByte(9);
			var len=value.length;
			var ref=this._objTable.indexOf(value);
			if(ref>-1){
				this.writeUInt29(len<<1);
			}
			else{
				this.writeUInt29((len << 1)| 1);
				this.writeStringWithoutType("");
				for (var i=0;i < len;i++){
					this.writeObject2(value[i]);
				}
				this._objTable.push(value);
			}
		}

		__proto.writeAMFByteArray=function(ba){
			this.writeByte(12);
			var ref=this._objTable.indexOf(ba);
			if(ref>=0){
				this.writeUInt29(ref << 1);
				}else{
				var len=ba.length;
				this.writeUInt29((len << 1)| 1);
				this.writeBytes(ba,0,len);
			}
		}

		__proto.writeMapAsECMAArray=function(o){
			this.writeByte(9);
			this.writeUInt29((0 << 1)| 1);
			var count=0,key;
			for (key in o){
				count++;
				this.writeStringWithoutType(key);
				this.writeObject2(o[key]);
			}
			this.writeStringWithoutType("");
		}

		__proto.writeUInt29=function(ref){
			if (ref < 0x80){
				this.writeByte(ref);
				}else if (ref < 0x4000){
				this.writeByte(((ref >> 7)& 0x7F)| 0x80);
				this.writeByte(ref & 0x7F);
				}else if (ref < 0x200000){
				this.writeByte(((ref >> 14)& 0x7F)| 0x80);
				this.writeByte(((ref >> 7)& 0x7F)| 0x80);
				this.writeByte(ref & 0x7F);
				}else if (ref < 0x40000000){
				this.writeByte(((ref >> 22)& 0x7F)| 0x80);
				this.writeByte(((ref >> 15)& 0x7F)| 0x80);
				this.writeByte(((ref >> 8)& 0x7F)| 0x80);
				this.writeByte(ref & 0xFF);
				}else {
				console.log("Integer out of range: "+ref);
			}
		}

		__proto.getTraitReference=function(ref){
			return this._traitsTable[ref];
		}

		__getset(0,__proto,'bytesAvailable',function(){
			return this.length-this._position_;
		});

		__getset(0,__proto,'length',function(){
			return this._length;
			},function(value){
			if (this._allocated_ < value)
				this.___resizeBuffer (this._allocated_=Math.floor (Math.max (value,this._allocated_ *2)));
			else if (this._allocated_ > value)
			this.___resizeBuffer (this._allocated_=value);
			this._length=value;
		});

		__getset(0,__proto,'endian',function(){
			return this._littleEndian_ ? "littleEndian" :"bigEndian";
			},function(endianStr){
			this._littleEndian_=(endianStr=="littleEndian");
		});

		__getset(0,__proto,'position',function(){
			return this._position_;
			},function(pos){
			if (pos < this._length)
				this._position_=pos < 0?0:pos;
			else{
				this._position_=pos;
				this.length=pos;
			}
		});

		ByteArray.__ofBuffer=function(buffer){
			var bytes=/*__JS__ */new ByteArray ();
			bytes.length=bytes.allocated=buffer.byteLength;
			bytes.data=/*__JS__ */new DataView(buffer);
			bytes.byteView=/*__JS__ */new Uint8Array(buffer);
			return bytes;
		}

		ByteArray.getTraitsInfoRef=function(arr,ti){
			var i=0,len=arr.length;
			for(i=0;i<len;i++){
				if (ByteArray.equalsTraitsInfo(ti,arr[i]))return i;
			}
			return-1;
		}

		ByteArray.equalsTraitsInfo=function(ti1,ti2){
			if (ti1==ti2){
				return true;
			}
			if (!ti1.className===ti2.className){
				return false;
			}
			if(ti1.properties.length !=ti2.properties.length){
				return false;
			};
			var len=ti1.properties.length;
			var prop;
			ti1.properties.sort();ti2.properties.sort();
			for(var i=0;i<len;i++){
				if(ti1.properties[i] !=ti2.properties[i]){
					return false;
				}
			}
			return true;
		}

		ByteArray.BIG_ENDIAN="bigEndian";
		ByteArray.LITTLE_ENDIAN="littleEndian";
		ByteArray.UNDEFINED_TYPE=0;
		ByteArray.NULL_TYPE=1;
		ByteArray.FALSE_TYPE=2;
		ByteArray.TRUE_TYPE=3;
		ByteArray.INTEGER_TYPE=4;
		ByteArray.DOUBLE_TYPE=5;
		ByteArray.STRING_TYPE=6;
		ByteArray.XML_TYPE=7;
		ByteArray.DATE_TYPE=8;
		ByteArray.ARRAY_TYPE=9;
		ByteArray.OBJECT_TYPE=10;
		ByteArray.AVMPLUSXML_TYPE=11;
		ByteArray.BYTEARRAY_TYPE=12;
		ByteArray.EMPTY_STRING="";
		ByteArray.UINT29_MASK=0x1FFFFFFF;
		ByteArray.INT28_MAX_VALUE=0x0FFFFFFF;
		ByteArray.INT28_MIN_VALUE=-268435456;
		return ByteArray;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/int.jas
	//class int
	var int=(function(){
		function int(value){
			this.pattern=/^.?[0-9]*(\.|E)?[0-9]*$/;
			(value===void 0)&& (value=0);
			if(value==true)return 1;
			if(!this.pattern.test(value))
			{return 0}
			return !value?0:int.safe_int(Laya.__parseInt(value));
		}

		__class(int,'int',false);
		var __proto=int.prototype;
		__proto.toString=function(radix){
			(radix===void 0)&& (radix=10);
			return Number(this).toString(radix);
		}

		__proto.valueOf=function(){
			return this;
		}

		__proto.toExponential=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toExponential(p);
		}

		__proto.toPrecision=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toPrecision(p);
		}

		__proto.toFixed=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toFixed(p);
		}

		int.safe_int=function(x){
			var lsw=(x & 0xFFFF);
			var msw=(x >> 16)+(lsw >> 16);
			return (msw << 16)| (lsw & 0xFFFF);
		}

		int.MIN_VALUE=-2147483648;
		int.MAX_VALUE=2147483647;
		int.length=1;
		return int;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/eventdispatcher.as
	//class iflash.events.EventDispatcher
	var EventDispatcher=(function(){
		function EventDispatcher(target){
			this._eventListener_=null;
			this._type_=0;
			this.hidden=2;
			this._repaint_=0;
			this._modle_=null;
			this._private_={};
			this._id_=(++EventDispatcher.__LASTID__);
			this._deepIndex=0;
		}

		__class(EventDispatcher,'iflash.events.EventDispatcher',true);
		var __proto=EventDispatcher.prototype;
		Laya.imps(__proto,{"iflash.events.IEventDispatcher":true,"iflash.laya.system.IObject":true})
		__proto.checkType=function(type){
			return (this._type_ & type)!=0;
		}

		__proto.addType=function(type){
			this._type_|=type;
		}

		__proto.removeType=function(type){
			this._type_&=(~type);
		}

		__proto.lyAddEventListener=function(type,listener,useCapture,priority,useWeakReference){
			(useCapture===void 0)&& (useCapture=false);
			(priority===void 0)&& (priority=0);
			(useWeakReference===void 0)&& (useWeakReference=false);
			if (listener==null){
				return null;
			}
			if (type==/*iflash.events.Event.ADDED*/"added")
				EventDispatcher._useCountADDED++;
			if (this !=Laya.window && type==/*iflash.events.Event.ENTER_FRAME*/"enterFrame"){
				var l=Laya.window.lyAddEventListener(type,listener,useCapture,priority,useWeakReference);
				l._target_=this;
				return l;
			}
			listener=Method.jsToEventFun(listener);
			if (this._eventListener_==null)
				this._eventListener_=[];
			var thisType=this._eventListener_[type];
			if (!thisType)
				thisType=this._eventListener_[type]=[];
			else{
				if (thisType.length > 0){
					for (var i=0,sz=thisType.length;i < sz;i++){
						if (thisType[i] && thisType[i].listener==listener)
							return thisType[i];
					}
				}
			};
			var e=EventListener.__create__(listener,useCapture,priority,useWeakReference,this);
			thisType.push(e);
			return e;
		}

		__proto.addEventListener=function(type,listener,useCapture,priority,useWeakReference){
			(useCapture===void 0)&& (useCapture=false);
			(priority===void 0)&& (priority=0);
			(useWeakReference===void 0)&& (useWeakReference=false);
			this.lyAddEventListener(type,listener,useCapture,priority,useWeakReference);
		}

		__proto.dispatchEvent=function(event){
			if (event.bubbles){
				event._lytarget=this;
				var target=this;
				var ret=false;
				while (target){
					if (target.lyDispatchEvent(event)){
						ret=true;
					}
					target=target.parent;
				}
				return ret;
			}
			else{
				return this.lyDispatchEvent2(event);
			}
		}

		__proto.addOneEventListener=function(type,listener){
			if (this._eventListener_==null)
				this._eventListener_=[];
			var thisType=this._eventListener_[type];
			if (!thisType)
				thisType=this._eventListener_[type]=[];
			thisType.push(listener);
		}

		__proto.lyDispatchEvent=function(event){
			if (this._eventListener_==null)
				return false;
			var thisType;
			if ((typeof event=='string')){
				thisType=this._eventListener_[ event];
				if (!thisType)
					return false;
				event=new Event(event);
			}
			else{
				thisType=this._eventListener_[event.type];
				if (!thisType)
					return false;
			}
			(thisType[-1]==null)&& (thisType[-1]=0);
			thisType[-1]++;
			var sz=thisType.length+0,bremove=false;
			event._lytarget=event._lytarget ? event._lytarget :this;
			event._currentTarget_=this;
			var tmepType=thisType.concat();
			for (var i=0;i < sz;i++){
				if (!tmepType[i] || tmepType[i].run(this,event)==false)
					bremove=true;
			}
			if (bremove && thisType[-1]==1){
				var tsz=0;
				for (i=0,sz=thisType.length;i < sz;i++){
					var oe=thisType[i];
					if (oe==null || oe._deleted_)
						continue ;
					thisType[tsz]=thisType[i];
					tsz++;
				}
				thisType.length=tsz;
				if (thisType.length==0)
					this._eventListener_[event.type]=null;
			}
			thisType[-1]--;
			return true;
		}

		__proto.lyDispatchEvent2=function(event){
			if (this._eventListener_==null)
				return false;
			var thisType;
			if ((typeof event=='string')){
				thisType=this._eventListener_[ event];
				if (!thisType)
					return false;
				event=new Event(event);
			}
			else{
				thisType=this._eventListener_[event.type];
				if (!thisType)
					return false;
			}
			(thisType[-1]==null)&& (thisType[-1]=0);
			thisType[-1]++;
			var sz=thisType.length+0,bremove=false;
			event._lytarget=this;
			event._currentTarget_=this;
			var tmepType=thisType.concat();
			for (var i=0;i < sz;i++){
				if (event._type_==8){
					event._type_=0;
					break ;
				}
				else{
					if (!tmepType[i] || tmepType[i].run(this,event)==false)
						bremove=true;
				}
			}
			if (bremove && thisType[-1]==1){
				var tsz=0;
				for (i=0,sz=thisType.length;i < sz;i++){
					var oe=thisType[i];
					if (oe==null || oe._deleted_)
						continue ;
					thisType[tsz]=thisType[i];
					tsz++;
				}
				thisType.length=tsz;
				if (thisType.length==0)
					this._eventListener_[event.type]=null;
			}
			thisType[-1]--;
			return true;
		}

		__proto.hasEventListener=function(type){
			var b=this._eventListener_ && this._eventListener_[type] !=null && this._eventListener_[type].length > 0;
			if(b){
				var arr=this._eventListener_[type];
				var len=arr.length;
				for(var i=0;i<len;i++){
					b=arr[i] !=null;
					if(b){
						break ;
					}
				}
				if(!b)arr.length=0;
			}
			return b;
		}

		__proto.removeEventListener=function(type,listener,useCapture){
			(useCapture===void 0)&& (useCapture=false);
			var thisType;
			if (type==/*iflash.events.Event.ENTER_FRAME*/"enterFrame" && this !=Laya.window){
				Laya.window.removeEventListener(type,listener,useCapture);
				return;
			}
			if (!this._eventListener_)
				return;
			thisType=this._eventListener_[type];
			if (thisType){
				var len=thisType.length-1
				for (var i=len;i >-1;i--){
					var oe=thisType[i];
					if (oe && (oe.listener==listener)){
						oe.destroy();
						thisType.splice(i,1);
					}
				}
			}
			else{
				if (type==/*iflash.events.Event.ADDED*/"added")
					EventDispatcher._useCountADDED--;
			}
		}

		__proto.willTrigger=function(type){
			return false;
		}

		__proto.evalEvent=function(event){
			var listeners=this._eventListener_ ? this._eventListener_[event.type] :null;
			var numListeners=listeners==null ? 0 :listeners.length;
			if (numListeners){
				var tmp=listeners.concat();
				for (var i=0;i < numListeners;++i){
					var listener=tmp[i];
					if (!listener)
						continue ;
					event._currentTarget_=this;
					listener.run(this,event);
					if (event.stopsImmediatePropagation)
						return true;
				}
				return event.stopsPropagation;
			}
			else{
				return false;
			}
		}

		__proto._removeEvents_=function(){
			this._eventListener_=null;
		}

		__getset(0,__proto,'deleted',function(){
			return (this._type_ & 0x1)!=0;
			},function(b){
			if ((this._type_ & 0x1)==0){
				this._type_|=0x1;
				this._eventListener_=null;
			}
		});

		__getset(1,EventDispatcher,'_isOpenTypeAdded',function(){
			return EventDispatcher._useCountADDED !=0;
		});

		EventDispatcher._useCountADDED=0;
		EventDispatcher.TYPE_DELETED=0x1;
		EventDispatcher.document=null
		EventDispatcher.window=null
		EventDispatcher.__NULLARRAY__=[];
		EventDispatcher.__LASTID__=0;
		return EventDispatcher;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/event.as
	//class iflash.events.Event
	var Event=(function(){
		function Event(type,bubbles,cancelable,_d){
			this.type=null;
			this._lytarget=null;
			this._currentTarget_=null;
			this._type_=0;
			this._lyData=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			this._type_=0;
			this.bubbles=bubbles;
			this.type=type;
			this.cancelable=cancelable;
			!this._lyData && (this._lyData=_d);
		}

		__class(Event,'iflash.events.Event',false);
		var __proto=Event.prototype;
		__proto._lysetTarget=function(obj){
			this._lytarget=obj;
		}

		__proto.clone=function(){
			return new Event(this.type,this.bubbles,this.cancelable,this._lyData);
		}

		__proto.stopPropagation=function(){
			this.stopsPropagation=this.returnValue=true;
		}

		__proto.stopImmediatePropagation=function(){
			this.stopsImmediatePropagation=true;
		}

		__proto.formatToString=function(className,__rest){
			var rest=[];for(var i=1,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			return null;
		}

		__proto.isDefaultPrevented=function(){
			return false;
		}

		__proto.preventDefault=function(){}
		__proto.toString=function(){
			return "event:"+this._type_;
		}

		__proto.destory=function(){
			this._lytarget=null;
			this._currentTarget_=null;
		}

		__proto.toMouseEvent=function(){
			if (Event.__helpMouseEvt__==null){
				Event.__helpMouseEvt__=new MouseEvent("");
			}
			return Event.__helpMouseEvt__;
		}

		__proto.dispatch=function(chain){
			if (chain && chain.length){
				this.resetStops();
				var chainLength=this.bubbles ? chain.length :1;
				var endIndex=chain.length-1;
				var chainElement=chain [endIndex];
				var i=0;
				this._lysetTarget(chainElement);
				this.dispatchTargetsEvt(this.toMouseEvent(),chain,chainLength,endIndex);
				if ((this instanceof iflash.events.TouchEvent )){
					if(Multitouch.inputMode !=/*iflash.ui.MultitouchInputMode.GESTURE*/"gesture"){
						this.dispatchTargetsEvt(this,chain,chainLength,endIndex);
					}
					else{
						var gestureEvt=TouchInfo.dealGestrueHandler(this);
						if(gestureEvt){
							this.dispatchTargetsEvt(gestureEvt,chain,chainLength,endIndex);
						}
					}
				}
			}
		}

		__proto.dispatchTargetsEvt=function(evt,chain,chainLength,endIndex){
			for (var i=0;i < chainLength;i++){
				if (evt.stopsImmediatePropagation)
					break ;
				chain[endIndex-i].evalEvent(evt);
				if (evt.stopsPropagation)
					break ;
			}
		}

		__proto.resetStops=function(){
			this.stopsImmediatePropagation=false;
			this.stopsPropagation=false;
		}

		__proto.checkType=function(type){
			return (this._type_ & type)!=0;
		}

		__proto.addType=function(type){
			this._type_|=type;
		}

		__proto.removeType=function(type){
			(this._type_&=~type);
		}

		__getset(0,__proto,'eventPhase',function(){
			return 0;
		});

		__getset(0,__proto,'stopsPropagation',function(){
			return (this._type_ & 0x10)!=0;
			},function(value){
			if (value)
				this._type_|=0x10;
			else
			this._type_&=~0x10;
		});

		__getset(0,__proto,'returnValue',function(){
			return this.checkType(0x4);
			},function(b){
			if (b)
				this.addType(0x4);
			else
			this.removeType(0x4);
		});

		__getset(0,__proto,'stopsImmediatePropagation',function(){
			return (this._type_ & 0x8)!=0;
			},function(value){
			if (value)
				this._type_|=0x8;
			else
			this._type_&=~0x8;
		});

		__getset(0,__proto,'currentTarget',function(){
			return this._currentTarget_;
		});

		__getset(0,__proto,'target',function(){
			return this._lytarget;
		});

		__getset(0,__proto,'bubbles',function(){
			return this.checkType(0x1);
			},function(b){
			if (b)
				this.addType(0x1);
			else
			this.removeType(0x1);
		});

		__getset(0,__proto,'cancelable',function(){
			return this.checkType(0x2);
			},function(b){
			if (b)
				this.addType(0x2);
			else
			this.removeType(0x2);
		});

		__getset(0,__proto,'lyData',function(){
			return this._lyData;
			},function(value){
			this._lyData=value;
		});

		Event.copyFromByObj=function(dstO,srcO,namesO){
			if (!namesO)
				return;
			var tKey;
			for (tKey in namesO){
				dstO[tKey]=srcO[namesO[tKey]];
			}
		}

		Event.ACTIVATE="activate";
		Event.ADDED="added";
		Event.ADDED_TO_STAGE="addedToStage";
		Event.CANCEL="cancel";
		Event.CHANGE="change";
		Event.DESTROY="destroy";
		Event.CLEAR="clear";
		Event.CLOSE="close";
		Event.COMPLETE="complete";
		Event.CONNECT="connect";
		Event.CONTEXT3D_CREATE="context3DCreate";
		Event.COPY="copy";
		Event.CUT="cut";
		Event.DEACTIVATE="deactivate";
		Event.ENTER_FRAME="enterFrame";
		Event.EXIT_FRAME="exitFrame";
		Event.FRAME_CONSTRUCTED="frameConstructed";
		Event.FULLSCREEN="fullScreen";
		Event.ID3="id3";
		Event.INIT="init";
		Event.MOUSE_LEAVE="mouseLeave";
		Event.OPEN="open";
		Event.LOADED="loaded";
		Event.PASTE="paste";
		Event.ONRESHOW="onreshow";
		Event.REMOVED="removed";
		Event.REMOVED_FROM_STAGE="removedFromStage";
		Event.RENDER="render";
		Event.RESIZE="resize";
		Event.REPOS="repos";
		Event.SCROLL="scroll";
		Event.SCROLLSIZE="scrollsize";
		Event.SELECT="select";
		Event.SELECT_ALL="selectAll";
		Event.SOUND_COMPLETE="soundComplete";
		Event.TAB_CHILDREN_CHANGE="tabChildrenChange";
		Event.TAB_ENABLED_CHANGE="tabEnabledChange";
		Event.TAB_INDEX_CHANGE="tabIndexChange";
		Event.TEXT_INTERACTION_MODE_CHANGE="textInteractionModeChange";
		Event.UNLOAD="unload";
		Event.ONPARENT="onparent";
		Event.TODOCUMENT="todocument";
		Event.ERROR="error";
		Event.MESSAGE="message";
		Event.TYPE_BUBBLES=0x1;
		Event.TYPE_CANCELABLE=0x2;
		Event.TYPE_RETURNVALUE=0x4;
		Event.TYPE_STOPSIMMEDIATEPROPAGATION=0x8;
		Event.TYPE_STOPSPROPAGATION=0x10;
		Event.__helpMouseEvt__=null
		__static(Event,
		['INPUT_EVENT_TYPE_MAP',function(){return this.INPUT_EVENT_TYPE_MAP={"mousedown":"touchstart","mouseup":"touchend","mousemove":"touchmove"};}
		]);
		return Event;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/eventlistener.as
	//class iflash.events.EventListener
	var EventListener=(function(){
		function EventListener(listener,useCapture,priority,useWeakReference,ower){
			this.listener=null;
			this.useCapture=false;
			this.priority=0;
			this.useWeakReference=false;
			this._ower_=null;
			this._deleted_=false;
			this.data=null;
			this._target_=null;
			this.reset(listener,useCapture,priority,useWeakReference ,ower);
		}

		__class(EventListener,'iflash.events.EventListener',true);
		var __proto=EventListener.prototype;
		__proto.setOwer=function(o){
			this._ower_=o;
		}

		__proto.run=function(o,event){
			if ((this._ower_ && this._ower_.deleted)|| this.listener==null){
				this.destroy();
				return false;
			};
			var isfalse=true;
			if (this._target_){
				event._lytarget=this._target_;
				event._currentTarget_=this._target_;
				isfalse=this.callListener(event);
				event._lytarget=o;
			}
			else{
				isfalse=this.callListener(event);
			}
			if(isfalse)this.destroy();
			return !isfalse;
		}

		__proto.callListener=function(event){
			var isfalse=true;
			isfalse=this.listener.call(this._ower_,event)==false;
			return isfalse;
		}

		__proto.reset=function(listener,useCapture,priority,useWeakReference,ower){
			this.listener=listener;
			this.useCapture=useCapture;
			this.priority=priority;
			this.useWeakReference=useWeakReference;
			this._ower_=ower;
			this._deleted_=false;
			this.data=null;
		}

		__proto.destroy=function(){
			if (!this._deleted_){
				this._ower_=null;
				this.listener=null;
				this._target_=null;
				this._deleted_=true;
				this.data=null;
			}
		}

		EventListener.__create__=function(listener,useCapture,priority,useWeakReference,ower){
			return new EventListener(listener,useCapture,priority,useWeakReference ,ower);
		}

		return EventListener;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/eventmanager.as
	//class iflash.events.EventManager
	var EventManager=(function(){
		function EventManager(){
			this._curid_=0;
			this._mouseOverNodes_=[];
			this._currentSysEvent=null;
			this._keyEvents_=[];
			this._delayTime_=100;
			this.DT_RD=50;
			this._chainTop=null;
			this._clientX=0;
			this._clientY=0;
			this._mouseDownTarget=null;
			this._curChainTop=null;
			this.enableTouch=false;
			this._isMoveUpdated=false;
			this.dealAccepInput=this.dealAcceptSysMouseInput;
			this._bubbleChain=[];
		}

		__class(EventManager,'iflash.events.EventManager',true);
		var __proto=EventManager.prototype;
		__proto.acceptSystemKeyEvent=function(event){
			this._keyEvents_.push(event);
		}

		__proto._dispatchKeyEvent_=function(event){
			switch(event.type){
				case /*iflash.events.KeyboardEvent.KEY_DOWN*/"keyDown":
					Laya.document.onkeydown && Laya.document.onkeydown(event);
					break ;
				case /*iflash.events.KeyboardEvent.KEY_UP*/"keyUp":
					Laya.document.onkeyup&&Laya.document.onkeyup(event);
				}
			event.currentTarget && event.currentTarget.lyDispatchEvent(event);
			event._currentTarget_=Laya.document.activeElement;
			Laya.document.lyDispatchEvent(event);
		}

		__proto.dispatchSystemEvent=function(delay){
			(delay===void 0)&& (delay=0);
			var i=0;
			if(this._currentSysEvent){
				this.dealAccepInput();
			}
			if(!this._keyEvents_.length)return;
			var ks=this._keyEvents_,sz=ks.length;this._keyEvents_=[];
			for (i=0;i < sz;i++){
				var keyevent=new iflash.events.KeyboardEvent(ks[i].type);
				keyevent.changeEvent(ks[i])
				EventManager.stage.lyDispatchEvent(keyevent);
			}
		}

		__proto.dealAcceptSysMouseInput=function(){
			EventManager.clientToStage(this._currentSysEvent.clientX,this._currentSysEvent.clientY);
			if(this._currentSysEvent.type !="mousemove")return;
			EventManager._mouseEvent=MouseEvent.copyFromSysEvent(this._currentSysEvent);
			if(EventManager._mouseEvent.button!=0)return;
			this._curChainTop=EventManager.stage._hitTest_(EventManager._stageX,EventManager._stageY);
			var curBubbleChain=[];
			if(this._chainTop !=this._curChainTop){
				curBubbleChain=this.getTargetBubbleChain(this._curChainTop);
				var common=-1;
				var len=curBubbleChain.length;
				for(var i=0;i<len;i++){
					if(this._bubbleChain.length <=i || curBubbleChain[i] !=this._bubbleChain[i])break ;
					common=i;
				};
				var mouseOutEvt=EventManager._mouseEvent;
				mouseOutEvt.type=/*iflash.events.MouseEvent.MOUSE_OUT*/"mouseOut";
				mouseOutEvt.bubbles=true;
				mouseOutEvt.relatedObject=this._curChainTop;
				mouseOutEvt.dispatch(this._bubbleChain);
				var tempChain=[];
				for(i=this._bubbleChain.length-1;i>common;i--){
					var rolloutEvt=EventManager._mouseEvent;
					rolloutEvt.type=/*iflash.events.MouseEvent.ROLL_OUT*/"rollOut";
					rolloutEvt.bubbles=false;
					rolloutEvt.relatedObject=this._curChainTop;
					tempChain.length=0;
					tempChain.push(this._bubbleChain[i]);
					rolloutEvt.dispatch(tempChain);
				}
				for(i=curBubbleChain.length-1;i>common;i--){
					var rolloverEvt=EventManager._mouseEvent;
					rolloverEvt.type=/*iflash.events.MouseEvent.ROLL_OVER*/"rollOver";
					rolloverEvt.bubbles=false;
					rolloverEvt.relatedObject=this._chainTop;
					tempChain.length=0;
					tempChain.push(curBubbleChain[i]);
					rolloverEvt.dispatch(tempChain);
				};
				var mouseoverEvt=EventManager._mouseEvent;
				mouseoverEvt.type=/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver";
				mouseoverEvt.bubbles=true;
				mouseoverEvt.relatedObject=this._chainTop;
				mouseoverEvt.dispatch(curBubbleChain);
				this._chainTop=this._curChainTop;
				this._bubbleChain=curBubbleChain;
			}
			if(EventManager._stageX !=this._clientX || EventManager._stageY!=this._clientY){
				this._clientX=EventManager._stageX;this._clientY=EventManager._stageY;
				var mousemoveEvt=EventManager._mouseEvent;
				mousemoveEvt.bubbles=true;
				mousemoveEvt.relatedObject=this._chainTop;
				mousemoveEvt.type=/*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove";
				if(this._bubbleChain){
					mousemoveEvt.dispatch(this._bubbleChain);
				}
			}
			if(EventManager._mouseEvent)EventManager._mouseEvent.destory();
			this._currentSysEvent=null;
		}

		__proto.dealAcceptTouchInput=function(){
			if(this._currentSysEvent.touches.length !=0){
				if(this._currentSysEvent.type !="touchmove" || !this._isMoveUpdated)return;
				this._isMoveUpdated=false;
				TouchEvent.touchSysEvent(this._currentSysEvent,__bind(this,this.touchMoveInterval));
			}
			else{
				this._currentSysEvent=null;
			}
		}

		__proto.touchMoveInterval=function(event){
			var touchInfo=TouchInfo.getTouchInfo(event);
			touchInfo.curChainTop=EventManager.stage._hitTest_(event.stageX,event.stageY);
			if(touchInfo.chainTop !=touchInfo.curChainTop){
				var curBubbleChain=this.getTargetBubbleChain(touchInfo.curChainTop);
				var common=-1;
				var len=curBubbleChain.length;
				for(var i=0;i<len;i++){
					if(touchInfo.bubbleChain.length <=i || curBubbleChain[i] !=touchInfo.bubbleChain[i])break ;
					common=i;
				}
				event.type=/*iflash.events.TouchEvent.TOUCH_OUT*/"touchOut";
				event.bubbles=true;
				event.relatedObject=touchInfo.curChainTop;
				event.dispatch(touchInfo.bubbleChain);
				var tempChain=[];
				for(i=touchInfo.bubbleChain.length-1;i>common;i--){
					event.type=/*iflash.events.TouchEvent.TOUCH_ROLL_OUT*/"touchRollOut";
					event.bubbles=false;
					event.relatedObject=touchInfo.curChainTop;
					tempChain.length=0;
					tempChain.push(touchInfo.bubbleChain[i]);
					event.dispatch(tempChain);
				}
				for(i=curBubbleChain.length-1;i>common;i--){
					event.type=/*iflash.events.TouchEvent.TOUCH_ROLL_OVER*/"touchRollOver";
					event.bubbles=false;
					event.relatedObject=touchInfo.chainTop;
					tempChain.length=0;
					tempChain.push(curBubbleChain[i]);
					event.dispatch(tempChain);
				}
				event.type=/*iflash.events.TouchEvent.TOUCH_OVER*/"touchOver";
				event.bubbles=true;
				event.relatedObject=touchInfo.chainTop;
				event.dispatch(curBubbleChain);
				touchInfo.chainTop=touchInfo.curChainTop;
				touchInfo.bubbleChain=curBubbleChain;
			}
			if(event.stageX!=touchInfo.stageX || event.stageY !=touchInfo.stageY){
				event.bubbles=true;
				event.type=/*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove";
				event.relatedObject=touchInfo.chainTop;
				if(touchInfo.bubbleChain){
					event.dispatch(touchInfo.bubbleChain);
				}
				touchInfo.touchMove(event);
			}
			if(event)event.destory();
		}

		__proto.getTargetBubbleChain=function(target){
			var bubbleChain=[];
			var p=target;
			while(p){
				bubbleChain.unshift(p);
				p=p.parent;
			}
			return bubbleChain;
		}

		__proto.dispatchTargetEvent=function(target,event){
			event.dispatch(this.getTargetBubbleChain(target));
		}

		__proto.acceptSystemMouseEvent=function(event){
			this._currentSysEvent=event;
			if(TouchEvent.isTypeMove(this._currentSysEvent.type)){
				this._isMoveUpdated=true;
				return;
			}
			if(!this.enableTouch){
				EventManager._mouseEvent=MouseEvent.copyFromSysEvent(this._currentSysEvent);
				if(EventManager._mouseEvent.button!=0)return;
				this._curChainTop=EventManager.stage._hitTest_(EventManager._stageX,EventManager._stageY);
				this.dispatchTargetEvent(this._curChainTop,EventManager._mouseEvent);
				if(this._currentSysEvent.type=="mousedown"){
					this._mouseDownTarget=this._curChainTop;
				}
				else if(this._currentSysEvent.type=="mouseup"){
					if(this._curChainTop==this._mouseDownTarget){
						EventManager._mouseEvent.bubbles=true;
						EventManager._mouseEvent.type=/*iflash.events.MouseEvent.CLICK*/"click";
						this.dispatchTargetEvent(this._curChainTop,EventManager._mouseEvent);
					}
					this._mouseDownTarget=null;
				}
				if(EventManager._mouseEvent)EventManager._mouseEvent.destory();
			}
			else{
				TouchEvent.touchSysEvent(event,__bind(this,this.touchMomentHandler));
			}
		}

		__proto.touchMomentHandler=function(event){
			var touchInfo=TouchInfo.getTouchInfo(event);
			touchInfo.curChainTop=EventManager.stage._hitTest_(EventManager._stageX,EventManager._stageY);
			touchInfo.stageX=EventManager._stageX;touchInfo.stageY=EventManager._stageY;
			if(event.type==/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin"){
				touchInfo.touchBegin(event);
				this.dispatchTargetEvent(touchInfo.curChainTop,event);
			}
			else if(event.type==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd"){
				touchInfo.touchEnd(event);
				this.dispatchTargetEvent(touchInfo.curChainTop,event);
				if(touchInfo.curChainTop==touchInfo.touchDownTarget){
					event.type=/*iflash.events.TouchEvent.TOUCH_TAP*/"touchTap";
					this.dispatchTargetEvent(touchInfo.curChainTop,event);
				}
				touchInfo.destory();
			}
			if(event)event.destory();
		}

		EventManager.clientToStage=function(x,y){
			if(Laya.window.mouseX==x && Laya.window.mouseY==y)return;
			var tempX=x;
			if (Laya.document.adapter.screenRotate !=0){
				x=y;
				y=Laya.window.innerHeight-tempX;
			}
			EventManager._stageX=(x-Laya.document.body._left_)/Laya.window.scale.x;
			EventManager._stageY=(y-Laya.document.body._top_)/Laya.window.scale.y;
			Laya.document.mouseX=EventManager._stageX;
			Laya.document.mouseY=EventManager._stageY;
			Laya.window.mouseX=x;
			Laya.window.mouseY=y;
		}

		EventManager.mgr=new EventManager();
		EventManager.stage=null
		EventManager._stageX=0;
		EventManager._stageY=0;
		EventManager._mouseEvent=null
		__static(EventManager,
		['HELPER_POINT',function(){return this.HELPER_POINT=new Point();}
		]);
		return EventManager;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/eventphase.as
	//class iflash.events.EventPhase
	var EventPhase=(function(){
		function EventPhase(){}
		__class(EventPhase,'iflash.events.EventPhase',true);
		EventPhase.AT_TARGET=2;
		EventPhase.BUBBLING_PHASE=3;
		EventPhase.CAPTURING_PHASE=1;
		return EventPhase;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/gesturephase.as
	//class iflash.events.GesturePhase
	var GesturePhase=(function(){
		function GesturePhase(){}
		__class(GesturePhase,'iflash.events.GesturePhase',true);
		GesturePhase.ALL="all";
		GesturePhase.BEGIN="begin";
		GesturePhase.END="end";
		GesturePhase.UPDATE="update";
		__static(GesturePhase,
		['GESTURE_PHASE_MAP_TOUCH',function(){return this.GESTURE_PHASE_MAP_TOUCH={
				"touchBegin":"begin",
				"touchEnd":"end",
				"touchMove":"update",
				"touchOut":"all",
				"touchOver":"all",
				"touchRollOut":"all",
				"touchRollOver":"all",
				"touchTap":"end"
		};}

		]);
		return GesturePhase;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/throttletype.as
	//class iflash.events.ThrottleType
	var ThrottleType=(function(){
		function ThrottleType(){};
		__class(ThrottleType,'iflash.events.ThrottleType',true);
		ThrottleType.PAUSE="pause";
		ThrottleType.RESUME="resume";
		ThrottleType.THROTTLE="throttle";
		return ThrottleType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/touch.as
	//class iflash.events.Touch
	var Touch=(function(){
		function Touch(id){
			this._id_=0;
			this._globalX_=NaN;
			this._globalY_=NaN;
			this._previousGlobalX_=NaN;
			this._previousGlobalY_=NaN;
			this._tapCount_=0;
			this._phase_=null;
			this._target_=null;
			this._timestamp_=NaN;
			this._pressure_=NaN;
			this._width_=NaN;
			this._height_=NaN;
			this._bubbleChain_=null;
			this.touchType=null;
			this.nativeEvent=null;
			this._id_=id;
			this._tapCount_=0;
			this._phase_=/*iflash.events.TouchPhase.HOVER*/"hover";
			this._pressure_=this._width_=this._height_=1.0;
			this._bubbleChain_=/*new vector.<>*/[];
		}

		__class(Touch,'iflash.events.Touch',true);
		var __proto=Touch.prototype;
		__proto.getLocation=function(space,resultPoint){
			Touch.SHELPER_POINT.setTo(this._globalX_,this._globalY_);
			space.globalToLocal(Touch.SHELPER_POINT,resultPoint);
			return resultPoint;
		}

		__proto.getPreviousLocation=function(space,resultPoint){
			Touch.SHELPER_POINT.setTo(this._previousGlobalX_,this._previousGlobalY_);
			return space.globalToLocal(Touch.SHELPER_POINT,resultPoint);
		}

		__proto.getMovement=function(space,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			this.getLocation(space,resultPoint);
			var x=resultPoint.x;
			var y=resultPoint.y;
			this.getPreviousLocation(space,resultPoint);
			resultPoint.setTo(x-resultPoint.x,y-resultPoint.y);
			return resultPoint;
		}

		__proto.isTouching=function(target){
			return this._bubbleChain_.indexOf(target)!=-1;
		}

		__proto.clone=function(){
			var result=new Touch(this._id_);
			result._globalX_=this._globalX_;
			result._globalY_=this._globalY_;
			result._previousGlobalX_=this._previousGlobalX_;
			result._previousGlobalY_=this._previousGlobalY_;
			result._phase_=this._phase_;
			result._tapCount_=this._tapCount_;
			result._timestamp_=this._timestamp_;
			result._pressure_=this._pressure_;
			result._width_=this._width_;
			result._height_=this._height_;
			result.target=this._target_;
			result.touchType=this.touchType;
			result.nativeEvent=this.nativeEvent;
			return result;
		}

		__proto.updateBubbleChain=function(){
			if (this._target_){
				var length=1;
				var element=this._target_;
				this._bubbleChain_.length=1;
				this._bubbleChain_[0]=element;
				while ((element=element.parent)!=null)
				this._bubbleChain_[int(length++)]=element;
			}else this._bubbleChain_.length=0;
		}

		__proto.dispatchEvent=function(event){this._target_&&event.dispatch(this._bubbleChain_);}
		__getset(0,__proto,'id',function(){return this._id_;});
		__getset(0,__proto,'previousGlobalX',function(){return this._previousGlobalX_;});
		__getset(0,__proto,'previousGlobalY',function(){return this._previousGlobalY_;});
		__getset(0,__proto,'globalX',function(){return this._globalX_;},function(value){
			this._previousGlobalX_=this._globalX_ !=this._globalX_ ? value :this._globalX_;
			this._globalX_=value;
		});

		__getset(0,__proto,'globalY',function(){return this._globalY_;},function(value){
			this._previousGlobalY_=this._globalY_ !=this._globalY_ ? value :this._globalY_;
			this._globalY_=value;
		});

		__getset(0,__proto,'target',function(){return this._target_;},function(value){
			if (this._target_ !=value){
				this._target_=value;
				this.updateBubbleChain();
			}
		});

		__getset(0,__proto,'bubbleChain',function(){return this._bubbleChain_.concat();});
		__static(Touch,
		['SHELPER_MATRIX',function(){return this.SHELPER_MATRIX=new Matrix();},'SHELPER_POINT',function(){return this.SHELPER_POINT=new Point();}
		]);
		return Touch;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/toucheventintent.as
	//class iflash.events.TouchEventIntent
	var TouchEventIntent=(function(){
		function TouchEventIntent(){}
		__class(TouchEventIntent,'iflash.events.TouchEventIntent',true);
		TouchEventIntent.ERASER="eraser";
		TouchEventIntent.PEN="pen";
		TouchEventIntent.UNKNOWN="unknown";
		return TouchEventIntent;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/touchinfo.as
	//class iflash.events.TouchInfo
	var TouchInfo=(function(){
		function TouchInfo(evt){
			this.touchPointID=0;
			this.startTimestamp=0;
			this.endTimestamp=0;
			this.chainTop=null;
			this.stageX=0;
			this.stageY=0;
			this.startX=0;
			this.startY=0;
			this.endX=0;
			this.endY=0;
			this.curChainTop=null;
			this.touchDownTarget=null;
			this.touchEvent=null;
			this.bubbleChain=[];
			this.touchEvent=evt;
			this.touchPointID=evt.touchPointID;
		}

		__class(TouchInfo,'iflash.events.TouchInfo',true);
		var __proto=TouchInfo.prototype;
		__proto.touchBegin=function(event){
			this.startTimestamp=event.timestamp;
			this.startX=event.stageX;
			this.startY=event.stageY;
			this.stageX=this.startX;
			this.stageY=this.startY;
			this.endX=this.startX;
			this.endY=this.startY;
			this.touchDownTarget=this.curChainTop;
		}

		__proto.touchEnd=function(event){
			this.endTimestamp=event.timestamp;
			this.endX=event.stageX;
			this.endY=event.stageY;
			this.stageX=this.endX;
			this.stageY=this.endY;
		}

		__proto.touchMove=function(event){
			this.stageX=event.stageX;
			this.stageY=event.stageY;
		}

		__proto.destory=function(){
			for (var i=0;i < TouchInfo.touchs.length;i++){
				if (this.touchPointID==TouchInfo.touchs[i].touchPointID){
					TouchInfo.touchs.splice(i,1);
					break ;
				}
			}
			delete TouchInfo.touchInfos[this.touchPointID];
			this.bubbleChain=null;
			this.chainTop=null;
			this.curChainTop=null;
			this.touchDownTarget=null;
			this.touchEvent=null;
		}

		__getset(0,__proto,'localX',function(){
			return this.curChainTop.mouseX;
		});

		__getset(0,__proto,'localY',function(){
			return this.curChainTop.mouseY;
		});

		TouchInfo.getTouchInfo=function(touchEvent){
			var touchInfo=iflash.events.TouchInfo.touchInfos[touchEvent.touchPointID];
			if (touchInfo==null){
				touchInfo=iflash.events.TouchInfo.touchInfos[touchEvent.touchPointID]=new TouchInfo(touchEvent);
				TouchInfo.touchs.push(touchInfo);
			}
			return touchInfo;
		}

		TouchInfo.dealGestrueHandler=function(touchEvent){
			var tLen=TouchInfo.touchs.length;
			if(tLen==2 && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin"){
				TouchInfo.twoFingerGapTime=Math.abs(TouchInfo.touchs[1].startTimestamp-TouchInfo.touchs[0].startTimestamp);
				TouchInfo.twoFignerDownTime=TouchInfo.touchs[0].startTimestamp;
				TouchInfo.isTwoFingerDown=true;
				TouchInfo.twoFignerDownCount=1;
			}
			else if(tLen!=2 && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd"){
				TouchInfo.isTwoFingerDown=false;
				TouchInfo.twoFignerDownCount=0;
			}
			if(touchEvent.type==/*iflash.events.TouchEvent.TOUCH_TAP*/"touchTap"){
				if(tLen==2 && TouchInfo.twoFingerGapTime<100){
					var twoFingerTapTime=touchEvent.timestamp-TouchInfo.twoFignerDownTime;
					if(twoFingerTapTime-100<50){
						var ge=GestureEvent.getGestureEvent();
						ge._lytarget=touchEvent.target;
						return ge;
					}
				}
			};
			var twoFingerTapTime2=touchEvent.timestamp-TouchInfo.twoFignerDownTime;
			if(tLen==2 && twoFingerTapTime2>120 && (touchEvent.type==/*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove" || touchEvent.type==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd")){
				var transformTouchInfo=TouchInfo.touchInfos[touchEvent.touchPointID];
				var t0=TouchInfo.touchInfos[0];
				var t1=TouchInfo.touchInfos[1];
				var transformTouchEvt=new TransformGestureEvent("",true,false,GesturePhase.GESTURE_PHASE_MAP_TOUCH[touchEvent.type]);
				transformTouchEvt.localX=touchEvent.localX;
				transformTouchEvt.localY=touchEvent.localY;
				transformTouchEvt._lytarget=touchEvent._lytarget;
				transformTouchEvt.shiftKey=touchEvent.shiftKey;
				transformTouchEvt.ctrlKey=touchEvent.ctrlKey;
				transformTouchEvt.altKey=touchEvent.altKey;
				transformTouchEvt.offsetX=touchEvent.stageX-transformTouchInfo.stageX;
				transformTouchEvt.offsetY=touchEvent.stageY-transformTouchInfo.stageY;
				if(TouchInfo.twoFignerTouchType==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd"){
					TouchInfo.twoFignerTouchType="";
					return null;
				}
				TouchInfo.twoFignerTouchType=touchEvent.type;
				if((t0.stageX-t0.startX)*(t1.stageX-t1.startX)>10 && (t0.stageY-t0.startY)*(t1.stageY-t1.startY)>10){
					transformTouchEvt.type=/*iflash.events.TransformGestureEvent.GESTURE_PAN*/"gesturePan";
				}
				else{
					if(TouchInfo.twoFignerDownCount>0){
						transformTouchEvt.phase=/*iflash.events.GesturePhase.BEGIN*/"begin";
						TouchInfo.twoFignerDownCount=0;
					};
					var startVectorX=t1.startX-t0.startX;
					var startVectorY=t1.startY-t0.startY;
					var startDis=Math.sqrt(startVectorX *startVectorX+startVectorY *startVectorY);
					var nowVectorX=t1.stageX-t0.stageX;
					var nowVectorY=t1.stageY-t0.stageY;
					var nowDis=Math.sqrt(nowVectorX *nowVectorX+nowVectorY *nowVectorY);
					var cos=Math.acos((startVectorX *nowVectorX+startVectorY *nowVectorY)/(startDis *nowDis));
					var endVectorX=t1.endX-t0.endX;
					var endVectorY=t1.endY-t0.endY;
					nowVectorX=Math.abs(nowVectorX)<1 ? 1:nowVectorX;
					nowVectorY=Math.abs(nowVectorY)<1 ? 1:nowVectorY;
					endVectorX=Math.abs(endVectorX)<1 ? 1:endVectorX;
					endVectorY=Math.abs(endVectorY)<1 ? 1:endVectorY;
					var nex=nowVectorX/endVectorX;
					var ney=nowVectorY/endVectorY;
					nex=nex>1.1?1.1:nex;nex=nex<0.9?0.9:nex;
					ney=ney>1.1?1.1:ney;ney=ney<0.9?0.9:ney;
					transformTouchEvt.scaleX=nex;
					transformTouchEvt.scaleY=ney;
					transformTouchEvt.type=/*iflash.events.TransformGestureEvent.GESTURE_ZOOM*/"gestureZoom";
					if(cos > 20 *TouchInfo.RAD_UNIT){
						var endDis=Math.sqrt(endVectorX *endVectorX+endVectorY *endVectorY);
						var dir=(endVectorX *nowVectorY-endVectorY *nowVectorX)>=0?1:-1;
						var changeRotation=dir *Math.acos((endVectorX *nowVectorX+endVectorY *nowVectorY)/(endDis *nowDis));
						transformTouchEvt.rotation=changeRotation / TouchInfo.RAD_UNIT;
						transformTouchEvt.type=/*iflash.events.TransformGestureEvent.GESTURE_ROTATE*/"gestureRotate";
					}
					t1.endX=t1.stageX;t0.endX=t0.stageX;
					t1.endY=t1.stageY;t0.endY=t0.stageY;
				}
				return transformTouchEvt;
			}
			if(tLen==1 && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin"){
				TouchInfo.isSingleFingerDown=true;
				TouchInfo.singleFignerDownTime=touchEvent.timestamp;
			}
			else if(tLen==1 && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd"){
				TouchInfo.isSingleFingerDown=false;
				TouchInfo.singleFignerDownTime=0;
			}
			if(tLen==2 && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd" && TouchInfo.twoFingerGapTime>=100){
				var patge=PressAndTapGestureEvent.getInstance();
				patge._lytarget=touchEvent.target;
				patge.tapLocalX=touchEvent.localX;
				patge.tapLocalY=touchEvent.localY;
				patge.tapStageX=touchEvent.stageX;
				patge.tapStageY=touchEvent.stageY;
				return patge;
			}
			if(tLen==1 && TouchInfo.isSingleFingerDown && touchEvent.type==/*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove" && TouchInfo.singleFignerDownTime!=0 && (touchEvent.timestamp-TouchInfo.singleFignerDownTime>80)){
				TouchInfo.singleFignerDownTime=0;
				var swipeTouchInfo=TouchInfo.touchs[0];
				var swipeTouchEvt=new TransformGestureEvent(/*iflash.events.TransformGestureEvent.GESTURE_SWIPE*/"gestureSwipe",true,false,GesturePhase.GESTURE_PHASE_MAP_TOUCH[touchEvent.type]);
				swipeTouchEvt.localX=touchEvent.localX;
				swipeTouchEvt.localY=touchEvent.localY;
				swipeTouchEvt._lytarget=touchEvent._lytarget;
				swipeTouchEvt.shiftKey=touchEvent.shiftKey;
				swipeTouchEvt.ctrlKey=touchEvent.ctrlKey;
				swipeTouchEvt.altKey=touchEvent.altKey;
				swipeTouchEvt.offsetX=touchEvent.stageX-swipeTouchInfo.startX>0?1:-1;
				swipeTouchEvt.offsetY=touchEvent.stageY-swipeTouchInfo.startY>0?1:-1;
				return swipeTouchEvt;
			}
			return null;
		}

		TouchInfo.touchInfos={};
		TouchInfo.touchs=[];
		TouchInfo.TWO_FINGER_GAP_MIN_TIME=100;
		TouchInfo.GESTURE_SWIPE_MIN_TIME=80;
		TouchInfo.TRANSFORM_MIN_SIZE=10;
		TouchInfo.MIN_ROTATION_NUM=20;
		TouchInfo.twoFingerGapTime=0;
		TouchInfo.twoFignerDownTime=0;
		TouchInfo.singleFignerDownTime=0;
		TouchInfo.isSingleFingerDown=false;
		TouchInfo.isTwoFingerDown=false;
		TouchInfo.twoFignerDownCount=0;
		TouchInfo.twoFignerTouchType="";
		__static(TouchInfo,
		['RAD_UNIT',function(){return this.RAD_UNIT=Math.PI/180;}
		]);
		return TouchInfo;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/touchphase.as
	//class iflash.events.TouchPhase
	var TouchPhase=(function(){
		function TouchPhase(){};
		__class(TouchPhase,'iflash.events.TouchPhase',true);
		TouchPhase.HOVER="hover";
		TouchPhase.BEGAN="began";
		TouchPhase.MOVED="moved";
		TouchPhase.STATIONARY="stationary";
		TouchPhase.ENDED="ended";
		return TouchPhase;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/documentadapter.as
	//class iflash.laya.utils.DocumentAdapter
	var DocumentAdapter=(function(){
		function DocumentAdapter(){
			this.autoScaleDifference=0;
			this._screenRotate_=0;
			this._autorotate_="rotator";
			this._onWindows=/*__JS__ */navigator.userAgent.indexOf("Windows")>-1;
			Laya.window.lyAddEventListener(/*iflash.events.Event.RESIZE*/"resize",__bind(this,this.onResize));
		}

		__class(DocumentAdapter,'iflash.laya.utils.DocumentAdapter',true);
		var __proto=DocumentAdapter.prototype;
		__proto.onResize=function(__args){
			var args=arguments;
			if(!this._onWindows && (Stage.stage.focus instanceof iflash.text.TextField )){
				return;
			};
			var body=Laya.document.body;
			if(!body)return;
			var window=Laya.window;
			var sx=window.innerWidth / Stage.stage.width;
			var sy=window.innerHeight / Stage.stage.height;
			body.width=Stage.stage.width;
			body.height=Stage.stage.height;
			if (Math.abs(sx-1)< 0.02)sx=1;
			if (Math.abs(sy-1)< 0.02)sy=1;
			if(Stage.stage.scaleMode==/*iflash.display.StageScaleMode.NO_SCALE*/"noScale"){
				sx=1;
				sy=1;
			}
			else if(Stage.stage.scaleMode==/*iflash.display.StageScaleMode.NO_BORDER*/"noBorder"){
				if (sx < sy){
					sx=sy;
				}
				else{
					sy=sx;
				}
			}
			else if(Stage.stage.scaleMode==/*iflash.display.StageScaleMode.SHOW_ALL*/"showAll"){
				if (sx > sy){
					sx=sy;
				}
				else{
					sy=sx;
				}
			}
			window.scale.x=sx;
			window.scale.y=sy;
			body.scaleX=sx;
			body.scaleY=sy;
			var bodyPosX=Math.floor((window.innerWidth-Stage.stage.width *sx)/ 2);
			var bodyPosY=Math.floor((window.innerHeight-Stage.stage.height *sy)/ 2);
			if(Stage.stage.align !=""){
				if(StageAlign.isTop(Stage.stage.align)){
					bodyPosY=0;
				}
				if(StageAlign.isBottom(Stage.stage.align)){
					bodyPosY=Math.floor(window.innerHeight-Stage.stage.height *sy);
				}
				if(StageAlign.isLeft(Stage.stage.align)){
					bodyPosX=0;
				}
				if(StageAlign.isRight(Stage.stage.align)){
					bodyPosX=Math.floor(window.innerWidth-Stage.stage.width *sx);
				}
			}
			body.x=bodyPosX;
			body.y=bodyPosY;
		}

		__getset(0,__proto,'autorotate',function(){
			return this._autorotate_;
			},function(type){
			this._autorotate_=type.toLowerCase();
			Laya.window.lyDispatchEvent(/*iflash.events.Event.RESIZE*/"resize");
		});

		__getset(0,__proto,'screenRotate',function(){
			return this._screenRotate_;
		});

		return DocumentAdapter;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/dynamicproperties.as
	//class iflash.laya.utils.DynamicProperties
	var DynamicProperties=(function(){
		function DynamicProperties(_class,fndef,set_get,htmlNeed){
			this.nameWith=null;
			this.valueTo=null;
			this.htmlNeed=false;
			(htmlNeed===void 0)&& (htmlNeed=true);
			this.htmlNeed=htmlNeed;
			if (_class==null)return;
			var strs=DynamicProperties._regProperties.exec(fndef);
			var name=strs[2];
			this.valueTo=strs[4]?DynamicProperties.__CALCULATORTYPE__[strs[4]]:StringMethod.strToStr;
			this.nameWith=set_get==null?name:(set_get);
			_class.prototype["??"+name]=this;
		}

		__class(DynamicProperties,'iflash.laya.utils.DynamicProperties',true);
		var __proto=DynamicProperties.prototype;
		__proto.setValue=function(obj,data){
			obj[this.nameWith]=this.valueTo(data);
		}

		__proto.getValue=function(obj){
			if(!((obj instanceof iflash.media.AudioElement ))&&this.nameWith=="autoplay")
				return null;
			return obj[this.nameWith];
		}

		__proto.toHTML=function(){
			return this.htmlNeed;
		}

		DynamicProperties.reg=function(_class,fndef,set_get,htmlNeed){
			(htmlNeed===void 0)&& (htmlNeed=true);
			if (fndef.indexOf('(')<0)return new DynamicProperties(_class,fndef,set_get,htmlNeed);
			else return new DynamicMethods(_class,fndef,set_get,htmlNeed);
		}

		DynamicProperties._regProperties=new RegExp("(\\s*)([\\w-]+)\\s*(=\\s*(\\w))?");
		__static(DynamicProperties,
		['__CALCULATORTYPE__',function(){return this.__CALCULATORTYPE__={'s':StringMethod.strToStr,'i':StringMethod.toInt,'I':StringMethod.strToBigInt,'d':StringMethod.toFloat,'b':StringMethod.toBool,'t':StringMethod.strToTime};}
		]);
		return DynamicProperties;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/matrixutil.as
	//class iflash.laya.utils.MatrixUtil
	var MatrixUtil=(function(){
		function MatrixUtil(){throw new Error("can not new MatrixUtil");}
		__class(MatrixUtil,'iflash.laya.utils.MatrixUtil',true);
		MatrixUtil.transformPoint=function(matrix,point,resultPoint){
			return MatrixUtil.transformCoords(matrix,point.x,point.y,resultPoint);
		}

		MatrixUtil.transformCoords=function(matrix,x,y,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			resultPoint.x=matrix.a *x+matrix.c *y+matrix.tx;
			resultPoint.y=matrix.d *y+matrix.b *x+matrix.ty;
			return resultPoint;
		}

		MatrixUtil.skew=function(matrix,skewX,skewY){
			var sinX=Math.sin(skewX);
			var cosX=Math.cos(skewX);
			var sinY=Math.sin(skewY);
			var cosY=Math.cos(skewY);
			matrix.setTransform(matrix.a *cosY-matrix.b *sinX,
			matrix.a *sinY+matrix.b *cosX,
			matrix.c *cosY-matrix.d *sinX,
			matrix.c *sinY+matrix.d *cosX,
			matrix.tx *cosY-matrix.ty *sinX,
			matrix.tx *sinY+matrix.ty *cosX);
		}

		MatrixUtil.prependMatrix=function(base,prep){
			base.setTransform(base.a *prep.a+base.c *prep.b,
			base.b *prep.a+base.d *prep.b,
			base.a *prep.c+base.c *prep.d,
			base.b *prep.c+base.d *prep.d,
			base.tx+base.a *prep.tx+base.c *prep.ty,
			base.ty+base.b *prep.tx+base.d *prep.ty);
		}

		MatrixUtil.prependTranslation=function(matrix,tx,ty){
			matrix.tx+=matrix.a *tx+matrix.c *ty;
			matrix.ty+=matrix.b *tx+matrix.d *ty;
		}

		MatrixUtil.prependScale=function(matrix,sx,sy){
			matrix.setTransform(matrix.a *sx,matrix.b *sx,
			matrix.c *sy,matrix.d *sy,
			matrix.tx,matrix.ty);
		}

		MatrixUtil.prependRotation=function(matrix,angle){
			var sin=Math.sin(angle);
			var cos=Math.cos(angle);
			matrix.setTransform(matrix.a *cos+matrix.c *sin,matrix.b *cos+matrix.d *sin,
			matrix.c *cos-matrix.a *sin,matrix.d *cos-matrix.b *sin,
			matrix.tx,matrix.ty);
		}

		MatrixUtil.prependSkew=function(matrix,skewX,skewY){
			var sinX=Math.sin(skewX);
			var cosX=Math.cos(skewX);
			var sinY=Math.sin(skewY);
			var cosY=Math.cos(skewY);
			matrix.setTransform(matrix.a *cosY+matrix.c *sinY,
			matrix.b *cosY+matrix.d *sinY,
			matrix.c *cosX-matrix.a *sinX,
			matrix.d *cosX-matrix.b *sinX,
			matrix.tx,matrix.ty);
		}

		__static(MatrixUtil,
		['sRawData',function(){return this.sRawData=
			/*new vector.<>*/[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];},'sRawData2',function(){return this.sRawData2=__newvec(16,0);}
		]);
		return MatrixUtil;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/method.as
	//class iflash.laya.utils.Method
	var Method=(function(){
		function Method(){}
		__class(Method,'iflash.laya.utils.Method',true);
		Method.getPath=function(url){
			if(url==null || url=="")return "";
			var index=url.indexOf("?");
			if(index<0)index=url.indexOf("#");
			index=url.lastIndexOf("/");
			if (index >=0)url=url.substring(0,index+1);
			else url="/";
			if (url.charAt(0)=='/')url="file://"+url;
			return url;
		}

		Method.formatUrl=function(fileName,basePath){
			if (Laya.config.urlToLower)fileName=fileName.toLowerCase();
			var urlcache=Method.__urlCache__[fileName];
			if (urlcache !=null)return urlcache;
			if (fileName==null){
				return "";
			}
			if ((fileName.charAt(1)==':' && fileName.charAt(2)=='/'))
				fileName="file://"+fileName;
			if (fileName.charAt(0)=="/"){
				return Laya.window.location.fullPath+fileName.substring(1,fileName.length);
			}
			if (basePath==null)basePath=Laya.window.location.fullPath;
			var urlfull=basePath+"/"+fileName;
			urlcache=Method.__urlCache__[urlfull];
			if (urlcache !=null)return urlcache;
			if (fileName.indexOf("://")< 0)
				fileName=basePath+"/"+fileName;
			var urls=fileName.split("/");
			urls[1]="";
			var str,i=2,size=urls.length;
			while (i < size){
				str=urls[i];
				if (str==null)break ;
				if (str=='' || str=='.'){
					urls.splice(i,1);
					continue ;
				}
				if (str==".."){
					urls.splice(i-1,2);
					i-=1;
					continue ;
				}
				i+=1;
			}
			fileName=urls.join("/");
			return fileName;
		}

		Method.isNullOrEmpty=function(txt){
			return txt==null || txt=='';
		}

		Method.removeFromeArray=function(array,o){
			var index=array.indexOf(o);
			if (index >=0)array.splice(index);
		}

		Method.InitAttributesToHTML=function(initTxt,_class){
			var i=0,sz=0,def,strs,onestrs,out=[],j=0,str;
			strs=initTxt.split(';');
			for (i=0,sz=strs.length;i < sz;i++){
				onestrs=strs[i].split(':');
				if (onestrs[0].length < 1)continue ;
				def={name:onestrs[0],defaultv:onestrs[1],namenew:onestrs[2] };
				if (def.namenew==null)def.namenew=def.name;
				out.push(def);
				if (_class!=null && def.namenew !=def.name)
					iflash.laya.utils.regXmlAttr(_class,def.namenew,def.name);
			}
			return out;
		}

		Method.jsonParse=function(txt,reviver){
			try{
				return JSON.parse(txt,reviver);
			}
			catch(e){
			}
			return null;
		}

		Method.JsFunctionErr=LAYAFNVOID/*function(){}*/
		Method.jsToEventFun=function(s){
			return (((typeof s=='string'))?Browser.eval("(function(event){"+s+";})"):s);
		}

		Method.insert=function(arr,index,c){
			if (index < 0)throw "insert less than 0";
			if (index>=arr.length){
				arr.push(c);
				return;
			}
			else if (index==0){
				arr.unshift(c);
				return;
			};
			var len=arr.length;
			for (var i=len;i > index;i--){
				arr[i]=arr[i-1];
			}
			arr[index]=c;
		}

		Method.forseInsert=function(arr,index,c){
			if (index < 0)throw "insert less than 0";
			if (index >=arr.length){
				arr.length=index+1;
			}
			arr[index]=c;
		}

		Method.execScript=function(str,url){
			if (Laya.CONCHVER){
				Browser.eval(str,null);
				return;
			}
			try {
				Log.log("execScript:"+url);
				var a=Browser.document.createElement ("script");
				a.type="text/javascript";
				a.text=str;
				var o=Browser.document.getElementsByTagName("head");
				o[0].appendChild(a);
			}
			catch (err){
				/*__JS__ */debugger;
			}
		}

		Method._JpgToPng=function(img){
			var src=Canvas.create();
			var w=img.width,h=int((img.height-1)/2);
			src.size(w,h);
			src.context.drawImage(img,0,0,w,h,0,0,w,h);
			var imageDataSrc=src.context.getImageData(0,0,w,h);
			var pixelsSrc=imageDataSrc.data;
			if (pixelsSrc==null)Browser.alert("JpgToPng err:"+img.src);
			if (Method.__tmpCanvas__==null)Method.__tmpCanvas__=Canvas.create();
			Method.__tmpCanvas__.active();
			var alpha=Method.__tmpCanvas__;
			alpha.size(w,h);
			alpha.context.drawImage(img,0,h+2,w,h,0,0,w,h);
			var imageDataAlpha=alpha.context.getImageData(0,0,w,h);
			var pixelsAlpha=imageDataAlpha.data;
			var i=0,x=0;
			for (var y=0;y < h;y++){
				i=(y *w)<< 2;
				x=0;
				while (x < w){
					i+=4;
					x++;
					pixelsSrc[i+3]=pixelsAlpha[i];
				}
			}
			src.context.putImageData(imageDataSrc,0,0);
			return src;
		}

		Method.formatUrlType=function(url){
			var question=url.split ("?").length <=1;
			if(!question){
				url=url.slice(0,url.indexOf("?"));
			};
			var _formatUrlType_="";
			var extension="";
			var arr=url.split("/");
			url=arr[arr.length-1];
			var parts=url.split (".");
			if (parts.length > 1){
				extension=parts[parts.length-1].toLowerCase ();
			}else extension=".";
			return extension;
		}

		Method.__tmpCanvas__=null;
		Method._TEMP_FUN_=null
		Method.__urlCache__=[];
		return Method;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/stringmethod.as
	//class iflash.laya.utils.StringMethod
	var StringMethod=(function(){
		function StringMethod(){}
		__class(StringMethod,'iflash.laya.utils.StringMethod',true);
		StringMethod.nChar=function(chr,n){
			if (n < 1)return "";
			var str="";
			for (var i=0;i < n;i++)str+=chr;
			return str;
		}

		StringMethod.strToStr=function(value){
			return value;
		}

		StringMethod.toInt=function(d){
			return ((typeof d=='string'))?Laya.__parseInt(d):(d);
		}

		StringMethod.toFloat=function(d){
			return ((typeof d=='string'))?d:(d);
		}

		StringMethod.toBool=function(str){
			return (str==true || str=='true');
		}

		StringMethod.strToBigInt=function(value){
			if (value=="infinite")return /*int.MAX_VALUE*/2147483647;
			else return Laya.__parseInt(value);
		}

		StringMethod.strToTime=function(tm){
			if (tm==null)return 0;
			var n=1,sz=tm.length;
			if (tm.charAt(sz-1)=='s'){
				if (tm.substring(0,sz-2)=='ms')
					sz-=2;
				else{
					sz--;
					n=1000;
				}
			}
			return Math.floor(parseFloat(tm.substring(0,sz))*n);
		}

		StringMethod.strTrim=function(str){
			return str.replace(StringMethod._string_Trim_,"");
		}

		StringMethod.replaceBlankChar=function(str,dec){
			return str.replace(StringMethod._string_Trim_,'').replace(StringMethod._removeBlankChar_,dec?dec:' ');
		}

		StringMethod.subString=function(str,headstr,endstr,nullrtn,pos){
			if(str==null)return nullrtn;
			var b=str.indexOf(headstr),e=0;
			if(b<0)return nullrtn;
			b+=headstr.length;
			if (endstr==null)return str.substring(b,str.length);
			((e=str.indexOf(endstr,b))< 0)&& (e=str.length);
			if (pos !=null){
				pos.x=b;
				pos.y=e;
			}
			return str.substring(b,e);
		}

		StringMethod.getColorString=function(value){
			if(!value && value !=0)
				return null;
			var s;
			s=value.toString(16).toUpperCase();
			s=s.replace(/0x|0X/,'');
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s="#"+str+s;
			return s;
		}

		StringMethod._string_Trim_=new RegExp("(^\\s*)|(\\s*$)","g");
		StringMethod._string_LTrim_=new RegExp("(^\\s*)","g");
		StringMethod._string_RTrim_=new RegExp("(\\s*$)","g");
		StringMethod._removeBlankChar_=new RegExp("\\s+","g");
		StringMethod._WORDSIZEMAP_=[];
		return StringMethod;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/timerobject.as
	//class iflash.laya.utils.TimerObject
	var TimerObject=(function(){
		function TimerObject(time,listener,owner,delay,repeatCount){
			this._listener_=null;
			this.owner=null;
			this.isdel=false;
			this.startTime=NaN;
			this.nextTime=NaN;
			this.delay=NaN;
			this.repeatCount=NaN;
			this.runCount=NaN;
			this.data=null;
			this.name="";
			(delay===void 0)&& (delay=0);
			(repeatCount===void 0)&& (repeatCount=0);
			this.isdel=false;
			this.delay=delay;
			this.repeatCount=repeatCount;
			this._reset_(time,listener,owner);
			this.name=""+TimerObject.NameConut++;
		}

		__class(TimerObject,'iflash.laya.utils.TimerObject',true);
		var __proto=TimerObject.prototype;
		Laya.imps(__proto,{"iflash.laya.system.IObject":true})
		__proto._reset_=function(time,listener,owner){
			this.deleted=false;
			this.data=null;
			this._listener_=listener;
			this.owner=owner;
			this.startTime=time;
			this.isdel=false;
			this.runCount=0;
			this.nextTime=this.startTime+this.delay;
			return this;
		}

		__proto.run=function(time){
			if (this.isdel)return false;
			if (this.delay==0){
				return (this.owner && this.owner.deleted)|| (this._listener_&&this._listener_.call(this.owner,time,time-this.startTime,this));
			}
			if (this.nextTime==time)return true;
			while (this.nextTime <=time){
				if (this.owner && this.owner.deleted){
					return !(this.deleted=true);
				}
				if (this._listener_ !=null && (this._listener_.call(this.owner,time,time-this.startTime,this)==false)){
					return !(this.deleted=true);
				}
				this.nextTime+=this.delay;
				this.runCount++;
				if(this.repeatCount>0 && this.runCount>=this.repeatCount){
					return !(this.deleted=true);
				}
			}
			return true;
		}

		__getset(0,__proto,'listener',function(){
			return this._listener_;
		});

		__getset(0,__proto,'deleted',function(){
			return this.isdel;
			},function(b){
			this.isdel=b;
			if (b){
				this._listener_=null;
				this.owner=null;
				this.data=null;
			}
		});

		TimerObject.NameConut=0;
		return TimerObject;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/uri.as
	//class iflash.laya.utils.URI
	var URI=(function(){
		function URI(_url){
			this.url=null;
			this.path=null;
			this.url=_url;
			this.path=Method.getPath(_url);
		}

		__class(URI,'iflash.laya.utils.URI',false);
		var __proto=URI.prototype;
		__proto.toString=function(){
			return this.url;
		}

		return URI;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/bytearraycontextcmd.as
	//class iflash.utils.byteArrayContextCMD
	var byteArrayContextCMD=(function(){
		function byteArrayContextCMD(){
			this.result=null;
			this.result=new ByteArray();
		}

		__class(byteArrayContextCMD,'iflash.utils.byteArrayContextCMD',true);
		var __proto=byteArrayContextCMD.prototype;
		__proto.clear=function(){
			this.result.clear();
		}

		__proto.getBuffer=function(){
			return this.result;
		}

		__proto.save=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_SAVE*/0);
		}

		__proto.restore=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_RESTORE*/1);
		}

		__proto.beginPath=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_BEGINPATH*/2);
		}

		__proto.drawImage=function(__args){
			var args=[];for(var i=0,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			if (args.length==3){
				this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE3*/3);
				this.result.writeFloat(args[1]);
				this.result.writeFloat(args[2]);
			}
			else if (args.length==5){
				this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE5*/4);
				this.result.writeDouble(args[0].id);
				this.result.writeFloat(args[1]);
				this.result.writeFloat(args[2]);
				this.result.writeFloat(args[3]);
				this.result.writeFloat(args[4]);
			}
			else{
				this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE9*/5);
				this.result.writeDouble(args[0].id);
				this.result.writeFloat(args[1]);
				this.result.writeFloat(args[2]);
				this.result.writeFloat(args[3]);
				this.result.writeFloat(args[4]);
				this.result.writeFloat(args[5]);
				this.result.writeFloat(args[6]);
				this.result.writeFloat(args[7]);
				this.result.writeFloat(args[8]);
			}
		}

		__proto.rect=function(x,y,w,h){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_RECT*/6);
			this.result.writeInt(x);
			this.result.writeInt(y);
			this.result.writeInt(w);
			this.result.writeInt(h);
		}

		__proto.clip=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_CLIP*/7);
			return true;
		}

		__proto.scale=function(x,y){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_SCALE*/8);
			this.result.writeFloat(x);
			this.result.writeFloat(y);
		}

		__proto.translate=function(x,y){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_TRANSLATE*/9);
			this.result.writeFloat(x);
			this.result.writeFloat(y);
		}

		__proto.transform=function(a,b,c,d,tx,ty){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_TRANSFORM*/10);
			this.result.writeFloat(a);
			this.result.writeFloat(b);
			this.result.writeFloat(c);
			this.result.writeFloat(d);
			this.result.writeFloat(tx);
			this.result.writeFloat(ty);
		}

		__proto.clearRect=function(x,y,w,h){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_CLEARRECT*/12);
			this.result.writeInt(x);
			this.result.writeInt(y);
			this.result.writeInt(w);
			this.result.writeInt(h);
		}

		__proto.closePath=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_CLOSEPATH*/13);
		}

		__proto.fillRect=function(x,y,w,h){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_FILLRECT*/15);
			this.result.writeInt(x);
			this.result.writeInt(y);
			this.result.writeInt(w);
			this.result.writeInt(h);
		}

		__proto.stroke=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_STROKE*/17);
		}

		__proto.strokeRect=function(x,y,w,h){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_STROKERECT*/18);
			this.result.writeInt(x);
			this.result.writeInt(y);
			this.result.writeInt(w);
			this.result.writeInt(h);
		}

		__proto.fillText=function(word,x,y){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_FILLTEXT*/19);
			this.result.writeUTF(word);
			this.result.writeFloat(x);
			this.result.writeFloat(y);
		}

		__proto.fill=function(){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_FILL*/20);
		}

		__proto.moveTo=function(x,y){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_MOVETO*/24);
			this.result.writeFloat(x);
			this.result.writeFloat(y);
		}

		__proto.lineTo=function(x,y){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_LINETO*/25);
			this.result.writeFloat(x);
			this.result.writeFloat(y);
		}

		__proto.arc=function(x,y,r,sAngle,eAngle,bCounterclockwise){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_ARC*/26);
			this.result.writeInt(x);
			this.result.writeInt(y);
		}

		__proto.arcTo=LAYAFNVOID/*function(x1,y1,x2,y2,radium){}*/
		__proto.bezierCurveTo=LAYAFNVOID/*function(nCPX,nCPY,nCPX2,nCPY2,nEndX,nEndY){}*/
		__proto.quadraticCurveTo=LAYAFNVOID/*function(left,top,width,height){}*/
		__getset(0,__proto,'globalAlpha',null,function(n){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_GLOBALALPHA*/11);
			this.result.writeFloat(n);
		});

		__getset(0,__proto,'fillStyle',null,function(style){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_FILLSTYLE*/14);
			this.result.writeUTF(style);
		});

		__getset(0,__proto,'lineJoin',null,function(s){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_LINEJOIN*/23);
			this.result.writeUTF(s);
		});

		__getset(0,__proto,'strokeStyle',null,function(color){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_STROKESTYLE*/16);
			this.result.writeUTF(color);
		});

		__getset(0,__proto,'lineCap',null,function(s){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_LINECAP*/21);
			this.result.writeUTF(s);
		});

		__getset(0,__proto,'lineWidth',null,function(n){
			this.result.writeShort(/*iflash.utils.ConchRenderVCanvas.CMD_LINEWIDTH*/22);
			this.result.writeInt(n);
		});

		__static(byteArrayContextCMD,
		['INSTANCE',function(){return this.INSTANCE=new byteArrayContextCMD();}
		]);
		return byteArrayContextCMD;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/conchrendervcanvas.as
	//class iflash.utils.ConchRenderVCanvas
	var ConchRenderVCanvas=(function(){
		function ConchRenderVCanvas(){}
		__class(ConchRenderVCanvas,'iflash.utils.ConchRenderVCanvas',true);
		var __proto=ConchRenderVCanvas.prototype;
		__proto.uploadConch=function(){
			var instance=stringContextCMD.INSTANCE;
			ConchRenderVCanvas.cmdArray.length=0;
			var temp;
			for (var i=0,sz=ConchRenderVCanvas.maps.length;i < sz;i++){
				var canvas=ConchRenderVCanvas.maps[i];
				var d=VirtualCanvas.getConchSring(canvas._cmds_);
				ConchRenderVCanvas.cmdArray.push(canvas.conchVirtualBitmap.id+"\6"+d||"");
				temp=canvas.conchVirtualBitmap;
				ConchRenderVCanvas.maps.splice(i,1);
				canvas.inMap=false;
				i--;
				sz--;
			};
			var buffer=ConchRenderVCanvas.cmdArray.join("\3");
			temp && temp.setAllBuffer(buffer);
		}

		ConchRenderVCanvas.CMD_SAVE=0;
		ConchRenderVCanvas.CMD_RESTORE=1;
		ConchRenderVCanvas.CMD_BEGINPATH=2;
		ConchRenderVCanvas.CMD_DRAWIMAGE3=3;
		ConchRenderVCanvas.CMD_DRAWIMAGE5=4;
		ConchRenderVCanvas.CMD_DRAWIMAGE9=5;
		ConchRenderVCanvas.CMD_RECT=6;
		ConchRenderVCanvas.CMD_CLIP=7;
		ConchRenderVCanvas.CMD_SCALE=8;
		ConchRenderVCanvas.CMD_TRANSLATE=9;
		ConchRenderVCanvas.CMD_TRANSFORM=10;
		ConchRenderVCanvas.CMD_GLOBALALPHA=11;
		ConchRenderVCanvas.CMD_CLEARRECT=12;
		ConchRenderVCanvas.CMD_CLOSEPATH=13;
		ConchRenderVCanvas.CMD_FILLSTYLE=14;
		ConchRenderVCanvas.CMD_FILLRECT=15;
		ConchRenderVCanvas.CMD_STROKESTYLE=16;
		ConchRenderVCanvas.CMD_STROKE=17;
		ConchRenderVCanvas.CMD_STROKERECT=18;
		ConchRenderVCanvas.CMD_FILLTEXT=19;
		ConchRenderVCanvas.CMD_FILL=20;
		ConchRenderVCanvas.CMD_LINECAP=21;
		ConchRenderVCanvas.CMD_LINEWIDTH=22;
		ConchRenderVCanvas.CMD_LINEJOIN=23;
		ConchRenderVCanvas.CMD_MOVETO=24;
		ConchRenderVCanvas.CMD_LINETO=25;
		ConchRenderVCanvas.CMD_ARC=26;
		ConchRenderVCanvas.CMD_ARCTO=27;
		ConchRenderVCanvas.CMD_BEZIERCURVETO=28;
		ConchRenderVCanvas.CMD_QUADRATICCURVETO=29;
		ConchRenderVCanvas.CMD_DRAWCANVAS3=30;
		ConchRenderVCanvas.CMD_DRAWCANCAS5=31;
		ConchRenderVCanvas.CMD_DRAWCANCAS9=32;
		ConchRenderVCanvas.CMD_FONT=33;
		ConchRenderVCanvas.CMD_DRAWREPEAT=34;
		ConchRenderVCanvas.CMD_GLOBALCOMPOSITEOPERATION=35;
		ConchRenderVCanvas.CMD_TEXTBASELINE=36;
		ConchRenderVCanvas.maps=[];
		ConchRenderVCanvas.INSTANCE=new ConchRenderVCanvas();
		ConchRenderVCanvas.cmdArray=[];
		__static(ConchRenderVCanvas,
		['CMDMAP',function(){return this.CMDMAP={
				"_drawVCanvas_":-1,
				"_save_":0,
				"_restore_":1,
				"_beginPath_":2,
				"_drawImage3_":3,
				"_drawImage5_":4,
				"_drawImage9_":5,
				"_rect_":6,
				"_clip_":7,
				"_scale_":8,
				"_translate_":9,
				"_transform_":10,
				"_globalAlpha_":11,
				"_clearRect_":12,
				"_closePath_":13,
				"_fillStyle_":14,
				"_fillRect_":15,
				"_strokeStyle_":16,
				"_stroke_":17,
				"_strokeRect_":18,
				"_fillText_":19,
				"_fill_":20,
				"_lineCap_":21,
				"_lineWidth_":22,
				"_lineJoin_":23,
				"_moveTo_":24,
				"_lineTo_":25,
				"_arc_":26,
				"_arcTo_":27,
				"_bezierCurveTo_":28,
				"_quadraticCurveTo_":29,
				"_drawCanvas3_":30,
				"_drawCanvas5_":31,
				"_drawCanvas9_":32,
				"_font_":33,
				"_drawRepeat_":34,
				"_globalCompositeOperation_":35,
				"_textBaseline_":36
		};}

		]);
		return ConchRenderVCanvas;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/datas.as
	//class iflash.utils.Datas
	var Datas=(function(){
		function Datas(){}
		__class(Datas,'iflash.utils.Datas',true);
		Datas.DICKEY=0;
		Datas.DICKEYS=[];
		return Datas;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/debugtools.as
	//class iflash.utils.DebugTools
	var DebugTools=(function(){
		function DebugTools(){}
		__class(DebugTools,'iflash.utils.DebugTools',true);
		DebugTools.getTTime=function(){
			return (new Date()).time;
		}

		DebugTools.startTime=function(sign){
			DebugTools.timeSignPreTimeDic[sign]=DebugTools.getTTime();
		}

		DebugTools.endTime=function(sign){
			var dtime=0;
			dtime=DebugTools.getTTime()-DebugTools.timeSignPreTimeDic[sign];
			DebugTools.timeSignDic[sign]=int(DebugTools.timeSignDic[sign])+dtime;
		}

		DebugTools.resetTime=function(sign){
			DebugTools.timeSignDic[sign]=0;
		}

		DebugTools.getTime=function(sign){
			return DebugTools.timeSignDic[sign];
		}

		DebugTools.timeSignDic={};
		DebugTools.timeSignPreTimeDic={};
		return DebugTools;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/distools.as
	//class iflash.utils.DisTools
	var DisTools=(function(){
		function DisTools(){}
		__class(DisTools,'iflash.utils.DisTools',true);
		return DisTools;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/endian.as
	//class iflash.utils.Endian
	var Endian=(function(){
		function Endian(){};
		__class(Endian,'iflash.utils.Endian',true);
		Endian.BIG_ENDIAN="bigEndian";
		Endian.LITTLE_ENDIAN="littleEndian";
		return Endian;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/fileparse.as
	//class iflash.utils.FileParse
	var FileParse=(function(){
		function FileParse(){}
		__class(FileParse,'iflash.utils.FileParse',true);
		FileParse.getFile=function(url){
			return FileParse.fileContentObj[url];
		}

		FileParse.parse=function(bytes){
			var len=0;
			for(var i=0;;i++){
				if(bytes[i]==0){
					len=i;
					break ;
				}
			};
			var header=bytes.readUTFBytes(len);
			var fileArr=header.split('\n');
			var dataOfs=len+1;
			var bytesTmp;
			var filename;
			var filesize=0;
			var fileBody;
			bytes.position=len+1;
			for(var ii=0;ii<fileArr.length;ii+=2){
				filename=fileArr[ii];
				filesize=Laya.__parseInt(fileArr[ii+1]);
				bytesTmp=new ByteArray();
				bytes.readBytes(bytesTmp,0,filesize);
				FileParse.fileContentObj[filename]=bytesTmp;
				dataOfs+=filesize;
				bytesTmp=null;
			}
		}

		FileParse.fileContentObj={};
		return FileParse;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/layadictionary.as
	//class iflash.utils.LayaDictionary
	var LayaDictionary=(function(){
		function LayaDictionary(){
			this._elements=[];
			this._keys=[];
		}

		__class(LayaDictionary,'iflash.utils.LayaDictionary',true);
		var __proto=LayaDictionary.prototype;
		__proto.set=function(key,value){
			var index=this.indexOf(key);
			if (index >=0){
				this._elements[index]=value;
				return;
			}
			this._keys.push(key);
			this._elements.push(value);
		}

		__proto.contains=function(key){
			return this._keys.indexOf(key)>-1;
		}

		__proto.indexOf=function(key){
			var index=this._keys.indexOf(key);
			if (index >=0)return index;
			key=((typeof key=='string'))?Number(key):(((typeof key=='number'))?key.toString():key);
			return this._keys.indexOf(key);
		}

		__proto.get=function(key){
			var index=this.indexOf(key);
			return index < 0?null:this._elements[index];
		}

		__proto.remove=function(key){
			var index=this.indexOf(key);
			if (index >=0){
				this._keys.splice(index,1);
				this._elements.splice(index,1);
				return true;
			}
			return false;
		}

		__proto.clear=function(){
			this._elements.length=0;
			this._keys.length=0;
		}

		__getset(0,__proto,'elements',function(){
			return this._elements;
		});

		__getset(0,__proto,'keys',function(){
			return this._keys;
		});

		return LayaDictionary;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/log.as
	//class iflash.utils.Log
	var Log=(function(){
		function Log(){}
		__class(Log,'iflash.utils.Log',true);
		Log.log=function(str){
			if(Log.isLog)console.log("[layaLog]:"+str);
		}

		Log.error=function(str){
			if(!Log.isError)console.log("[error]:"+str);
		}

		Log.warming=function(str){
			if(!Log.isWarMing)console.log("[warming]:"+str);
		}

		Log.unfinished=function(className,functionName){
			if(Log.isOpen)console.log("[unfinished]:"+className+"--"+functionName);
		}

		Log.isOpen=false;
		Log.isLog=false;
		Log.isWarMing=false;
		Log.isError=false;
		return Log;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/proxy.as
	//class iflash.utils.Proxy
	var Proxy=(function(){
		function Proxy(){}
		__class(Proxy,'iflash.utils.Proxy',true);
		var __proto=Proxy.prototype;
		__proto.getProperty=function(name){
			Error.throwError(IllegalOperationError,2088);
			return null;
		}

		__proto.setProperty=function(name,value){
			Error.throwError(IllegalOperationError,2089);
		}

		__proto.callProperty=function(name,__rest){
			var rest=[];for(var i=1,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			Error.throwError(IllegalOperationError,2090);
			return null;
		}

		__proto.hasProperty=function(name){
			Error.throwError(IllegalOperationError,2091);
			return false;
		}

		__proto.deleteProperty=function(name){
			Error.throwError(IllegalOperationError,2092);
			return false;
		}

		__proto.getDescendants=function(name){
			Error.throwError(IllegalOperationError,2093);
			return false;
		}

		__proto.nextNameIndex=function(index){
			Error.throwError(IllegalOperationError,2105);
			return 0;
		}

		__proto.nextName=function(index){
			Error.throwError(IllegalOperationError,2106);
			return null;
		}

		__proto.nextValue=function(index){
			Error.throwError(IllegalOperationError,2107);
			return null;
		}

		__proto.isAttribute=LAYAFNFALSE/*function(param1){return false}*/
		return Proxy;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/stringcontextcmd.as
	//class iflash.utils.stringContextCMD
	var stringContextCMD=(function(){
		function stringContextCMD(){
			this.result=null;
			this._cmds_=null;
			this.result="";
			this._cmds_=[];
		}

		__class(stringContextCMD,'iflash.utils.stringContextCMD',true);
		var __proto=stringContextCMD.prototype;
		__proto.clear=function(){
			this.result="";
			this._cmds_=[];
		}

		__proto.getBuffer=function(){
			this.result=this._cmds_.join('\5');
			return this.result;
		}

		__proto.save=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_SAVE*/0);
		}

		__proto.restore=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_RESTORE*/1);
		}

		__proto.beginPath=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_BEGINPATH*/2);
		}

		__proto.drawImage=function(__args){
			var args=[];for(var i=0,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			if (args.length==3){
				this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE3*/3+'\4'+args[0].imgId+'\4'+args[1]+'\4'+args[2]);
			}
			else if (args.length==5){
				this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE5*/4+'\4'+args[0].imgId+'\4'+args[1]+'\4'+args[2]+'\4'+args[3]+'\4'+args[4]);
			}
			else{
				this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_DRAWIMAGE9*/5+'\4'+args[0].imgId+'\4'+args[1]+'\4'+args[2]+'\4'+args[3]+'\4'+args[4]+'\4'+args[5]+'\4'+args[6]+'\4'+args[7]+'\4'+args[8]);
			}
		}

		__proto.rect=function(x,y,w,h){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_RECT*/6+'\4'+x+'\4'+y+'\4'+w+'\4'+h);
		}

		__proto.clip=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_CLIP*/7);
			return true;
		}

		__proto.scale=function(x,y){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_SCALE*/8+'\4'+x+'\4'+y);
		}

		__proto.translate=function(x,y){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_TRANSLATE*/9+'\4'+x+'\4'+y);
		}

		__proto.transform=function(a,b,c,d,tx,ty){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_TRANSFORM*/10+'\4'+a+'\4'+b+'\4'+c+'\4'+d+'\4'+tx+'\4'+ty);
		}

		__proto.clearRect=function(x,y,w,h){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_CLEARRECT*/12+'\4'+x+'\4'+y+'\4'+w+'\4'+h);
		}

		__proto.closePath=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_CLOSEPATH*/13);
		}

		__proto.fillRect=function(x,y,w,h){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_FILLRECT*/15+'\4'+x+'\4'+y+'\4'+w+'\4'+h);
		}

		__proto.stroke=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_STROKE*/17);
		}

		__proto.strokeRect=function(x,y,w,h){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_STROKERECT*/18+'\4'+x+'\4'+y+'\4'+w+'\4'+h);
		}

		__proto.fillText=function(word,x,y){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_FILLTEXT*/19+'\4'+word+'\4'+x+'\4'+y);
		}

		__proto.fill=function(){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_FILL*/20);
		}

		__proto.moveTo=function(x,y){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_MOVETO*/24+'\4'+x+'\4'+y);
		}

		__proto.lineTo=function(x,y){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_LINETO*/25+'\4'+x+'\4'+y);
		}

		__proto.arc=function(x,y,r,sAngle,eAngle,bCounterclockwise){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_ARC*/26+'\4'+x+'\4'+y+'\4'+r+'\4'+sAngle+'\4'+eAngle+'\4'+(bCounterclockwise?1:0));
		}

		__proto.arcTo=function(x1,y1,x2,y2,radium){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_ARCTO*/27+'\4'+x1+'\4'+y1+'\4'+x2+'\4'+y2+'\4'+radium);
		}

		__proto.bezierCurveTo=function(nCPX,nCPY,nCPX2,nCPY2,nEndX,nEndY){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_BEZIERCURVETO*/28+'\4'+nCPX+'\4'+nCPY+'\4'+nCPX2+'\4'+nCPY2+'\4'+nEndX+'\4'+nEndY);
		}

		__proto.quadraticCurveTo=function(left,top,width,height){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_QUADRATICCURVETO*/29+'\4'+left+'\4'+top+'\4'+width+'\4'+height);
		}

		__getset(0,__proto,'globalAlpha',null,function(n){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_GLOBALALPHA*/11+'\4'+n);
		});

		__getset(0,__proto,'fillStyle',null,function(style){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_FILLSTYLE*/14+'\4'+style);
		});

		__getset(0,__proto,'font',null,function(f){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_FONT*/33+'\4'+f);
		});

		__getset(0,__proto,'lineJoin',null,function(s){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_LINEJOIN*/23+'\4'+s);
		});

		__getset(0,__proto,'strokeStyle',null,function(color){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_STROKESTYLE*/16+'\4'+color);
		});

		__getset(0,__proto,'lineCap',null,function(s){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_LINECAP*/21+'\4'+s);
		});

		__getset(0,__proto,'lineWidth',null,function(n){
			this._cmds_.push(/*iflash.utils.ConchRenderVCanvas.CMD_LINEWIDTH*/22+'\4'+n);
		});

		stringContextCMD.COMMA='\4';
		stringContextCMD.SEMICOLON='\5';
		stringContextCMD.INSTANCE=new stringContextCMD();
		return stringContextCMD;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/texturemanager.as
	//class iflash.utils.TextureManager
	var TextureManager=(function(){
		function TextureManager(){
			this._textureDic={};
		}

		__class(TextureManager,'iflash.utils.TextureManager',true);
		var __proto=TextureManager.prototype;
		__proto.getTexture=function(textureUrl){
			return this._textureDic[textureUrl];
		}

		__proto.addTexture=function(textureUrl,data){
			this._textureDic[textureUrl]=data;
		}

		TextureManager.getInstance=function(){
			if(!TextureManager._instance)TextureManager._instance=new TextureManager();
			return TextureManager._instance;
		}

		TextureManager._instance=null
		return TextureManager;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/toolutils.as
	//class iflash.utils.ToolUtils
	var ToolUtils=(function(){
		function ToolUtils(){}
		__class(ToolUtils,'iflash.utils.ToolUtils',true);
		ToolUtils.formatUrlType=function(url){
			var question=url.split ("?").length <=1;
			if(!question){
				url=((url.split ("?"))[0]).toString();
			};
			var _formatUrlType_="";
			var extension="";
			var parts=url.split (".");
			if (parts.length > 0){
				extension=parts[parts.length-1].toLowerCase ();
			}
			return extension;
		}

		ToolUtils.getColor=function(value){
			var s=value.toString(16).toUpperCase();
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s="#"+str+s;
			return s;
		}

		return ToolUtils;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/laya.as
	//class Laya
	var ___Laya=(function(){
		//function Laya(sprite){}
		Laya.Main=function(sprite){
			if ((typeof sprite=='function')){
				Laya._startCallBack_=sprite;
				sprite=null;
			}
			if (Laya.config)return;
			/*__JS__ */window.Laya=Laya;
			Laya.config=new iflash.laya.system.Config();
			Laya.root=sprite;
			Browser.__init__(sprite);
			/*__JS__ */Laya.CONCHVER && (conch.disableMultiTouch=true);
			if(Laya.CONCHVER){
				Laya.RENDERBYCANVAS=false;
			}
			else{
				Laya.RENDERBYCANVAS=/*__JS__ */!LAYABOX.runOnlyPlayer;
			}
			DisplayObject.TYPE2DEFAULT=Laya.RENDERBYCANVAS?0:/*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
			(Laya.process==null)&& Laya.onConchReady();
		}

		Laya.onConchReady=function(){
			Laya.process && Laya.process.active();
			Laya.window=new Window3();
			Browser.__start__();
			if (Boolean(Laya._startCallBack_))Laya._startCallBack_();
			Laya.ilaya.onStart();
		}

		Laya.setIf=function(name,value){
			Laya.ifdef[name]=value;
		}

		Laya.getIfdef=function(name){
			return Laya.ifdef[name] !=null;
		}

		Laya.window=null
		Laya.document=null
		Laya.root=null
		Laya.config=null
		Laya.ifdef={};
		Laya.NULLFLOAT=NaN
		Laya.SHOW_FPS=true;
		Laya.conch=null
		Laya.process=null
		Laya.ilaya=null;
		Laya._startCallBack_=null
		Laya.RENDERBYCANVAS=false;
		Laya.FLASHVER=0;
		__static(Laya,
		['ENABLE3D',function(){return this.ENABLE3D=/*__JS__ */LAYABOX.ENABLE3D;},'CONCHVER',function(){return this.CONCHVER=/*__JS__ */window.conch?1:0;},'HTMLVER',function(){return this.HTMLVER=/*__JS__ */1;}
		]);
		return Laya;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/uncaughterrorevents.as
	//class iflash.events.UncaughtErrorEvents extends iflash.events.EventDispatcher
	var UncaughtErrorEvents=(function(_super){
		function UncaughtErrorEvents(target){
			UncaughtErrorEvents.__super.call(this,target);
		}

		__class(UncaughtErrorEvents,'iflash.events.UncaughtErrorEvents',false,_super);
		return UncaughtErrorEvents;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/accelerometerevent.as
	//class iflash.events.AccelerometerEvent extends iflash.events.Event
	var AccelerometerEvent=(function(_super){
		function AccelerometerEvent(type,bubbles,cancelable,_d){
			this.accelerationX=0;
			this.accelerationY=0;
			this.accelerationZ=0;
			this.timestamp=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			AccelerometerEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(AccelerometerEvent,'iflash.events.AccelerometerEvent',false,_super);
		var __proto=AccelerometerEvent.prototype;
		__proto.clone=function(){
			var ae=new AccelerometerEvent(this.type,this.bubbles,this.cancelable,this._lyData);
			ae.accelerationX=this.accelerationX;
			ae.accelerationY=this.accelerationY;
			ae.accelerationZ=this.accelerationZ;
			return ae;
		}

		AccelerometerEvent.copySysEvent=function(e){
			var ae=new AccelerometerEvent(/*CLASS CONST:iflash.events.AccelerometerEvent.UPDATE*/"update",e.bubbles,e.cancelable,null);
			ae.accelerationX=-e.accelerationIncludingGravity.y;
			ae.accelerationY=e.accelerationIncludingGravity.x;
			ae.accelerationZ=e.accelerationIncludingGravity.z;
			ae.timestamp=e.timeStamp;
			return ae;
		}

		AccelerometerEvent.UPDATE="update";
		return AccelerometerEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/activityevent.as
	//class iflash.events.ActivityEvent extends iflash.events.Event
	var ActivityEvent=(function(_super){
		function ActivityEvent(type,bubbles,cancelable,_d){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			ActivityEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(ActivityEvent,'iflash.events.ActivityEvent',false,_super);
		var __proto=ActivityEvent.prototype;
		__getset(0,__proto,'activating',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		ActivityEvent.ACTIVITY="activity";
		return ActivityEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/textevent.as
	//class iflash.events.TextEvent extends iflash.events.Event
	var TextEvent=(function(_super){
		function TextEvent(type,bubbles,cancelable,text){
			this.m_text=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			TextEvent.__super.call(this,type,bubbles,cancelable);
			this.m_text=text;
		}

		__class(TextEvent,'iflash.events.TextEvent',false,_super);
		var __proto=TextEvent.prototype;
		__proto.clone=function(){
			var te=new TextEvent(this.type,this.bubbles,this.cancelable,this.m_text);
			te.copyNativeData(this);
			return te;
		}

		__proto.copyNativeData=LAYAFNVOID/*function(param1){}*/
		__getset(0,__proto,'text',function(){
			return this.m_text;
			},function(value){
			this.m_text=value;
		});

		TextEvent.LINK="link";
		TextEvent.TEXT_INPUT="textInput";
		return TextEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/contextmenuevent.as
	//class iflash.events.ContextMenuEvent extends iflash.events.Event
	var ContextMenuEvent=(function(_super){
		function ContextMenuEvent(type,bubbles,cancelable,_d){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			ContextMenuEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(ContextMenuEvent,'iflash.events.ContextMenuEvent',false,_super);
		var __proto=ContextMenuEvent.prototype;
		__getset(0,__proto,'contextMenuOwner',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'isMouseTargetInaccessible',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'mouseTarget',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		ContextMenuEvent.MENU_ITEM_SELECT="menuItemSelect";
		ContextMenuEvent.MENU_SELECT="menuSelect";
		return ContextMenuEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/focusevent.as
	//class iflash.events.FocusEvent extends iflash.events.Event
	var FocusEvent=(function(_super){
		function FocusEvent(type,bubbles,cancelable,relatedObject,shiftKey,keyCode){
			this._keyCode=0;
			this._shiftKey=false;
			(bubbles===void 0)&& (bubbles=true);
			(cancelable===void 0)&& (cancelable=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(keyCode===void 0)&& (keyCode=0);
			FocusEvent.__super.call(this,type,bubbles,cancelable,relatedObject);
			this._shiftKey=shiftKey;
			this._keyCode=keyCode;
		}

		__class(FocusEvent,'iflash.events.FocusEvent',false,_super);
		var __proto=FocusEvent.prototype;
		__proto.clone=function(){
			return this;
		}

		__getset(0,__proto,'isRelatedObjectInaccessible',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'keyCode',function(){
			return this._keyCode;
			},function(value){
			this._keyCode=value;
		});

		__getset(0,__proto,'relatedObject',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'shiftKey',function(){
			return this._shiftKey;
			},function(value){
			this._shiftKey=value;
		});

		FocusEvent.FOCUS_IN="focusIn";
		FocusEvent.FOCUS_OUT="focusOut";
		FocusEvent.KEY_FOCUS_CHANGE="keyFocusChange";
		FocusEvent.MOUSE_FOCUS_CHANGE="mouseFocusChange";
		return FocusEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/geolocationevent.as
	//class iflash.events.GeolocationEvent extends iflash.events.Event
	var GeolocationEvent=(function(_super){
		function GeolocationEvent(type,bubbles,cancelable,latitude,longitude,altitude,hAccuracy,vAccuracy,speed,heading,timestamp){
			this._altitude=NaN;
			this._heading=NaN;
			this._horizontalAccuracy=NaN;
			this._latitude=NaN;
			this._longitude=NaN;
			this._speed=NaN;
			this._timestamp=NaN;
			this._verticalAccuracy=NaN;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(latitude===void 0)&& (latitude=0);
			(longitude===void 0)&& (longitude=0);
			(altitude===void 0)&& (altitude=0);
			(hAccuracy===void 0)&& (hAccuracy=0);
			(vAccuracy===void 0)&& (vAccuracy=0);
			(speed===void 0)&& (speed=0);
			(heading===void 0)&& (heading=0);
			(timestamp===void 0)&& (timestamp=0);
			GeolocationEvent.__super.call(this,type,bubbles,cancelable,null);
			this.latitude=latitude;
			this.longitude=longitude;
			this.altitude=altitude;
			this.horizontalAccuracy=hAccuracy;
			this.verticalAccuracy=vAccuracy;
			this.speed=speed;
			this.heading=heading;
			this.timestamp=timestamp;
		}

		__class(GeolocationEvent,'iflash.events.GeolocationEvent',false,_super);
		var __proto=GeolocationEvent.prototype;
		__getset(0,__proto,'altitude',function(){
			return this._altitude;
			},function(value){
			this._altitude=value;
		});

		__getset(0,__proto,'speed',function(){
			return this._speed;
			},function(value){
			this._speed=value;
		});

		__getset(0,__proto,'heading',function(){
			return this._heading;
			},function(value){
			this._heading=value;
		});

		__getset(0,__proto,'horizontalAccuracy',function(){
			return this._horizontalAccuracy;
			},function(value){
			this._horizontalAccuracy=value;
		});

		__getset(0,__proto,'latitude',function(){
			return this._latitude;
			},function(value){
			this._latitude=value;
		});

		__getset(0,__proto,'timestamp',function(){
			return this._timestamp;
			},function(value){
			this._timestamp=value;
		});

		__getset(0,__proto,'longitude',function(){
			return this._longitude;
			},function(value){
			this._longitude=value;
		});

		__getset(0,__proto,'verticalAccuracy',function(){
			return this._timestamp;
			},function(value){
			this._verticalAccuracy=value;
		});

		GeolocationEvent.getFromH5Event=function(evt){
			var rst=new GeolocationEvent("update");
			Event.copyFromByObj(rst,evt,GeolocationEvent.NAME_MAP);
			return rst;
		}

		GeolocationEvent.UPDATE="update";
		__static(GeolocationEvent,
		['NAME_MAP',function(){return this.NAME_MAP={
				"latitude":"latitude",
				"longitude":"longitude",
				"altitude":"altitude",
				"speed":"speed",
				"horizontalAccuracy":"accuracy",
				"verticalAccuracy":"altitudeAccuracy",
				"heading":"heading"
		};}

		]);
		return GeolocationEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/gestureevent.as
	//class iflash.events.GestureEvent extends iflash.events.Event
	var GestureEvent=(function(_super){
		function GestureEvent(type,bubbles,cancelable,phase,localX,localY,ctrlKey,altKey,shiftKey,commandKey,controlKey,_d){
			this.altKey=false;
			this.controlKey=false;
			this.ctrlKey=false;
			this.commandKey=false;
			this.shiftKey=false;
			this.localX=0;
			this.localY=0;
			this.phase=null;
			this.__stageX__=0;
			this.__stageY__=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(localX===void 0)&& (localX=0);
			(localY===void 0)&& (localY=0);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(commandKey===void 0)&& (commandKey=false);
			(controlKey===void 0)&& (controlKey=false);
			GestureEvent.__super.call(this,type,bubbles,cancelable,_d);
			this.altKey=altKey;
			this.controlKey=controlKey;
			this.ctrlKey=ctrlKey;
			this.commandKey=commandKey;
			this.shiftKey=shiftKey;
			this.localX=localX;
			this.localY=localY;
			this.phase=phase;
		}

		__class(GestureEvent,'iflash.events.GestureEvent',false,_super);
		var __proto=GestureEvent.prototype;
		__proto.toMouseEvent=function(){
			_super.prototype.toMouseEvent.call(this);
			Event.__helpMouseEvt__.type=/*iflash.events.MouseEvent.CLICK*/"click";
			Event.__helpMouseEvt__.bubbles=this.bubbles;
			Event.__helpMouseEvt__.cancelable=this.cancelable;
			Event.__helpMouseEvt__.relatedObject=null;
			Event.__helpMouseEvt__.mCtrlKey=this.ctrlKey;
			Event.__helpMouseEvt__.mAltKey=this.altKey;
			Event.__helpMouseEvt__.mShiftKey=this.shiftKey;
			Event.__helpMouseEvt__.buttonDown=false;
			Event.__helpMouseEvt__._lytarget=this._lytarget;
			Event.__helpMouseEvt__.lyData=this.lyData;
			Event.__helpMouseEvt__._type_=this._type_;
			return Event.__helpMouseEvt__;
		}

		__proto.updateAfterEvent=function(){}
		__getset(0,__proto,'stageX',function(){
			return this.__stageX__;
		});

		__getset(0,__proto,'stageY',function(){
			return this.__stageY__;
		});

		GestureEvent.getGestureEvent=function(){
			if(GestureEvent._gestrueEvt==null)
				GestureEvent._gestrueEvt=new GestureEvent("gestureTwoFingerTap",true,false,/*iflash.events.GesturePhase.END*/"end");
			return GestureEvent._gestrueEvt;
		}

		GestureEvent.GESTURE_TWO_FINGER_TAP="gestureTwoFingerTap";
		GestureEvent._gestrueEvt=null
		return GestureEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/httpstatusevent.as
	//class iflash.events.HTTPStatusEvent extends iflash.events.Event
	var HTTPStatusEvent=(function(_super){
		function HTTPStatusEvent(type,bubbles,cancelable,_d){
			this.m_responseHeaders=null;
			this.m_responseURL=null;
			this.m_status=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			HTTPStatusEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(HTTPStatusEvent,'iflash.events.HTTPStatusEvent',false,_super);
		var __proto=HTTPStatusEvent.prototype;
		__getset(0,__proto,'responseHeaders',function(){
			return this.m_responseHeaders;
			},function(value){
			this.m_responseHeaders=value;
		});

		__getset(0,__proto,'responseURL',function(){
			return this.m_responseURL;
			},function(value){
			this.m_responseURL=value;
		});

		__getset(0,__proto,'status',function(){
			return this.m_status;
		});

		HTTPStatusEvent.HTTP_RESPONSE_STATUS="httpResponseStatus";
		HTTPStatusEvent.HTTP_STATUS="httpStatus";
		return HTTPStatusEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/keyboardevent.as
	//class iflash.events.KeyboardEvent extends iflash.events.Event
	var KeyboardEvent=(function(_super){
		function KeyboardEvent(type,bubbles,cancelable,charCodeValue,keyCodeValue,keyLocationValue,ctrlKeyValue,altKeyValue,shiftKeyValue){
			this._altKey=false;
			this._charCode=0;
			this._ctrlKey=false;
			this._keyCode=0;
			this._keyLocation=0;
			this._shiftKey=false;
			(bubbles===void 0)&& (bubbles=true);
			(cancelable===void 0)&& (cancelable=false);
			(charCodeValue===void 0)&& (charCodeValue=0);
			(keyCodeValue===void 0)&& (keyCodeValue=0);
			(keyLocationValue===void 0)&& (keyLocationValue=0);
			(ctrlKeyValue===void 0)&& (ctrlKeyValue=false);
			(altKeyValue===void 0)&& (altKeyValue=false);
			(shiftKeyValue===void 0)&& (shiftKeyValue=false);
			KeyboardEvent.__super.call(this,type,bubbles,cancelable);
		}

		__class(KeyboardEvent,'iflash.events.KeyboardEvent',false,_super);
		var __proto=KeyboardEvent.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__proto.updateAfterEvent=LAYAFNVOID/*function(){}*/
		__proto.changeEvent=function(e){
			this._currentTarget_=e._currentTarget_;
			this.keyCode=e.keyCode;
			this._type_=e._type_;
			this._lytarget=e._lytarget;
			this.cancelable=e.cancelable;
			this.charCode=e.charCode;
			this.ctrlKey=e.ctrlKey;
			this.altKey=e.altKey;
			this.shiftKey=e.shiftKey;
		}

		__getset(0,__proto,'altKey',function(){
			return this._altKey;
			},function(value){
			this._altKey=value;
		});

		__getset(0,__proto,'charCode',function(){
			return this._charCode;
			},function(value){
			this._charCode=value;
		});

		__getset(0,__proto,'ctrlKey',function(){
			return this._ctrlKey;
			},function(value){
			this._ctrlKey=value;
		});

		__getset(0,__proto,'keyLocation',function(){
			return this._keyLocation;
			},function(value){
			this._keyLocation=value;
		});

		__getset(0,__proto,'keyCode',function(){
			return this._keyCode;
			},function(value){
			this._keyCode=value;
		});

		__getset(0,__proto,'shiftKey',function(){
			return this._shiftKey;
			},function(value){
			this._shiftKey=value;
		});

		KeyboardEvent.KEY_DOWN="keyDown";
		KeyboardEvent.KEY_UP="keyUp";
		return KeyboardEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/mouseevent.as
	//class iflash.events.MouseEvent extends iflash.events.Event
	var MouseEvent=(function(_super){
		function MouseEvent(type,bubbles,cancelable,localX,localY,relatedObject,ctrlKey,altKey,shiftKey,buttonDown,delta){
			this.mShiftKey=false;
			this.mCtrlKey=false;
			this._buttonDown=false;
			this._timestamp_=NaN;
			this.mAltKey=false;
			this.relatedObject=null;
			this._localX=0;
			this._localY=0;
			this._delta=0;
			this.nativeEvent=null;
			this.touchEvent=null;
			this.clientX=NaN;
			this.clientY=NaN;
			this.offsetX=NaN;
			this.offsetY=NaN;
			this.button=0;
			(bubbles===void 0)&& (bubbles=true);
			(cancelable===void 0)&& (cancelable=false);
			(localX===void 0)&& (localX=NaN);
			(localY===void 0)&& (localY=NaN);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(buttonDown===void 0)&& (buttonDown=false);
			(delta===void 0)&& (delta=0);
			MouseEvent.__super.call(this,type,bubbles);
			this._timestamp_=-1.0;
			this.mShiftKey=shiftKey;
			this.mCtrlKey=ctrlKey;
			this.mAltKey=altKey;
			this._buttonDown=buttonDown;
			this.relatedObject=relatedObject;
			this._localX=localX;
			this._localY=localY;
			this.delta=delta;
		}

		__class(MouseEvent,'iflash.events.MouseEvent',false,_super);
		var __proto=MouseEvent.prototype;
		__proto.getTouches=function(target,phase,result){
			if (result==null)result=/*new vector.<>*/[];
			var allTouches=this.lyData;
			var numTouches=allTouches.length;
			for (var i=0;i<numTouches;++i){
				var touch=allTouches [i];
				var correctTarget=touch.isTouching(target);
				var correctPhase=(phase==null || phase==touch._phase_);
				if (correctTarget && correctPhase)result[result.length]=touch;
			}
			return result;
		}

		__proto.getTouch=function(target,phase,id){
			(id===void 0)&& (id=-1);
			this.getTouches(target,phase,MouseEvent.sTouches);
			var numTouches=MouseEvent.sTouches.length;
			if (numTouches > 0){
				var touch=null;
				if (id < 0)touch=MouseEvent.sTouches[0];
				else{
					for (var i=0;i<numTouches;++i)
					if (MouseEvent.sTouches[i].id==id){touch=MouseEvent.sTouches[i];break ;}
						}
				MouseEvent.sTouches.length=0;
				return touch;
			}
			else return null;
		}

		__proto.interactsWith=function(target){
			var result=false;
			this.getTouches(target,null,MouseEvent.sTouches);
			for (var i=MouseEvent.sTouches.length-1;i>=0;--i)
			{if (MouseEvent.sTouches[i]._phase_ !=/*iflash.events.TouchPhase.ENDED*/"ended"){result=true;break ;}}
			MouseEvent.sTouches.length=0;
			return result;
		}

		__proto.updateAfterEvent=LAYAFNVOID/*function(){}*/
		__proto.toMouseEvent=function(){
			return this;
		}

		__proto.clone=function(){
			var e=new MouseEvent(this.type,this.bubbles,this.cancelable,this.localX,this.localY,null,this.ctrlKey,this.altKey,this.shiftKey,this.buttonDown,this.delta);
			e.clientX=this.clientX;
			e.clientY=this.clientY;
			e.offsetX=this.offsetX;
			e.offsetY=this.offsetY;
			e._localX=this._localX;
			e._localY=this._localY;
			e.nativeEvent=this.nativeEvent;
			e.touchEvent=this.touchEvent;
			return e;
		}

		__proto.destory=function(){
			this.nativeEvent=null;
			this._lyData=null;
			this._lytarget=null;
			this.touchEvent=null;
			this.relatedObject=null;
			_super.prototype.destory.call(this);
		}

		__getset(0,__proto,'stageX',function(){
			return EventManager._stageX;
		});

		__getset(0,__proto,'stageY',function(){
			return EventManager._stageY;
		});

		__getset(0,__proto,'localY',function(){
			if(this._lytarget==null){
				return this._localY;
			}
			return this._lytarget.mouseY;
		});

		__getset(0,__proto,'localX',function(){
			if(this._lytarget==null){
				return this._localX;
			}
			return this._lytarget.mouseX;
		});

		__getset(0,__proto,'buttonDown',function(){
			return this._buttonDown;
			},function(value){
			this._buttonDown=value;
		});

		__getset(0,__proto,'delta',function(){
			return this._delta;
			},function(value){
			this._delta=value;
		});

		__getset(0,__proto,'lyData',_super.prototype._$get_lyData,function(value){
			_super.prototype._$set_lyData.call(this,value);
			if(!value)return;
			var numTouches=this._lyData.length;
			for (var i=0;i<numTouches;++i)
			if (this._lyData[i]._timestamp_ > this._timestamp_)
				this._timestamp_=this._lyData[i]._timestamp_;
		});

		__getset(0,__proto,'shiftKey',function(){return this.mShiftKey;});
		__getset(0,__proto,'touches',function(){return (this.lyData).concat();});
		__getset(0,__proto,'timestamp',function(){return this._timestamp_;});
		__getset(0,__proto,'altKey',function(){return this.mAltKey;});
		__getset(0,__proto,'ctrlKey',function(){return this.mCtrlKey;});
		MouseEvent.getSignType=function(type){
			type=type.toLowerCase();
			if(type=="mouseOver" || type===/*iflash.events.TouchEvent.TOUCH_OVER*/"touchOver"){
				return "mouseOver";
			}
			else if(type=="mouseOut" || type===/*iflash.events.TouchEvent.TOUCH_OUT*/"touchOut"){
				return "mouseOut";
			}
			else if(type=="mouseDown" || type===/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin"){
				return "mouseDown";
			}
			else if(type=="mouseUp" || type===/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd"){
				return "mouseUp";
			}
			else if(type=="click" || type===/*iflash.events.TouchEvent.TOUCH_TAP*/"touchTap"){
				return "click";
			}
			else if(type=="mouseMove" || type===/*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove"){
				return "mouseMove";
			}
			else if(type=="rollOut" || type===/*iflash.events.TouchEvent.TOUCH_ROLL_OUT*/"touchRollOut"){
				return "rollOut";
			}
			else if(type=="rollOver" || type===/*iflash.events.TouchEvent.TOUCH_ROLL_OVER*/"touchRollOver"){
				return "rollOver";
			}
			return type;
		}

		MouseEvent.copyFromSysEvent=function(e){
			var event=new MouseEvent(iflash.events.MouseEvent.SYS_MOUSE_INPUT_MAP[e.type],e.bubbles,e.cancelable,NaN,NaN,null,e.ctrlKey,e.altKey,e.shiftKey,e.buttons!=0,0);
			event.button=e.button||0;
			if(e["delta"] !=undefined){
				event.delta=e.delta;
			}
			else{
				event.delta=e.wheelDeltaY?e.wheelDeltaY/40:0;
			}
			event.nativeEvent=e;
			return event;
		}

		MouseEvent.CLICK="click";
		MouseEvent.DOUBLE_CLICK="doubleClick";
		MouseEvent.MOUSE_DOWN="mouseDown";
		MouseEvent.MOUSE_MOVE="mouseMove";
		MouseEvent.MOUSE_OUT="mouseOut";
		MouseEvent.MOUSE_OVER="mouseOver";
		MouseEvent.MOUSE_UP="mouseUp";
		MouseEvent.MOUSE_WHEEL="mouseWheel";
		MouseEvent.ROLL_OUT="rollOut";
		MouseEvent.ROLL_OVER="rollOver";
		MouseEvent.MIDDLE_CLICK="middleClick";
		MouseEvent.MIDDLE_MOUSE_DOWN="middleMouseDown";
		MouseEvent.MIDDLE_MOUSE_UP="middleMouseUp";
		MouseEvent.RIGHT_CLICK="rightClick";
		MouseEvent.RIGHT_MOUSE_DOWN="rightMouseDown";
		MouseEvent.RIGHT_MOUSE_UP="rightMouseUp";
		MouseEvent.FOCUS="focus";
		MouseEvent.BLUR="blur";
		MouseEvent.MOUSE_DRAG="drag";
		MouseEvent.MOUSE_DRAG_START="dragstart";
		MouseEvent.MOUSE_DRAG_END="dragend";
		__static(MouseEvent,
		['SYS_MOUSE_INPUT_MAP',function(){return this.SYS_MOUSE_INPUT_MAP={
				"mousedown":"mouseDown",
				"mouseup":"mouseUp",
				"mousemove":"mouseMove",
				"mousewheel":"mouseWheel"
		};},'sTouches',function(){return this.sTouches=/*new vector.<>*/[];}

		]);
		return MouseEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/netstatusevent.as
	//class iflash.events.NetStatusEvent extends iflash.events.Event
	var NetStatusEvent=(function(_super){
		function NetStatusEvent(type,bubbles,cancelable,info){
			this.info=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			this.info=info;
			NetStatusEvent.__super.call(this,type,bubbles,cancelable);
		}

		__class(NetStatusEvent,'iflash.events.NetStatusEvent',false,_super);
		NetStatusEvent.NET_STATUS="netStatus";
		return NetStatusEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/progressevent.as
	//class iflash.events.ProgressEvent extends iflash.events.Event
	var ProgressEvent=(function(_super){
		function ProgressEvent(type,bubbles,cancelable,bytesLoaded,bytesTotal){
			this._bytesLoaded=NaN;
			this._bytesTotal=NaN;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(bytesLoaded===void 0)&& (bytesLoaded=0);
			(bytesTotal===void 0)&& (bytesTotal=0);
			ProgressEvent.__super.call(this,type,bubbles,cancelable);
			this._bytesLoaded=bytesLoaded;
			this._bytesTotal=bytesTotal;
		}

		__class(ProgressEvent,'iflash.events.ProgressEvent',false,_super);
		var __proto=ProgressEvent.prototype;
		__getset(0,__proto,'bytesLoaded',function(){
			return this._bytesLoaded;
			},function(value){
			this._bytesLoaded=value;
		});

		__getset(0,__proto,'bytesTotal',function(){
			return this._bytesTotal;
			},function(value){
			this._bytesTotal=value;
		});

		ProgressEvent.PROGRESS="progress";
		ProgressEvent.SOCKET_DATA="socketData";
		return ProgressEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/sampledataevent.as
	//class iflash.events.SampleDataEvent extends iflash.events.Event
	var SampleDataEvent=(function(_super){
		function SampleDataEvent(type,bubbles,cancelable,theposition,thedata){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(theposition===void 0)&& (theposition=0);
			SampleDataEvent.__super.call(this,type,bubbles);
		}

		__class(SampleDataEvent,'iflash.events.SampleDataEvent',false,_super);
		var __proto=SampleDataEvent.prototype;
		__getset(0,__proto,'data',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(thedata){}*/);
		__getset(0,__proto,'position',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(theposition){}*/);
		SampleDataEvent.SAMPLE_DATA="sampleData";
		return SampleDataEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/shaderevent.as
	//class iflash.events.ShaderEvent extends iflash.events.Event
	var ShaderEvent=(function(_super){
		function ShaderEvent(type,bubbles,cancelable,bitmap,array,vector){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			ShaderEvent.__super.call(this,type);
		}

		__class(ShaderEvent,'iflash.events.ShaderEvent',false,_super);
		var __proto=ShaderEvent.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'bitmapData',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(bmpData){}*/);
		__getset(0,__proto,'byteArray',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(bArray){}*/);
		__getset(0,__proto,'vector',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(v){}*/);
		ShaderEvent.COMPLETE="complete";
		return ShaderEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/stageorientationevent.as
	//class iflash.events.StageOrientationEvent extends iflash.events.Event
	var StageOrientationEvent=(function(_super){
		function StageOrientationEvent(type,bubbles,cancelable,beforeOrientation,afterOrientation){
			this.beforeOrientation=null;
			this.afterOrientation=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			this.beforeOrientation=beforeOrientation;
			this.afterOrientation=afterOrientation;
			StageOrientationEvent.__super.call(this,type,bubbles,cancelable,null);
		}

		__class(StageOrientationEvent,'iflash.events.StageOrientationEvent',false,_super);
		StageOrientationEvent.ORIENTATION_CHANGE="orientationChange";
		StageOrientationEvent.ORIENTATION_CHANGING="orientationChanging";
		return StageOrientationEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/statusevent.as
	//class iflash.events.StatusEvent extends iflash.events.Event
	var StatusEvent=(function(_super){
		function StatusEvent(type,bubbles,cancelable,code,level){
			this._code=null;
			this._level=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(level===void 0)&& (level="");
			StatusEvent.__super.call(this,type,bubbles,cancelable);
			this._code=code;
			this._level=level;
		}

		__class(StatusEvent,'iflash.events.StatusEvent',false,_super);
		var __proto=StatusEvent.prototype;
		__getset(0,__proto,'code',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'level',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		StatusEvent.STATUS="status";
		return StatusEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/syncevent.as
	//class iflash.events.SyncEvent extends iflash.events.Event
	var SyncEvent=(function(_super){
		function SyncEvent(type,bubbles,cancelable,_d){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			SyncEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(SyncEvent,'iflash.events.SyncEvent',false,_super);
		var __proto=SyncEvent.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'changeList',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		SyncEvent.SYNC="sync";
		return SyncEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/throttleevent.as
	//class iflash.events.ThrottleEvent extends iflash.events.Event
	var ThrottleEvent=(function(_super){
		function ThrottleEvent(type,bubbles,cancelable,state,targetFrameRate){
			this._targetFrameRate=0.0
			this._state=/*iflash.events.ThrottleType.RESUME*/"resume";
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(targetFrameRate===void 0)&& (targetFrameRate=0);
			ThrottleEvent.__super.call(this,type,bubbles,cancelable);
			this._state=state;
			this._targetFrameRate=targetFrameRate;
		}

		__class(ThrottleEvent,'iflash.events.ThrottleEvent',false,_super);
		var __proto=ThrottleEvent.prototype;
		__proto.clone=function(){
			return new ThrottleEvent(/*iflash.events.ThrottleType.THROTTLE*/"throttle")
		}

		__getset(0,__proto,'state',function(){
			return this._state;
		});

		__getset(0,__proto,'targetFrameRate',function(){
			if (this._state==/*iflash.events.ThrottleType.PAUSE*/"pause")
				return 0.0
			else if (this._state==/*iflash.events.ThrottleType.THROTTLE*/"throttle")
			return 2.0;
			else
			return this._targetFrameRate
		});

		ThrottleEvent.THROTTLE="throttle";
		return ThrottleEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/timerevent.as
	//class iflash.events.TimerEvent extends iflash.events.Event
	var TimerEvent=(function(_super){
		function TimerEvent(type,bubbles,cancelable){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			TimerEvent.__super.call(this,type,bubbles,cancelable);
		}

		__class(TimerEvent,'iflash.events.TimerEvent',false,_super);
		var __proto=TimerEvent.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null;}*/
		__proto.updateAfterEvent=LAYAFNVOID/*function(){}*/
		TimerEvent.TIMER="timer";
		TimerEvent.TIMER_COMPLETE="timerComplete";
		return TimerEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/touchevent.as
	//class iflash.events.TouchEvent extends iflash.events.Event
	var TouchEvent=(function(_super){
		function TouchEvent(type,bubbles,cancelable,touchPointID,isPrimaryTouchPoint,localX,localY,sizeX,sizeY,pressure,relatedObject,ctrlKey,altKey,shiftKey,commandKey,controlKey,timestamp,touchIntent,samples,isTouchPointCanceled,_d){
			this.altKey=false;
			this.commandKey=false;
			this.controlKey=false;
			this.ctrlKey=false;
			this.shiftKey=false;
			this.isPrimaryTouchPoint=false;
			this.timestamp=0;
			this.touchIntent=null;
			this.samples=null;
			this.isTouchPointCanceled=false;
			this._localX=0.0;
			this._localY=0.0;
			this.sizeX=0.0;
			this.sizeY=0.0;
			this.pressure=0.0;
			this.touchPointID=0;
			this.relatedObject=null;
			(bubbles===void 0)&& (bubbles=true);
			(cancelable===void 0)&& (cancelable=false);
			(touchPointID===void 0)&& (touchPointID=0);
			(isPrimaryTouchPoint===void 0)&& (isPrimaryTouchPoint=false);
			(localX===void 0)&& (localX=NaN);
			(localY===void 0)&& (localY=NaN);
			(sizeX===void 0)&& (sizeX=NaN);
			(sizeY===void 0)&& (sizeY=NaN);
			(pressure===void 0)&& (pressure=NaN);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(commandKey===void 0)&& (commandKey=false);
			(controlKey===void 0)&& (controlKey=false);
			(timestamp===void 0)&& (timestamp=NaN);
			(touchIntent===void 0)&& (touchIntent="unknown");
			(isTouchPointCanceled===void 0)&& (isTouchPointCanceled=false);
			TouchEvent.__super.call(this,type,bubbles,cancelable,_d);
			this.touchPointID=touchPointID;
			this.isPrimaryTouchPoint=isPrimaryTouchPoint;
			this._localX=localX;
			this._localY=localY;
			this.sizeX=sizeX;
			this.sizeY=sizeY;
			this.pressure=pressure;
			this.relatedObject=relatedObject;
			this.ctrlKey=ctrlKey;
			this.altKey=altKey;
			this.shiftKey=shiftKey;
			this.commandKey=commandKey;
			this.controlKey=controlKey;
			this.timestamp=timestamp;
			this.touchIntent=touchIntent;
			this.samples=samples;
			this.isTouchPointCanceled=isTouchPointCanceled;
		}

		__class(TouchEvent,'iflash.events.TouchEvent',false,_super);
		var __proto=TouchEvent.prototype;
		__proto.updateAfterEvent=function(){}
		__proto.toMouseEvent=function(){
			_super.prototype.toMouseEvent.call(this);
			Event.__helpMouseEvt__.type=TouchEvent.MOUSE_INPUT_TO_TOUCH_MAP[this.type];
			Event.__helpMouseEvt__.bubbles=this.bubbles;
			Event.__helpMouseEvt__.cancelable=this.cancelable;
			Event.__helpMouseEvt__.relatedObject=this.relatedObject;
			Event.__helpMouseEvt__.mCtrlKey=this.ctrlKey;
			Event.__helpMouseEvt__.mAltKey=this.altKey;
			Event.__helpMouseEvt__.mShiftKey=this.shiftKey;
			Event.__helpMouseEvt__.buttonDown=true;
			Event.__helpMouseEvt__._lytarget=this._lytarget;
			Event.__helpMouseEvt__.lyData=this.lyData;
			Event.__helpMouseEvt__._type_=this._type_;
			Event.__helpMouseEvt__.touchEvent=this;
			return Event.__helpMouseEvt__;
		}

		__proto.clone=function(){
			var tEvt=new TouchEvent(this.type,this.bubbles,this.cancelable,this.touchPointID,this.isPrimaryTouchPoint,this._localX,this._localY
			,this.sizeX,this.sizeY,this.pressure,this.relatedObject,this.ctrlKey,this.altKey,this.shiftKey,this.commandKey
			,this.controlKey,this.timestamp,this.touchIntent,this.samples,this.isTouchPointCanceled,this.lyData);
			return tEvt;
		}

		__proto.destory=function(){
			this.samples=null;
			this.relatedObject=null;
			_super.prototype.destory.call(this);
		}

		__getset(0,__proto,'localY',function(){
			if(this._lytarget){
				this._localY=this._lytarget.mouseY;
			}
			return this._localY;
		});

		__getset(0,__proto,'localX',function(){
			if(this._lytarget){
				this._localX=this._lytarget.mouseX;
			}
			return this._localX;
		});

		__getset(0,__proto,'stageX',function(){
			return EventManager._stageX;
		});

		__getset(0,__proto,'stageY',function(){
			return EventManager._stageY;
		});

		TouchEvent.isTypeMove=function(type){
			return type=="touchmove" || type=="mousemove";
		}

		TouchEvent.isTouchType=function(type){
			return type.indexOf("touch")!=-1;
		}

		TouchEvent.touchSysEvent=function(touchEvent,callbackFunc){
			var len=touchEvent.changedTouches.length;
			var evt,changedTouch=null,touch;
			for(var i=0;i<len;i++){
				changedTouch=touchEvent.changedTouches[i];
				evt=new TouchEvent(iflash.events.TouchEvent.SYS_TOUCH_INPUT_MAP[touchEvent.type],touchEvent.bubbles,touchEvent.cancelable,
				changedTouch.identifier,i==0,0.0,0.0,changedTouch.radiusX,changedTouch.radiusY,changedTouch.force,null,touchEvent.ctrlKey,touchEvent.altKey
				,touchEvent.shiftKey,false,false,touchEvent.timeStamp,"unknown",null,false,null);
				EventManager.clientToStage(changedTouch.clientX,changedTouch.clientY);
				if(callbackFunc!=null)callbackFunc(evt);
			}
		}

		TouchEvent.TOUCH_BEGIN="touchBegin";
		TouchEvent.TOUCH_END="touchEnd";
		TouchEvent.TOUCH_MOVE="touchMove";
		TouchEvent.TOUCH_OUT="touchOut";
		TouchEvent.TOUCH_OVER="touchOver";
		TouchEvent.TOUCH_ROLL_OUT="touchRollOut";
		TouchEvent.TOUCH_ROLL_OVER="touchRollOver";
		TouchEvent.TOUCH_TAP="touchTap";
		__static(TouchEvent,
		['MOUSE_INPUT_TO_TOUCH_MAP',function(){return this.MOUSE_INPUT_TO_TOUCH_MAP={
				"mouseDown":"touchBegin",
				"mouseUp":"touchEnd",
				"mouseMove":"touchMove",
				"mouseOut":"touchOut",
				"mouseOver":"touchOver",
				"rollOut":"touchRollOut",
				"rollOver":"touchRollOver",
				"click":"touchTap",
				"touchBegin":"mouseDown",
				"touchEnd":"mouseUp",
				"touchMove":"mouseMove",
				"touchOut":"mouseOut",
				"touchOver":"mouseOver",
				"touchRollOut":"rollOut",
				"touchRollOver":"rollOver",
				"touchTap":"click"
				};},'SYS_TOUCH_INPUT_MAP',function(){return this.SYS_TOUCH_INPUT_MAP={
				"touchstart":"touchBegin",
				"touchmove":"touchMove",
				"touchend":"touchEnd",
				"touchcancel":"touchEnd"
		};}

		]);
		return TouchEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/timer.as
	//class iflash.utils.Timer extends iflash.events.EventDispatcher
	var Timer=(function(_super){
		function Timer(delay,repeatCount){
			this._timeobj=null;
			this._delay=NaN;
			this._repeatCount=0;
			this._running=false;
			Timer.__super.call(this);
			(repeatCount===void 0)&& (repeatCount=0);
			this.delay=delay;
			this.repeatCount=repeatCount;
			this._running=false;
		}

		__class(Timer,'iflash.utils.Timer',false,_super);
		var __proto=Timer.prototype;
		__proto._ontimer_=function(tm,m,obj){
			this.lyDispatchEvent(new TimerEvent(/*iflash.events.TimerEvent.TIMER*/"timer"));
			if (this.currentCount >=this.repeatCount && this._running==true){
				if (this.repeatCount !=0){
					this._running=false;
					this.lyDispatchEvent(new TimerEvent(/*iflash.events.TimerEvent.TIMER_COMPLETE*/"timerComplete"));
				}
			}
		}

		__proto.reset=function(){
			if (this._timeobj !=null){
				if(this._timeobj.runCount<(this.repeatCount-1))
					this._timeobj.runCount=0;
				else{
					this.stop();
				}
			}
		}

		__proto.start=function(){
			this.stop();
			this._timeobj=this._timeobj || TimerCtrl.__DEFAULT__.addTimer(this,__bind(this,this._ontimer_),this.delay,this.repeatCount);
			this._running=true;
		}

		__proto.stop=function(){
			if (this._timeobj !=null){
				this._timeobj.deleted=true;
				this._timeobj=null;
			}
			this._running=false;
		}

		__getset(0,__proto,'currentCount',function(){
			if(this._timeobj!=null)
				return this._timeobj.runCount+1;
			return 0;
		});

		__getset(0,__proto,'delay',function(){
			return this._delay;
			},function(value){
			this._delay=value;
			this._timeobj && (this._timeobj.delay=value);
		});

		__getset(0,__proto,'repeatCount',function(){
			return this._repeatCount;
			},function(value){
			this._repeatCount=value;
		});

		__getset(0,__proto,'running',function(){
			return this._running;
		});

		Timer.__SPEED__=1;
		__static(Timer,
		['__STARTTIME__',function(){return this.__STARTTIME__=/*__JS__ */Date.now();}
		]);
		return Timer;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/utils/dynamicmethods.as
	//class iflash.laya.utils.DynamicMethods extends iflash.laya.utils.DynamicProperties
	var DynamicMethods=(function(_super){
		function DynamicMethods(_class,fndef,set_get,htmlNeed){
			this.args=null;
			this.setName=null;
			this.getName=null;
			this.argsClipChr=null;
			(htmlNeed===void 0)&& (htmlNeed=true);
			DynamicMethods.__super.call(this,null,null,set_get,htmlNeed);
			var strs=DynamicMethods._regMethoed.exec(fndef);
			this.setName=this.getName=strs[2];
			if (set_get){
				if ((typeof set_get=='string'))this.setName=this.getName=set_get;
				else {
					this.setName=set_get['set'];
					this.getName=set_get['get'];
				}
			}
			strs[3]=strs[3].replace(DynamicMethods._string_Trim_,'');
			var str=strs[3].split(DynamicMethods._argsClip);
			this.args=[];
			for (var i=0;i < str.length;i++){
				this.args.push(DynamicProperties.__CALCULATORTYPE__[str[i]]);
			}
			_class.prototype["??"+strs[2]]=this;
		}

		__class(DynamicMethods,'iflash.laya.utils.DynamicMethods',false,_super);
		var __proto=DynamicMethods.prototype;
		__proto.setValue=function(obj,data){
			data=data.replace(DynamicMethods._string_Trim_,'');
			var strs=data.split(DynamicMethods._argsClip);
			var max=this.args.length>strs.length?this.args.length:strs.length;
			var min=this.args.length+strs.length-max;
			for (var i=0,sz=min;i < sz;i++)
			strs[i]=this.args[i](strs[i]);
			strs.splice(i,max-min);
			obj[this.setName].apply(obj,strs);
		}

		__proto.getValue=function(obj){
			return obj[this.getName].call(obj);
		}

		__proto.toHTML=LAYAFNFALSE/*function(){return false}*/
		DynamicMethods._regMethoed=new RegExp("(\\s*)([\\w-]+)\\s*[(]\\s*((\\w\\s*)+)[)]");
		DynamicMethods._argsClip=new RegExp("\\s+");
		DynamicMethods._string_Trim_=new RegExp("(^\\s*)|(\\s*$)","g");
		return DynamicMethods;
	})(DynamicProperties)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/errorevent.as
	//class iflash.events.ErrorEvent extends iflash.events.TextEvent
	var ErrorEvent=(function(_super){
		function ErrorEvent(type,bubbles,cancelable,text,id){
			this.m_errorID=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			(id===void 0)&& (id=0);
			ErrorEvent.__super.call(this,type,bubbles,cancelable,text);
			this.m_errorID=id;
		}

		__class(ErrorEvent,'iflash.events.ErrorEvent',false,_super);
		var __proto=ErrorEvent.prototype;
		__proto.clone=function(){
			return new ErrorEvent(this.type,this.bubbles,this.cancelable,this.text,this.m_errorID);
		}

		__proto.toString=function(){
			return this.formatToString("ErrorEvent","type","bubbles","cancelable","eventPhase","text","errorID");
		}

		__getset(0,__proto,'errorID',function(){
			return this.m_errorID;
		});

		ErrorEvent.ERROR="error";
		return ErrorEvent;
	})(TextEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/dataevent.as
	//class iflash.events.DataEvent extends iflash.events.TextEvent
	var DataEvent=(function(_super){
		function DataEvent(type,bubbles,cancelable,data){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(data===void 0)&& (data="");
			DataEvent.__super.call(this,type,bubbles,cancelable);
		}

		__class(DataEvent,'iflash.events.DataEvent',false,_super);
		var __proto=DataEvent.prototype;
		__getset(0,__proto,'data',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		DataEvent.DATA="data";
		DataEvent.UPLOAD_COMPLETE_DATA="uploadCompleteData";
		return DataEvent;
	})(TextEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/fullscreenevent.as
	//class iflash.events.FullScreenEvent extends iflash.events.ActivityEvent
	var FullScreenEvent=(function(_super){
		function FullScreenEvent(type,bubbles,cancelable,activating){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(activating===void 0)&& (activating=false);
			FullScreenEvent.__super.call(this,type,bubbles,cancelable,activating);
		}

		__class(FullScreenEvent,'iflash.events.FullScreenEvent',false,_super);
		var __proto=FullScreenEvent.prototype;
		__getset(0,__proto,'fullScreen',LAYAFNFALSE/*function(){return false}*/);
		FullScreenEvent.FULL_SCREEN="fullScreen";
		return FullScreenEvent;
	})(ActivityEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/imeevent.as
	//class iflash.events.IMEEvent extends iflash.events.TextEvent
	var IMEEvent=(function(_super){
		function IMEEvent(type,bubbles,cancelable,text){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			IMEEvent.__super.call(this,type,bubbles,cancelable,text);
		}

		__class(IMEEvent,'iflash.events.IMEEvent',false,_super);
		var __proto=IMEEvent.prototype;
		__proto.clone=function(){
			return null;
		}

		__getset(0,__proto,'imeClient',function(){
			return null;
			},function(value){;
		});

		IMEEvent.IME_COMPOSITION="imeComposition";
		IMEEvent.IME_START_COMPOSITION="imeStartComposition";
		return IMEEvent;
	})(TextEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/pressandtapgestureevent.as
	//class iflash.events.PressAndTapGestureEvent extends iflash.events.GestureEvent
	var PressAndTapGestureEvent=(function(_super){
		function PressAndTapGestureEvent(type,bubbles,cancelable,phase,localX,localY,ctrlKey,altKey,shiftKey,commandKey,controlKey,_d){
			this.tapLocalX=0;
			this.tapLocalY=0;
			this.tapStageX=0;
			this.tapStageY=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(localX===void 0)&& (localX=0);
			(localY===void 0)&& (localY=0);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(commandKey===void 0)&& (commandKey=false);
			(controlKey===void 0)&& (controlKey=false);
			PressAndTapGestureEvent.__super.call(this,type,bubbles,cancelable,phase,localX,localY,ctrlKey,altKey,shiftKey,commandKey,controlKey,_d);
		}

		__class(PressAndTapGestureEvent,'iflash.events.PressAndTapGestureEvent',false,_super);
		PressAndTapGestureEvent.getInstance=function(){
			if(PressAndTapGestureEvent._instance==null)
				PressAndTapGestureEvent._instance=new PressAndTapGestureEvent(/*CLASS CONST:iflash.events.PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP*/"gesturePressAndTap",true,false,/*iflash.events.GesturePhase.ALL*/"all");
			return PressAndTapGestureEvent._instance;
		}

		PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP="gesturePressAndTap";
		PressAndTapGestureEvent._instance=null
		return PressAndTapGestureEvent;
	})(GestureEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/transformgestureevent.as
	//class iflash.events.TransformGestureEvent extends iflash.events.GestureEvent
	var TransformGestureEvent=(function(_super){
		function TransformGestureEvent(type,bubbles,cancelable,phase,localX,localY,scaleX,scaleY,rotation,offsetX,offsetY,ctrlKey,altKey,shiftKey,commandKey,controlKey,_d){
			this.offsetX=0;
			this.offsetY=0;
			this.rotation=0;
			this.scaleX=0;
			this.scaleY=0;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(localX===void 0)&& (localX=0);
			(localY===void 0)&& (localY=0);
			(scaleX===void 0)&& (scaleX=1);
			(scaleY===void 0)&& (scaleY=1);
			(rotation===void 0)&& (rotation=0);
			(offsetX===void 0)&& (offsetX=0);
			(offsetY===void 0)&& (offsetY=0);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			(commandKey===void 0)&& (commandKey=false);
			(controlKey===void 0)&& (controlKey=false);
			TransformGestureEvent.__super.call(this,type,bubbles,cancelable,phase,localX,localY,ctrlKey,altKey,shiftKey,commandKey,controlKey,_d);
			this.offsetX=offsetX;
			this.offsetY=offsetY;
			this.rotation=rotation;
			this.scaleX=scaleX;
			this.scaleY=scaleY;
		}

		__class(TransformGestureEvent,'iflash.events.TransformGestureEvent',false,_super);
		var __proto=TransformGestureEvent.prototype;
		__proto.toMouseEvent=function(){
			_super.prototype.toMouseEvent.call(this);
			Event.__helpMouseEvt__.type=/*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove";
			Event.__helpMouseEvt__.buttonDown=true;
			return Event.__helpMouseEvt__;
		}

		TransformGestureEvent.GESTURE_PAN="gesturePan";
		TransformGestureEvent.GESTURE_ROTATE="gestureRotate";
		TransformGestureEvent.GESTURE_SWIPE="gestureSwipe";
		TransformGestureEvent.GESTURE_ZOOM="gestureZoom";
		return TransformGestureEvent;
	})(GestureEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/utils/setintervaltimer.as
	//class iflash.utils.SetIntervalTimer extends iflash.utils.Timer
	var SetIntervalTimer=(function(_super){
		function SetIntervalTimer(closure,delay,repeats,rest){
			this.id=0;
			this.closure=null;
			this.rest=null;
			SetIntervalTimer.__super.call(this,delay,repeats?0:1);
			this.closure=closure;
			this.rest=rest;
			this.addEventListener(repeats? /*iflash.events.TimerEvent.TIMER*/"timer":/*iflash.events.TimerEvent.TIMER_COMPLETE*/"timerComplete",__bind(this,this.onTimer));
			this.start();
			this.id=SetIntervalTimer.intervals.length+1;
			SetIntervalTimer.intervals.push(this);
		}

		__class(SetIntervalTimer,'iflash.utils.SetIntervalTimer',false,_super);
		var __proto=SetIntervalTimer.prototype;
		__proto.onTimer=function(event){
			this.closure.apply(null,this.rest);
			if(this.repeatCount==1){
				if(SetIntervalTimer.intervals[this.id-1]==this){
					delete SetIntervalTimer.intervals[this.id-1];
					true;
				}
			}
		}

		SetIntervalTimer.clearInterval=function(id_to_clear){
			id_to_clear--;
			if(((SetIntervalTimer.intervals[id_to_clear])instanceof iflash.utils.SetIntervalTimer )){
				SetIntervalTimer.intervals[id_to_clear].stop();
				delete SetIntervalTimer.intervals[id_to_clear];
				true;
			}
		}

		SetIntervalTimer.intervals=[];
		return SetIntervalTimer;
	})(Timer)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/asyncerrorevent.as
	//class iflash.events.AsyncErrorEvent extends iflash.events.ErrorEvent
	var AsyncErrorEvent=(function(_super){
		function AsyncErrorEvent(type,bubbles,cancelable,text,error){
			this.error=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			AsyncErrorEvent.__super.call(this,type,bubbles,cancelable,text);
		}

		__class(AsyncErrorEvent,'iflash.events.AsyncErrorEvent',false,_super);
		var __proto=AsyncErrorEvent.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		AsyncErrorEvent.ASYNC_ERROR="asyncError";
		return AsyncErrorEvent;
	})(ErrorEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/ioerrorevent.as
	//class iflash.events.IOErrorEvent extends iflash.events.ErrorEvent
	var IOErrorEvent=(function(_super){
		function IOErrorEvent(type,bubbles,cancelable,text,id){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			(id===void 0)&& (id=0);
			IOErrorEvent.__super.call(this,type,bubbles,cancelable,text,id);
		}

		__class(IOErrorEvent,'iflash.events.IOErrorEvent',false,_super);
		IOErrorEvent.DISK_ERROR="disk_error";
		IOErrorEvent.IO_ERROR="ioError";
		IOErrorEvent.NETWORK_ERROR="network_error";
		IOErrorEvent.VERIFY_ERROR="verify_error";
		return IOErrorEvent;
	})(ErrorEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/securityerrorevent.as
	//class iflash.events.SecurityErrorEvent extends iflash.events.ErrorEvent
	var SecurityErrorEvent=(function(_super){
		function SecurityErrorEvent(type,bubbles,cancelable,text,id){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			(text===void 0)&& (text="");
			(id===void 0)&& (id=0);
			SecurityErrorEvent.__super.call(this,type,bubbles,cancelable,text,id);
		}

		__class(SecurityErrorEvent,'iflash.events.SecurityErrorEvent',false,_super);
		SecurityErrorEvent.SECURITY_ERROR="securityError";
		return SecurityErrorEvent;
	})(ErrorEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/events/uncaughterrorevent.as
	//class iflash.events.UncaughtErrorEvent extends iflash.events.ErrorEvent
	var UncaughtErrorEvent=(function(_super){
		function UncaughtErrorEvent(type,bubbles,cancelable,error_in,id){
			(type===void 0)&& (type="uncaughtError");
			(bubbles===void 0)&& (bubbles=true);
			(cancelable===void 0)&& (cancelable=true);
			(id===void 0)&& (id=0);
			UncaughtErrorEvent.__super.call(this,type,bubbles,cancelable,error_in,id);
		}

		__class(UncaughtErrorEvent,'iflash.events.UncaughtErrorEvent',false,_super);
		var __proto=UncaughtErrorEvent.prototype;
		__getset(0,__proto,'error',LAYAFNSTR/*function(){return ""}*/);
		UncaughtErrorEvent.UNCAUGHT_ERROR="uncaughtError";
		return UncaughtErrorEvent;
	})(ErrorEvent)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/accessibility/accessibilityimplementation.as
	//class iflash.accessibility.AccessibilityImplementation
	var AccessibilityImplementation=(function(){
		function AccessibilityImplementation(){
			this.errno=0;
			this.stub=false;
		}

		__class(AccessibilityImplementation,'iflash.accessibility.AccessibilityImplementation',true);
		var __proto=AccessibilityImplementation.prototype;
		__proto.accDoDefaultAction=LAYAFNVOID/*function(childID){}*/
		__proto.accLocation=LAYAFNNULL/*function(childID){return null}*/
		__proto.accSelect=LAYAFNVOID/*function(operation,childID){}*/
		__proto.get_accDefaultAction=LAYAFNSTR/*function(childID){return ""}*/
		__proto.get_accFocus=LAYAFN0/*function(){return 0}*/
		__proto.get_accName=LAYAFNSTR/*function(childID){return ""}*/
		__proto.get_accRole=LAYAFN0/*function(childID){return 0}*/
		__proto.get_accSelection=LAYAFNARRAY/*function(){return []}*/
		__proto.get_accState=LAYAFN0/*function(childID){return 0}*/
		__proto.get_accValue=LAYAFNSTR/*function(childID){return ""}*/
		__proto.getChildIDArray=LAYAFNARRAY/*function(){return []}*/
		__proto.isLabeledBy=LAYAFNFALSE/*function(labelBounds){return false}*/
		return AccessibilityImplementation;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/bitmapdata.as
	//class iflash.display.BitmapData
	var BitmapData=(function(){
		function BitmapData(w,h,transparent,color){
			this.paint=null;
			this._canvas_=null;
			this._type_=0;
			this._context_=null;
			this._width_=NaN;
			this._height_=NaN;
			this.transparent=false;
			this._url=null;
			this._rect_=new Rectangle();
			(w===void 0)&& (w=0);
			(h===void 0)&& (h=0);
			(transparent===void 0)&& (transparent=true);
			(color===void 0)&& (color=0xFFFFFF);
			this.transparent=transparent;
			this._rect_.x=this._rect_.y=0;
			this._rect_.width=this._width_=w;
			this._rect_.height=this._height_=h;
			this.setType(2);
			if (!this.transparent){
				this._createCMD_();
				this._fillRect_(new Rectangle(0,0,w,h),color);
			}
		}

		__class(BitmapData,'iflash.display.BitmapData',true);
		var __proto=BitmapData.prototype;
		__proto.paintCanvas=function(ctx,x,y,w,h){
			if(ctx.width !=0 && ctx.height !=0 && this._canvas_ && this._canvas_.width !=0 && this._canvas_.height !=0){
				this._canvas_&&ctx.drawImage(this._canvas_,0,0,this._canvas_.width,this._canvas_.height,x,y,w,h);
			}
		}

		__proto.paintCmd=function(ctx,x,y,w,h){
			this._canvas_ && this._canvas_.paint(ctx,x,y,w,h);
		}

		__proto.setType=function(value){
			this._type_=value;
			this.paint=this._type_==1 ? this.paintCanvas:this.paintCmd;
		}

		__proto.clone=function(){
			return this.copyTo(new BitmapData());
		}

		__proto.size=function(w,h){
			this._width_=w;
			this._height_=h;
		}

		__proto.copyTo=function(dec){
			dec._height_=this._height_;
			dec._width_=this._width_;
			dec._rect_=this._rect_.clone();
			this._canvas_&&(dec._canvas_=this._canvas_.clone());
			dec._context_=dec.type==1?dec._canvas_.getContext("2d"):dec._canvas_;
			return dec;
		}

		__proto.initBitmapdata=function(src){
			var __image=Browser.document.createElement("image");
			__image.onload=function (){
				this.setImage(__image);
			};
			__image.src=src;
			if(Laya.RENDERBYCANVAS)DisplayUnit._insertUnit_(this,DrawBitmapData._DEFAULT_);
			return false;
		}

		__proto.destroy=function(){
			this._canvas_=null;
			this._context_=null;
		}

		__proto.setCanvas=function(data){
			this._canvas_=data;
			this._context_=this._canvas_.getContext('2d');
			if(this._width_==0||this._height_==0){
				this._width_=data.width;
				this._height_=data.height;
			}
		}

		__proto.setImage=function(data){
			if(this._width_==0||this._height_==0){
				this._width_=data.width;
				this._height_=data.height;
			}
			if (!this._canvas_){
				if (this._type_==2){
					this._canvas_=new VirtualCanvas();
					this._canvas_.size(this._width_,this._height_);
					this._canvas_.setImage(data);
					this._context_=this._canvas_.getContext("2d");
				}
				else{
					this._canvas_=this._canvas_||Canvas.create();
					this._canvas_.size(this._width_,this._height_);
					this._context_=this._canvas_.getContext("2d");
					this._context_.drawImage(data,0,0);
				}
			}
			else{
				if (this._type_==2)
					this._canvas_.changeImage(data);
				else
				this._context_.drawImage(data,0,0);
			}
		}

		__proto.fillRect=function(rect,color){
			this._createCMD_();
			if(color==0){
				this._context_.clearRect(rect.left,rect.top,rect.width,rect.height);
			}
			else{
				this._fillRect_(rect,color);
			}
		}

		__proto._fillRect_=function(rect,color){
			this._context_.save();
			var s,len=0,str="";
			if(color<=0xffffff){
				s=color.toString(16).toUpperCase();
				len=6-s.length;
				}else {
				var newColor=color % 0x1000000;
				var alpha=Laya.__parseInt(color / 0x1000000+"");
				this._context_.globalAlpha=alpha / 255;
				s=newColor.toString(16);
			}
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s="#"+str+s;
			this._context_.fillStyle=s;
			this._context_.fillRect(rect.left,rect.top,rect.width,rect.height);
			this._context_.restore();
		}

		__proto._createCMD_=function(){
			if (this._canvas_)return this._canvas_;
			this._canvas_=this._type_==2? Browser.document.createElement("virtualBitmap"):Canvas.create();
			this._context_=this.type==1? this._canvas_.getContext("2d"):this._canvas_;
			this._canvas_.size(this.width,this.height);
			return this._canvas_;
		}

		__proto.isOk=function(){
			if (this._canvas_ && this._canvas_.isReady())
				return true;
			return false;
		}

		__proto.setComplete=function(callback){
			this._canvas_.onComplete=callback;
		}

		__proto.draw=function(source,matrix,colorTransform,blendMode,clipRect,smoothing){
			(smoothing===void 0)&& (smoothing=false);
			var tempCanvas;
			if (clipRect==null)clipRect=new Rectangle(0,0,this.width,this.height);
			if(clipRect.right > this.width)
				clipRect.width=this.width-clipRect.x;
			if(clipRect.bottom>this.height)
				clipRect.height=this.height-clipRect.y;
			this._createCMD_();
			if ((source instanceof iflash.display.BitmapData )){
				tempCanvas=source._canvas_;
			}
			else{
				tempCanvas=new VirtualCanvas();
				tempCanvas.size(source.width,source.height);
				source._lyToBody_();
				source.conchPaint(tempCanvas,0,0,true);
			}
			if(this._context_){
				if (matrix){
					this._context_.drawMartixImage(tempCanvas,matrix,clipRect);
				}
				else{
					this._context_.drawImage(tempCanvas,clipRect.x,clipRect.y,clipRect.width,clipRect.height,clipRect.x,clipRect.y,clipRect.width,clipRect.height);
				}
			}
		}

		__proto.scroll=LAYAFNVOID/*function(x,y){}*/
		__proto.dispose=function(){
			this._canvas_=null;
			this._context_=null;
		}

		__proto.isReady=function(){
			return this._canvas_!=null;
		}

		__proto.setPixels=function(rect,inputData,url){
			this._width_=rect.width;
			this._height_=rect.height;
			var imgdata={};
			imgdata.data=inputData;
			imgdata.width=rect.width;
			imgdata.height=rect.height;
			if (Laya.CONCHVER || Laya.FLASHVER){
				var img=Browser.document.createElement('img');
				this.setImage(img);
				img.putImageData(url,imgdata,0,0,null);
			}
			this._url=url;
			return;
		}

		__proto.getPixel=LAYAFN0/*function(x,y){return 0}*/
		__proto.clear=function(){
			this._context_ && this._context_.clearRect(0,0,this._width_,this._height_);
		}

		__proto.copyPixels=function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha){
			(mergeAlpha===void 0)&& (mergeAlpha=false);
			var w=this._width_;
			var h=this._height_;
			destPoint=destPoint || Point.__DEFAULT__;
			var dx=destPoint.x,dy=destPoint.y,sx=sourceRect.left,sy=sourceRect.top,sw=sourceRect.width,sh=sourceRect.height;
			if (dx < 0){
				sx-=dx;sw+=dx;
				dx=0;
			}
			if (dy < 0){
				sy-=dy;sh+=dy;
				dy=0;
			}
			if(sw+dx > this.width)
				sw=this.width-dx;
			if(sh+dy>this.height)
				sh=this.height-dy;
			if (sourceBitmapData.width < sw)
				sw=sourceBitmapData.width;
			else if(sourceBitmapData.height < sh)
			sh=sourceBitmapData.height;
			if (this._canvas_==null){this.size(w||sw,h||sh);this._createCMD_();}
				!mergeAlpha&& this._canvas_.clearRect(dx,dy,sw,sh);
			sourceBitmapData._canvas_&&this._canvas_.drawImage(sourceBitmapData._canvas_,sx,sy,Math.min(sw,this._width_),Math.min(this._height_,sh),dx,dy,Math.min(sw,this._width_),Math.min(this._height_,sh));
		}

		__proto.getPixel32=function(x,y){
			return 0xff9900;;
		}

		__proto.lock=LAYAFNVOID/*function(){}*/
		__proto.unlock=LAYAFNVOID/*function(){}*/
		__proto.setPixel=LAYAFNVOID/*function(x,y,color){}*/
		__proto.getCanvas=function(){
			if (this._type_==1)return this._canvas_;
			else{
				if (this._canvas_.isNormal())
					return this._canvas_.getImage();
				var canvas=Canvas.create();
				canvas.size(this._width_,this._height_);
				var context=canvas.getContext("2d");
				canvas.context=context;
				this.paintCmd(context,0,0,this._width_,this._height_);
				return canvas;
			}
		}

		__proto.getCanvasII=function(){
			if (this._canvas_.isNormal())
				return this._canvas_.getImage();
			else{
				return null;
			}
		}

		__proto.getColorBoundsRect=function(mask,color,findColor){
			(findColor===void 0)&& (findColor=true);
			return this.rect;
		}

		__proto.copyChannel=LAYAFNVOID/*function(sourceBitmapData,sourceRect,destPoint,sourceChannel,destChannel){}*/
		__proto.colorTransform=LAYAFNVOID/*function(rect,colorTransform){}*/
		__proto.applyFilter=LAYAFNVOID/*function(sourceBitmapData,sourceRect,destPoint,filter){}*/
		__proto.setPixel32=LAYAFNVOID/*function(x,y,color){}*/
		__proto.threshold=function(sourceBitmapData,sourceRect,destPoint,operation,threshold,color,mask,copySource){
			(color===void 0)&& (color=0);
			(mask===void 0)&& (mask=0xFFFFFFFF);
			(copySource===void 0)&& (copySource=false);
			return 0}
		__proto.getPixels=LAYAFNNULL/*function(rect){return null}*/
		__proto.histogram=function(hRect){
			return new Array
		}

		__proto.hitTest=function(firstPoint,firstAlphaThreshold,secondObject,secondBitmapDataPoint,secondAlphaThreshold){
			(secondAlphaThreshold===void 0)&& (secondAlphaThreshold=1);
			return false}
		__proto.compare=LAYAFNNULL/*function(otherBitmapData){return null}*/
		__proto.generateFilterRect=LAYAFNNULL/*function(sourceRect,filter){return null}*/
		__getset(0,__proto,'type',function(){
			return this._type_;
		});

		__getset(0,__proto,'width',function(){
			return this._width_;
			},function(w){
			this.size(w,this._height_);
		});

		__getset(0,__proto,'rect',function(){
			this._rect_.width=this._width_;
			this._rect_.height=this._height_;
			return this._rect_;
		});

		__getset(0,__proto,'height',function(){
			return this._height_;
			},function(h){
			this.size(this._width_,h);
		});

		__getset(0,__proto,'url',function(){
			return this._url;
		});

		BitmapData.CANVAS=1;
		BitmapData.CMD=2;
		return BitmapData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/bitmapdatachannel.as
	//class iflash.display.BitmapDataChannel
	var BitmapDataChannel=(function(){
		function BitmapDataChannel(){}
		__class(BitmapDataChannel,'iflash.display.BitmapDataChannel',true);
		BitmapDataChannel.ALPHA=8;
		BitmapDataChannel.BLUE=4;
		BitmapDataChannel.GREEN=2;
		BitmapDataChannel.RED=1;
		return BitmapDataChannel;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/blendmode.as
	//class iflash.display.BlendMode
	var BlendMode=(function(){
		function BlendMode(){
			;
		}

		__class(BlendMode,'iflash.display.BlendMode',true);
		BlendMode.NORMAL="normal";
		BlendMode.LAYER="layer";
		BlendMode.MULTIPLY="multiply";
		BlendMode.SCREEN="screen";
		BlendMode.LIGHTEN="lighten";
		BlendMode.DARKEN="darken";
		BlendMode.ADD="add";
		BlendMode.SUBTRACT="subtract";
		BlendMode.DIFFERENCE="difference";
		BlendMode.INVERT="invert";
		BlendMode.OVERLAY="overlay";
		BlendMode.HARDLIGHT="hardlight";
		BlendMode.ALPHA="alpha";
		BlendMode.ERASE="erase";
		BlendMode.SHADER="shader";
		return BlendMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/capsstyle.as
	//class iflash.display.CapsStyle
	var CapsStyle=(function(){
		function CapsStyle(){}
		__class(CapsStyle,'iflash.display.CapsStyle',true);
		CapsStyle.ROUND="round";
		CapsStyle.NONE="none";
		CapsStyle.SQUARE="square";
		return CapsStyle;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/framelabel.as
	//class iflash.display.FrameLabel
	var FrameLabel=(function(){
		function FrameLabel(){
			this.frame=0;
			this.name=null;
		}

		__class(FrameLabel,'iflash.display.FrameLabel',true);
		return FrameLabel;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/gradienttype.as
	//class iflash.display.GradientType
	var GradientType=(function(){
		function GradientType(){}
		__class(GradientType,'iflash.display.GradientType',true);
		GradientType.LINEAR="linear";
		GradientType.RADIAL="radial";
		return GradientType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphics.as
	//class iflash.display.Graphics
	var Graphics=(function(){
		function Graphics(ower){
			this.ower=null;
			this._canvas_=null;
			this._context_=null;
			this._rendercomds_=[];
			this._rendercomdsOffset_=0;
			this.width=0;
			this.height=0;
			this.bitmapFlag=false;
			this.x=0;
			this.y=0;
			this._rectArea=null;
			this.isFill=false;
			this._oddeven=0;
			this._beginPos=null;
			this.prefill=null;
			this.isDrawGraphic=false;
			this.lythickness=0;
			this.lystorkeStyle=false;
			this.lystroke=false;
			this.isMoveto=false;
			this._minX=0;
			this._minY=0;
			this._maxX=0;
			this._maxY=0;
			this._lastX=0;
			this._lastY=0;
			this._helprec=new Rectangle();
			this._pointMove=new Point();
			this.ower=ower;
			this._createCanvas_();
		}

		__class(Graphics,'iflash.display.Graphics',true);
		var __proto=Graphics.prototype;
		__proto._createCanvas_=function(){
			if(!this._canvas_){
				this._canvas_=new VirtualCanvas();
				this._context_=this._canvas_.getContext("2d");
				this._rectArea=new Rectangle();
			}
		}

		__proto.hasUse=function(){
			return this._rendercomds_.length > 0;
		}

		__proto._expandSize_=function(rect){
			if(!this._rectArea){
				this._rectArea=rect.clone();
			}
			else{
				this._rectArea=this._rectArea.union(rect);
			}
			this.width=Math.max(this.width,this._rectArea.width+this.lythickness);
			this.height=Math.max(this.height,this._rectArea.height+this.lythickness);
			this.ower._height_=this.height;
			this.ower._width_=this.width;
			this.x=this._rectArea.x;
			this.y=this._rectArea.y;
			this._canvas_.size(this.width,this.height);
		}

		__proto.isReady=function(){
			return this._canvas_&&((this.width>0&&this.height>0)||this.lystroke);
		}

		__proto.beginBitmapFill=function(bitmap,matrix,repeat,smooth){
			(repeat===void 0)&& (repeat=true);
			(smooth===void 0)&& (smooth=false);
			this._rendercomds_.push([null,3,[bitmap,matrix,repeat,smooth]]);
			this.bitmapFlag=true;
		}

		__proto.beginFill=function(color,alpha){
			(alpha===void 0)&& (alpha=1);
			this._oddeven=0;
			this.isFill=true;
			var s=color.toString(16).toUpperCase();
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			};
			var al
			al=(Laya.__parseInt(alpha*0xff+"")).toString(16);
			if(al.length<2){
				al="0"+al;
			}
			s=str+s;
			var r=color>>16;
			var g=(color&0x00ff00)>>8;
			var b=color&0x0000ff;
			var fillStyle='rgba('+r+','+g+','+b+','+alpha+')';
			if (Laya.CONCHVER)fillStyle="#"+al+s;
			this._context_.fillStyle=fillStyle;
			this.bitmapFlag=false;
		}

		__proto.beginGradientFill=function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio){
			(spreadMethod===void 0)&& (spreadMethod="pad");
			(interpolationMethod===void 0)&& (interpolationMethod="rgb");
			(focalPointRatio===void 0)&& (focalPointRatio=0);
		}

		__proto.beginShaderFill=LAYAFNVOID/*function(shader,matrix){}*/
		__proto.clear=function(){
			this.width=this.height=this.x=this.y=0;
			this.lystroke=this.isFill=false;
			this.lystorkeStyle=false;
			this._rectArea=null;
			this.lythickness=0;
			this._context_.globalCompositeOperation="source-over";
			this._oddeven=0;
			this._minX=0;
			this._minY=0;
			this._maxX=0;
			this._maxY=0;
			this.isMoveto=false;
			this._rendercomds_.length=0;
			this._rendercomdsOffset_=0;
			this._canvas_&&this._canvas_.clearRect(0,0,this._canvas_.width,this._canvas_.height);
		}

		__proto.copyFrom=LAYAFNVOID/*function(sourceGraphics){}*/
		__proto.cubicCurveTo=function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY){
			this.setxy(controlX1,controlY1);
			this._addplug_();
			this._context_.bezierCurveTo(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY);
			if (this.lystorkeStyle)this._context_.stroke();
			if (this.isFill)this._context_.fill();
		}

		__proto.curveTo=function(controlX,controlY,anchorX,anchorY){
			this._addplug_()
			this.setxy(controlX,controlY);
			this._context_.quadraticCurveTo(controlX,controlY,anchorX,anchorY);
			if (this.isFill)this._context_.fill();
			this._context_.stroke();
		}

		__proto.drawCircle=function(x,y,r){
			this._oddeven++;
			var w=x+r;
			var h=y+r;
			this._addplug_();
			this.setxy(x-r,y-r);
			this._helprec.x=x-r;
			this._helprec.y=y-r;
			this._helprec.width=this._helprec.height=r*2;
			this._expandSize_(this._helprec);
			this._context_.beginPath();
			this._context_.arc(x,y,r,0,Math.PI *2,true);
			this._context_.closePath();
			if (this.isFill)this._context_.fill();
			if (this.lystorkeStyle)this._context_.stroke();
		}

		__proto.drawEllipse=function(x,y,a,b){
			this._addplug_();
			this.setxy(x,y);
			this._helprec.x=x-a;
			this._helprec.y=y-b;
			this._helprec.width=a;this._helprec.height=b;
			this._expandSize_(this._helprec);
			this._context_.save();
			var r=(a > b)? a :b;
			var ratioX=a / r*0.5;
			var ratioY=b / r*0.5;
			this._context_.scale(ratioX,ratioY);
			this._context_.beginPath();
			this._context_.arc((x+a*0.5)/ ratioX,(y+b*0.5)/ ratioY,r,0,2 *Math.PI,true);
			this._context_.closePath();
			if (this.isFill)this._context_.fill();
			if (this.lystorkeStyle)this._context_.stroke();
			this._context_.restore();
		}

		__proto.drawGraphicsData=LAYAFNVOID/*function(graphicsData){}*/
		__proto.drawPath=function(commands,data,winding){
			(winding===void 0)&& (winding="evenOdd");
		}

		__proto._addplug_=function(){
			if(this._oddeven>1){
				this._context_.globalCompositeOperation="xor";
			}
			if (!this.isDrawGraphic){
				if(Laya.RENDERBYCANVAS)
					DisplayUnit._insertUnit_(this.ower,DrawGraphics._DEFAULT_);
				else{
					this.ower._modle_.vcanvas(this._canvas_);
				}
				this.isDrawGraphic=true;
			}
		}

		__proto.drawRect=function(x,y,w,h){
			this._oddeven++;
			/*__JS__ */x=parseFloat(x);y=parseFloat(y);w=parseFloat(w);h=parseFloat(h);
			this._addplug_();
			this.setxy(x,y);
			!this._beginPos && (this._beginPos=new Point());
			this._beginPos.x=x;
			this._beginPos.y=y;
			this._helprec.x=x;this._helprec.y=y;this._helprec.width=w;this._helprec.height=h;
			this._expandSize_(this._helprec);
			if (!this.bitmapFlag){
				if (this.lystorkeStyle){
					if (this.isFill)this._context_.fillRect(x,y,w,h);
					this._context_.strokeRect(x+0.5,y+0.5,w,h);
				}
				else if(this.isFill)
				this._context_.fillRect(x-1,y-1,w+1,h+1);
				else return;
				this._context_.closePath();
			}
			else{
				if(this._rendercomds_[this._rendercomds_.length-1][1]==3){
					var arr=this._rendercomds_.pop();
					var m=arr[2] [1];
					var bitmapdata=arr[2][0];
					var canvas=bitmapdata.getCanvasII();
					var repeat=arr[2][2];
					if(repeat && m && !m.isTransform()&&canvas&&(bitmapdata.width<w||bitmapdata.height<h))
						this._context_.fillImage(canvas,x,y,w,h);
					else{
						if(m){
							this._context_.drawMartixImage(bitmapdata._canvas_,m,new Rectangle(x,y,w,h));
							}else{
							this._context_.drawImage(bitmapdata._canvas_,x,y,w,h,x,y,w,h);
						}
					}
					this.prefill=[this._context_.drawImage,canvas];
				}
				else if(this.prefill){
					this._context_.drawImage(this.prefill[1],x,y,w,h,x,y,w,h);
				}
			}
			this._context_.globalCompositeOperation="source-over";
		}

		__proto.drawRoundRect=function(x,y,width,height,ellipseWidth,ellipseHeight){
			(ellipseHeight===void 0)&& (ellipseHeight=0);
			this._addplug_();
			this.setxy(x,y);
			ellipseWidth /=2;
			this._context_.beginPath();
			this._context_.moveTo(x+ellipseWidth,y);
			this._context_.arcTo(x+width,y,x+width,y+height,ellipseWidth);
			this._context_.arcTo(x+width,y+height,x,y+height,ellipseWidth);
			this._context_.arcTo(x,y+height,x,y,ellipseWidth);
			this._context_.arcTo(x,y,x+width,y,ellipseWidth);
			if (this.isFill)this._context_.fill();
			if (this.lystorkeStyle)this._context_.stroke();
			this._context_.closePath();
			this._helprec.x=x;this._helprec.y=y;this._helprec.width=width;this._helprec.height=height;
			this._expandSize_(this._helprec);
		}

		__proto.drawRoundRectComplex=LAYAFNVOID/*function(x,y,width,height,topLeftRadius,topRightRadius,bottomLeftRadius,bottomRightRadius){}*/
		__proto.drawTriangles=function(vertices,indices,uvtData,culling){
			(culling===void 0)&& (culling="none");
		}

		__proto.endFill=function(){
			this.lystroke=this.isFill=false;
			this.lystorkeStyle=false;
			this.lythickness=0;
		}

		__proto.setxy=function(x,y){
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
		}

		__proto.lineBitmapStyle=function(bitmap,matrix,repeat,smooth){
			(repeat===void 0)&& (repeat=true);
			(smooth===void 0)&& (smooth=false);
		}

		__proto.lineGradientStyle=function(type,colors,alphas,ratios,matrix,spreadMethod,interpolationMethod,focalPointRatio){
			(spreadMethod===void 0)&& (spreadMethod="pad");
			(interpolationMethod===void 0)&& (interpolationMethod="rgb");
			(focalPointRatio===void 0)&& (focalPointRatio=0);
		}

		__proto.lineShaderStyle=LAYAFNVOID/*function(shader,matrix){}*/
		__proto.lineStyle=function(thickness,color,alpha,pixelHinting,scaleMode,caps,joints,miterLimit){
			(thickness===void 0)&& (thickness=0);
			(color===void 0)&& (color=0);
			(alpha===void 0)&& (alpha=1);
			(pixelHinting===void 0)&& (pixelHinting=false);
			(scaleMode===void 0)&& (scaleMode="normal");
			(miterLimit===void 0)&& (miterLimit=3);
			if(!thickness)return
				this.bitmapFlag=false;
			this.lystorkeStyle=true;
			this.lystroke=true;
			this.lythickness=thickness;
			color=Laya.__parseInt(color+"");
			var s=color.toString(16).toUpperCase();
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s=str+s;
			this._context_.lineWidth=thickness;
			this._context_.strokeStyle="#"+s;
			this._context_.lineCap="round";
			this._context_.lineJoin="round";
			this._context_.globalAlpha=alpha;
		}

		__proto.lineTo=function(x,y){
			if(this.isMoveto==false){
				this.moveTo(0,0);
			}
			this._addplug_();
			this._helprec.width=Math.abs(x-this._pointMove.x);
			this._helprec.height=Math.abs(y-this._pointMove.y);
			this._helprec.x=this._pointMove.x;
			this._helprec.y=this._pointMove.y;
			this._expandSize_(this._helprec);
			this._context_.lineTo(x,y);
			this._context_.stroke();
			if (this.isFill)this._context_.fill();
		}

		__proto.moveTo=function(x,y){
			this._addplug_();
			this.setxy(x,y);
			this.lystroke=true;
			this._pointMove.x=x;
			this._pointMove.y=y;
			this._context_.beginPath();
			this._context_.moveTo(x,y);
			this.isMoveto=true;
		}

		__proto.checkRect=function(x,y,w,h){
			this._minX=Math.min(this._minX,x);
			this._minY=Math.min(this._minY,y);
			this._maxX=Math.max(this._maxX,x+w);
			this._maxY=Math.max(this._maxY,y+h);
		}

		__proto.checkPoint=function(x,y){
			this._minX=Math.min(this._minX,x);
			this._minY=Math.min(this._minY,y);
			this._maxX=Math.max(this._maxX,x);
			this._maxY=Math.max(this._maxY,y);
			this._lastX=x;
			this._lastY=y;
		}

		__proto.getBounds=function(targetSpace){
			return this._getBounds_(targetSpace);
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if(!resultRect)
				resultRect=new Rectangle();
			if(targetSpace==this.ower){
				resultRect.setTo(this.x,this.y,this.width,this.height);
			}
			else{
				var p=targetSpace.globalToLocal(this.ower.localToGlobal(new Point(this.x,this.y)));
				resultRect.setTo(p.x,p.y,this.width,this.height);
			}
			return resultRect;
		}

		__getset(0,__proto,'beginPos',function(){
			return this._beginPos;
		});

		return Graphics;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicsendfill.as
	//class iflash.display.GraphicsEndFill
	var GraphicsEndFill=(function(){
		function GraphicsEndFill(){
			;
		}

		__class(GraphicsEndFill,'iflash.display.GraphicsEndFill',true);
		var __proto=GraphicsEndFill.prototype;
		Laya.imps(__proto,{"iflash.display.IGraphicsFill":true,"iflash.display.IGraphicsData":true})
		return GraphicsEndFill;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicsgradientfill.as
	//class iflash.display.GraphicsGradientFill
	var GraphicsGradientFill=(function(){
		function GraphicsGradientFill(__args){
			this.alphas=null;
			this.colors=null;
			this.focalPointRatio=NaN;
			this.matrix=null;
			this.ratios=null;
		}

		__class(GraphicsGradientFill,'iflash.display.GraphicsGradientFill',true);
		var __proto=GraphicsGradientFill.prototype;
		Laya.imps(__proto,{"iflash.display.IGraphicsFill":true,"iflash.display.IGraphicsData":true})
		__getset(0,__proto,'interpolationMethod',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'spreadMethod',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'type',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return GraphicsGradientFill;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicspath.as
	//class iflash.display.GraphicsPath
	var GraphicsPath=(function(){
		function GraphicsPath(commands,data,winding){
			this.commands=null;
			this.data=null;
			(winding===void 0)&& (winding="evenOdd");
		}

		__class(GraphicsPath,'iflash.display.GraphicsPath',true);
		var __proto=GraphicsPath.prototype;
		Laya.imps(__proto,{"iflash.display.IGraphicsPath":true,"iflash.display.IGraphicsData":true})
		__proto.cubicCurveTo=LAYAFNVOID/*function(controlX1,controlY1,controlX2,controlY2,anchorX,anchorY){}*/
		__proto.curveTo=LAYAFNVOID/*function(controlX,controlY,anchorX,anchorY){}*/
		__proto.lineTo=LAYAFNVOID/*function(x,y){}*/
		__proto.moveTo=LAYAFNVOID/*function(x,y){}*/
		__proto.wideLineTo=LAYAFNVOID/*function(x,y){}*/
		__proto.wideMoveTo=LAYAFNVOID/*function(x,y){}*/
		__getset(0,__proto,'winding',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return GraphicsPath;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicspathcommand.as
	//class iflash.display.GraphicsPathCommand
	var GraphicsPathCommand=(function(){
		function GraphicsPathCommand(){}
		__class(GraphicsPathCommand,'iflash.display.GraphicsPathCommand',true);
		GraphicsPathCommand.CUBIC_CURVE_TO=0;
		GraphicsPathCommand.CURVE_TO=3;
		GraphicsPathCommand.LINE_TO=2;
		GraphicsPathCommand.MOVE_TO=1;
		GraphicsPathCommand.NO_OP=0;
		GraphicsPathCommand.WIDE_LINE_TO=5;
		GraphicsPathCommand.WIDE_MOVE_TO=4;
		return GraphicsPathCommand;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicssolidfill.as
	//class iflash.display.GraphicsSolidFill
	var GraphicsSolidFill=(function(){
		function GraphicsSolidFill(__args){
			this.alpha=NaN;
			this.color=0;
		}

		__class(GraphicsSolidFill,'iflash.display.GraphicsSolidFill',true);
		var __proto=GraphicsSolidFill.prototype;
		Laya.imps(__proto,{"iflash.display.IGraphicsFill":true,"iflash.display.IGraphicsData":true})
		return GraphicsSolidFill;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/graphicsstroke.as
	//class iflash.display.GraphicsStroke
	var GraphicsStroke=(function(){
		function GraphicsStroke(__args){
			this.fill=null;
			this.miterLimit=NaN;
			this.pixelHinting=false;
			this.thickness=NaN;
		}

		__class(GraphicsStroke,'iflash.display.GraphicsStroke',true);
		var __proto=GraphicsStroke.prototype;
		Laya.imps(__proto,{"iflash.display.IGraphicsStroke":true,"iflash.display.IGraphicsData":true})
		__getset(0,__proto,'caps',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'joints',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'scaleMode',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return GraphicsStroke;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/interpolationmethod.as
	//class iflash.display.InterpolationMethod
	var InterpolationMethod=(function(){
		function InterpolationMethod(){}
		__class(InterpolationMethod,'iflash.display.InterpolationMethod',true);
		InterpolationMethod.LINEAR_RGB="linearRGB";
		InterpolationMethod.RGB="rgb";
		return InterpolationMethod;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/jointstyle.as
	//class iflash.display.JointStyle
	var JointStyle=(function(){
		function JointStyle(){
			;
		}

		__class(JointStyle,'iflash.display.JointStyle',true);
		JointStyle.ROUND="round";
		JointStyle.BEVEL="bevel";
		JointStyle.MITER="miter";
		return JointStyle;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/linescalemode.as
	//class iflash.display.LineScaleMode
	var LineScaleMode=(function(){
		function LineScaleMode(){}
		__class(LineScaleMode,'iflash.display.LineScaleMode',true);
		LineScaleMode.HORIZONTAL="horizontal";
		LineScaleMode.NONE="none";
		LineScaleMode.NORMAL="normal";
		LineScaleMode.VERTICAL="vertical";
		return LineScaleMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/pixelsnapping.as
	//class iflash.display.PixelSnapping
	var PixelSnapping=(function(){
		function PixelSnapping(){}
		__class(PixelSnapping,'iflash.display.PixelSnapping',true);
		PixelSnapping.ALWAYS="always";
		PixelSnapping.AUTO="auto";
		PixelSnapping.NEVER="never";
		return PixelSnapping;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/displayunit.as
	//class iflash.display.plug.DisplayUnit
	var DisplayUnit=(function(){
		function DisplayUnit(){
			this.next=null;
			this.pre=null;
		}

		__class(DisplayUnit,'iflash.display.plug.DisplayUnit',true);
		var __proto=DisplayUnit.prototype;
		__proto.clone=LAYAFNNULL/*function(node){return null}*/
		__proto.destroy=LAYAFNVOID/*function(){}*/
		__proto.paint=function(context,x,y,node,w,h){
			if (this.next)this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return-1;
		});

		__getset(0,__proto,'id',function(){
			return-1;
		});

		DisplayUnit._insertUnit_=function(node,tempt){
			if (!Laya.RENDERBYCANVAS)return null;
			if (node._firstDisplayUnit_==null){
				return node._firstDisplayUnit_=tempt.clone(node);
			};
			var _pre=node._firstDisplayUnit_,last;
			var _place=tempt.place,_id=tempt.id;
			do{
				last=_pre;
				if (_pre.id==_id)return _pre;
				if (_pre.place >=_place)
					break ;
				_pre=_pre.next;
			}
			while (_pre);
			if (last.place==_place){
				_pre=tempt.clone(node);
				_pre.pre=last.pre;
				_pre.next=last.next;
				(_pre.pre==null)&& (node._firstDisplayUnit_=_pre);
				last.destroy();
				return _pre;
			}
			if (last.place < _place){
				_pre=last.next;
				last.next=tempt.clone(node);
				last.next.pre=last;
				last.next.next=_pre;
				return last.next;
			}
			_pre=tempt.clone(node);
			last.pre && (last.pre.next=_pre);
			_pre.pre=last.pre;
			_pre.next=last;
			last.pre=_pre;
			(_pre.pre==null)&& (node._firstDisplayUnit_=_pre);
			return _pre;
		}

		DisplayUnit.removeUnit=function(node,unit){
			if (unit.pre)
				unit.pre.next=unit.next;
			if (unit.next)
				unit.next.pre=unit.pre;
			unit.destroy();
		}

		DisplayUnit._DEFAULT_=new DisplayUnit();
		return DisplayUnit;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/scene.as
	//class iflash.display.Scene
	var Scene=(function(){
		function Scene(__a){}
		__class(Scene,'iflash.display.Scene',true);
		var __proto=Scene.prototype;
		__getset(0,__proto,'labels',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'name',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'numFrames',LAYAFN0/*function(){return 0}*/);
		return Scene;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/shader.as
	//class iflash.display.Shader
	var Shader=(function(){
		function Shader(code){
			this._data
			;
			if(code){
				this.byteCode=code;
			}
		}

		__class(Shader,'iflash.display.Shader',true);
		var __proto=Shader.prototype;
		__getset(0,__proto,'byteCode',null,function(code){
			this.data=new ShaderData(code);
		});

		__getset(0,__proto,'data',function(){return this._data},function(value){this._data=value});
		__getset(0,__proto,'precisionHint',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return Shader;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/shaderdata.as
	//class iflash.display.ShaderData
	var ShaderData=(function(){
		function ShaderData(byteCode){
			;
		}

		__class(ShaderData,'iflash.display.ShaderData',true);
		return ShaderData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/spreadmethod.as
	//class iflash.display.SpreadMethod
	var SpreadMethod=(function(){
		function SpreadMethod(){
			;
		}

		__class(SpreadMethod,'iflash.display.SpreadMethod',true);
		SpreadMethod.PAD="pad";
		SpreadMethod.REFLECT="reflect";
		SpreadMethod.REPEAT="repeat";
		return SpreadMethod;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stagealign.as
	//class iflash.display.StageAlign
	var StageAlign=(function(){
		function StageAlign(){}
		__class(StageAlign,'iflash.display.StageAlign',true);
		StageAlign.isTop=function(align){
			return (StageAlign.ALIGN_SIGN[align] & StageAlign.NUM_T)==StageAlign.NUM_T;
		}

		StageAlign.isBottom=function(align){
			return (StageAlign.ALIGN_SIGN[align] & StageAlign.NUM_B)==StageAlign.NUM_B;
		}

		StageAlign.isLeft=function(align){
			return (StageAlign.ALIGN_SIGN[align] & StageAlign.NUM_L)==StageAlign.NUM_L;
		}

		StageAlign.isRight=function(align){
			return (StageAlign.ALIGN_SIGN[align] & StageAlign.NUM_R)==StageAlign.NUM_R;
		}

		StageAlign.NUM_T=1;
		StageAlign.NUM_L=2;
		StageAlign.NUM_R=4;
		StageAlign.NUM_B=8;
		StageAlign.BOTTOM="B";
		StageAlign.BOTTOM_LEFT="BL";
		StageAlign.BOTTOM_RIGHT="BR";
		StageAlign.LEFT="L";
		StageAlign.RIGHT="R";
		StageAlign.TOP="T";
		StageAlign.TOP_LEFT="TL";
		StageAlign.TOP_RIGHT="TR";
		__static(StageAlign,
		['ALIGN_SIGN',function(){return this.ALIGN_SIGN={
				"T":1,
				"L":2,
				"R":4,
				"B":8,
				"BL":10,
				"BR":12,
				"TL":3,
				"TR":5
		};}

		]);
		return StageAlign;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stageaspectratio.as
	//class iflash.display.StageAspectRatio
	var StageAspectRatio=(function(){
		function StageAspectRatio(){}
		__class(StageAspectRatio,'iflash.display.StageAspectRatio',true);
		StageAspectRatio.ANY="any";
		StageAspectRatio.LANDSCAPE="landscape";
		StageAspectRatio.PORTRAIT="portrait";
		return StageAspectRatio;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stagedisplaystate.as
	//class iflash.display.StageDisplayState
	var StageDisplayState=(function(){
		function StageDisplayState(){
			;
		}

		__class(StageDisplayState,'iflash.display.StageDisplayState',true);
		StageDisplayState.FULL_SCREEN="fullScreen";
		StageDisplayState.FULL_SCREEN_INTERACTIVE="fullScreenInteractive";
		StageDisplayState.NORMAL="normal";
		return StageDisplayState;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stageorientation.as
	//class iflash.display.StageOrientation
	var StageOrientation=(function(){
		function StageOrientation(){}
		__class(StageOrientation,'iflash.display.StageOrientation',true);
		StageOrientation.DEFAULT="default";
		StageOrientation.ROTATED_LEFT="rotatedLeft";
		StageOrientation.ROTATED_RIGHT="rotatedRight";
		StageOrientation.UNKNOWN="unknown";
		StageOrientation.UPSIDE_DOWN="upsideDown";
		return StageOrientation;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stagequality.as
	//class iflash.display.StageQuality
	var StageQuality=(function(){
		function StageQuality(){
			;
		}

		__class(StageQuality,'iflash.display.StageQuality',true);
		StageQuality.LOW="low";
		StageQuality.MEDIUM="medium";
		StageQuality.HIGH="high";
		StageQuality.BEST="best";
		return StageQuality;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stagescalemode.as
	//class iflash.display.StageScaleMode
	var StageScaleMode=(function(){
		function StageScaleMode(){
			;
		}

		__class(StageScaleMode,'iflash.display.StageScaleMode',true);
		StageScaleMode.SHOW_ALL="showAll";
		StageScaleMode.EXACT_FIT="exactFit";
		StageScaleMode.NO_BORDER="noBorder";
		StageScaleMode.NO_SCALE="noScale";
		return StageScaleMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/swfversion.as
	//class iflash.display.SWFVersion
	var SWFVersion=(function(){
		function SWFVersion(){}
		__class(SWFVersion,'iflash.display.SWFVersion',true);
		SWFVersion.FLASH1=1;
		SWFVersion.FLASH10=10;
		SWFVersion.FLASH11=11;
		SWFVersion.FLASH12=0;
		SWFVersion.FLASH2=2;
		SWFVersion.FLASH3=3;
		SWFVersion.FLASH4=4;
		SWFVersion.FLASH5=5;
		SWFVersion.FLASH6=6;
		SWFVersion.FLASH7=7;
		SWFVersion.FLASH8=8;
		SWFVersion.FLASH9=9;
		return SWFVersion;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/utils/filters.as
	//class iflash.display.utils.Filters
	var Filters=(function(){
		function Filters(){
			this._alpha_=1;
			this.key=0;
		}

		__class(Filters,'iflash.display.utils.Filters',true);
		var __proto=Filters.prototype;
		__proto.alpha=function(d,value){
			Laya.RENDERBYCANVAS && UseFilter.insertUnit(d);
			this._alpha_=value;
			d._modle_.alpha(value);
		}

		Filters.__DEFAULT__=new Filters();
		return Filters;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/utils/point3d.as
	//class iflash.display.utils.Point3d
	var Point3d=(function(){
		function Point3d(_x,_y,_z){
			this.x=NaN;
			this.y=NaN;
			this.z=NaN;
			this.x=_x;
			this.y=_y;
			this.z=_z;
		}

		__class(Point3d,'iflash.display.utils.Point3d',true);
		return Point3d;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dblendfactor.as
	//class iflash.display3D.Context3DBlendFactor
	var Context3DBlendFactor=(function(){
		function Context3DBlendFactor(){};
		__class(Context3DBlendFactor,'iflash.display3D.Context3DBlendFactor',true);
		Context3DBlendFactor.DESTINATION_ALPHA="destinationAlpha";
		Context3DBlendFactor.destinationAlpha=0;
		Context3DBlendFactor.DESTINATION_COLOR="destinationColor";
		Context3DBlendFactor.destinationColor=1;
		Context3DBlendFactor.ONE="one";
		Context3DBlendFactor.one=2;
		Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA="oneMinusDestinationAlpha";
		Context3DBlendFactor.oneMinusDestinationAlpha=3;
		Context3DBlendFactor.ONE_MINUS_DESTINATION_COLOR="oneMinusDestinationColor";
		Context3DBlendFactor.oneMinusDestinationColor=4;
		Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA="oneMinusSourceAlpha";
		Context3DBlendFactor.oneMinusSourceAlpha=5;
		Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR="oneMinusSourceColor";
		Context3DBlendFactor.oneMinusSourceColor=6;
		Context3DBlendFactor.SOURCE_ALPHA="sourceAlpha";
		Context3DBlendFactor.sourceAlpha=7;
		Context3DBlendFactor.SOURCE_COLOR="sourceColor";
		Context3DBlendFactor.sourceColor=8;
		Context3DBlendFactor.ZERO="zero";
		Context3DBlendFactor.zero=9;
		return Context3DBlendFactor;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dbufferusage.as
	//class iflash.display3D.Context3DBufferUsage
	var Context3DBufferUsage=(function(){
		function Context3DBufferUsage(){};
		__class(Context3DBufferUsage,'iflash.display3D.Context3DBufferUsage',true);
		Context3DBufferUsage.DYNAMIC_DRAW="dynamicDraw";
		Context3DBufferUsage.dynamicDraw=0;
		Context3DBufferUsage.STATIC_DRAW="staticDraw";
		Context3DBufferUsage.staticDraw=1;
		return Context3DBufferUsage;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dclearmask.as
	//class iflash.display3D.Context3DClearMask
	var Context3DClearMask=(function(){
		function Context3DClearMask(){};
		__class(Context3DClearMask,'iflash.display3D.Context3DClearMask',true);
		Context3DClearMask.ALL=0x1;
		Context3DClearMask.COLOR=0x2;
		Context3DClearMask.DEPTH=0x4;
		Context3DClearMask.STENCIL=0x8;
		return Context3DClearMask;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dcomparemode.as
	//class iflash.display3D.Context3DCompareMode
	var Context3DCompareMode=(function(){
		function Context3DCompareMode(){};
		__class(Context3DCompareMode,'iflash.display3D.Context3DCompareMode',true);
		Context3DCompareMode.ALWAYS="always";
		Context3DCompareMode.always=0;
		Context3DCompareMode.EQUAL="equal";
		Context3DCompareMode.equal=1;
		Context3DCompareMode.GREATER="greater";
		Context3DCompareMode.greater=2;
		Context3DCompareMode.GREATER_EQUAL="greaterEqual";
		Context3DCompareMode.greaterEqual=3;
		Context3DCompareMode.LESS="less";
		Context3DCompareMode.less=4;
		Context3DCompareMode.LESS_EQUAL="lessEqual";
		Context3DCompareMode.lessEqual=5;
		Context3DCompareMode.NEVER="never";
		Context3DCompareMode.never=6;
		Context3DCompareMode.NOT_EQUAL="notEqual";
		Context3DCompareMode.notEqual=7;
		return Context3DCompareMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dfillmode.as
	//class iflash.display3D.Context3DFillMode
	var Context3DFillMode=(function(){
		function Context3DFillMode(){};
		__class(Context3DFillMode,'iflash.display3D.Context3DFillMode',true);
		Context3DFillMode.SOLID=0;
		Context3DFillMode.WIREFRAME=0;
		return Context3DFillMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dmipfilter.as
	//class iflash.display3D.Context3DMipFilter
	var Context3DMipFilter=(function(){
		function Context3DMipFilter(){};
		__class(Context3DMipFilter,'iflash.display3D.Context3DMipFilter',true);
		Context3DMipFilter.MIPLINEAR=0;
		Context3DMipFilter.MIPNEAREST=0;
		Context3DMipFilter.MIPNONE=0;
		return Context3DMipFilter;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dprofile.as
	//class iflash.display3D.Context3DProfile
	var Context3DProfile=(function(){
		function Context3DProfile(){};
		__class(Context3DProfile,'iflash.display3D.Context3DProfile',true);
		Context3DProfile.BASELINE=0;
		Context3DProfile.BASELINE_CONSTRAINED=1;
		Context3DProfile.BASELINE_EXTENDED=2;
		Context3DProfile.STANDARD=3;
		Context3DProfile.STANDARD_CONSTRAINED=3;
		return Context3DProfile;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dprogramtype.as
	//class iflash.display3D.Context3DProgramType
	var Context3DProgramType=(function(){
		function Context3DProgramType(){};
		__class(Context3DProgramType,'iflash.display3D.Context3DProgramType',true);
		Context3DProgramType.FRAGMENT="fragment";
		Context3DProgramType.fragment=0;
		Context3DProgramType.VERTEX="vertex";
		Context3DProgramType.vertex=1;
		return Context3DProgramType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3drendermode.as
	//class iflash.display3D.Context3DRenderMode
	var Context3DRenderMode=(function(){
		function Context3DRenderMode(){};
		__class(Context3DRenderMode,'iflash.display3D.Context3DRenderMode',true);
		Context3DRenderMode.AUTO="auto";
		Context3DRenderMode.auto=0;
		Context3DRenderMode.SOFTWARE="software";
		Context3DRenderMode.software=1;
		return Context3DRenderMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dstencilaction.as
	//class iflash.display3D.Context3DStencilAction
	var Context3DStencilAction=(function(){
		function Context3DStencilAction(){};
		__class(Context3DStencilAction,'iflash.display3D.Context3DStencilAction',true);
		Context3DStencilAction.DECREMENT_SATURATE="decrement_saturate";
		Context3DStencilAction.decrement_saturate=0;
		Context3DStencilAction.DECREMENT_WRAP="decrement_wrap";
		Context3DStencilAction.decrement_wrap=1;
		Context3DStencilAction.INCREMENT_SATURATE="increment_saturate";
		Context3DStencilAction.increment_saturate=2;
		Context3DStencilAction.INCREMENT_WRAP="increment_wrap";
		Context3DStencilAction.increment_wrap=3;
		Context3DStencilAction.INVERT="invert";
		Context3DStencilAction.invert=4;
		Context3DStencilAction.KEEP="keep";
		Context3DStencilAction.keep=5;
		Context3DStencilAction.SET="nset";
		Context3DStencilAction.nset=6;
		Context3DStencilAction.ZERO="zero";
		Context3DStencilAction.zero=7;
		return Context3DStencilAction;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dtextureformat.as
	//class iflash.display3D.Context3DTextureFormat
	var Context3DTextureFormat=(function(){
		function Context3DTextureFormat(){};
		__class(Context3DTextureFormat,'iflash.display3D.Context3DTextureFormat',true);
		Context3DTextureFormat.BGRA="bgra";
		Context3DTextureFormat.bgra=0;
		Context3DTextureFormat.BGRA_PACKED="bgraPacked4444";
		Context3DTextureFormat.bgraPacked4444=1;
		Context3DTextureFormat.BGR_PACKED="bgrPacked565";
		Context3DTextureFormat.bgrPacked565=2;
		Context3DTextureFormat.COMPRESSED="compressed";
		Context3DTextureFormat.compressed=3;
		Context3DTextureFormat.COMPRESSED_ALPHA="compressedAlpha";
		Context3DTextureFormat.compressedAlpha=4;
		Context3DTextureFormat.RGBA_HALF_FLOAT="rgbaHalfFloat";
		Context3DTextureFormat.rgbaHalfFloat=5;
		return Context3DTextureFormat;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dtriangleface.as
	//class iflash.display3D.Context3DTriangleFace
	var Context3DTriangleFace=(function(){
		function Context3DTriangleFace(){};
		__class(Context3DTriangleFace,'iflash.display3D.Context3DTriangleFace',true);
		Context3DTriangleFace.BACK="back";
		Context3DTriangleFace.back=0;
		Context3DTriangleFace.FRONT="front";
		Context3DTriangleFace.front=1;
		Context3DTriangleFace.FRONT_AND_BACK="frontAndBack";
		Context3DTriangleFace.frontAndBack=2;
		Context3DTriangleFace.NONE="none";
		Context3DTriangleFace.none=3;
		return Context3DTriangleFace;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dvertexbufferformat.as
	//class iflash.display3D.Context3DVertexBufferFormat
	var Context3DVertexBufferFormat=(function(){
		function Context3DVertexBufferFormat(){};
		__class(Context3DVertexBufferFormat,'iflash.display3D.Context3DVertexBufferFormat',true);
		Context3DVertexBufferFormat.BYTES_4="byte4";
		Context3DVertexBufferFormat.byte4=0;
		Context3DVertexBufferFormat.FLOAT_1="float1";
		Context3DVertexBufferFormat.float1=1;
		Context3DVertexBufferFormat.FLOAT_2="float2";
		Context3DVertexBufferFormat.float2=2;
		Context3DVertexBufferFormat.FLOAT_3="float3";
		Context3DVertexBufferFormat.float3=3;
		Context3DVertexBufferFormat.FLOAT_4="float4";
		Context3DVertexBufferFormat.float4=4;
		return Context3DVertexBufferFormat;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3dwrapmode.as
	//class iflash.display3D.Context3DWrapMode
	var Context3DWrapMode=(function(){
		function Context3DWrapMode(){};
		__class(Context3DWrapMode,'iflash.display3D.Context3DWrapMode',true);
		Context3DWrapMode.CLAMP=0;
		Context3DWrapMode.CLAMP_U_REPEAT_V=1;
		Context3DWrapMode.REPEAT=2;
		Context3DWrapMode.REPEAT_U_CLAMP_V=3;
		return Context3DWrapMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/enum.as
	//class iflash.display3D.Enum
	var Enum=(function(){
		function Enum(){};
		__class(Enum,'iflash.display3D.Enum',true);
		Enum.Context3DVertexBufferFormat=null;
		Enum.Context3DTextureFormat={bgrPacked565:0,bgra:1,bgraPacked4444:2,compressed:3,compressedAlpha:4,rgbaHalfFloat:5 };
		return Enum;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/indexbuffer3d.as
	//class iflash.display3D.IndexBuffer3D
	var IndexBuffer3D=(function(){
		function IndexBuffer3D(numIndices,bufferUsage){
			this.indexBufferName="IndexBuffer3D::VID_";
			this.m_numIndexes=0;
			this.m_bufferUsage=0;
			this.m_ibo=null;
			this.bytesPerElement=0;
			this.bufferData=null;
			this.webglContext=null;
			(bufferUsage===void 0)&& (bufferUsage="staticDraw");
			this.indexBufferName+=(IndexBuffer3D.indexBufferId++);
			this.m_bufferUsage=bufferUsage;
			this.m_ibo=null;
			this.m_numIndexes=numIndices;
			this.webglContext=Laya.document.canvas3D.context3D;
			this.createInternalBufferObject();
		}

		__class(IndexBuffer3D,'iflash.display3D.IndexBuffer3D',true);
		var __proto=IndexBuffer3D.prototype;
		__proto.dispose=function(){
			if (this.m_ibo){
				this.webglContext.deleteBuffer(this.m_ibo);
				this.bufferData=null;
				this.m_ibo=null;
			}
		}

		__proto.uploadFromByteArray=function(data,byteArrayOffset,startOffset,count){}
		__proto.uploadFromVector=function(indices,startOffset,count){
			if (count > this.m_numIndexes){
			}
			this.bufferData.set(indices,startOffset)
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,this.m_ibo);
			var tmpbuf=this.bufferData.subarray(0,count);
			this.webglContext.bufferSubData(this.webglContext.ELEMENT_ARRAY_BUFFER,startOffset *this.bytesPerElement,tmpbuf);
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,null);
		}

		__proto.createInternalBufferObject=function(){
			if (this.m_ibo){
				this.dispose();
			}
			this.m_ibo=this.webglContext.createBuffer();
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,this.m_ibo);
			switch(WebGLAttrib.getConfig().indexType){
				case "Uint8Array":
					this.bufferData=/*__JS__ */new Uint8Array(this.m_numIndexes);
					this.bytesPerElement=/*__JS__ */Uint8Array.BYTES_PER_ELEMENT;
					break ;
				case "Uint16Array":
					this.bufferData=/*__JS__ */new Uint16Array(this.m_numIndexes);
					this.bytesPerElement=/*__JS__ */Uint16Array.BYTES_PER_ELEMENT;
					break ;
				case "Uint32Array":
					this.bufferData=/*__JS__ */new Uint32Array(this.m_numIndexes);
					this.bytesPerElement=/*__JS__ */Uint32Array.BYTES_PER_ELEMENT;
					break ;
				}
			this.webglContext.bufferData(this.webglContext.ELEMENT_ARRAY_BUFFER,this.m_numIndexes *this.bytesPerElement,IndexBuffer3D.BufferUsage[ Context3DBufferUsage[this.m_bufferUsage]]);
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,null);
			return this.webglContext.isBuffer(this.m_ibo);
		}

		IndexBuffer3D.indexBufferId=0;
		__static(IndexBuffer3D,
		['BufferUsage',function(){return this.BufferUsage=[0x88E8,0x88E4];}
		]);
		return IndexBuffer3D;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/program3d.as
	//class iflash.display3D.Program3D
	var Program3D=(function(){
		function Program3D(){
			this.programName="Program3D::PID_";
			this.m_programID=null;
			this.webglContext=null;
			this.programName+=(Program3D.progtamId++);
			this.webglContext=Laya.document.canvas3D.context3D;
		}

		__class(Program3D,'iflash.display3D.Program3D',true);
		var __proto=Program3D.prototype;
		__proto.dispose=function(){
			this.webglContext.deleteProgram(this.m_programID);
			this.m_programID=null;
		}

		__proto.upload=function(vertexProgram,fragmentProgram){
			var shaderCompiler=new ShaderCompiler();
			var info=new ShaderInfo();
			shaderCompiler.compile(vertexProgram,fragmentProgram,info);
			this.m_programID=info.programID;
		}

		__proto.getAttributeLocation=function(nameOfAttrib){
			return this.webglContext.getAttribLocation(this.m_programID,nameOfAttrib);
		}

		__proto.getUniformLocation=function(nameOfUniform){
			return this.webglContext.getUniformLocation(this.m_programID,nameOfUniform);
		}

		Program3D.progtamId=0;
		return Program3D;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/shader/shadercompiler.as
	//class iflash.display3D.shader.ShaderCompiler
	var ShaderCompiler=(function(){
		function ShaderCompiler(){
			this.shader=null;
			this.webglContext=null;
		}

		__class(ShaderCompiler,'iflash.display3D.shader.ShaderCompiler',true);
		var __proto=ShaderCompiler.prototype;
		__proto.compile=function(vertexProgram,fragmentProgram,info){
			this.webglContext=Laya.document.canvas3D.context3D;
			info.programID=this.loadProgram(vertexProgram,fragmentProgram);
		}

		__proto.loadProgram=function(vertShaderSrc,fragShaderSrc){
			var vertexShader,fragmentShader,programObject,linked;
			vertexShader=this.loadShader(this.webglContext.VERTEX_SHADER,vertShaderSrc);
			if (!vertexShader){
				return null;
			}
			fragmentShader=this.loadShader(this.webglContext.FRAGMENT_SHADER,fragShaderSrc);
			if (!fragmentShader){
				this.webglContext.deleteShader(vertexShader);
				return null;
			}
			programObject=this.webglContext.createProgram();
			if (!programObject){
				this.webglContext.deleteShader(fragmentShader);
				this.webglContext.deleteShader(vertexShader);
				return null;
			}
			this.webglContext.attachShader(programObject,vertexShader);
			this.webglContext.attachShader(programObject,fragmentShader);
			this.webglContext.linkProgram(programObject);
			linked=this.webglContext.getProgramParameter(programObject,this.webglContext.LINK_STATUS);
			if (!linked){
				var errInfo=this.webglContext.getProgramInfoLog(programObject);
				this.webglContext.deleteProgram(programObject);
				return null;
			}
			this.webglContext.deleteShader(vertexShader);
			this.webglContext.deleteShader(fragmentShader);
			return programObject;
		}

		__proto.loadShader=function(type,shaderSrc){
			this.shader=this.webglContext.createShader(type);
			if (this.shader==null){
				return null;
			}
			this.webglContext.shaderSource(this.shader,shaderSrc);
			this.webglContext.compileShader(this.shader);
			var compiled=this.webglContext.getShaderParameter(this.shader,this.webglContext.COMPILE_STATUS);
			if (!compiled){
				var errInfo=this.webglContext.getShaderInfoLog(this.shader);
				this.webglContext.deleteShader(this.shader);
				return null;
			}
			return this.shader;
		}

		return ShaderCompiler;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/shader/shaderinfo.as
	//class iflash.display3D.shader.ShaderInfo
	var ShaderInfo=(function(){
		function ShaderInfo(){
			this.programID=null;
		}

		__class(ShaderInfo,'iflash.display3D.shader.ShaderInfo',true);
		return ShaderInfo;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/vertexbuffer3d.as
	//class iflash.display3D.VertexBuffer3D
	var VertexBuffer3D=(function(){
		function VertexBuffer3D(numVertices,data32PerVertex,bufferUsage){
			this.vertexBufferName="VertexBuffer3D@VID_";
			this.m_vbo=null;
			this.m_bufferUsage=null;
			this.m_numVertices=0;
			this.m_data32PerVertex=0;
			this.bufferData=null;
			this.bytesPerElement=0;
			this.webglContext=null;
			(bufferUsage===void 0)&& (bufferUsage="staticDraw");
			this.vertexBufferName+=(VertexBuffer3D.vertexBufferId++);
			this.m_bufferUsage=bufferUsage;
			this.m_vbo=null;
			this.m_numVertices=numVertices;
			this.m_data32PerVertex=data32PerVertex;
			this.webglContext=Laya.document.canvas3D.context3D;
			this.createInternalBufferObject();
		}

		__class(VertexBuffer3D,'iflash.display3D.VertexBuffer3D',true);
		var __proto=VertexBuffer3D.prototype;
		__proto.dispose=function(){
			if (this.m_vbo){
				this.webglContext.deleteBuffer(this.m_vbo);
				this.m_vbo=null;
			}
		}

		__proto.uploadFromByteArray=function(data,byteArrayOffset,startVertex,numVertices){
			console.log(__bind(this,this.uploadFromByteArray));
		}

		__proto.uploadFromVector=function(buffer,startVertex,numVertices){
			if (numVertices > this.m_numVertices){
			}
			this.bufferData.set(buffer,0)
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,this.m_vbo);
			this.webglContext.bufferSubData(this.webglContext.ARRAY_BUFFER,startVertex *this.m_data32PerVertex *this.bytesPerElement,this.bufferData);
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,null);
		}

		__proto.createInternalBufferObject=function(){
			if (this.m_vbo){
				this.dispose();
			}
			this.bufferData=/*__JS__ */new Float32Array(this.m_numVertices*this.m_data32PerVertex);
			this.bytesPerElement=/*__JS__ */Float32Array.BYTES_PER_ELEMENT;
			this.m_vbo=this.webglContext.createBuffer();
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,this.m_vbo);
			this.webglContext.bufferData(this.webglContext.ARRAY_BUFFER,this.m_numVertices *this.m_data32PerVertex *this.bytesPerElement,VertexBuffer3D.BufferUsage[ Context3DBufferUsage[this.m_bufferUsage]]);
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,null);
			return this.webglContext.isBuffer(this.m_vbo);
		}

		VertexBuffer3D.vertexBufferId=0;
		__static(VertexBuffer3D,
		['BufferUsage',function(){return this.BufferUsage=[0x88E8,0x88E4];}
		]);
		return VertexBuffer3D;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/webglattrib.as
	//class iflash.display3D.WebGLAttrib
	var WebGLAttrib=(function(){
		function WebGLAttrib(){};
		__class(WebGLAttrib,'iflash.display3D.WebGLAttrib',true);
		WebGLAttrib.getConfig=function(){
			if (WebGLAttrib.curr)
				return WebGLAttrib.curr;
			var brow={msie:false,firefox:false,opera:false,safari:false,chrome:false,netscape:false,appname:'unknown',version:0,platform:''};
			var userAgent=Browser.navigator.userAgent.toLowerCase();
			var reg=new RegExp("(msie|firefox|opera|chrome|netscape)\\D+(\\d[\\d.]*)");
			var regVersion=new RegExp("version\\D+(\\d[\\d.]*).*safari");
			var name,version
			if (reg.test(userAgent)){
				name=userAgent.match(reg)[1];
				version=userAgent.match(reg)[2];
				brow[name]=true;
				brow.appname=name;
				brow.version=version;
			}
			else if (regVersion.test(userAgent)){
				name=userAgent.match(regVersion)[1];
				version=userAgent.match(regVersion)[1];
				brow.safari=true;
				brow.appname='safari';
				brow.version=name;
			}
			brow.platform=Browser.navigator.platform;
			switch (brow.appname){
				case "firefox":
					WebGLAttrib.curr=WebGLAttrib.firefox;
					break ;
				case "opera":
					WebGLAttrib.curr=WebGLAttrib.opera;
					break ;
				case "chrome":
					WebGLAttrib.curr=WebGLAttrib.chrome;
					break ;
				case "netscape":
					WebGLAttrib.curr=WebGLAttrib.netscape;
					break ;
				case "safari":
					WebGLAttrib.curr=WebGLAttrib.safari;
					break ;
				default :
					WebGLAttrib.curr=WebGLAttrib.safari;
				}
			return WebGLAttrib.curr;
		}

		WebGLAttrib.curr=null;
		__static(WebGLAttrib,
		['chrome',function(){return this.chrome={drawElementSize:5123,indexType:"Uint16Array"};},'msie',function(){return this.msie={drawElementSize:5125,indexType:"Uint32Array"};},'firefox',function(){return this.firefox={drawElementSize:5123,indexType:"Uint16Array"};},'opera',function(){return this.opera={drawElementSize:5123,indexType:"Uint16Array"};},'netscape',function(){return this.netscape={drawElementSize:5123,indexType:"Uint16Array"};},'safari',function(){return this.safari={drawElementSize:5123,indexType:"Uint16Array"};}
		]);
		return WebGLAttrib;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/external/externalinterface.as
	//class iflash.external.ExternalInterface
	var ExternalInterface=(function(){
		function ExternalInterface(){}
		__class(ExternalInterface,'iflash.external.ExternalInterface',true);
		__getset(1,ExternalInterface,'available',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,ExternalInterface,'objectID',LAYAFNSTR/*function(){return ""}*/);
		ExternalInterface.addCallback=LAYAFNVOID/*function(functionName,closure){}*/
		ExternalInterface.call=function(functionName,__rest){
			var rest=[];for(var i=1,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			return null}
		ExternalInterface.marshallExceptions=false;
		return ExternalInterface;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/base64.as
	//class iflash.filesystem.Base64
	var Base64=(function(){
		function Base64(){}
		__class(Base64,'iflash.filesystem.Base64',true);
		Base64.encode=function(data){
			var bytes=new ByteArray();
			bytes.writeUTFBytes(data);
			return Base64.encodeByteArray(bytes);
		}

		Base64.encodeByteArray=function(data){
			var output="";
			var dataBuffer;
			var outputBuffer=new Array(4);
			data.position=0;
			while (data.bytesAvailable > 0){
				dataBuffer=[];
				for (var i=0;i < 3 && data.bytesAvailable > 0;i++){
					dataBuffer[i]=data.readUnsignedByte();
				}
				outputBuffer[0]=(dataBuffer[0] & 0xfc)>> 2;
				outputBuffer[1]=((dataBuffer[0] & 0x03)<< 4)| ((dataBuffer[1])>> 4);
				outputBuffer[2]=((dataBuffer[1] & 0x0f)<< 2)| ((dataBuffer[2])>> 6);
				outputBuffer[3]=dataBuffer[2] & 0x3f;
				for (var j=dataBuffer.length;j < 3;j++){
					outputBuffer[j+1]=64;
				}
				for (var k=0;k < outputBuffer.length;k++){
					output+=Base64.BASE64_CHARS.charAt(outputBuffer[k]);
				}
			}
			return output;
		}

		Base64.decode=function(data){
			var bytes=Base64.decodeToByteArray(data);
			return bytes.readUTFBytes(bytes.length);
		}

		Base64.decodeToByteArray=function(data){
			var output=new ByteArray();
			var dataBuffer=new Array(4);
			var outputBuffer=new Array(3);
			for (var i=0;i < data.length;i+=4){
				for (var j=0;j < 4 && i+j < data.length;j++){
					dataBuffer[j]=Base64.BASE64_CHARS.indexOf(data.charAt(i+j));
				}
				outputBuffer[0]=(dataBuffer[0] << 2)+((dataBuffer[1] & 0x30)>> 4);
				outputBuffer[1]=((dataBuffer[1] & 0x0f)<< 4)+((dataBuffer[2] & 0x3c)>> 2);
				outputBuffer[2]=((dataBuffer[2] & 0x03)<< 6)+dataBuffer[3];
				for (var k=0;k < outputBuffer.length;k++){
					if (dataBuffer[k+1]==64)break ;
					output.writeByte(outputBuffer[k]);
				}
			}
			output.position=0;
			return output;
		}

		Base64.BASE64_CHARS="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
		Base64.version="1.0.0";
		return Base64;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/filemode.as
	//class iflash.filesystem.FileMode
	var FileMode=(function(){
		function FileMode(){};
		__class(FileMode,'iflash.filesystem.FileMode',true);
		FileMode.APPEND="append";
		FileMode.READ="read";
		FileMode.UPDATE="update";
		FileMode.WRITE="write";
		return FileMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/filestorage.as
	//class iflash.filesystem.FileStorage
	var FileStorage=(function(){
		function FileStorage(){
			this.layaFileSystem=null;
			this.so=null;
			this.lastId=0;
			var localUrl=/*__JS__ */location.href;
			this.so=SharedObject.getLocal("LayaAirApplicationStorage_"+encodeURIComponent(localUrl));
			this.layaFileSystem=this.so.data;
			this.lastId=Laya.__parseInt(this.layaFileSystem["LAYA_FS_ID"]);
		}

		__class(FileStorage,'iflash.filesystem.FileStorage',true);
		var __proto=FileStorage.prototype;
		__proto.createFile=function(path){
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="")
					continue ;
				if (obj[curr]==null){
					this.lastId=Laya.__parseInt(this.layaFileSystem["LAYA_FS_ID"]);
					if (index < arr.length-1){
						obj[curr]={"LAYA_FS_TYPE":"D"};
						obj=obj[curr]
						this.so.flush();
					}
					else{
						++this.lastId;
						obj[curr]={"LAYA_FS_ID":this.lastId};
						this.layaFileSystem["LAYA_FS_CONTENT"+this.lastId]="";
						this.layaFileSystem["LAYA_FS_ID"]=this.lastId;
						obj=obj[curr];
						this.so.flush();
					}
				}
				else{
					obj=obj[curr];
				}
			}
		}

		__proto.getList=function(path){
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="")
					continue ;
				if (obj[curr] !=null)
					obj=obj[curr]
			};
			var list=[];
			for (var item in obj){
				if (item.indexOf("LAYA_FS_CONTENT")==0 || item.indexOf("LAYA_FS_ID")==0 || item.indexOf("LAYA_FS_TYPE")==0)
					continue ;
				var file=new File("app-storage:/"+(path=="" ? "" :path+"/")+item)
				if (obj[item].LAYA_FS_TYPE=="D")
					file._isDirectory=true;
				list.push(file);
			}
			return list;
		}

		__proto.fileExist=function(path){
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="")
					continue ;
				if (obj[curr]==null){
					return false
				}
				else
				obj=obj[curr]
			}
			return true;
		}

		__proto.fileWrite=function(path,fileContent){
			(fileContent===void 0)&& (fileContent="");
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="")
					continue ;
				if (obj[curr]==null && index < arr.length-1){
					this.createFile(arr.slice(0,index).join("/"))
				}
				else
				obj=obj[curr]
			}
			this.layaFileSystem["LAYA_FS_CONTENT"+obj.LAYA_FS_ID]=escape(fileContent);
			this.so.flush();
		}

		__proto.fileWriteBinary=function(path,fileContent){
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="")
					continue ;
				if (obj[curr]==null && index < arr.length-1){
					this.createFile(arr.slice(0,index).join("/"))
				}
				else
				obj=obj[curr]
			}
			this.layaFileSystem["LAYA_FS_CONTENT"+obj.LAYA_FS_ID]=Base64.encodeByteArray(fileContent);
			this.so.flush();
		}

		__proto.getBinaryFile=function(path){
			if (path=="" || path==null)
				return null;
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="" || curr=="app:" || curr=="app-storage:")
					continue ;
				if (obj[curr]==null){
					this.lastId=Laya.__parseInt(this.layaFileSystem["LAYA_FS_ID"]);
					if (index < arr.length-1){
						obj[curr]={"LAYA_FS_TYPE":"D"};
						obj=obj[curr]
						this.so.flush();
					}
					else{
						++this.lastId;
						obj[curr]={"LAYA_FS_ID":this.lastId};
						this.layaFileSystem["LAYA_FS_CONTENT"+this.lastId]="";
						this.layaFileSystem["LAYA_FS_ID"]=this.lastId;
						obj=obj[curr];
						this.so.flush();
					}
				}
				else
				obj=obj[curr]
			}
			if (obj.LAYA_FS_TYPE !="D"){
				return Base64.decodeToByteArray(this.layaFileSystem["LAYA_FS_CONTENT"+obj["LAYA_FS_ID"]]);
			}
			return null;
		}

		__proto.getFile=function(path){
			if (path=="" || path==null)
				return null;
			var arr=path.split("/").filter(function(item,index,array){
				return curr !=""
			});
			var obj=this.layaFileSystem;
			for (var index=0;index < arr.length;index++){
				var curr=arr[index];
				if (curr==null || curr=="" || curr=="app:" || curr=="app-storage:")
					continue ;
				if (obj[curr]==null){
					this.lastId=Laya.__parseInt(this.layaFileSystem["LAYA_FS_ID"]);
					if (index < arr.length-1){
						obj[curr]={"LAYA_FS_TYPE":"D"};
						obj=obj[curr]
						this.so.flush();
					}
					else{
						++this.lastId;
						obj[curr]={"LAYA_FS_ID":this.lastId};
						this.layaFileSystem["LAYA_FS_CONTENT"+this.lastId]="";
						this.layaFileSystem["LAYA_FS_ID"]=this.lastId;
						obj=obj[curr];
						this.so.flush();
					}
				}
				else
				obj=obj[curr]
			}
			if (obj.LAYA_FS_TYPE !="D"){
				return unescape(this.layaFileSystem["LAYA_FS_CONTENT"+obj["LAYA_FS_ID"]]);
			}
			return null;
		}

		__getset(1,FileStorage,'instance',function(){
			if (FileStorage.fileStorage==null)
				FileStorage.fileStorage=new FileStorage();
			return FileStorage.fileStorage
		});

		FileStorage.fileStorage=null
		return FileStorage;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/bitmapfilter.as
	//class iflash.filters.BitmapFilter
	var BitmapFilter=(function(){
		function BitmapFilter(inType){
			this._mType=null;
			this.___cached=false;
			this.passes=0;
			this._mType=inType;
		}

		__class(BitmapFilter,'iflash.filters.BitmapFilter',true);
		var __proto=BitmapFilter.prototype;
		__proto.clone=function(){
			return new BitmapFilter(this._mType);
		}

		__proto.__preApplyFilter=LAYAFNVOID/*function(dec){}*/
		__proto.__applyFilter=LAYAFNVOID/*function(dec){}*/
		return BitmapFilter;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/bitmapfilterquality.as
	//class iflash.filters.BitmapFilterQuality
	var BitmapFilterQuality=(function(){
		function BitmapFilterQuality(){
			;
		}

		__class(BitmapFilterQuality,'iflash.filters.BitmapFilterQuality',true);
		BitmapFilterQuality.HIGH=3;
		BitmapFilterQuality.LOW=1;
		BitmapFilterQuality.MEDIUM=2;
		return BitmapFilterQuality;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/bitmapfiltertype.as
	//class iflash.filters.BitmapFilterType
	var BitmapFilterType=(function(){
		function BitmapFilterType(){};
		__class(BitmapFilterType,'iflash.filters.BitmapFilterType',true);
		BitmapFilterType.FULL="full";
		BitmapFilterType.INNER="inner";
		BitmapFilterType.OUTER="outer";
		return BitmapFilterType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/displacementmapfiltermode.as
	//class iflash.filters.DisplacementMapFilterMode
	var DisplacementMapFilterMode=(function(){
		function DisplacementMapFilterMode(){
			this.CLAMP=null;
			this.COLOR=null;
			this.IGNORE=null;
			this.WRAP=null;
		}

		__class(DisplacementMapFilterMode,'iflash.filters.DisplacementMapFilterMode',true);
		return DisplacementMapFilterMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/colortransform.as
	//class iflash.geom.ColorTransform
	var ColorTransform=(function(){
		function ColorTransform(redMultiplier,greenMultiplier,blueMultiplier,alphaMultiplier,redOffset,greenOffset,blueOffset,alphaOffset){
			this.redMultiplier=NaN;
			this.greenMultiplier=NaN;
			this.blueMultiplier=NaN;
			this.alphaMultiplier=NaN;
			this.redOffset=NaN;
			this.greenOffset=NaN;
			this.blueOffset=NaN;
			this.alphaOffset=NaN;
			(redMultiplier===void 0)&& (redMultiplier=1.0);
			(greenMultiplier===void 0)&& (greenMultiplier=1.0);
			(blueMultiplier===void 0)&& (blueMultiplier=1.0);
			(alphaMultiplier===void 0)&& (alphaMultiplier=1.0);
			(redOffset===void 0)&& (redOffset=0);
			(greenOffset===void 0)&& (greenOffset=0);
			(blueOffset===void 0)&& (blueOffset=0);
			(alphaOffset===void 0)&& (alphaOffset=0);
			;
			this.redMultiplier=redMultiplier;
			this.greenMultiplier=greenMultiplier;
			this.blueMultiplier=blueMultiplier;
			this.alphaMultiplier=alphaMultiplier;
			this.redOffset=redOffset;
			this.greenOffset=greenOffset;
			this.blueOffset=blueOffset;
			this.alphaOffset=alphaOffset;
		}

		__class(ColorTransform,'iflash.geom.ColorTransform',false);
		var __proto=ColorTransform.prototype;
		__proto.concat=function(second){
			this.alphaOffset=this.alphaOffset+this.alphaMultiplier *second.alphaOffset;
			this.alphaMultiplier=this.alphaMultiplier *second.alphaMultiplier;
			this.redOffset=this.redOffset+this.redMultiplier *second.redOffset;
			this.redMultiplier=this.redMultiplier *second.redMultiplier;
			this.greenOffset=this.greenOffset+this.greenMultiplier *second.greenOffset;
			this.greenMultiplier=this.greenMultiplier *second.greenMultiplier;
			this.blueOffset=this.blueOffset+this.blueMultiplier *second.blueOffset;
			this.blueMultiplier=this.blueMultiplier *second.blueMultiplier;
		}

		__proto.toString=function(){
			return "(redMultiplier="+this.redMultiplier+", greenMultiplier="+this.greenMultiplier+", blueMultiplier="+this.blueMultiplier+", alphaMultiplier="+this.alphaMultiplier+", redOffset="+this.redOffset+", greenOffset="+this.greenOffset+", blueOffset="+this.blueOffset+", alphaOffset="+this.alphaOffset+")";
		}

		__getset(0,__proto,'color',function(){
			return this.redOffset << 16 | this.greenOffset << 8 | this.blueOffset;
			},function(newColor){
			this.redMultiplier=this.greenMultiplier=this.blueMultiplier=0;
			this.redOffset=newColor >> 16 & 255;
			this.greenOffset=newColor >> 8 & 255;
			this.blueOffset=newColor & 255;
		});

		ColorTransform._DEFAULT_=new ColorTransform();
		return ColorTransform;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/matrix.as
	//class iflash.geom.Matrix
	var Matrix=(function(){
		function Matrix(a,b,c,d,tx,ty){
			this.a=1;
			this.b=0;
			this.c=0;
			this.d=1;
			this.tx=0;
			this.ty=0;
			(a===void 0)&& (a=1);
			(b===void 0)&& (b=0);
			(c===void 0)&& (c=0);
			(d===void 0)&& (d=1);
			(tx===void 0)&& (tx=0);
			(ty===void 0)&& (ty=0);
			this.a=a;
			this.b=b;
			this.c=c;
			this.d=d;
			this.tx=tx;
			this.ty=ty;
		}

		__class(Matrix,'iflash.geom.Matrix',true);
		var __proto=Matrix.prototype;
		__proto.isTransform=function(){
			return this.a !=1 || this.b !=0 || this.c !=0 || this.d !=1;
		}

		__proto.clone=function(){
			return new Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
		}

		__proto.createGradientBox=function(in_width,in_height,rotation,in_tx,in_ty){
			(rotation===void 0)&& (rotation=0);
			(in_tx===void 0)&& (in_tx=0);
			(in_ty===void 0)&& (in_ty=0);
			this.a=in_width / 1638.4;
			this.d=in_height / 1638.4;
			if (rotation !=0 && rotation !=0.0){
				var cos=Math.cos(rotation);
				var sin=Math.sin(rotation);
				this.b=sin *this.d;
				this.c=-sin *this.a;
				this.a*=cos;
				this.d*=cos;
			}
			else{
				this.b=0;
				this.c=0;
			}
			this.tx=(in_tx !=0 ? in_tx+in_width / 2 :in_width / 2);
			this.ty=(in_ty !=0 ? in_ty+in_height / 2 :in_height / 2);
		}

		__proto.transformPoint=function(point){
			return new Point(this.a *point.x+this.c *point.y+this.tx,this.d *point.y+this.b *point.x+this.ty);
		}

		__proto.identity=function(){
			this.a=this.d=1;
			this.b=this.c=this.tx=this.ty=0;
		}

		__proto.copy=function(src){
			this.a=src.a;
			this.b=src.b;
			this.c=src.c;
			this.d=src.d;
			this.tx=src.tx;
			this.ty=src.ty;
			return this;
		}

		__proto.copyFrom=function(src){
			this.a=src.a;
			this.b=src.b;
			this.c=src.c;
			this.d=src.d;
			this.tx=src.tx;
			this.ty=src.ty;
		}

		__proto.IsEqual=function(p_pOther){
			if (this.a !=p_pOther.a || this.b !=p_pOther.b || this.c !=p_pOther.c || this.d !=p_pOther.d || this.tx !=p_pOther.tx || this.ty !=p_pOther.ty){
				return false;
			}
			return true;
		}

		__proto.translate=function(x,y){
			this.tx=x+this.tx;
			this.ty=y+this.ty;
		}

		__proto.rotate=function(angle){
			if (Math.abs(angle-0)<0.0000001)
				return;
			var cos=Math.cos(angle);
			var sin=Math.sin(angle);
			var tm11=this.a *cos-this.b *sin;
			var tm12=this.a *sin+this.b *cos;
			var tm21=this.c *cos-this.d *sin;
			var tm22=this.c *sin+this.d *cos;
			var tx1=this.tx *cos-this.ty *sin;
			var ty1=this.tx *sin+this.ty *cos;
			this.a=tm11;
			this.b=tm12;
			this.c=tm21;
			this.d=tm22;
			this.tx=tx1;
			this.ty=ty1;
		}

		__proto.scale=function(sx,sy){
			if (sx==1 && sy==1)
				return;
			this.a*=sx;
			this.b*=sy;
			this.c*=sx;
			this.d *=sy;
			this.tx *=sx;
			this.ty *=sy;
		}

		__proto.setTransform=function(n11,n12,n21,n22,n31,n32){
			this.a=n11;
			this.b=n12;
			this.c=n21;
			this.d=n22;
			this.tx=n31;
			this.ty=n32;
		}

		__proto.transform=function(n11,n12,n21,n22,n31,n32){
			var k11=n11 *this.a+n12 *this.c+0 *this.tx;
			var k12=n11 *this.b+n12 *this.d+0 *this.ty;
			var k21=n21 *this.a+n22 *this.c+0 *this.tx;
			var k22=n21 *this.b+n22 *this.d+0 *this.ty;
			var k31=n31 *this.a+n32 *this.c+1 *this.tx;
			var k32=n31 *this.b+n32 *this.d+1 *this.ty;
			this.a=k11;
			this.b=k12;
			this.c=k21;
			this.d=k22;
			this.tx=k31;
			this.ty=k32;
		}

		__proto.invert=function(){
			var a=this.a;
			var b=this.b;
			var c=this.c;
			var d=this.d;
			var tx=this.tx;
			var i=a *d-b *c;
			this.a=d / i;
			this.b=-b / i;
			this.c=-c / i;
			this.d=a / i;
			this.tx=(c *this.ty-d *tx)/ i;
			this.ty=-(a *this.ty-b *tx)/ i;
			return this;
		}

		__proto.concat=function(mtx){
			var a=this.a;
			var c=this.c;
			var tx=this.tx;
			this.a=a *mtx.a+this.b *mtx.c;
			this.b=a *mtx.b+this.b *mtx.d;
			this.c=c *mtx.a+this.d *mtx.c;
			this.d=c *mtx.b+this.d *mtx.d;
			this.tx=tx *mtx.a+this.ty *mtx.c+mtx.tx;
			this.ty=tx *mtx.b+this.ty *mtx.d+mtx.ty;
			return this;
		}

		__proto.preMultiplyInto=function(other,target){
			var n=other,t=target;
			var a=n.a *this.a;
			var b=0.0;
			var c=0.0;
			var d=n.d *this.d;
			var tx=n.tx *this.a+this.tx;
			var ty=n.ty *this.d+this.ty;
			if (n.b!=0.0 || n.c!=0.0 || this.b!==0.0 || this.c!=0.0){
				a+=n.b *this.c;
				d+=n.c *this.b;
				b+=n.a *this.b+n.b *this.d;
				c+=n.c *this.a+n.d *this.c;
				tx+=n.ty *this.c;
				ty+=n.tx *this.b;
			}
			t.a=a;
			t.b=b;
			t.c=c;
			t.d=d;
			t.tx=tx;
			t.ty=ty;
		}

		__proto.concatSix=function(a1,b1,c1,d1,tx1,ty1){
			var a=this.a;
			var c=this.c;
			var tx=this.tx;
			this.a=a *a1+this.b *c1;
			this.b=a *b1+this.b *d1;
			this.c=c *a1+this.d *c1;
			this.d=c *b1+this.d *d1;
			this.tx=tx *a1+this.ty *c1+tx1;
			this.ty=tx *b1+this.ty *d1+ty1;
		}

		__proto.deltaTransformPoint=function(point){
			return new Point(point.x *this.a+point.y *this.c,point.x *this.b+point.y *this.d);
		}

		__proto.createBox=function(scaleX,scaleY,rotation,tx,ty){
			(rotation===void 0)&& (rotation=0);
			(tx===void 0)&& (tx=0);
			(ty===void 0)&& (ty=0);
			this.a=scaleX;
			this.d=scaleY;
			this.b=rotation;
			this.tx=tx;
			this.ty=ty;
		}

		__proto.setTo=function(a1,b1,c1,d1,tx1,ty1){
			this.a=a1;
			this.b=b1;
			this.c=c1;
			this.d=d1;
			this.tx=tx1;
			this.ty=ty1;
		}

		__proto.transformPointInPlace=function(source,out){
			out.setTo(this.a *source.x+this.c *source.y+this.tx,
			this.b *source.x+this.d *source.y+this.ty);
			return out;
		}

		__proto.transformBounds=function(bounds){
			if(!bounds)return bounds;
			var x=bounds.x;
			var y=bounds.y;
			var w=Math.abs(bounds.width);
			var h=Math.abs(bounds.height);
			x=bounds.width<0?x-w:x;
			y=bounds.height<0?y-h:y;
			var x0=this.a *x+this.c *y+this.tx;
			var y0=this.b *x+this.d *y+this.ty;
			var x1=this.a *(x+w)+this.c *y+this.tx;
			var y1=this.b *(x+w)+this.d *y+this.ty;
			var x2=this.a *(x+w)+this.c *(y+h)+this.tx;
			var y2=this.b *(x+w)+this.d *(y+h)+this.ty;
			var x3=this.a *x+this.c *(y+h)+this.tx;
			var y3=this.b *x+this.d *(y+h)+this.ty;
			bounds.x=Math.min(x0,x1,x2,x3);
			bounds.width=Math.max(x0,x1,x2,x3)-bounds.x;
			bounds.y=Math.min(y0,y1,y2,y3);
			bounds.height=Math.max(y0,y1,y2,y3)-bounds.y;
			return bounds;
		}

		Matrix.lerp=function(mo,m1,m2,f){
			mo.a=m1.a+(m2.a-m1.a)*f;
			mo.b=m1.b+(m2.b-m1.b)*f;
			mo.c=m1.c+(m2.c-m1.c)*f;
			mo.d=m1.d+(m2.d-m1.d)*f;
			mo.tx=m1.tx+(m2.tx-m1.tx)*f;
			mo.ty=m1.ty+(m2.ty-m1.ty)*f;
		}

		Matrix.lerp1=function(mo,m1,m2,f){
			mo.a=m1[0]+(m2[0]-m1[0])*f;
			mo.b=m1[1]+(m2[1]-m1[1])*f;
			mo.c=m1[2]+(m2[2]-m1[2])*f;
			mo.d=m1[3]+(m2[3]-m1[3])*f;
			mo.tx=m1[4]+(m2[4]-m1[4])*f;
			mo.ty=m1[5]+(m2[5]-m1[5])*f;
		}

		Matrix.fromSRT=function(mo,sx,sy,r,tx,ty){
			var st=Math.sin(r);
			var ct=Math.cos(r);
			mo.a=sx *ct;
			mo.b=sx *st;
			mo.c=-sy *st;
			mo.d=sy *ct;
			mo.tx=tx;
			mo.ty=ty;
		}

		Matrix.fromRST=function(mo,sx,sy,r,tx,ty){
			var st=Math.sin(r);
			var ct=Math.cos(r);
			mo.a=sx *ct;
			mo.b=sy *st;
			mo.c=-sx *st;
			mo.d=sy *ct;
			mo.tx=tx;
			mo.ty=ty;
		}

		Matrix.fromTransformInfo=function(mo,sx,sy,sr,r,tx,ty){
			if (sr==0.0)
				Matrix.fromSRT(mo,sx,sy,r,tx,ty);
			else if (Math.abs(sr-r)< 0.0001)
			Matrix.fromRST(mo,sx,sy,r,tx,ty);
			else{
				var st=Math.sin(sr);
				var ct=Math.cos(sr);
				mo.a=sx *ct;
				mo.b=sy *st;
				mo.c=-sx *st;
				mo.d=sy *ct;
				mo.tx=0;
				mo.ty=0;
				var mt=new Matrix();
				mt.a=ct;
				mt.b=-st;
				mt.c=st;
				mt.d=ct;
				mt.tx=0;
				mt.ty=0;
				Matrix.mul(mo,mo,mt);
				st=Math.sin(r);
				ct=Math.cos(r);
				mt.a=ct;
				mt.b=st;
				mt.c=-st;
				mt.d=ct;
				mt.tx=0;
				mt.ty=0;
				Matrix.mul(mo,mo,mt);
				mo.tx=tx;
				mo.ty=ty;
			}
		}

		Matrix.mul=function(mo,m1,m2){
			var aa=m1.a,ab=m1.b,ac=m1.c,ad=m1.d,atx=m1.tx,aty=m1.ty,ba=m2.a,bb=m2.b,bc=m2.c,bd=m2.d,btx=m2.tx,bty=m2.ty;
			mo.a=aa *ba+ab *bc;
			mo.b=aa *bb+ab *bd;
			mo.c=ac *ba+ad *bc;
			mo.d=ac *bb+ad *bd;
			mo.tx=ba *atx+bc *aty+btx;
			mo.ty=bb *atx+bd *aty+bty;
		}

		__static(Matrix,
		['__DEFAULT__',function(){return this.__DEFAULT__=new Matrix();},'__SMALL__',function(){return this.__SMALL__=new Matrix(0.00001,0,0,0.000001,0,0);}
		]);
		return Matrix;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/matrix3d.as
	//class iflash.geom.Matrix3D
	var Matrix3D=(function(){
		function Matrix3D(v){
			this.$vec=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];
			this.$transposeTransform=[0,4,8,12,1,5,9,13,2,6,10,14,3,7,11,15];
			if (v !=null){
				if (v.length !=this.$vec.length){
					throw new Error("Not equal length!");
				}
				for (var i=0;i < this.$vec.length;i++){
					this.$vec[i]=v[i];
				}
			}
		}

		__class(Matrix3D,'iflash.geom.Matrix3D',true);
		var __proto=Matrix3D.prototype;
		__proto.append=function(lhs){
			var ma=lhs.rawData,mb=this.$vec;
			var ma11=ma[0],ma12=ma[4],ma13=ma[8],ma14=ma[12];
			var ma21=ma[1],ma22=ma[5],ma23=ma[9],ma24=ma[13];
			var ma31=ma[2],ma32=ma[6],ma33=ma[10],ma34=ma[14];
			var ma41=ma[3],ma42=ma[7],ma43=ma[11],ma44=ma[15];
			var mb11=mb[0],mb12=mb[4],mb13=mb[8],mb14=mb[12];
			var mb21=mb[1],mb22=mb[5],mb23=mb[9],mb24=mb[13];
			var mb31=mb[2],mb32=mb[6],mb33=mb[10],mb34=mb[14];
			var mb41=mb[3],mb42=mb[7],mb43=mb[11],mb44=mb[15];
			this.$vec[0]=ma11 *mb11+ma12 *mb21+ma13 *mb31+ma14 *mb41;
			this.$vec[1]=ma21 *mb11+ma22 *mb21+ma23 *mb31+ma24 *mb41;
			this.$vec[2]=ma31 *mb11+ma32 *mb21+ma33 *mb31+ma34 *mb41;
			this.$vec[3]=ma41 *mb11+ma42 *mb21+ma43 *mb31+ma44 *mb41;
			this.$vec[4]=ma11 *mb12+ma12 *mb22+ma13 *mb32+ma14 *mb42;
			this.$vec[5]=ma21 *mb12+ma22 *mb22+ma23 *mb32+ma24 *mb42;
			this.$vec[6]=ma31 *mb12+ma32 *mb22+ma33 *mb32+ma34 *mb42;
			this.$vec[7]=ma41 *mb12+ma42 *mb22+ma43 *mb32+ma44 *mb42;
			this.$vec[8]=ma11 *mb13+ma12 *mb23+ma13 *mb33+ma14 *mb43;
			this.$vec[9]=ma21 *mb13+ma22 *mb23+ma23 *mb33+ma24 *mb43;
			this.$vec[10]=ma31 *mb13+ma32 *mb23+ma33 *mb33+ma34 *mb43;
			this.$vec[11]=ma41 *mb13+ma42 *mb23+ma43 *mb33+ma44 *mb43;
			this.$vec[12]=ma11 *mb14+ma12 *mb24+ma13 *mb34+ma14 *mb44;
			this.$vec[13]=ma21 *mb14+ma22 *mb24+ma23 *mb34+ma24 *mb44;
			this.$vec[14]=ma31 *mb14+ma32 *mb24+ma33 *mb34+ma34 *mb44;
			this.$vec[15]=ma41 *mb14+ma42 *mb24+ma43 *mb34+ma44 *mb44;
		}

		__proto.appendRotation=function(degrees,axis,pivotPoint){
			this.append(this.getRotationMatrix(degrees / 180 *Math.PI,axis.x,axis.y,axis.z,pivotPoint ? pivotPoint.x :0,pivotPoint ? pivotPoint.y :0,pivotPoint ? pivotPoint.z :0));
		}

		__proto.appendScale=function(xScale,yScale,zScale){
			this.$vec[0]*=xScale;
			this.$vec[1]*=yScale;
			this.$vec[2]*=zScale;
			this.$vec[4]*=xScale;
			this.$vec[5]*=yScale;
			this.$vec[6]*=zScale;
			this.$vec[8]*=xScale;
			this.$vec[9]*=yScale;
			this.$vec[10]*=zScale;
			this.$vec[12]*=xScale;
			this.$vec[13]*=yScale;
			this.$vec[14]*=zScale;
		}

		__proto.appendTranslation=function(x,y,z){
			var m=this.$vec;
			var m41=m[3],m42=m[7],m43=m[11],m44=m[15];
			m[0]+=x *m41;
			m[1]+=y *m41;
			m[2]+=z *m41;
			m[4]+=x *m42;
			m[5]+=y *m42;
			m[6]+=z *m42;
			m[8]+=x *m43;
			m[9]+=y *m43;
			m[10]+=z *m43;
			m[12]+=x *m44;
			m[13]+=y *m44;
			m[14]+=z *m44;
		}

		__proto.clone=function(){
			return new iflash.geom.Matrix3D(this.$vec);
		}

		__proto.copyColumnFrom=function(column,vector3D){
			if (column > 3)
				throw new Error("column number too bigger");
			var offset=column << 2;
			this.$vec[offset]=vector3D.x;
			this.$vec[offset+1]=vector3D.y;
			this.$vec[offset+2]=vector3D.z;
			this.$vec[offset+3]=vector3D.w;
		}

		__proto.copyColumnTo=function(column,vector3D){
			if (column > 3)
				throw new Error("column number too bigger");
			var offset=column << 2;
			vector3D.x=this.$vec[offset];
			vector3D.y=this.$vec[offset+1];
			vector3D.z=this.$vec[offset+2];
			vector3D.w=this.$vec[offset+3];
		}

		__proto.copyFrom=function(sourceMatrix3D){
			for (var i=0;i < this.$vec.length;i++){
				this.$vec[i]=sourceMatrix3D.$vec[i];
			}
		}

		__proto.copyRawDataFrom=function(vector,index,transpose){
			(index===void 0)&& (index=0);
			(transpose===void 0)&& (transpose=false);
			var i=0,j=index | 0
			if (transpose){
				for (;i < 16;i++,j++){
					this.$vec[this.$transposeTransform[i]]=vector[j] || 0;
				}
			}
			else{
				for (;i < 16;i++,j++){
					this.$vec[i]=vector[j] || 0;
				}
			}
		}

		__proto.copyRawDataTo=function(vector,index,transpose){
			(index===void 0)&& (index=0);
			(transpose===void 0)&& (transpose=false);
			var i=0,j=index | 0;
			if (transpose){
				for (;i < 16;i++,j++){
					vector[j]=this.$vec[this.$transposeTransform[i]];
				}
			}
			else{
				for (;i < 16;i++,j++){
					vector[j]=this.$vec[i];
				}
			}
		}

		__proto.copyRowFrom=function(row,vector3D){
			if (row > 3)
				throw new Error("row number too bigger",0);
			var offset=row | 0;
			this.$vec[offset]=vector3D.x;
			this.$vec[offset+4]=vector3D.y;
			this.$vec[offset+8]=vector3D.z;
			this.$vec[offset+12]=vector3D.w;
		}

		__proto.copyRowTo=function(row,vector3D){
			var offset=row | 0;
			vector3D.x=this.$vec[offset];
			vector3D.y=this.$vec[offset+4];
			vector3D.z=this.$vec[offset+8];
			vector3D.w=this.$vec[offset+12];
		}

		__proto.copyToMatrix3D=function(dest){
			for (var i=0;i < 16;i++){
				dest.rawData[i]=this.$vec[i];
			}
		}

		__proto.decompose=function(orientationStyle){
			(orientationStyle===void 0)&& (orientationStyle="eulerAngles");
			throw new Error("decompose");
			var t_mat=this.original;
			var t_vec3D=t_mat.decompose(orientationStyle);
			var t_resVec=new Array(t_vec3D.length);
			for (var i=0;i < t_resVec.length;i++){
				t_resVec[i].x=t_vec3D[i].x;
				t_resVec[i].y=t_vec3D[i].y;
				t_resVec[i].z=t_vec3D[i].z;
				t_resVec[i].w=t_vec3D[i].w;
			}
			return t_resVec;
		}

		__proto.deltaTransformVector=function(v){
			var x=v.x,y=v.y,z=v.z;
			return new Vector3D(this.$vec[0] *x+this.$vec[4] *y+this.$vec[8] *z,this.$vec[1] *x+this.$vec[5] *y+this.$vec[9] *z,this.$vec[2] *x+this.$vec[6] *y+this.$vec[10] *z);
		}

		__proto.identity=function(){
			this.$vec[0]=this.$vec[5]=this.$vec[10]=this.$vec[15]=1;
			this.$vec[1]=this.$vec[2]=this.$vec[3]=this.$vec[4]=this.$vec[6]=this.$vec[7]=this.$vec[8]=this.$vec[9]=this.$vec[11]=this.$vec[12]=this.$vec[13]=this.$vec[14]=0;
		}

		__proto.interpolateTo=function(toMat,percent){
			throw new Error("NOT REAL FUNCTION!!!",0);
		}

		__proto.invert=function(){
			var m=this.$vec;
			var m00=m[0],m01=m[4],m02=m[8],m03=m[12];
			var m10=m[1],m11=m[5],m12=m[9],m13=m[13];
			var m20=m[2],m21=m[6],m22=m[10],m23=m[14];
			var m30=m[3],m31=m[7],m32=m[11],m33=m[15];
			var v0=m20 *m31-m21 *m30;
			var v1=m20 *m32-m22 *m30;
			var v2=m20 *m33-m23 *m30;
			var v3=m21 *m32-m22 *m31;
			var v4=m21 *m33-m23 *m31;
			var v5=m22 *m33-m23 *m32;
			var t00=+(v5 *m11-v4 *m12+v3 *m13);
			var t10=-(v5 *m10-v2 *m12+v1 *m13);
			var t20=+(v4 *m10-v2 *m11+v0 *m13);
			var t30=-(v3 *m10-v1 *m11+v0 *m12);
			var invDet=1 / (t00 *m00+t10 *m01+t20 *m02+t30 *m03);
			var d00=t00 *invDet;
			var d10=t10 *invDet;
			var d20=t20 *invDet;
			var d30=t30 *invDet;
			var d01=-(v5 *m01-v4 *m02+v3 *m03)*invDet;
			var d11=+(v5 *m00-v2 *m02+v1 *m03)*invDet;
			var d21=-(v4 *m00-v2 *m01+v0 *m03)*invDet;
			var d31=+(v3 *m00-v1 *m01+v0 *m02)*invDet;
			v0=m10 *m31-m11 *m30;
			v1=m10 *m32-m12 *m30;
			v2=m10 *m33-m13 *m30;
			v3=m11 *m32-m12 *m31;
			v4=m11 *m33-m13 *m31;
			v5=m12 *m33-m13 *m32;
			var d02=+(v5 *m01-v4 *m02+v3 *m03)*invDet;
			var d12=-(v5 *m00-v2 *m02+v1 *m03)*invDet;
			var d22=+(v4 *m00-v2 *m01+v0 *m03)*invDet;
			var d32=-(v3 *m00-v1 *m01+v0 *m02)*invDet;
			v0=m21 *m10-m20 *m11;
			v1=m22 *m10-m20 *m12;
			v2=m23 *m10-m20 *m13;
			v3=m22 *m11-m21 *m12;
			v4=m23 *m11-m21 *m13;
			v5=m23 *m12-m22 *m13;
			var d03=-(v5 *m01-v4 *m02+v3 *m03)*invDet;
			var d13=+(v5 *m00-v2 *m02+v1 *m03)*invDet;
			var d23=-(v4 *m00-v2 *m01+v0 *m03)*invDet;
			var d33=+(v3 *m00-v1 *m01+v0 *m02)*invDet;
			var mat3D=new iflash.geom.Matrix3D([d00,d01,d02,d03,d10,d11,d12,d13,d20,d21,d22,d23,d30,d31,d32,d33]);
			if (Math.abs(mat3D.determinant)< 0.000001)
				return false;
			else{
				for (var i=0;i < this.$vec.length;i++){
					this.$vec[i]=mat3D.rawData[i];
				}
				return true;
			}
		}

		__proto.pointAt=LAYAFNVOID/*function(pos,at,up){}*/
		__proto.prepend=function(rhs){
			var ma=this.$vec,mb=rhs.rawData;
			var ma11=ma[0],ma12=ma[4],ma13=ma[8],ma14=ma[12];
			var ma21=ma[1],ma22=ma[5],ma23=ma[9],ma24=ma[13];
			var ma31=ma[2],ma32=ma[6],ma33=ma[10],ma34=ma[14];
			var ma41=ma[3],ma42=ma[7],ma43=ma[11],ma44=ma[15];
			var mb11=mb[0],mb12=mb[4],mb13=mb[8],mb14=mb[12];
			var mb21=mb[1],mb22=mb[5],mb23=mb[9],mb24=mb[13];
			var mb31=mb[2],mb32=mb[6],mb33=mb[10],mb34=mb[14];
			var mb41=mb[3],mb42=mb[7],mb43=mb[11],mb44=mb[15];
			this.$vec[0]=ma11 *mb11+ma12 *mb21+ma13 *mb31+ma14 *mb41;
			this.$vec[1]=ma21 *mb11+ma22 *mb21+ma23 *mb31+ma24 *mb41;
			this.$vec[2]=ma31 *mb11+ma32 *mb21+ma33 *mb31+ma34 *mb41;
			this.$vec[3]=ma41 *mb11+ma42 *mb21+ma43 *mb31+ma44 *mb41;
			this.$vec[4]=ma11 *mb12+ma12 *mb22+ma13 *mb32+ma14 *mb42;
			this.$vec[5]=ma21 *mb12+ma22 *mb22+ma23 *mb32+ma24 *mb42;
			this.$vec[6]=ma31 *mb12+ma32 *mb22+ma33 *mb32+ma34 *mb42;
			this.$vec[7]=ma41 *mb12+ma42 *mb22+ma43 *mb32+ma44 *mb42;
			this.$vec[8]=ma11 *mb13+ma12 *mb23+ma13 *mb33+ma14 *mb43;
			this.$vec[9]=ma21 *mb13+ma22 *mb23+ma23 *mb33+ma24 *mb43;
			this.$vec[10]=ma31 *mb13+ma32 *mb23+ma33 *mb33+ma34 *mb43;
			this.$vec[11]=ma41 *mb13+ma42 *mb23+ma43 *mb33+ma44 *mb43;
			this.$vec[12]=ma11 *mb14+ma12 *mb24+ma13 *mb34+ma14 *mb44;
			this.$vec[13]=ma21 *mb14+ma22 *mb24+ma23 *mb34+ma24 *mb44;
			this.$vec[14]=ma31 *mb14+ma32 *mb24+ma33 *mb34+ma34 *mb44;
			this.$vec[15]=ma41 *mb14+ma42 *mb24+ma43 *mb34+ma44 *mb44;
		}

		__proto.prependRotation=function(degrees,axis,pivotPoint){
			this.prepend(this.getRotationMatrix(degrees / 180 *Math.PI,axis.x,axis.y,axis.z,pivotPoint ? pivotPoint.x :0,pivotPoint ? pivotPoint.y :0,pivotPoint ? pivotPoint.z :0));
		}

		__proto.prependScale=function(xScale,yScale,zScale){
			this.$vec[0]*=xScale;
			this.$vec[1]*=xScale;
			this.$vec[2]*=xScale;
			this.$vec[3]*=xScale;
			this.$vec[4]*=yScale;
			this.$vec[5]*=yScale;
			this.$vec[6]*=yScale;
			this.$vec[7]*=yScale;
			this.$vec[8]*=zScale;
			this.$vec[9]*=zScale;
			this.$vec[10]*=zScale;
			this.$vec[11]*=zScale;
		}

		__proto.prependTranslation=function(x,y,z){
			var m=this.$vec;
			var m11=m[0],m12=m[4],m13=m[8];
			var m21=m[1],m22=m[5],m23=m[9];
			var m31=m[2],m32=m[6],m33=m[10];
			var m41=m[3],m42=m[7],m43=m[11];
			m[12]+=m11 *x+m12 *y+m13 *z;
			m[13]+=m21 *x+m22 *y+m23 *z;
			m[14]+=m31 *x+m32 *y+m33 *z;
			m[15]+=m41 *x+m42 *y+m43 *z;
		}

		__proto.recompose=function(components,orientationStyle){
			(orientationStyle===void 0)&& (orientationStyle="eulerAngles");
			return false}
		__proto.transformVector=function(v){
			var x=v.x,y=v.y,z=v.z;
			return new Vector3D(this.$vec[0] *x+this.$vec[4] *y+this.$vec[8] *z+this.$vec[12],this.$vec[1] *x+this.$vec[5] *y+this.$vec[9] *z+this.$vec[13],this.$vec[2] *x+this.$vec[6] *y+this.$vec[10] *z+this.$vec[14]);
		}

		__proto.transformVectors=function(vin,vout){
			var m11=this.$vec[0],m12=this.$vec[4],m13=this.$vec[8],m14=this.$vec[12];
			var m21=this.$vec[1],m22=this.$vec[5],m23=this.$vec[9],m24=this.$vec[13];
			var m31=this.$vec[2],m32=this.$vec[6],m33=this.$vec[10],m34=this.$vec[14];
			var m41=this.$vec[3],m42=this.$vec[7],m43=this.$vec[11],m44=this.$vec[15];
			for (var i=0;i < vin.length-2;i+=3){
				var x=vin[i],y=vin[i+1],z=vin[i+2];
				vout[i]=m11 *x+m12 *y+m13 *z+m14;
				vout[i+1]=m21 *x+m22 *y+m23 *z+m24;
				vout[i+2]=m31 *x+m32 *y+m33 *z+m34;
			}
		}

		__proto.transpose=function(){
			var tmp=NaN;
			tmp=this.$vec[1];
			this.$vec[1]=this.$vec[4];
			this.$vec[4]=tmp;
			tmp=this.$vec[2];
			this.$vec[2]=this.$vec[8];
			this.$vec[5]=tmp;
			tmp=this.$vec[3];
			this.$vec[3]=this.$vec[12];
			this.$vec[12]=tmp;
			tmp=this.$vec[6];
			this.$vec[6]=this.$vec[9];
			this.$vec[9]=tmp;
			tmp=this.$vec[7];
			this.$vec[7]=this.$vec[13];
			this.$vec[13]=tmp;
			tmp=this.$vec[11];
			this.$vec[11]=this.$vec[14];
			this.$vec[14]=tmp;
		}

		__proto.getRotationMatrix=function(theta,u,v,w,a,b,c){
			var u2=u *u,v2=v *v,w2=w *w;
			var L2=u2+v2+w2,L=Math.sqrt(L2);
			u/=L;
			v/=L;
			w/=L;
			u2/=L2;
			v2/=L2;
			w2/=L2;
			var cos=Math.cos(theta),sin=Math.sin(theta);
			var vec=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ,1];
			vec[0]=u2+(v2+w2)*cos;
			vec[1]=u *v *(1-cos)+w *sin;
			vec[2]=u *w *(1-cos)-v *sin;
			vec[3]=0;
			vec[4]=u *v *(1-cos)-w *sin;
			vec[5]=v2+(u2+w2)*cos;
			vec[6]=v *w *(1-cos)+u *sin;
			vec[7]=0;
			vec[8]=u *w *(1-cos)+v *sin;
			vec[9]=v *w *(1-cos)-u *sin;
			vec[10]=w2+(u2+v2)*cos;
			vec[11]=0;
			vec[12]=(a *(v2+w2)-u *(b *v+c *w))*(1-cos)+(b *w-c *v)*sin;
			vec[13]=(b *(u2+w2)-v *(a *u+c *w))*(1-cos)+(c *u-a *w)*sin;
			vec[14]=(c *(u2+v2)-w *(a *u+b *v))*(1-cos)+(a *v-b *u)*sin;
			return new iflash.geom.Matrix3D(vec);
		}

		__getset(0,__proto,'determinant',function(){
			var m11=this.$vec[0],m12=this.$vec[4],m13=this.$vec[8],m14=this.$vec[12];
			var m21=this.$vec[1],m22=this.$vec[5],m23=this.$vec[9],m24=this.$vec[13];
			var m31=this.$vec[2],m32=this.$vec[6],m33=this.$vec[10],m34=this.$vec[14];
			var m41=this.$vec[3],m42=this.$vec[7],m43=this.$vec[11],m44=this.$vec[15];
			return m11 *(m22 *(m33 *m44-m43 *m34)-m32 *(m23 *m44-m43 *m24)+m42 *(m23 *m34-m33 *m24))-m21 *(m12 *(m33 *m44-m43 *m34)-m32 *(m13 *m44-m43 *m14)+m42 *(m13 *m34-m33 *m14))+m31 *(m12 *(m23 *m44-m43 *m24)-m22 *(m13 *m44-m43 *m14)+m42 *(m13 *m24-m23 *m14))-m41 *(m12 *(m23 *m34-m33 *m24)-m22 *(m13 *m34-m33 *m14)+m32 *(m13 *m24-m23 *m14));
		});

		__getset(0,__proto,'position',function(){
			return new Vector3D(this.$vec[12],this.$vec[13],this.$vec[14]);
			},function(pos){
			this.$vec[12]=pos.x;
			this.$vec[13]=pos.y;
			this.$vec[14]=pos.z;
		});

		__getset(0,__proto,'rawData',function(){
			return this.$vec;
			},function(v){
			if (v.length !=this.$vec.length){
				throw new Error("Data Error");
			}
			for (var i=0;i < v.length;i++){
				this.$vec[i]=v[i];
			}
		});

		Matrix3D.interpolate=LAYAFNNULL/*function(thisMat,toMat,percent){return null}*/
		return Matrix3D;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/perspectiveprojection.as
	//class iflash.geom.PerspectiveProjection
	var PerspectiveProjection=(function(){
		function PerspectiveProjection(){}
		__class(PerspectiveProjection,'iflash.geom.PerspectiveProjection',true);
		var __proto=PerspectiveProjection.prototype;
		__proto.toMatrix3D=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'fieldOfView',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(fieldOfViewAngleInDegrees){}*/);
		__getset(0,__proto,'focalLength',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'projectionCenter',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(p){}*/);
		return PerspectiveProjection;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/point.as
	//class iflash.geom.Point
	var Point=(function(){
		function Point(x,y){
			this.x=NaN;
			this.y=NaN;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			this.x=x*1;
			this.y=y*1;
		}

		__class(Point,'iflash.geom.Point',false);
		var __proto=Point.prototype;
		__proto.add=function(v){
			var result=new Point();
			result.x=this.x+v.x;
			result.y=this.y+v.y;
			return result;
		}

		__proto.clone=function(){
			var result=new Point();
			result.x=this.x;
			result.y=this.y;
			return result;
		}

		__proto.copyFrom=function(sourcePoint){
			this.x=sourcePoint.x;
			this.y=sourcePoint.y;
			return this;
		}

		__proto.equals=function(toCompare){
			if (toCompare==null)
				return false;
			else{
				if (toCompare.x==this.x && toCompare.y==this.y)
					return true;
				return false;
			}
		}

		__proto.normalize=function(thickness){
			var rate=thickness / this.length;
			this.x=rate *this.x;
			this.y=rate *this.y;
		}

		__proto.offset=function(dx,dy){
			this.x+=dx;
			this.y+=dy;
		}

		__proto.setTo=function(xa,ya){
			this.x=xa;
			this.y=ya;
			return this;
		}

		__proto.subtract=function(v){
			var result=new Point();
			result.x=this.x-v.x;
			result.y=this.y-v.y;
			return result;
		}

		__proto.identity=function(){
			this.x=this.y=0.0;
		}

		__proto.toString=function(){
			return "(x="+this.x+", y="+this.y+")";
		}

		__getset(0,__proto,'length',function(){
			return Math.sqrt(Math.pow(this.x ,2)+Math.pow(this.y,2));
		});

		Point.distance=function(pt1,pt2){
			return Math.sqrt(Math.pow((pt2.x-pt1.x),2)+Math.pow((pt2.y-pt1.y),2));
		}

		Point.interpolate=function(pt1,pt2,f){
			var f1=1-f;
			var result=new Point();
			result.x=pt1.x *f+pt2.x *f1;
			result.y=pt1.y *f+pt2.y *f1;
			return result;
		}

		Point.polar=function(len,angle){
			var result=new Point();
			result.x=len *Math.cos(angle);
			result.y=len *Math.sin(angle);
			return result;
		}

		__static(Point,
		['__DEFAULT__',function(){return this.__DEFAULT__=new Point();}
		]);
		return Point;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/rectangle.as
	//class iflash.geom.Rectangle
	var Rectangle=(function(){
		function Rectangle(x,y,width,height){
			this.height=0;
			this.width=0;
			this.x=0;
			this.y=0;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			this.x=Number(x);
			this.y=Number(y);
			this.width=Number(width);
			this.height=Number(height);
		}

		__class(Rectangle,'iflash.geom.Rectangle',false);
		var __proto=Rectangle.prototype;
		__proto.clone=function(){
			return new Rectangle(this.x,this.y,this.width,this.height);
		}

		__proto.contains=function(_x,_y){
			if(_x<this.x||_y<this.y){
				return false;
			}
			return (_x<(this.x+this.width)&&_y<(this.y+this.height))
		}

		__proto.containsPoint=function(point){
			return this.contains(point.x,point.y);
		}

		__proto.containsRect=function(rect){
			return this.contains(rect.x,rect.y)&& this.contains(rect.x+rect.width,rect.y+rect.height);
		}

		__proto.copyFrom=function(sourceRect){
			this.x=sourceRect.x;
			this.y=sourceRect.y;
			this.width=sourceRect.width;
			this.height=sourceRect.height;
		}

		__proto.equals=function(toCompare){
			return this.x==toCompare.x && this.y==toCompare.y && this.width==toCompare.width && this.height==toCompare.height;
		}

		__proto.inflate=function(dx,dy){
			this.x-=dx;
			this.y-=dy;
			this.width+=dx*2;
			this.height+=dy*2;
		}

		__proto.inflatePoint=function(point){
			this.inflate(point.x,point.y);
		}

		__proto.intersection=function(toIntersect){
			var minr=Math.min(this.x+this.width,toIntersect.right);
			var minb=Math.min(this.y+this.height,toIntersect.bottom);
			var maxx=Math.max(this.x,toIntersect.x);
			var maxy=Math.max(this.y,toIntersect.y);
			return new Rectangle(maxx,maxy,minr-maxx,minb-maxy);
		}

		__proto.intersectionThis=function(toIntersect){
			var minr=Math.min(this.x+this.width,toIntersect.right);
			var minb=Math.min(this.y+this.height,toIntersect.bottom);
			this.x=Math.max(this.x,toIntersect.x);
			this.y=Math.max(this.y,toIntersect.y);
			this.width=minr-this.x;
			this.height=minb-this.y;
		}

		__proto.intersects=function(toIntersect){
			var minr=Math.min(this.x+this.width,toIntersect.right);
			var minb=Math.min(this.y+this.height,toIntersect.bottom);
			var maxx=Math.max(this.x,toIntersect.x);
			var maxy=Math.max(this.y,toIntersect.y);
			return minr > maxx && minb > maxy;
		}

		__proto.isEmpty=function(){
			return this.width<1 || this.height<1;
		}

		__proto.offset=function(dx,dy){
			this.x+=dx;
			this.y+=dy;
		}

		__proto.offsetPoint=function(point){
			this.x+=point.x;
			this.y+=point.y;
		}

		__proto.setEmpty=function(){
			this.x=this.y=this.width=this.height=0;
		}

		__proto.setTo=function(xa,ya,widtha,heighta){
			this.x=xa;
			this.y=ya;
			this.width=widtha;
			this.height=heighta;
			return this;
		}

		__proto.toString=function(){
			return "(x="+this.x+", y="+this.y+", w="+this.width+", h="+this.height+")";
		}

		__proto.union=function(toUnion){
			if (toUnion==null)return this;
			if(this.width==0 || this.height==0){
				return new Rectangle(toUnion.x,toUnion.y,toUnion.width,toUnion.height);
			}
			if(toUnion.width==0 || toUnion.height==0){
				return new Rectangle(this.x,this.y,this.width,this.height);
			};
			var maxr=Math.max(this.x+this.width,toUnion.right);
			var maxb=Math.max(this.y+this.height,toUnion.bottom);
			var minx=Math.min(this.x,toUnion.x);
			var miny=Math.min(this.y,toUnion.y);
			return new Rectangle(minx,miny,maxr-minx,maxb-miny);
		}

		__proto._union_=function(toUnion){
			if (toUnion==null)return this;
			if(this.width==0 || this.height==0){
				return this.setTo(toUnion.x,toUnion.y,toUnion.width,toUnion.height);
			}
			if(toUnion.width==0 || toUnion.height==0){
				return this.setTo(this.x,this.y,this.width,this.height);
			};
			var maxr=Math.max(this.x+this.width,toUnion.right);
			var maxb=Math.max(this.y+this.height,toUnion.bottom);
			var minx=Math.min(this.x,toUnion.x);
			var miny=Math.min(this.y,toUnion.y);
			return this.setTo(minx,miny,maxr-minx,maxb-miny);
		}

		__getset(0,__proto,'bottom',function(){
			return this.height+this.y;
			},function(value){
			this.height=value-this.y;
		});

		__getset(0,__proto,'top',function(){
			return this.y;
			},function(value){
			this.height-=value-this.y;
			this.y=value;
		});

		__getset(0,__proto,'bottomRight',function(){
			return new Point(this.x+this.width,this.height+this.y);
			},function(value){
			this.right=value.x;
			this.bottom=value.y;
		});

		__getset(0,__proto,'left',function(){
			return this.x;
			},function(value){
			this.width-=value-this.x;
			this.x=value;
		});

		__getset(0,__proto,'right',function(){
			return this.x+this.width;
			},function(value){
			this.width=value-this.x;
		});

		__getset(0,__proto,'size',function(){
			return new Point(this.width,this.height);
			},function(value){
			this.width=value.x;
			this.height=value.y;
		});

		__getset(0,__proto,'topLeft',function(){
			return new Point(this.x,this.y);
			},function(value){
			this.left=value.x;
			this.top=value.y;
		});

		__static(Rectangle,
		['__DEFAULT__',function(){return this.__DEFAULT__=new Rectangle;}
		]);
		return Rectangle;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/transform.as
	//class iflash.geom.Transform
	var Transform=(function(){
		function Transform(){
			this._colorTransform_=null;
			this._rotate_=0;
			this.__node__=null;
			this._scale_=Transform.__SCALE__;
			this._skew_=Point.__DEFAULT__;
			this._matrix_=new Matrix();
		}

		__class(Transform,'iflash.geom.Transform',true);
		var __proto=Transform.prototype;
		__proto._setNode_=function(d){
			this.__node__=d;
			this._colorTransform_=ColorTransform._DEFAULT_;
			Laya.RENDERBYCANVAS && d && DrawTransform.insertUnit(d);
			return this;
		}

		__proto._setRotation_=function(value){
			if (value==this._rotate_)
				return;
			this._rotate_=value;
			this.__node__._type_ |=/*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			this.__node__._modle_.rotate2d(value);
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__proto._setScaleX_=function(value){
			if (value==this._scale_.x)
				return;
			(this._scale_ !=Transform.__SCALE__)?(this._scale_.x=value):(this._scale_=new Point(value,1));
			this.__node__._type_ |=/*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			this.__node__._modle_.scale2dEx(this._scale_.x,this._scale_.y);
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__proto._setScaleY_=function(value){
			if (value==this._scale_.y)return;
			(this._scale_ !=Transform.__SCALE__)?(this._scale_.y=value):(this._scale_=new Point(1,value));
			this.__node__._type_ |=/*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			this.__node__._modle_.scale2dEx(this._scale_.x,this._scale_.y);
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__proto._setSkewX_=function(value){
			if (value==this._skew_.x)
				return;
			(this._skew_ !=Point.__DEFAULT__)?(this._skew_.x=value):(this._skew_=new Point(value,0));
			this.__node__._type_ |=/*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			if (Laya.CONCHVER){
				var martix=this.matrix;
				this.__node__._modle_.matrix(martix.a,martix.b,martix.c,martix.d,0,0);
			}
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__proto._setSkewY_=function(value){
			if (value==this._skew_.y)
				return;
			(this._skew_ !=Point.__DEFAULT__)?(this._skew_.y=value):(this._skew_=new Point(0,value));
			this.__node__._type_ |=/*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			if (Laya.CONCHVER){
				var martix=this.matrix;
				this.__node__._modle_.matrix(martix.a,martix.b,martix.c,martix.d,0,0);
			}
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__getset(0,__proto,'matrix',function(){
			if ((this.__node__._type_ & /*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000)==0)return this._matrix_.clone();
			this.__node__._type_ &=~ /*iflash.display.DisplayObject.TYPE_MATRIX_CHG*/0x20000;
			if (this._skew_.x==0.0 && this._skew_.y==0.0){
				if (this._rotate_==0.0){
					this._matrix_.setTo(this._scale_.x,0.0,0.0,this._scale_.y,this.__node__._left_,this.__node__._top_);
				}
				else{
					var cos=Math.cos(this._rotate_*Transform.ATOR);
					var sin=Math.sin(this._rotate_*Transform.ATOR);
					this._matrix_.a=this._scale_.x *cos;
					this._matrix_.b=this._scale_.x *sin;
					this._matrix_.c=this._scale_.y *-sin;
					this._matrix_.d=this._scale_.y *cos;
					this._matrix_.tx=this.__node__._left_;
					this._matrix_.ty=this.__node__._top_;
				}
			}
			else{
				this._matrix_.identity();
				this._matrix_.a=this._scale_.x;
				this._matrix_.d=this._scale_.y;
				Transform.__skew__(this._matrix_,this._skew_.x,this._skew_.y);
				this._matrix_.translate(this.__node__._left_,this.__node__._top_);
			}
			return this._matrix_.clone();
			},function(value){
			if(this._matrix_.IsEqual(value))return;
			this._matrix_.copy(value);
			this.__node__.x=this._matrix_.tx;
			this.__node__.y=this._matrix_.ty;
			this._skew_=(this._skew_!=Point.__DEFAULT__)?this._skew_:new Point();
			this._skew_.x=Math.atan(-this._matrix_.c / this._matrix_.d);
			this._skew_.y=Math.atan(this._matrix_.b / this._matrix_.a);
			if (this._skew_.x !=this._skew_.x)this._skew_.x=0.0;
			if (this._skew_.y !=this._skew_.y)this._skew_.y=0.0;
			this._scale_=(this._scale_!=Transform.__SCALE__)?this._scale_:new Point();
			this._scale_.y=(this._skew_.x >-Transform.PI_4 && this._skew_.x < Transform.PI_4)? this._matrix_.d / Math.cos(this._skew_.x)
			:-this._matrix_.c / Math.sin(this._skew_.y);
			this._scale_.x=(this._skew_.y >-Transform.PI_4 && this._skew_.y < Transform.PI_4)? this._matrix_.a / Math.cos(this._skew_.y)
			:this._matrix_.b / Math.sin(this._skew_.y);
			if(Math.abs(value.a*value.b)==Math.abs(value.c*value.d)){
				this._rotate_=Math.min(this._skew_.x*Transform.RTOA,this._skew_.y*Transform.RTOA);
				this._scale_.y=this._scale_.x=Math.min(this._scale_.y,this._scale_.x);
			}
			else{
				if ((this._skew_.x-0.0001 < this._skew_.y)&& (this._skew_.x+0.0001 > this._skew_.y)){
					this._rotate_=this._skew_.x*Transform.RTOA;
					this._skew_.x=this._skew_.y=0.0;
				}
				else this._rotate_=0.0;
			}
			if(value.a!=1|| value.b!=0|| value.c!=0|| value.d!=1)
				this.__node__._modle_.matrix(value.a,value.b,value.c,value.d,0,0);
			this.__node__._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		});

		__getset(0,__proto,'colorTransform',function(){
			return this._colorTransform_==null?(this._colorTransform_=new ColorTransform()):this._colorTransform_;
			},function(value){
			this._colorTransform_=value;
		});

		__getset(0,__proto,'concatenatedMatrix',LAYAFNNULL/*function(){return null}*/);
		Transform.__skew__=function(matrix,skewX,skewY){
			var sinX=Math.sin(skewX);
			var cosX=Math.cos(skewX);
			var sinY=Math.sin(skewY);
			var cosY=Math.cos(skewY);
			matrix.setTransform(
			matrix.a *cosY-matrix.b *sinX,
			matrix.a *sinY+matrix.b *cosX,
			matrix.c *cosY-matrix.d *sinX,
			matrix.c *sinY+matrix.d *cosX,
			matrix.tx *cosY-matrix.ty *sinX,
			matrix.tx *sinY+matrix.ty *cosX);
			matrix;
		}

		Transform.__SCALE__=new Point(1,1);
		Transform.__DEFAULT__=new Transform();
		__static(Transform,
		['PI2',function(){return this.PI2=(Math.PI*2);},'PI_4',function(){return this.PI_4=(Math.PI/4);},'RTOA',function(){return this.RTOA=(180/Math.PI);},'ATOR',function(){return this.ATOR=(Math.PI/180);}
		]);
		return Transform;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/geom/vector3d.as
	//class iflash.geom.Vector3D
	var Vector3D=(function(){
		function Vector3D(x,y,z,w){
			this.$x=0;
			this.$y=0;
			this.$z=0;
			this.$w=0;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(z===void 0)&& (z=0);
			(w===void 0)&& (w=0);
			this.$x=x;
			this.$y=y;
			this.$z=z;
			this.$w=w;
		}

		__class(Vector3D,'iflash.geom.Vector3D',false);
		var __proto=Vector3D.prototype;
		__proto.add=function(a){
			return new Vector3D(this.$x+a.x,this.$y+a.y,this.$z+a.z);
		}

		__proto.clone=function(){
			return new Vector3D(this.$x,this.$y,this.$z,this.$w);
		}

		__proto.copyFrom=function(sourceVector3D){
			this.$x=sourceVector3D.x;
			this.$y=sourceVector3D.y;
			this.$z=sourceVector3D.z;
		}

		__proto.crossProduct=function(a){
			return new Vector3D(this.$y *a.z-this.$z *a.y,this.$z *a.x-this.$x *a.z,this.$x *a.y-this.$y *a.x,1.0);
		}

		__proto.decrementBy=function(a){
			this.$x-=a.x;
			this.$y-=a.y;
			this.$z-=a.z;
		}

		__proto.dotProduct=function(a){
			return (this.$x *a.x+this.$y *a.y+this.$z *a.z);
		}

		__proto.equals=function(toCompare,allFour){
			(allFour===void 0)&& (allFour=false);
			return (this.$x==toCompare.x)&& (this.$y==toCompare.y)&& (this.$z==toCompare.z)&& (!allFour || (this.$w==toCompare.w));
		}

		__proto.incrementBy=function(a){
			this.$x+=a.x;
			this.$y+=a.y;
			this.$z+=a.z;
		}

		__proto.nearEquals=function(toCompare,tolerance,allFour){
			(allFour===void 0)&& (allFour=false);
			return (Math.abs(this.$x-toCompare.x)< tolerance)&& (Math.abs(this.$y-toCompare.y)< tolerance)&& (Math.abs(this.$z-toCompare.z)< tolerance)&& (!allFour || (Math.abs(this.$w-toCompare.w)< tolerance));
		}

		__proto.negate=function(){
			this.$x=-this.$x;
			this.$y=-this.$y;
			this.$z=-this.$z;
		}

		__proto.normalize=function(){
			var length=length;
			if (length!=0){
				this.$x/=length;
				this.$y/=length;
				this.$z/=length;
			}
			else{
				this.$x=this.$y=this.$z=0;
			}
			return length;
		}

		__proto.project=function(){
			this.$x/=this.$w;
			this.$y/=this.$w;
			this.$z/=this.$w;
		}

		__proto.scaleBy=function(s){
			this.$x*=s;
			this.$y*=s;
			this.$z*=s;
		}

		__proto.setTo=function(xa,ya,za){
			this.$x=xa;
			this.$y=ya;
			this.$z=za;
		}

		__proto.subtract=function(a){
			return new Vector3D(this.$x-a.x,this.$y-a.y,this.$z-a.z);
		}

		__proto.toString=function(){
			return "Vector3D("+this.$x+", "+this.$y+", "+this.$z+")";
		}

		__getset(0,__proto,'x',function(){
			return this.$x;
			},function(val){
			this.$x=val;
		});

		__getset(0,__proto,'y',function(){
			return this.$y;
			},function(val){
			this.$y=val;
		});

		__getset(0,__proto,'z',function(){
			return this.$z;
			},function(val){
			this.$z=val;
		});

		__getset(0,__proto,'w',function(){
			return this.$w;
			},function(val){
			this.$w=val;
		});

		__getset(0,__proto,'length',function(){
			return Math.sqrt(this.lengthSquared);
		});

		__getset(0,__proto,'lengthSquared',function(){
			return (this.$x *this.$x+this.$y *this.$y+this.$z *this.$z);
		});

		Vector3D.angleBetween=function(a,b){
			return Math.acos(a.dotProduct(b)/ (a.length *b.length));
		}

		Vector3D.distance=function(pt1,pt2){
			return pt1.subtract(pt2).length;
		}

		__static(Vector3D,
		['X_AXIS',function(){return this.X_AXIS=new Vector3D(1,0,0);},'Y_AXIS',function(){return this.Y_AXIS=new Vector3D(0,1,0);},'Z_AXIS',function(){return this.Z_AXIS=new Vector3D(0,0,1);}
		]);
		return Vector3D;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/display/canvas.as
	//class iflash.laya.display.Canvas
	var Canvas=(function(){
		function Canvas(){
			this.context=null;
			this.context3D=null;
			this.activTime=NaN;
			this._active_=0;
			this.decX=0;
			this.decY=0;
			this._width_=0;
			this._height_=0;
			this.left=0;
			this.top=0;
			this.style=null;
		}

		__class(Canvas,'iflash.laya.display.Canvas',true);
		var __proto=Canvas.prototype;
		__proto.getContext=function(type,vars){
			switch(type){
				case '2d':
					return this.context;
				case "experimental-webgl":
					return this.context3D;
				}
		}

		__proto.size=function(w,h){
			if (w !=this._width_ || h !=this._height_){
				this._width_=w;
				this._height_=h;
				this.width=w;
				this.height=h;
				if(this.context){
					this.context.widthMe=w;
					this.context.heightMe=h;
				}
			}
		}

		__proto.active=function(){
			this.activTime=Laya.window.updateTime;
			if (this._active_ > 0)return true;
			Canvas.enable(this);
			return false;
		}

		__proto.reset=function(){
			this.context.filter=null;
			this.context.textAlign="left";
			this.context.textBaseline="top";
		}

		__proto._getType_=function(){
			return 3;
		}

		__proto.isReady=function(){
			return true;
		}

		__proto.getContent=function(){
			return this;
		}

		__proto.clone=function(){
			var canvas=Canvas.create();
			canvas.context=canvas.getContext("2d");
			canvas.size(this.width,this.height);
			canvas.context.drawImage(this,0,0,this.width,this.height);
			return canvas;
		}

		__proto.setCanvasType=LAYAFNVOID/*function(type){}*/
		__getset(0,__proto,'width',function(){
			return this._width_;
			},function(w){
			if (w !=this._width_)this.size(w,this._height_);
		});

		__getset(0,__proto,'height',function(){
			return this._height_;
			},function(h){
			if (h !=this._height_)this.size(this._width_,h);
		});

		Canvas.getTempCanvas=function(){
			return Canvas._TEMP_=Canvas._TEMP_ || Canvas.create();
		}

		Canvas.create=function(){
			return Browser.document.createElement('canvas');
		}

		Canvas.__on_new__=function(c){
			if (!c.size){
				c.size=Canvas._DEFAULT_.size;
				c.active=Canvas._DEFAULT_.active;
				c.isReady=Canvas._DEFAULT_.isReady;
				c._getType_=Canvas._DEFAULT_._getType_;
				c.left=Canvas._DEFAULT_.left;
				c.top=Canvas._DEFAULT_.top;
				c.decX=c.decY=0;
				c.getContent=Canvas._DEFAULT_.getContent;
				c.clone=Canvas._DEFAULT_.clone;
			}
			/*__JS__ */if(iflash.laya.display.Canvas._bIs3D){iflash.laya.display.Canvas._Canvas3DInited=true;this.enable3D(c);}else this.enable(c);
		}

		Canvas.enableTimeoutRelease=function(c,b){
			if (b)c._active_=c._active_<0?c._active_:1;
			else c._active_=Canvas._DISABLETIMEOUTRELEASE_;
		}

		Canvas.disable=function(c){
			if (c.context){
				c.context.canvas=null;
				c.context=null;
			}
		}

		Canvas.destroy=function(c){
			Canvas.disable(c);
		}

		Canvas.enable=function(c){
			c.context=c.getContext('2d');
			c.context.canvas=c;
		}

		Canvas.enable3D=function(c){
			c.context3D=c.getContext("webgl",{alpha:false,stencil:true })|| c.getContext("experimental-webgl",{alpha:false,stencil:true });
			/*__JS__ */try{if(WebGLDebugUtils ){c.context3D=WebGLDebugUtils.makeDebugContext(c.context3D );}}catch(error ){};
			c.context3D && (c.context3D.canvas=c);
			/*__JS__ */if(window.conch ){SetupWebglContext(c.context3D);};
		}

		Canvas._DISABLETIMEOUTRELEASE_=10000;
		Canvas._Canvas3DInited=false;
		Canvas._TEMP_=null
		Canvas._bIs3D=false;
		__static(Canvas,
		['_DEFAULT_',function(){return this._DEFAULT_=new Canvas();}
		]);
		return Canvas;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/display/context.as
	//class iflash.laya.display.Context
	var Context=(function(){
		function Context(){}
		__class(Context,'iflash.laya.display.Context',true);
		var __proto=Context.prototype;
		__proto.getBitMap=function(){
			return null;
		}

		return Context;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/display/displaymethod.as
	//class iflash.laya.display.DisplayMethod
	var DisplayMethod=(function(){
		function DisplayMethod(){}
		__class(DisplayMethod,'iflash.laya.display.DisplayMethod',true);
		DisplayMethod.JpgToPng=function(img){
			var i=0,x=0,y=0,w=0,h=0,imageDataSrc,pixelsSrc,imageDataAlpha,pixelsAlpha,alpha;
			var src=Canvas.create();
			w=img.width;
			h=Math.floor((img.height-1)/ 2);
			src.size(w,h);
			src.context.drawImage(img,0,0,w,h,0,0,w,h);
			imageDataSrc=src.context.getImageData(0,0,w,h);
			pixelsSrc=imageDataSrc.data;
			alpha=Canvas.getTempCanvas();;
			alpha.active();
			alpha.size(w,h);
			alpha.context.drawImage(img,0,h+2,w,h,0,0,w,h);
			imageDataAlpha=alpha.context.getImageData(0,0,w,h);
			pixelsAlpha=imageDataAlpha.data;
			for (y=0;y < h;y++){
				i=(y *w)<< 2;
				x=0;
				while (x < w){
					i+=4;
					x++;
					pixelsSrc[i+3]=pixelsAlpha[i];
				}
			}
			src.context.putImageData(imageDataSrc,0,0);
			return src;
		}

		return DisplayMethod;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/display/imodel.as
	//class iflash.laya.display.IModel
	var IModel=(function(){
		function IModel(n){
			this.jnode=null;
			this.jnode=n;}
		__class(IModel,'iflash.laya.display.IModel',true);
		var __proto=IModel.prototype;
		__proto.setHideText=LAYAFNVOID/*function(b){}*/
		__proto.vcanvas=LAYAFNVOID/*function(vcanvas){}*/
		__proto.reset=LAYAFNVOID/*function(id,jnode){}*/
		__proto.uploadCmd=LAYAFNVOID/*function(d){}*/
		__proto.pos=LAYAFNVOID/*function(x,y){}*/
		__proto.zIndex=LAYAFNVOID/*function(d){}*/
		__proto.size=LAYAFNVOID/*function(w,h){}*/
		__proto.scale2d=LAYAFNVOID/*function(x,y){}*/
		__proto.scale2dEx=LAYAFNVOID/*function(x,y){}*/
		__proto.rotate2d=LAYAFNVOID/*function(r){}*/
		__proto.bgcolor=LAYAFNVOID/*function(rgb){}*/
		__proto.bgimg=LAYAFNVOID/*function(_img,repeat){}*/
		__proto.position=LAYAFNVOID/*function(type){}*/
		__proto.image=function(img,b){
			(b===void 0)&& (b=false);
		}

		__proto.bitmapdataContent=LAYAFNVOID/*function(bitmapdataContent){}*/
		__proto.border=LAYAFNVOID/*function(type){}*/
		__proto.font=LAYAFNVOID/*function(f){}*/
		__proto.text=LAYAFNVOID/*function(txt){}*/
		__proto.textStrs=LAYAFNVOID/*function(txt){}*/
		__proto.clip=LAYAFNVOID/*function(b){}*/
		__proto.insert=LAYAFNVOID/*function(c,index,sz){}*/
		__proto.flip=LAYAFNVOID/*function(f){}*/
		__proto.padding=LAYAFNVOID/*function(l,t,r,b){}*/
		__proto.margin=LAYAFNVOID/*function(l,t,r,b){}*/
		__proto.scroll=LAYAFNVOID/*function(x,y){}*/
		__proto.alpha=LAYAFNVOID/*function(a){}*/
		__proto.filter=LAYAFNVOID/*function(r,g,b,gray){}*/
		__proto.globalCompositeOperation=LAYAFNVOID/*function(nType){}*/
		__proto.show=LAYAFNVOID/*function(b){}*/
		__proto.destroy=LAYAFNVOID/*function(){}*/
		__proto.destroyAllChild=LAYAFNVOID/*function(){}*/
		__proto.swap=LAYAFNVOID/*function(frome,to){}*/
		__proto.removeAt=LAYAFNVOID/*function(i,c,sz){}*/
		__proto.setOrigin=LAYAFNVOID/*function(x,y,xtype,ytype){}*/
		__proto.color=LAYAFNVOID/*function(rgb){}*/
		__proto.setToCanvas=LAYAFNVOID/*function(canvas){}*/
		__proto.quote=LAYAFNVOID/*function(m){}*/
		__proto.quoteEx=LAYAFNVOID/*function(m,bool){}*/
		__proto.matrix=LAYAFNVOID/*function(a,b,c,d,tx,ty){}*/
		__proto.virtualBitmap=LAYAFNVOID/*function(virtualBitmap){}*/
		__proto.drawImage9=LAYAFNVOID/*function(img,sx,sy,sw,sh,dx,dy,dw,dh){}*/
		__proto.drawImage3=LAYAFNVOID/*function(img,x,y){}*/
		__proto.flashClip=LAYAFNVOID/*function(x,y,w,h){}*/
		__proto.removeClip=LAYAFNVOID/*function(){}*/
		__proto.mask=LAYAFNVOID/*function(d){}*/
		__proto.textView=LAYAFNVOID/*function(x,y){}*/
		__static(IModel,
		['__DEFAULT__',function(){return this.__DEFAULT__=new IModel(null);}
		]);
		return IModel;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/display/virtualcanvas.as
	//class iflash.laya.display.VirtualCanvas
	var VirtualCanvas=(function(){
		function VirtualCanvas(){
			this._cmds_=[];
			this.imageNum=0;
			this.loaded=0;
			this.width=0;
			this.height=0;
			this.baseImage=null;
			this.onComplete=null;
			this.conchVirtualBitmap=null;
			this.widthScale=1;
			this.heightScale=1;
			this.inMap=false;
			if(Laya.CONCHVER){
			}
		}

		__class(VirtualCanvas,'iflash.laya.display.VirtualCanvas',true);
		var __proto=VirtualCanvas.prototype;
		__proto._check_=function(){
			if(this.conchVirtualBitmap&&!this.inMap){
				ConchRenderVCanvas.maps.push(this);
				this.inMap=true;
			}
		}

		__proto._conchResize_=function(){
			if (Laya.CONCHVER){
				if (!this.conchVirtualBitmap)this.conchVirtualBitmap=/*__JS__ */new ConchVirtualBitmap();
				this.conchVirtualBitmap.size(this.width,this.height);
			}
		}

		__proto.size=function(w,h){
			this.width=w;
			this.height=h;
			this._conchResize_();
		}

		__proto.setImage=function(data){
			this.clear();
			this.baseImage=data;
			this.drawImage(data,0,0);
			this._check_();
		}

		__proto.changeImage=function(img){
			if(this.baseImage!=img)
				this.setImage(img);
		}

		__proto.isNormal=function(){
			return (this.baseImage && this._cmds_.length==1);
		}

		__proto.getImage=function(){
			return this.baseImage;
		}

		__proto.removeImage=function(){
			this.baseImage=null;
		}

		__proto.checkCMDfull=function(){
			if (this._cmds_.length > VirtualCanvas.MAXCMDNUM){
			}
		}

		__proto.drawMartixImage=function(souce,m,clipRect){
			if (souce._cmds_.length==0)
				return;
			if (m.b==0 && m.c==0&&m.a>0&&m.d>0&&souce.isNormal()){
				this.drawImage(souce.baseImage,(clipRect.x-m.tx)/ m.a,
				(clipRect.y-m.ty)/m.d,
				clipRect.width/m.a,
				clipRect.height/m.d,
				clipRect.x,
				clipRect.y,
				clipRect.width,
				clipRect.height);
			}
			else{
				VirtualCanvas._DEFAULT_.clear();
				VirtualCanvas._DEFAULT_.save();
				VirtualCanvas._DEFAULT_.beginPath();
				VirtualCanvas._DEFAULT_.rect(clipRect.x,clipRect.y,clipRect.width,clipRect.height);
				VirtualCanvas._DEFAULT_.clip();
				VirtualCanvas._DEFAULT_.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
				souce.copyTo(VirtualCanvas._DEFAULT_);
				VirtualCanvas._DEFAULT_.restore();
				this.drawVCanvas([VirtualCanvas._DEFAULT_._cmds_,clipRect.x,clipRect.y,clipRect.width,clipRect.height,clipRect.x,clipRect.y,clipRect.width,clipRect.height]);
			}
		}

		__proto.drawVCanvas=function(args){
			this._cmds_.push(["_drawVCanvas_",args]);
			var cmds=args[0];
			for (var i=0,n=cmds.length;i < n;i++){
				if (cmds[i][0].indexOf("_drawImage")!=-1){
					this._loadImg_(cmds[i][1][0]);
				}
			}
			this._check_();
		}

		__proto.save=function(){
			this._cmds_.push(["_save_",null]);
			this._check_();
		}

		__proto.restore=function(){
			this.checkCMDfull();
			this._cmds_.push(["_restore_",null]);
			this._check_();
		}

		__proto.beginPath=function(){
			this._cmds_.push(["_beginPath_",null]);
			this._check_();
		}

		__proto.drawImage=function(__args){
			var args=arguments;
			this.checkCMDfull();
			var obj=args[0];
			var soucecmd=obj._cmds_;
			if(obj.width > 0 && obj.width < args[3])args[3]=obj.width;
			if(obj.width > 0 && obj.height < args[4])args[4]=obj.height;
			if (soucecmd){
				if (soucecmd.length==1&&soucecmd[0][1].length==3){
					args[0]=soucecmd[0][1][0];
					this.drawImage.apply(this,args);
					return;
				};
				var scalex=args[7] / args[3];
				var scaley=args[8] / args[4];
				VirtualCanvas._DEFAULT_.clear();
				VirtualCanvas._DEFAULT_.save();
				VirtualCanvas._DEFAULT_.translate(args[5],args[6]);
				if (args[3] < obj.width || args[4] < obj.height){
					VirtualCanvas._DEFAULT_.beginPath();
					VirtualCanvas._DEFAULT_.rect(0,0,args[7],args[8]);
					VirtualCanvas._DEFAULT_.clip();
				}
				VirtualCanvas._DEFAULT_.scale(scalex,scaley);
				VirtualCanvas._DEFAULT_.translate(-args[1],-args[2]);
				obj.copyTo(VirtualCanvas._DEFAULT_);
				VirtualCanvas._DEFAULT_.restore();
				args[0]=VirtualCanvas._DEFAULT_._cmds_;
				this.drawVCanvas(args);
			}
			else{
				if(args.length==3)
					this._cmds_.push(["_drawImage3_",args]);
				else if (args.length==5)
				this._cmds_.push(["_drawImage5_",args]);
				else
				this._cmds_.push(["_drawImage9_",args]);
				this._loadImg_(obj);
				this._check_();
			}
		}

		__proto.rect=function(x,y,w,h){
			this._cmds_.push(["_rect_",[x,y,w,h]]);
			this._check_();
		}

		__proto.clip=function(){
			this._cmds_.push(["_clip_",null]);
			this._check_();
			return true;
		}

		__proto.scale=function(x,y){
			if (x==1 && y==1)return;
			this._cmds_.push(["_scale_",[x,y]]);
			this._check_();
		}

		__proto.translate=function(x,y){
			if (x==0 && y==0)return;
			this._cmds_.push(["_translate_",[x,y]]);
			this._check_();
		}

		__proto.transform=function(a,b,c,d,tx,ty){
			this._cmds_.push(["_transform_",[a,b,c,d,tx,ty]]);
			this._check_();
		}

		__proto.clearRect=function(x,y,w,h){
			if (x==0 && y==0 && w==this.width && h==this.height){
				this.clear();
				return;
			};
			var cmd1;
			var ex=x+w,ey=y+h;
			for (var i=0,sz=this._cmds_.length;i < sz;i++){
				var cmd=this._cmds_[i];
				if ((cmd[0]=="_drawVCanvas_"||cmd[0]=="_drawImage9_")&& (cmd1=cmd[1])[5] >=x && cmd1[6] >=y && (cmd1[5]+cmd1[7])<=ex && (cmd1[6]+cmd1[8])<=ey){
					this._cmds_.splice(i,1);
					i--;
					sz--;
				}
			}
			this._check_();
		}

		__proto.closePath=function(){
			this._cmds_.push(["_closePath_",null]);
			this._check_();
		}

		__proto.fillRect=function(x,y,w,h){
			this._cmds_.push(["_fillRect_",[x,y,w,h]]);
			this._check_();
		}

		__proto.stroke=function(){
			this._cmds_.push(["_stroke_",null]);
			this._check_();
		}

		__proto.strokeRect=function(x,y,w,h){
			this._cmds_.push(["_strokeRect_",[x,y,w,h]]);
			this._check_();
		}

		__proto.strokeText=function(word,x,y){
			if (!Laya.CONCHVER){
				this._cmds_.push(["_strokeText_",[word,x,y]]);
				this._check_();
			}
		}

		__proto.fillText=function(word,x,y){
			word=word.replace(VirtualCanvas.pre,function(){
				var charMap={
					"\0":"0",
					"\1":"1",
					"\2":"2",
					"\3":"3",
					"\4":"4",
					"\5":"5",
					"\6":"6",
					"\7":"7"
				};
				return charMap[arguments[0]] || arguments[0];
			});
			this._cmds_.push(["_fillText_",[word,x,y]]);
			this._check_();
		}

		__proto.fill=function(){
			this._cmds_.push(["_fill_",null]);
			this._check_();
		}

		__proto.moveTo=function(x,y){
			this._cmds_.push(["_moveTo_",[x,y]]);
			this._check_();
		}

		__proto.lineTo=function(x,y){
			this._cmds_.push(["_lineTo_",[x,y]]);
			this._check_();
		}

		__proto.arc=function(x,y,r,sAngle,eAngle,bCounterclockwise){
			this._cmds_.push(["_arc_",[x,y,r,sAngle,eAngle,bCounterclockwise]]);
			this._check_();
		}

		__proto.arcTo=function(x1,y1,x2,y2,radium){
			this._cmds_.push(["_arcTo_",[x1,y1,x2,y2,radium]]);
			this._check_();
		}

		__proto.bezierCurveTo=function(nCPX,nCPY,nCPX2,nCPY2,nEndX,nEndY){
			this._cmds_.push(["_bezierCurveTo_",[nCPX,nCPY,nCPX2,nCPY2,nEndX,nEndY]]);
			this._check_();
		}

		__proto.quadraticCurveTo=function(left,top,width,height){
			this._cmds_.push(["_quadraticCurveTo_",[left,top,width,height]]);
			this._check_();
		}

		__proto.fillImage=function(img,x,y,w,h){
			this._cmds_.push(["_drawRepeat_",[img,x,y,w,h]]);
			this._check_();
		}

		__proto._drawRepeat_=function(context,args){
			if ((context instanceof iflash.laya.display.VirtualCanvas )){
				(context).fillImage.apply(context,args);
				return
			};
			var myPattern=context.createPattern(args[0],'repeat');
			context.fillStyle=myPattern;
			context.fillRect(args[1],args[2],args[3],args[4]);
		}

		__proto._transform_=function(context,args){
			context.transform.apply(context,args);
		}

		__proto._beginPath_=function(context,args){
			context.beginPath();
		}

		__proto._closePath_=function(context,args){
			context.closePath();
		}

		__proto._fillStyle_=function(context,args){
			context.fillStyle=args[0];
		}

		__proto._globalAlpha_=function(context,args){
			context.globalAlpha=args[0];
		}

		__proto._globalCompositeOperation_=function(context,args){
			context.globalCompositeOperation=args[0];
		}

		__proto._lineCap_=function(context,args){
			context.lineCap=args[0];
		}

		__proto._lineWidth_=function(context,args){
			context.lineWidth=args[0];
		}

		__proto._lineJoin_=function(context,args){
			context.lineJoin=args[0];
		}

		__proto._strokeStyle_=function(context,args){
			context.strokeStyle=args[0];
		}

		__proto._stroke_=function(context,args){
			context.stroke();
		}

		__proto._strokeRect_=function(context,args){
			context.strokeRect.apply(context,args);
		}

		__proto._translate_=function(context,args){
			context.translate.apply(context,args);
		}

		__proto._scale_=function(context,args){
			context.scale.apply(context,args);
		}

		__proto._save_=function(context,args){
			context.save();
		}

		__proto._restore_=function(context,args){
			context.restore();
		}

		__proto._strokeText_=function(context,args){
			context.strokeText.apply(context,args);
		}

		__proto._fillText_=function(context,args){
			context.fillText.apply(context,args);
		}

		__proto._fill_=function(context,args){
			context.fill();
		}

		__proto._moveTo_=function(context,args){
			context.moveTo.apply(context,args);
		}

		__proto._lineTo_=function(context,args){
			context.lineTo.apply(context,args);
		}

		__proto._arc_=function(context,array){
			context.arc.apply(context,array);
		}

		__proto._arcTo_=function(context,args){
			context.arcTo.apply(context,args);
		}

		__proto._bezierCurveTo_=function(context,args){
			context.bezierCurveTo.apply(context,args);
		}

		__proto._quadraticCurveTo_=function(context,args){
			context.quadraticCurveTo.apply(context,args);
		}

		__proto._clip_=function(context,args){
			context.clip();
		}

		__proto._rect_=function(context,args){
			context.rect.apply(context,args);
		}

		__proto._drawImage3_=function(context,args){
			context.drawImage.apply(context,args);
		}

		__proto._drawImage5_=function(context,args){
			context.drawImage.apply(context,args);
		}

		__proto._drawImage9_=function(context,args){
			context.drawImage.apply(context,args);
		}

		__proto._drawVCanvas_=function(context,args){
			var cmds=args[0];
			for (var i=0,n=cmds.length;i < n;i++){
				this[cmds[i][0]].call(this,context,cmds[i][1]);
			}
		}

		__proto._font_=function(context,args){
			context.font=args[0];
		}

		__proto._textBaseline_=function(context,args){
			context.textBaseline=args[0];
		}

		__proto._loadImg_=function(obj){
			var _$this=this;
			return;
			this.imageNum++;
			if (obj.isReady()){
				this.loaded++;
				this._checkloadComplete();
			}
			else{
				obj.addEventListener("load",function(e){
					_$this.loaded++;
					_$this._checkloadComplete();
				});
			}
		}

		__proto._checkloadComplete=function(){
			if (this.imageNum==this.loaded)
				this.onComplete && this.onComplete();
		}

		__proto.isReady=function(){
			return(this.imageNum==this.loaded);
		}

		__proto.copyTo=function(to){
			for (var i=0,n=this._cmds_.length;i < n;i++){
				this[this._cmds_[i][0]].call(this,to,this._cmds_[i][1]);
			}
		}

		__proto.paint=function(context,x,y,w,h){
			var hasScale=false;
			if (w > 0 && h > 0){
				this.widthScale=w / this.width;
				this.heightScale=h / this.height;
				hasScale=(this.widthScale !=1 || this.heightScale !=1);
			};
			var len=this._cmds_.length;
			var b=(x==0 && y==0);
			switch(len){
				case 0:return;
				case 1:
					if (hasScale)
						context.save();
					if (!b){
						context.translate(x,y);
						hasScale&&context.scale(this.widthScale,this.heightScale);
						this[this._cmds_[0][0]].call(this,context,this._cmds_[0][1]);
						context.translate(-x,-y);
					}
					else{
						hasScale&&context.scale(this.widthScale,this.heightScale);
						this[this._cmds_[0][0]].call(this,context,this._cmds_[0][1]);
					}
					if (hasScale)
						context.restore();
					break ;
				default :
					context.save();
					!b && context.translate(x,y);
					if (this.widthScale !=1 || this.heightScale !=1)
						context.scale(this.widthScale,this.heightScale);
					for (var i=0,n=this._cmds_.length;i < n;i++){
						this[this._cmds_[i][0]].call(this,context,this._cmds_[i][1]);
					}
					context.restore();
				}
		}

		__proto._fillRect_=function(context,args){
			context.fillRect.apply(context,args);
		}

		__proto.getContext=function(type){
			return this;
		}

		__proto.clear=function(){
			this._cmds_=[];
			this.baseImage=null;
			this._check_();
		}

		__proto.clone=function(){
			var result=new VirtualCanvas();
			this.copyTo(result);
			result.baseImage=this.baseImage;
			result.width=this.width;
			result.height=this.height;
			result._conchResize_();
			return result;
		}

		__getset(0,__proto,'context',function(){
			return this;
		});

		__getset(0,__proto,'font',null,function(f){
			this._cmds_.push(["_font_",[f]]);
			this._check_();
		});

		__getset(0,__proto,'lineJoin',null,function(s){
			this._cmds_.push(["_lineJoin_",[s]]);
			this._check_();
		});

		__getset(0,__proto,'strokeStyle',null,function(color){
			this._cmds_.push(["_strokeStyle_",[color]]);
			this._check_();
		});

		__getset(0,__proto,'globalAlpha',null,function(n){
			if (n==1)return;
			this._cmds_.push(["_globalAlpha_",[n]]);
			this._check_();
		});

		__getset(0,__proto,'fillStyle',null,function(style){
			this._cmds_.push(["_fillStyle_",[style]]);
			this._check_();
		});

		__getset(0,__proto,'globalCompositeOperation',null,function(value){
			this._cmds_.push(["_globalCompositeOperation_",[value]]);
			this._check_();
		});

		__getset(0,__proto,'lineCap',null,function(s){
			this._cmds_.push(["_lineCap_",[s]]);
			this._check_();
		});

		__getset(0,__proto,'lineWidth',null,function(n){
			this._cmds_.push(["_lineWidth_",[n]]);
			this._check_();
		});

		__getset(0,__proto,'textBaseline',null,function(f){
			this._cmds_.push(["_textBaseline_",[f]]);
			this._check_();
		});

		VirtualCanvas.getConchSring=function(p_cmd){
			var temp="";
			for (var i=0,len=p_cmd.length;i < len;i++){
				var cmd=p_cmd[i];
				var funId=ConchRenderVCanvas.CMDMAP[cmd[0]];
				if (funId==-1){
					temp+=VirtualCanvas.getConchSring(cmd[1][0]);
				}
				else if (cmd[0].indexOf("draw")!=-1){
					var s=Array.prototype.slice.call(cmd[1]);
					s[0]=s[0].imgId;
					temp+=(funId+/*iflash.utils.stringContextCMD.COMMA*/'\4'+s.join(/*iflash.utils.stringContextCMD.COMMA*/'\4'));
				}
				else{
					if (cmd[1]==null){
						temp+=funId;
					}
					else{
						temp+=(funId+/*iflash.utils.stringContextCMD.COMMA*/'\4'+cmd[1].join(/*iflash.utils.stringContextCMD.COMMA*/'\4'));
					}
				}
				if (i !=len-1){
					temp+=/*iflash.utils.stringContextCMD.SEMICOLON*/'\5';
				}
			}
			return temp;
		}

		VirtualCanvas._DEFAULT_=new VirtualCanvas();
		VirtualCanvas.MAXCMDNUM=200;
		__static(VirtualCanvas,
		['pre',function(){return this.pre=new RegExp("[\0\1\2\3\4\5\6\7\8\9]","g");}
		]);
		return VirtualCanvas;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/driver/document.as
	//class iflash.laya.driver.Document
	var Document3=(function(){
		function Document(){
			this.body=null;
			this.head=null;
			this.onselectstart=null;
			this.ontouchmove=null;
			this.onmousewheel=null;
			this.onscroll=null;
			this._addEventListener_=null;
			this._createElement_=null;
		}

		__class(Document,'iflash.laya.driver.Document',true,null,'Document3');
		var __proto=Document.prototype;
		__proto.addEventListener=function(type,callBack,useCapture){
			if(this._addEventListener_!=null)
				this._addEventListener_.call(this,type,callBack,useCapture);
			else
			this.attachEvent("on"+type,callBack);
		}

		__proto.getElementsByTagName=LAYAFNNULL/*function(value){return null}*/
		__proto.attachEvent=function(type,callBack){}
		__proto.createElement=function(tagName){
			var _$this=this;
			switch(tagName){
				case 'virtualBitmap':
					return new VirtualCanvas();
				case 'canvas':;
					var o=this._createElement_.call(this,tagName);
					Canvas.__on_new__(o);
					return o;
				case 'img':
				case 'image':;
					var img=this._createElement_.call(this,"img");
					img.left=img.top=0;
					if (img._getType_==null){
						img._getType_=function (){return 1;};
						img.getContent=function (){return this;};
						img.isReady=function (){return this.width > 0;};
						img.rect=function (x,y,w,h){
							this.left=x;
							this.top=y;
							this.width=w;
							this.height=h;
						}
						if (!img.clone){
							var _this=this;
							img.clone=function (){
								var nimg=_$this.createElement("img");
								nimg.width=this.width;
								nimg.height=this.height;
								nimg.left=this.left;
								nimg.top=this.top;
								nimg.src=this.src;
								return nimg;
							}
						}
					}
					return img;
				}
			return this._createElement_.call(this,tagName);
		}

		__getset(0,__proto,'title',null,function(t){
		});

		Document.__init__=function(doc){
			doc._addEventListener_=doc.addEventListener;
			doc.addEventListener=Document.__TMP__.addEventListener;
			doc._createElement_=doc.createElement;
			doc.createElement=Document.__TMP__.createElement;
		}

		__static(Document,
		['__TMP__',function(){return this.__TMP__=new Document;}
		]);
		return Document;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/driver/driver.as
	//class iflash.laya.driver.Driver
	var Driver=(function(){
		function Driver(sprite){
			this._frameRate_=NaN;
			this.tempId=null;
			this.buttonDown=false;
			this.create(sprite);
			this._init_(sprite);
		}

		__class(Driver,'iflash.laya.driver.Driver',true);
		var __proto=Driver.prototype;
		__proto.create=function(sprite){
			Browser.document=/*__JS__ */document;
			Browser.window=/*__JS__ */window;
			Browser.location=/*__JS__ */location;
			Browser.navigator=/*__JS__ */navigator;
			Document3.__init__(Browser.document);
		}

		__proto._init_=function(sprite){
			if (Driver._input)return;
			if(Laya.CONCHVER){
				Browser.input=Browser.document.createElement("input");
			}
			else{
				Browser.input=Driver._input=/*__JS__ */window.document.createElement("input");
				Driver._textarea=/*__JS__ */window.document.createElement("textArea");
			}
			if(!Laya.CONCHVER){
				Driver._input.setPos=Driver._textarea.setPos=function (x,y){
					Browser.input.style.left=x+"px";
					Browser.input.style.top=y+"px";
				};
				Driver._input.setSize=Driver._textarea.setSize=function (w,h){
					Browser.input.style.width=w+"px";
					Browser.input.style.height=h+"px";
				};
				Driver._input.setStyle=Driver._textarea.setStyle=function (style){
					Browser.input.style.cssText=style;
				}
				Driver._input.setFont=Driver._textarea.setFont=function (fontInfo){
					Browser.input.style.fontFamily=fontInfo;
				};
				Driver._input.setColor=Driver._textarea.setColor=function (color){
					Browser.input.style.color=color;
				};
				Driver._input.setOpacity=Driver._textarea.setOpacity=function (opacity){
					Browser.input.style.opacity=opacity;
				};
				Driver._input.setFontSize=Driver._textarea.setFontSize=function (sz){
					Browser.input.style.fontSize=sz+"px";
				};
				Driver._input.setScale=Driver._textarea.setScale=function (scalex,scaley){
					Browser.input.style.webkitTransform="scale("+scalex+','+scaley+')';
					Browser.input.style.mozTransform="scale("+scalex+','+scaley+')';
					Browser.input.style.oTransform="scale("+scalex+','+scaley+')';
					Browser.input.style.msTransform="scale("+scalex+','+scaley+')';
				};
				Driver._input.setRotate=Driver._textarea.setRotate=function (s){
					Browser.input.style.webkitTransform+="rotate("+s+'deg)';
					Browser.input.style.mozTransform+="rotate("+s+'deg)';
					Browser.input.style.oTransform+="rotate("+s+'deg)';
					Driver._textarea.style.msTransform+="rotate("+s+'deg)';
				};
				Driver._input.setType=Driver._textarea.setType=function (type,multiline){
					(multiline===void 0)&& (multiline=false);
					if(iflash.laya.driver.Driver.enableTouch()&& !Laya.CONCHVER){
						if(!multiline || type=="password"){
							Driver._input.type=type;
							Browser.input=Driver._input;
						}
						else
						Browser.input=Driver._textarea;
					}
					else{
						Browser.input=(type=="password")? Driver._input :Driver._textarea;
					}
				}
				Driver._input.setRegular=Driver._textarea.setRegular=function (value){
					Driver._textarea.onkeyup=value;
				};
				Driver._input.setAlign=Driver._textarea.setAlign=function (align){
					Browser.input.style.textAlign=align;
				}
				Driver._input.clear=Driver._textarea.clear=function (){
					Driver._input.value="";
					Driver._textarea.value="";
				}
			}
			else{
				Browser.input.setSelectionRange=function (a,b){
					var maxIndex=Browser.input.value.length;
					if(a < 0)a=0;
					else if(a >=maxIndex)a=maxIndex;
					Browser.input.setCursorPosition(a);
				};
				Browser.input.setFontSize(60);
			};
			var style=
			"-webkit-transform-origin:left top;"+
			"-moz-transform-origin:left top;"+
			"transform-origin:left top;"+
			"-ms-transform-origin:left top;"+
			"position:absolute;"+
			"top:-2000;"+
			"border:none;"+
			"z-index:9999;";
			if(!Driver.enableTouch()){
				style+=
				"background:transparent;"+
				"outline:none;"+
				"overflow:hidden;";
			}
			Browser.input.setStyle(style);
			if(!Laya.CONCHVER){
				Driver._textarea.style.cssText=style;
				Driver._textarea.style.resize="none";
				!Driver.enableTouch()&& (Driver._input.type="password");
			}
			else
			Browser.document.body.appendChild(Driver._textarea);
		}

		__proto.err=LAYAFNVOID/*function(e){}*/
		__proto.alert=function(e){
			/*__JS__ */alert(e);
		}

		__proto.onEnterFrame=function(evt){
			if (Laya.window==null)return;
			var wnd=Browser.window;
			if (Laya.window !=null){
				Laya.window.resizeTo(wnd.innerWidth,wnd.innerHeight);
				Laya.window.enterFrame();
				Laya.RENDERBYCANVAS&&this.onDomRender();
			}
		}

		__proto.onDomRender=function(){
			(Laya.window !=null)&& Laya.document.render();
		}

		__proto.onResize=LAYAFNVOID/*function(){}*/
		__proto.start=function(){
			if (Laya.HTMLVER){
				Browser.document.body.style.cssText+='overflow:hidden;margin:0;padding:0'
			}
		}

		__proto._debugger_=function(){
			/*__JS__ */debugger;
		}

		__proto.eval=function(str,target){
			target=target || Browser.window;
			target.eval(str);
		}

		__proto.getRootCanvas=function(){
			return Browser.document.createElement("canvas");
		}

		__proto.createModle=function(type,id,node){
			if (Driver.__DOMCACHE__.length > 0){
				var o=Driver.__DOMCACHE__.pop();
				o.reset(id,node);
				return o;
			}
			return (Laya.CONCHVER&&!Laya.RENDERBYCANVAS)?/*__JS__ */new ConchNode():IModel.__DEFAULT__;
		}

		__proto.attachBrowserMouseEvent=function(name,fn,type){
			name=name.toLowerCase();
			(Laya.CONCHVER ? Browser.document :Laya.document.canvas).addEventListener(name.substring(2,name.length),fn,false);
		}

		__proto.attachBrowserKeyEvent=function(name,fn){
			var fnnew=function (event){
				var keyboaderEvent=new KeyboardEvent(name.substring(2));
				keyboaderEvent.keyCode=event.keyCode;
				keyboaderEvent.shiftKey=event.shiftKey;
				keyboaderEvent.ctrlKey=event.ctrlKey;
				fn(keyboaderEvent);
			};
			Browser.document[ name.toLowerCase()]=fnnew;
		}

		__proto.createHttpRequest=function(){
			return new HttpRequest();
		}

		__proto.regEvent=function(){
			var esys=EventManager.mgr;
			if (Driver.enableTouch()){
				Driver.activateTouchEvent();
				esys.dealAccepInput=esys.dealAcceptTouchInput;
				esys.enableTouch=true;
			}
			else{
				this.attachBrowserMouseEvent("onmouseDown",function(e){esys.acceptSystemMouseEvent(e);});
				this.attachBrowserMouseEvent("onmouseMove",function(e){esys.acceptSystemMouseEvent(e);});
				this.attachBrowserMouseEvent("onmouseUp",function(e){esys.acceptSystemMouseEvent(e);});
				Browser.window.onmousewheel=Browser.document.onmousewheel=function (e){esys.acceptSystemMouseEvent(e);};
			}
			this.attachBrowserKeyEvent("onkeyDown",function(e){esys.acceptSystemKeyEvent(e);});
			this.attachBrowserKeyEvent("onkeyUp",function(e){esys.acceptSystemKeyEvent(e);});
		}

		__proto.cursor=function(cursor){
			Browser.document.body.style.cursor=cursor;
		}

		__getset(0,__proto,'frameRate',function(){
			return this._frameRate_;
			},function(num){
			this._frameRate_=num;
			/*__JS__ */Driver.interval &&(clearInterval(Driver.interval));
			var _this=this;
			/*__JS__ */Driver.interval=setInterval(function(){_this.onEnterFrame()},1000/num);
		});

		Driver.enableTouch=function(){
			if (!Laya.CONCHVER)
				/*__JS__ */return ('ontouchstart' in window)|| window.DocumentTouch && (document instanceof DocumentTouch);
			else
			/*__JS__ */return window.enableTouch;;
			return false;
		}

		Driver.activateTouchEvent=function(){
			Driver.touchActive=true;
			var target=(Laya.CONCHVER ? Browser.document :Laya.document.canvas);
			target.addEventListener("touchstart",Driver.touchstartHandler);
			target.addEventListener("touchmove",Driver.touchmoveHandler);
			target.addEventListener("touchend",Driver.touchendHandler);
			target.addEventListener("touchcancel",Driver.touchcancelHandler);
		}

		Driver.deactivateTouchEvent=function(){
			Driver.touchActive=false;
			var target=(Laya.CONCHVER ? Browser.document :Laya.document.canvas);
			target.removeEventListener("touchstart",Driver.touchstartHandler);
			target.removeEventListener("touchend",Driver.touchendHandler);
			target.removeEventListener("touchmove",Driver.touchmoveHandler);
			target.removeEventListener("touchcancel",Driver.touchcancelHandler);
		}

		Driver.touchstartHandler=function(e){
			EventManager.mgr.acceptSystemMouseEvent(e);
		}

		Driver.touchmoveHandler=function(e){
			e.type="touchmove";
			EventManager.mgr.acceptSystemMouseEvent(e)
		}

		Driver.touchendHandler=function(e){
			e.type="touchend";
			EventManager.mgr.acceptSystemMouseEvent(e)
		}

		Driver.touchcancelHandler=function(e){
			e.type="touchcancel";
			EventManager.mgr.acceptSystemMouseEvent(e)
		}

		Driver.__DOMCACHE__=[];
		Driver.__ID__=100000;
		Driver.interval=null;
		Driver._textarea=null
		Driver._input=null
		Driver.touchActive=false;
		return Driver;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/driver/location.as
	//class iflash.laya.driver.Location
	var Location=(function(){
		function Location(){
			this.href=null;
		}

		__class(Location,'iflash.laya.driver.Location',true);
		var __proto=Location.prototype;
		__proto.reload=LAYAFNVOID/*function(){}*/
		return Location;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/driver/navigator.as
	//class iflash.laya.driver.Navigator
	var Navigator=(function(){
		function Navigator(){}
		__class(Navigator,'iflash.laya.driver.Navigator',true);
		return Navigator;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/driver/window.as
	//class iflash.laya.driver.Window
	var Window2=(function(){
		function Window(){
			this.innerWidth=0;
			this.innerHeight=0;
			this.XMLHttpRequest=null;
			this.ActiveXObject=null;
			this.onmousewheel=null;
			this._title_=null;
			this.event=null;
			this.onscroll=null;
			this.scrollTop=0;
			this.scrollLeft=0;
			this.conchConfig=null;
			this.conchMarket=null;
			this.DeviceMotionEvent=null;
			this._ConchMask=null;
		}

		__class(Window,'iflash.laya.driver.Window',true,null,'Window2');
		var __proto=Window.prototype;
		__proto.eval=LAYAFNNULL/*function(str){return null}*/
		__proto.setTimeout=LAYAFNVOID/*function(fn,delay){}*/
		__proto.clearInterval=LAYAFNVOID/*function(id){}*/
		__proto.setInterval=LAYAFN0/*function(fn,d){return 0}*/
		__getset(0,__proto,'title',function(){
			return this._title_;
			},function(str){
			this._title_=str;
		});

		return Window;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/ilaya.as
	//class iflash.laya.ILaya
	var ILaya=(function(){
		function ILaya(sprite,htmlUrl){
			this._html_=null;
			Laya.ilaya=this;
			Laya.Main(sprite);
			this._html_=htmlUrl;
			if (!this._html_ && Laya.CONCHVER && Browser.location && Browser.location.href)
				this._html_=Browser.location.href;
		}

		__class(ILaya,'iflash.laya.ILaya',true);
		var __proto=ILaya.prototype;
		__proto._onInit_=LAYAFNVOID/*function(){}*/
		__proto.onStart=function(){
			Browser.hideSystemLoading();
			return;
		}

		return ILaya;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/ajax.as
	//class iflash.laya.net.Ajax
	var Ajax=(function(){
		function Ajax(){}
		__class(Ajax,'iflash.laya.net.Ajax',true);
		Ajax.onJSONDone=function(callbackFn,response,onerr){
			if (response==null){
				onerr();
				return;
			}
			callbackFn(response);
		}

		Ajax.GetJSONInBrowser=function(url,callbackFn,splitChar,onerr){
			(splitChar===void 0)&& (splitChar='&');
			var response;
			var jsoncb=function (args){
				response=args;
			};
			var tm='';
			if (callbackFn !=null){
				tm=iflash.utils.getTimer()+"";
				Browser.window['layacallback'+tm]=jsoncb;
			};
			var script=Browser.document.createElement('script');
			script.type="text/javascript";
			if (onerr !=null){
				script.onerror=onerr;
				}else{
				script.onerror=callbackFn;
			}
			script.onload=script.onreadystatechange=function (e,isAbort){
				var reg=new RegExp("loaded|complete");
				if (isAbort || !script.readyState || reg.test(script.readyState+"")){
					script.onload=script.onreadystatechange=null;
					if (script.parentNode !=null){}
						if (!isAbort){
						Ajax.onJSONDone(callbackFn,response,script.onerror);
					}
				}
			};
			script.src=url+(tm!=''?(splitChar+'callback=layacallback'+tm):'');
			Browser.document.getElementsByTagName('head')[0].appendChild(script);
		}

		Ajax.GetJSONInApp=function(url,callbackFn,splitChar,onerr){
			(splitChar===void 0)&& (splitChar='&');
			var response="";
			var tm="";
			if(callbackFn !=null){
				tm=iflash.utils.getTimer()+"";
				Browser.window["layacallback"+tm]=function (args){response=args;};
			};
			var nurl=url+(tm !=""?(splitChar+"callback=layacallback"+tm):"");
			Browser.window["downloadfile"](nurl,true,function(data){
				console.log('getJson onload:'+data);
				Browser.eval(data);
				Ajax.onJSONDone(callbackFn,response,null);
				},function(){
				console.log('getjson error');
				Ajax.onJSONDone(null,null,onerr !=null?onerr:callbackFn);
			});
		}

		Ajax.GetJSON=function(url,callbackFn,splitChar,onerr){
			(splitChar===void 0)&& (splitChar='&');
			if (!Laya.CONCHVER)
				return Ajax.GetJSONInBrowser(url,callbackFn,splitChar,onerr);
			else
			return Ajax.GetJSONInApp(url,callbackFn,splitChar,onerr);
		}

		return Ajax;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/cookie.as
	//class iflash.laya.net.Cookie
	var Cookie=(function(){
		function Cookie(name){
			this._name=null;
			this._data=null;
			this._name=name;
		}

		__class(Cookie,'iflash.laya.net.Cookie',true);
		var __proto=Cookie.prototype;
		__proto.clear=function(){
			this._data={};
			/*__JS__ */localStorage.removeItem(this._name);
		}

		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.flush=function(minDiskSpace){
			(minDiskSpace===void 0)&& (minDiskSpace=0);
			/*__JS__ */localStorage.setItem(this._name,window.JSON.stringify(this._data));
			return this._name;
		}

		__proto.send=function(__rest){}
		__proto.setDirty=LAYAFNVOID/*function(propertyName){}*/
		__proto.setProperty=function(propertyName,value){
			this._data.propertyName=value;
		}

		__getset(0,__proto,'data',function(){
			return this._data;
		});

		__getset(0,__proto,'objectEncoding',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(version){}*/);
		__getset(0,__proto,'fps',null,LAYAFNVOID/*function(updatesPerSecond){}*/);
		__getset(0,__proto,'client',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(object){}*/);
		__getset(0,__proto,'size',LAYAFN0/*function(){return 0}*/);
		__getset(1,Cookie,'defaultObjectEncoding',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(version){}*/);
		Cookie.deleteAll=LAYAFN0/*function(url){return 0}*/
		Cookie.getDiskUsage=LAYAFN0/*function(url){return 0}*/
		Cookie.getLocal=function(name,localPath,secure){
			(secure===void 0)&& (secure=false);
			var result=new Cookie(name);
			result._data=/*__JS__ */localStorage.getItem(name)?window.JSON.parse(localStorage.getItem(name)):{};
			return result;
		}

		Cookie.getRemote=function(name,remotePath,persistence,secure){
			(persistence===void 0)&& (persistence=false);
			(secure===void 0)&& (secure=false);
			return null}
		return Cookie;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/filedata.as
	//class iflash.laya.net.FileData
	var FileData=(function(){
		function FileData(url,type,mirroringWith){
			this.contentType=null;
			this.contentdata=null;
			this.quoteFile=null;
			this.state=0;
			this._fileRead_=null;
			this._type_=null;
			this.baseURI=null;
			this.state=0;
			this._type_=type || FileData.TYPE_TEXT;
			this.baseURI=new URI(Method.formatUrl(url));
			if (mirroringWith){
				if ((typeof mirroringWith=='string'))mirroringWith=FileData.getFileData(mirroringWith);
				this.quoteFile=mirroringWith;
				this.contentdata=mirroringWith.contentdata;
			}
			this._fileRead_=[];
		}

		__class(FileData,'iflash.laya.net.FileData',true);
		var __proto=FileData.prototype;
		__proto.unload=function(){
			this.contentdata=null;
			delete FileData._files[this.baseURI.url];
			this._fileRead_=null;
		}

		__proto.addFileRead=function(file){
			if (this.state==3)
				file.onload(this.contentdata);
			else this._fileRead_.push(file);
		}

		__proto.onload=function(value){{
				if (Laya.HTMLVER && this._type_==FileData.TYPE_ARRAYBUFFER){
					/*__JS__ */if(!value)return;;
					var b=new ByteArray();
					b.endian=value.endian;
					/*__JS__ */b.writeArrayBuffer(value);
					b.position=0;
					value=b;
				}
				this.contentdata=value;
				this.state=3;
				this._disposeLoaded_();
			}
		}

		__proto.onerror=function(e){
			delete FileData._files[this.baseURI.url];
			this.state=FileData.LOAD_STATE_ERR;
			this.onerrorLoaded();
		}

		__proto.getData=function(urlrequest){
			if (this.state==3)return this.contentdata;
			if (this.quoteFile){
				if (this.quoteFile.state==3){
					return this.onload(this.quoteFile.getData());
				}
				this.quoteFile.addFileRead(this);
				return null;
			}
			if (this.state==0 || this.state==FileData.LOAD_STATE_ERR){
				this.state=2;
				var request=Browser.createHttpRequest();
				var _this=this;
				request.onload=function (d){
					_this.onload(d);
				}
				request.onerror=function (d){
					_this.onerror(d);
				}
				if (this._type_=="binary" && Laya.HTMLVER){
					this._type_=FileData.TYPE_ARRAYBUFFER;
				}
				if (this._type_=="binary" && Laya.FLASHVER){
					if(urlrequest){
						request.open(this.baseURI.url,this._type_,null,true,urlrequest.method,urlrequest.data,urlrequest.requestHeaders);
					}
					else{
						request.open(this.baseURI.url,this._type_);
					}
				}
				else{
					if(urlrequest){
						request.open(this.baseURI.url,this._type_==FileData.TYPE_ARRAYBUFFER?FileData.TYPE_ARRAYBUFFER:null,null,true,urlrequest.method,urlrequest.data,urlrequest.requestHeaders);
					}
					else{
						request.open(this.baseURI.url,this._type_==FileData.TYPE_ARRAYBUFFER?FileData.TYPE_ARRAYBUFFER:null);
					}
				}
				return null;
			}
		}

		__proto.onerrorLoaded=function(){
			this.state=3;
			if(!this._fileRead_)return;
			for (var i=0,sz=this._fileRead_.length;i < sz;i++){
				this._fileRead_[i].loadError(this.contentdata);
			}
			this._fileRead_=null;
		}

		__proto._disposeLoaded_=function(){
			this.state=3;
			for (var i=0,sz=this._fileRead_.length;i < sz;i++){
				this._fileRead_[i].onload(this.contentdata);
			}
			this._fileRead_=null;
		}

		FileData.setFileIsLoaded=function(url,file){
			url=Method.formatUrl(url);
		}

		FileData.fileIsLoaded=function(url){
			url=Method.formatUrl(url);
			return FileData._files[url]!=null;
		}

		FileData.getFileData=function(url){
			url=Method.formatUrl(url);
			return FileData._files[url];
		}

		FileData._files=[];
		FileData.LOAD_STATE_ERR=-1;
		FileData.LOAD_STATE_NO=0;
		FileData.LOAD_STATE_RELEASE=1;
		FileData.LOAD_STATE_LOADING=2;
		FileData.LOAD_STATE_LOADED=3;
		FileData.TYPE_IMAGE="image";
		FileData.TYPE_TEXT="text";
		FileData.TYPE_ARRAYBUFFER="arraybuffer";
		return FileData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/fileread.as
	//class iflash.laya.net.FileRead
	var FileRead=(function(){
		function FileRead(url,callback,type,urlRequest){
			this.data=null;
			this._callBack_=null;
			this._contentType_=null;
			this._callBack_=callback;
			this._createFileData_(url,type);
			this.data.getData(urlRequest);
		}

		__class(FileRead,'iflash.laya.net.FileRead',true);
		var __proto=FileRead.prototype;
		__proto._createFileData_=function(url,type){
			!this.data && (this.data=new FileData(url,type,null),this.data.contentType=Method.formatUrlType(url));
			this.data.addFileRead(this);
		}

		__proto.onload=function(value){
			if (this._callBack_){
				this._callBack_.onload.call(this._callBack_.reader,this);
				this._callBack_=null;
				this.unload();
			}
		}

		__proto.loadError=function(value){
			if (this._callBack_){
				this._callBack_.unOnload.call(this._callBack_.reader,this);
				this._callBack_=null;
			}
		}

		__proto.unload=function(){
			this.data && this.data.unload();
			this.data=null;
		}

		__proto.load=function(){
			return this.data.getData();
		}

		__getset(0,__proto,'baseURI',function(){
			return this.data.baseURI;
		});

		__getset(0,__proto,'contentType',function(){
			if(this.data)
				return this.data.contentType;
			return null;
			},function(type){
			this.data&&(this.data.contentType=type);
		});

		__getset(0,__proto,'loaded',function(){
			return this.data.state==/*iflash.laya.net.FileData.LOAD_STATE_LOADED*/3;
		});

		__getset(0,__proto,'url',function(){
			return this.data.baseURI.url;
		});

		__getset(0,__proto,'contentdata',function(){
			this.data.getData();
			return this.data.contentdata;
		});

		return FileRead;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/location.as
	//class iflash.laya.net.Location
	var Location1=(function(){
		function Location(){
			this._href_=null;
			this._fullPath_=null;
			this._protocol=null;
			this._host=null;
			this._rootPath=null;
			this._conchConfig=null;
			Laya.window.location=this;
			this.href=Browser.location.href;
		}

		__class(Location,'iflash.laya.net.Location',true,null,'Location1');
		var __proto=Location.prototype;
		__getset(0,__proto,'href',function(){
			return this._href_;
			},function(url){
			this._href_=url;
			this._fullPath_=Method.getPath(this._href_);
		});

		__getset(0,__proto,'rootPath',function(){
			return this._rootPath;
			},function(value){
			this._rootPath=value;
		});

		__getset(0,__proto,'fullPath',function(){
			return this._fullPath_;
		});

		__getset(0,__proto,'host',function(){
			return this._host;
		});

		__getset(0,__proto,'protocol',function(){
			return this._protocol;
		});

		__getset(0,__proto,'conchConfig',function(){
			return this._conchConfig;
		});

		return Location;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/datatype.as
	//class iflash.laya.runner.DataType
	var DataType=(function(){
		function DataType(){};
		__class(DataType,'iflash.laya.runner.DataType',true);
		DataType.initKeyMap=function(){
			DataType.MAP=[];
			var arr=["NULL","ID","CHAR","SHORT","FLOAT","STRING","INT","BYTE",
			"CURRENT","HOST","TEMPLATE_ID","ARRAY","MATRIX","BOOL","RESOURCE",
			"TEMPLET","FRAME","INTERPOLATION","NEWID","END","FRAME_END","POP",
			"PUSH","SYMBOL_CLASS","LYIMAGELEMENT","SHAPE","BITMAPDATA","BITMAP",
			"SPRITE","MOVIECLIP","TEXTFIELD","BUTTON","REMOVE_ALL","SET_INSTANCE_NAME",
			"REMOVE_INSTANCE_NAME","NEW_OBJECT","ADD_CHILD","REMOVE_CHILD","SET_TRANSFORM",
			"POS","EMPTY","SET_ALPHA","SET_VISIBLE","INIT_LYIMAGELEMENT_CMD","INIT_SHAPE_CMD",
			"INIT_MOVIECLIP_CMD","INIT_TEXTFIELD_CMD","INIT_BUTTON_CMD","INIT_STATICTEXTFIELDCMD"];
			var i;
			/*for each*/for(var $each_i in arr){
				i=arr[$each_i];
				DataType.MAP[DataType[i]]=i;
			}
			return DataType.MAP;
		}

		DataType.NULL=0;
		DataType.ID=1;
		DataType.CHAR=3;
		DataType.SHORT=4;
		DataType.FLOAT=5;
		DataType.STRING=6;
		DataType.INT=7;
		DataType.BYTE=8;
		DataType.CURRENT=9;
		DataType.HOST=10;
		DataType.TEMPLATE_ID=11;
		DataType.ARRAY=12;
		DataType.MATRIX=13;
		DataType.BOOL=14;
		DataType.RESOURCE=21;
		DataType.TEMPLET=22;
		DataType.FRAME=23;
		DataType.INTERPOLATION=24;
		DataType.NEWID=25;
		DataType.END=26;
		DataType.FRAME_END=27;
		DataType.POP=28;
		DataType.PUSH=29;
		DataType.SYMBOL_CLASS=30;
		DataType.LYIMAGELEMENT=51;
		DataType.SHAPE=52;
		DataType.BITMAPDATA=53;
		DataType.BITMAP=54;
		DataType.SPRITE=55;
		DataType.MOVIECLIP=56;
		DataType.TEXTFIELD=57;
		DataType.BUTTON=58;
		DataType.STATICTEXTFIELD=59;
		DataType.REMOVE_ALL=151;
		DataType.SET_INSTANCE_NAME=152;
		DataType.REMOVE_INSTANCE_NAME=153;
		DataType.NEW_OBJECT=154;
		DataType.ADD_CHILD=155;
		DataType.REMOVE_CHILD=156;
		DataType.SET_TRANSFORM=157;
		DataType.POS=158;
		DataType.EMPTY=159;
		DataType.SET_ALPHA=160;
		DataType.SET_VISIBLE=161;
		DataType.INIT_LYIMAGELEMENT_CMD=162;
		DataType.INIT_SHAPE_CMD=163;
		DataType.INIT_MOVIECLIP_CMD=164;
		DataType.INIT_TEXTFIELD_CMD=165;
		DataType.INIT_BUTTON_CMD=166;
		DataType.INIT_SHAPE2ADDCMD=167;
		DataType.INIT_STATICTEXTFIELDCMD=168;
		DataType.MAP=null
		return DataType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/defines/animationcreate.as
	//class iflash.laya.runner.defines.AnimationCreate
	var AnimationCreate=(function(){
		function AnimationCreate(){
			this.commands={};
		}

		__class(AnimationCreate,'iflash.laya.runner.defines.AnimationCreate',true);
		AnimationCreate.removeAll=function(target,key){
			(key===void 0)&& (key=0);
			while(target.numChildren){
				target.removeChildAt(0);
			}
		}

		AnimationCreate.setInstanceName=function(target,key,name){
			var obj=target._animData_.objes[key];
			try{obj.name=name;target[name]=obj;}catch(e){}
		}

		AnimationCreate.removeInstanceName=LAYAFNVOID/*function(target,key,name){}*/
		AnimationCreate.newObject=function(target,key,characterID,symblName){
			var res;
			if (target._animData_.objes[key]&&target._animData_.objes[key].v==true)return;
			else if(target._animData_.objes[key])
			{target.removeChild(target._animData_.objes[key]);return;}
			if(symblName){
				var c=iflash.utils.getDefinitionByName(symblName);
				if(!c){
					res=target.loaderInfo.applicationDomain.newInstance(symblName);
					if((res instanceof iflash.display.BitmapData )){
						res=new Bitmap(res);
						target._animData_.objes[key]=res;
						return;
					}
					res&&(target._animData_.objes[key]=res);
					return;
				};
				var cc=new c();
				if((cc instanceof iflash.display.BitmapData )){
					var b=new Bitmap(cc);
					target._animData_.objes[key]=b;
					}else{
					target._animData_.objes[key]=cc;
				}
				}else{
				res=target.loaderInfo.getResource(String(characterID));
				res&&(target._animData_.objes[key]=res.lyclone());
			}
		}

		AnimationCreate.addChild=function(target,key,depth){
			if(target._animData_.objes[key]&&target._animData_.objes[key].parent)return;
			if(!target._animData_.objes[key])return;
			target.addChild(target._animData_.objes[key]);
			target._animData_.objes[key].zIndex=depth;
		}

		AnimationCreate.removeChild=function(target,key){
			(key===void 0)&& (key=0);
			if(target._animData_.objes[key] && target._animData_.objes[key].v==true)return
				if(target._animData_.objes[key]){
				target.removeChild(target._animData_.objes[key])
				target._animData_.objes[key].alpha=true
			}
			return;
		}

		AnimationCreate.setTransform=function(target,f32){
			var obj=target._animData_.objes[f32[0]];
			if(obj && !obj.v)
				obj&&(obj.x=f32[1],obj.y=f32[2],obj.scaleX=f32[3],obj.scaleY=f32[4],obj.skewX=f32[6],obj.skewY=f32[7],obj.rotation=f32[5])
		}

		AnimationCreate.pos=function(target,key,x,y){
			var obj=target._animData_.objes[key];
			obj&&(obj.x=x,obj.y=y);
		}

		AnimationCreate.empty=function(target,key){
			(key===void 0)&& (key=0);
		}

		AnimationCreate.setAlpha=function(target,key,value){
			var o=target._animData_.objes[key];
			o&&(o.alpha=value);
		}

		AnimationCreate.setVisible=function(target,key,value){
			if(target._animData_.objes[key])target._animData_.objes[key].visible=value;
		}

		AnimationCreate.getCurrentKey=function(target){return target._animData_.baseKey;}
		AnimationCreate.getKey=function(target){return++(target._animData_.baseKey);}
		AnimationCreate.initLyImage=function(target,src,w,h){
			target.width=w;
			target.height=h;
			target.src=target.loaderInfo.__imageUrl__+String(src)+".png";
			var len=target.loaderInfo.temp.length;
			target.loaderInfo.temp[len]=target;
			return target;
		}

		AnimationCreate.initShap=function(target,image,matrix){
			target._init_({data:image,matrix:matrix});
			return target;
		}

		AnimationCreate.initShape2Add=function(target,id,w,h,matrix){
			DisplayObject.initModule=false;
			var img=new LyImageElement();
			img.src=target.loaderInfo.__imageUrl__+id+".png";
			if(target.loaderInfo.config){
				img.assetUr=target.loaderInfo.__imageUrl__+/*iflash.display.LoaderInfo.TextureSign*/"a"+target.loaderInfo.config[id+".png"].tid+".png";
				img.assetConfig=target.loaderInfo.config[id+".png"];
			}
			img.width=w;
			img.height=h;
			img.orgH=h;
			img.orgW=w;
			img.scale9Data=target.loaderInfo.argData?target.loaderInfo.argData[id+1]:null;
			var len=target.loaderInfo.temp.length;
			target.loaderInfo.temp[len]=img;
			target._init_({data:img,matrix:matrix});
			DisplayObject.initModule=true;
			return target;
		}

		AnimationCreate.initStaticText=function(target,x,y,posx,posy,w,h,wordWrap,multiline,readOnly,align,textColor,fontHeight,initialText){
			target._width=w+5;
			target._height=h+5;
			target.tempBound={x:x,y:-2};
			target.x=x;
			target.y=y;
			target._autoSize='left';
			target._multiline=multiline;
			target._wordWrap=wordWrap;
			target._type="static";
			var tf=new TextFormat();
			tf.size=fontHeight/20;
			if(align==2){tf.align="center";};
			var index=textColor.lastIndexOf("*");
			if(index!=-1){
				var temp=textColor.substring(index+1);
				if(temp.indexOf('Bold')>-1)
					tf.bold=true;
				if(temp.indexOf('Italic')>-1)
					tf.italic=true;
				tf.font=temp.replace(/\s*(Bold|Italic)\s*/g,'');
				tf.color=Number("0x"+textColor.substring(0,index));
				}else{
				tf.color=Number(textColor.replace("#","0x"));
			}
			if (initialText){
				target.htmlText=initialText;
			}
			target.defaultTextFormat=tf;
		}

		AnimationCreate.initText=function(target,x,y,posx,posy,w,h,wordWrap,multiline,readOnly,align,textColor,fontHeight,initialText){
			target.width=w;
			target.height=h;
			target.tempBound={x:x,y:0};
			target.x=x;
			target.y=y;
			target.multiline=multiline;
			target.wordWrap=wordWrap;
			(!readOnly)&&(target.type="input");
			var tf=new TextFormat();
			tf.size=fontHeight/20;
			if(align==0)
				tf.align="left";
			else if(align==1)
			tf.align="right";
			else if(align==2)
			tf.align="center";
			var index=textColor.lastIndexOf("*");
			if(index!=-1){
				var temp=textColor.substring(index+1);
				if(temp.indexOf('Bold')>-1)
					tf.bold=true;
				if(temp.indexOf('Italic')>-1)
					tf.italic=true;
				tf.font=temp.replace(/\s*(Bold|Italic)\s*/g,'');
				tf.color=Number("0x"+textColor.substring(0,index));
				}else{
				tf.color=Number(textColor.replace("#","0x"));
			}
			if (initialText){
				if(initialText.indexOf("<p")==-1){
					target.text=initialText;
					}else{
					target.htmlText=initialText;
				}
			}
			target.defaultTextFormat=tf;
		}

		AnimationCreate.initButton=function(target,runner,w,h,totalFrame,labs){
			var aniData=new AnimationData(),len=labs.length,labData={};
			for(var i=0;i<len;i+=2)
			{labData[labs[i]]=labs[i+1];}
			aniData.totalFrame=totalFrame;
			aniData.labs=labData;
			target._animData_=aniData;
			target._interval_=60;
			target.runner=runner;
			target.width=w;
			target.height=h;
			target._type_|=/*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10;
			return target;
		}

		AnimationCreate.initMovie=function(target,runner,w,h,totalFrame,labs){
			var aniData=new AnimationData(),len=labs?labs.length:0,labData={};
			for(var i=0;i<len;i+=2)
			{labData[labs[i]]=labs[i+1];}
			aniData.totalFrame=totalFrame;
			aniData.labs=labData;
			target._animData_=aniData;
			target._interval_=60;
			target.runner=runner;
			target.width=w;
			target.height=h;
			if(target.loaderInfo.argData && target.loaderInfo.argData.hasOwnProperty(target.charId))
				target.scale9Data=target.loaderInfo.argData[target.charId].scale9Data;
			target._type_|=/*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10;
			return target;
		}

		return AnimationCreate;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/onecmddata.as
	//class iflash.laya.runner.OneCmdData
	var OneCmdData=(function(){
		function OneCmdData(){
			this.oneFun=null;
			this.args=null;
		}

		__class(OneCmdData,'iflash.laya.runner.OneCmdData',true);
		var __proto=OneCmdData.prototype;
		__proto.applyTo=function(who,one){
			return this.oneFun._fun_.apply(who,this.args);
		}

		OneCmdData.CreateOneCmdData=function(ctype,data,infoId){
			var fnid=ctype;
			var oneFun=Register._functions_[fnid];
			if(!oneFun){
				throw new Error("此函数未注册id("+fnid+"),ctype("+ctype+")");
			};
			var onecmddata;
			if (oneFun.useID){
				onecmddata=new OneCmdDataUseId();
				(onecmddata).id=data.readUnsignedByte();
			}
			else onecmddata=new OneCmdData();
			onecmddata.oneFun=oneFun;
			onecmddata.args=oneFun.readParams(data,infoId);
			var args=onecmddata.args;
			switch(fnid){
				case /*iflash.laya.runner.DataType.SET_TRANSFORM*/157:
					onecmddata.args=[args[0],/*__JS__ */new Float32Array(args.slice(1))];
					args=null;
					break ;
				}
			return onecmddata;
		}

		return OneCmdData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/onefunction.as
	//class iflash.laya.runner.OneFunction
	var OneFunction=(function(){
		function OneFunction(fun,argCount,_useID,paramTypes){
			this._fun_=null;
			this._argsType_=[];
			this.useID=false;
			this.argCount=0;
			this._fun_=fun;
			this._argsType_=paramTypes;
			this.useID=_useID;
		}

		__class(OneFunction,'iflash.laya.runner.OneFunction',true);
		var __proto=OneFunction.prototype;
		__proto.readParams=function(data,infoid){
			var args=[],len=this._argsType_.length;
			for (var i=0;i < len;i++){
				args.push(OneFunction.readParam(this._argsType_[i],data,infoid));
			}
			return args;
		}

		OneFunction.readParam=function(type,data,infoid){
			var value;
			var id=0;
			var i=0;
			var arr;
			var len=0;
			switch(type){
				case /*iflash.laya.runner.DataType.BYTE*/8:
				case /*iflash.laya.runner.DataType.CHAR*/3:
					value=data.readByte();
					break ;
				case /*iflash.laya.runner.DataType.FLOAT*/5:
					value=data.readFloat();
					break ;
				case /*iflash.laya.runner.DataType.INT*/7:
					value=data.readInt();
					break ;
				case /*iflash.laya.runner.DataType.SHORT*/4:
					value=data.readShort();
					break ;
				case /*iflash.laya.runner.DataType.BOOL*/14:
					value=data.readBoolean();
					break ;
				case /*iflash.laya.runner.DataType.STRING*/6:
					value=data.readUTF();
					break ;
				case /*iflash.laya.runner.DataType.CURRENT*/9:
					value=Runnner.getCurrentObj();
					break ;
				case /*iflash.laya.runner.DataType.ID*/1:
					id=data.readShort();
					value=LoaderInfo.getLoaderInfo(infoid).getResource(id.toString());
					break ;
				case /*iflash.laya.runner.DataType.HOST*/10:
					value="HOST";
					break ;
				case /*iflash.laya.runner.DataType.NULL*/0:
					value=null;
					break ;
				case /*iflash.laya.runner.DataType.TEMPLATE_ID*/11:
					id=data.readShort();
					value=Runnner.template[id];
					break ;
				case /*iflash.laya.runner.DataType.ARRAY*/12:
					len=data.readByte();
					if(!len)
					{value=[];break }
					type=data.readByte();
					arr=[];
					for(i=0;i<len;i++){
						arr.push(OneFunction.readParam(type,data,infoid));
					}
					value=arr;
					break ;
				case /*iflash.laya.runner.DataType.MATRIX*/13:
					len=data.readShort();
					arr=[null,null,null,null,null,null];
					for(i=0;i<len;i++){
						arr[i]=OneFunction.readParam(/*iflash.laya.runner.DataType.FLOAT*/5,data,infoid);
					}
					value=new Matrix(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5]);
					break ;
				}
			return value;
		}

		OneFunction.loaderId=0;
		return OneFunction;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/register.as
	//class iflash.laya.runner.Register
	var Register=(function(){
		function Register(){}
		__class(Register,'iflash.laya.runner.Register',true);
		Register.regFunction=function(id,fun,argCount,useID,__args){
			var args=[];for(var i=4,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			if (id < 10)throw "regFunction id must>10,id:"+id;
			Register._functions_[id]=new OneFunction(fun,argCount,useID,args);
		}

		Register.regClass=function(id,clazz){
			if (id < 10)throw "regClass id must>10,id:"+id;
			Register._class_[id]=clazz;
		}

		Register._functions_=[];
		Register._class_=[];
		Register._id_=0;
		return Register;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/runnner.as
	//class iflash.laya.runner.Runnner
	var Runnner=(function(){
		function Runnner(p,id){
			this.parent=null;
			this._comm_=[];
			this._functions_=[];
			this._id_=-1;
			(id===void 0)&& (id=-1);
			this._id_=id;
		}

		__class(Runnner,'iflash.laya.runner.Runnner',true);
		var __proto=Runnner.prototype;
		__proto.deleteLoaderInfo=function(){
			Runnner._info=null;
			Runnner.currentObj=null;
		}

		__proto.interpolation=function(data){
			var findex=data.readUnsignedShort();
			var index=data.readUnsignedShort();
			var selfindex=this._comm_.length;
			this._comm_.push(null);
		}

		__proto.compile=function(data,info){
			Runnner._info=info;
			while (data.bytesAvailable){
				var ctype=data.readUnsignedByte()
				var n,resId
				switch(ctype){
					case 0:continue ;
					case DataType.RESOURCE:
						resId=data.readShort();
						var cid=data.readByte();
						this.res(resId,cid);
						n=new Runnner(this,resId);
						n.compile(data,info);
						n.run(Runnner.getCurrentObj(),new RunOne());
						break ;
					case DataType.TEMPLET:
						resId=data.readShort();
						n=new Runnner(this,resId);
						iflash.laya.runner.Runnner.template[resId]=n;
						n.compile(data,info);
						break ;
					case DataType.END:
						return 0;
					case DataType.FRAME:
						n=new Runnner(this,-1);
						this._comm_.push(n);
						n.compile(data,info);
						break ;
					case DataType.INTERPOLATION:
						this.interpolation(data);
						break ;
					case DataType.FRAME_END:
						return 0;
						break ;
					case /*iflash.laya.runner.DataType.SYMBOL_CLASS*/30:;
						var tagId=data.readShort();
						var name=data.readUTF();
						if(tagId==0){
							tagId=32767;
							info["mainClass"]=name;
						}
						info.pushResource(info.getResource(tagId.toString()),name);
						SWFTools.connect(name);
						iflash.laya.runner.Runnner.symbolClass.push({tagId:tagId,name:name,loadInfo:"infoId"});
						break ;
					default :
						this._comm_.push(OneCmdData.CreateOneCmdData(ctype,data,info.__id__));
					}
			}
			Runnner.currentObj=null;
			return-1;
		}

		__proto.res=function(id,classId){
			DisplayObject.initModule=false;
			var obj=new (Register._class_[classId]);
			DisplayObject.initModule=true;
			obj.__id__=Runnner._info.__id__;
			obj.charId=id;
			Runnner._info.pushResource(obj,id.toString());
			Runnner.currentObj=obj;
		}

		__proto.run=function(who,one){
			for (var i=0,sz=this._comm_.length;i < sz;i++){
				this._comm_[i] && this._comm_[i].applyTo(who,one);
			}
			return-1;
		}

		__proto.run2=function(who){
			for (var i=0,sz=this._comm_.length;i < sz;i++){
				this._comm_[i] && (this._comm_[i].args[0]=who,this._comm_[i].applyTo(who),this._comm_[i].args[0]=null);
			}
			Runnner.currentObj=null;
		}

		__proto.runCMDList=function(who,one,index){
			return-1;
		}

		__proto.newObject=function(index,runId){
			(runId===void 0)&& (runId=-1);
			var o=new (Register._class_[index]);
			if(runId>0)
				o.runner=this._comm_[runId];
			return o;
		}

		__proto.getPreRes=function(info){
			for (var i=0;i < this._comm_.length;i++){
				var obj=this._comm_[i];
				for (var j=0;j < obj._comm_.length;j++){
					var o=obj._comm_[j];
					if((o instanceof iflash.laya.runner.OneCmdData )){
						if(o.oneFun._fun_==AnimationCreate.newObject){
							var res=info.getResource(o.args[2]+"");
							if((res instanceof iflash.display.MovieClip )){
								res.runner.getPreRes(info);
							}
							if((res instanceof iflash.display.Shape )&& Runnner.preResCollection.indexOf(res)<0){
								Runnner.preResCollection.push(res);
							}
						}
					}
				}
			}
		}

		__proto.clone=function(){
			var runner=new Runnner();
			runner._comm_=this._comm_.concat();
			runner._functions_=this._functions_;
			return runner;
		}

		__proto.gotoAndStop=function(frameNum,target){target._animData_.isStop=true;this._goto(frameNum,target);}
		__proto.gotoAndPlay=function(frameNum,target){target._animData_.isStop=false;this._goto(frameNum,target);}
		__proto.play=function(target){target._animData_.isStop=false;}
		__proto.stop=function(target){target._animData_.isStop=true;}
		__proto._updata_=function(target){
			if (target._animData_.isStop)return;
			var frame=target._animData_.currentFrame+1;
			if(frame>target._animData_.totalFrame||frame<0)frame=0;
			this.tick(frame,target);
			if (target._animData_.totalFrame==1)this.stop(target);
		}

		__proto.tick=function(frameNum,target){
			if(target._animData_.isStop)return;
			target._animData_.currentFrame=int(frameNum);
			if (target==null)return;
			if(target._animData_.totalFrame<1)return;
			var cmd=this._comm_[frameNum];
			if(!cmd)return;
			cmd.run2(target);
		}

		__proto._goto=function(frame,target){
			if(frame>=target._animData_.totalFrame)frame=0;
			if(frame==target._animData_.currentFrame)return;
			var i=target._animData_.currentFrame;
			if(target._animData_.currentFrame>frame)i=0;(i<0)&&(i=0);
			for(i;i<=frame;++i){
				var cmd=this._comm_[i];
				cmd&&(cmd.run2(target));
				if(!cmd)continue ;
			}
			target._animData_.currentFrame=frame;
		}

		__proto.getSysbomData=function(info){
			for(var i=0;i<iflash.laya.runner.Runnner.symbolClass.length;i++){
				var res=info.getResource(iflash.laya.runner.Runnner.symbolClass[i].name);
				if (!res)continue ;
				if ((res instanceof iflash.display.MovieClip )){
					this.regclass(iflash.laya.runner.Runnner.symbolClass[i].name,res,info.applicationDomain);
				}
				else if ((res instanceof iflash.display.LyImageElement )){
					this.regclass(iflash.laya.runner.Runnner.symbolClass[i].name,res,info.applicationDomain);
				}
				else info.applicationDomain._resMapDic_[iflash.laya.runner.Runnner.symbolClass[i].name]=res,res.__id__=info.__id__;
			}
		}

		__proto.regclass=function(name,data,dom){
			var _class=
			function (){
				if((data instanceof iflash.display.LyImageElement )){
					data._init_();data._lyToBody_();
					if (!data.miniBitmapData._canvas_&&data._image_){
						data.miniBitmapData.setImage(data._image_);
					}
					data.miniBitmapData._canvas_.size(data.width,data.height);
					data.miniBitmapData.width=data.width;
					data.miniBitmapData.height=data.height;
					return data.miniBitmapData.clone();
				}
				return data.lyclone();
			}
			dom._resMapDic_[name]=_class;
			_class&&(_class.__id__=data.__id__);
		}

		__proto.destory=function(){
			this.parent=null;
			this._comm_=null;
			this._functions_=null;
		}

		Runnner.getCurrentObj=function(){
			return Runnner.currentObj;
		}

		Runnner.createRunerForClass=function(classId){
			var runner=new Runnner();
			return runner;
		}

		Runnner.preResCollection=[];
		Runnner.runSpace=[];
		Runnner.specialRunners=[];
		Runnner.symbolClass=[];
		Runnner.template=[];
		Runnner.currentObj=null
		Runnner._info=null
		return Runnner;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/runone.as
	//class iflash.laya.runner.RunOne
	var RunOne=(function(){
		function RunOne(){
			this.ids=[];
		}

		__class(RunOne,'iflash.laya.runner.RunOne',true);
		return RunOne;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/system/config.as
	//class iflash.laya.system.Config
	var Config=(function(){
		function Config(){
			this.urlToLower=false;
			this.showInfo=false;
			this.urlToLower=false;
			this.showInfo=true;
		}

		__class(Config,'iflash.laya.system.Config',true);
		return Config;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/system/timerctrl.as
	//class iflash.laya.system.TimerCtrl
	var TimerCtrl=(function(){
		function TimerCtrl(){
			this._nowTime_=NaN;
			this._frameTimer_=null;
			this.ids=0;
			this._timers_=null;
			this._frameTimer_=[];
			this.ids=1;
			this._timers_=[];
			this._nowTime_=iflash.utils.getTimer();
		}

		__class(TimerCtrl,'iflash.laya.system.TimerCtrl',true);
		var __proto=TimerCtrl.prototype;
		__proto.addFrameTimer=function(listener,owner){
			var o;
			for (var i=0,sz=this._frameTimer_.length;i < sz;i++){
				o=this._frameTimer_[i];
				if (o.deleted){
					return o._reset_(this._nowTime_,listener,owner);
				}
			}
			o=new TimerObject(this._nowTime_,listener,owner);
			this._frameTimer_.push(o);
			return o;
		}

		__proto.removeFrameTimer=function(listener,owner){
			var o;
			for (var i=0,sz=this._frameTimer_.length;i < sz;i++){
				o=this._frameTimer_[i];
				if (o.listener==listener){
					this._frameTimer_.splice(i,1);
					i--;
					o.deleted=true;
					return;
				}
			}
		}

		__proto.addTimer=function(ower,fn,delay,repeartCount){
			var timer;
			if ((typeof fn=='string')){
			}
			else{
				timer=new TimerObject(this._nowTime_,fn,ower,delay,repeartCount);
			}
			this._timers_.push(timer);
			return timer;
		}

		__proto._update_=function(tm){
			this._nowTime_=tm;
			this._updateFrameTimer_(tm);
			this._updateTimer_(tm);
		}

		__proto._updateFrameTimer_=function(time){
			for (var i=0;i <this._frameTimer_.length;i++){
				if (!this._frameTimer_[i].run(time)){
					this._frameTimer_.splice(i,1);
					i--;
				};
			}
		}

		__proto._updateTimer_=function(time){
			var hasDeleted=false,i=0;
			for (i=0;i < this._timers_.length;i++){
				if (!this._timers_[i].run(time)){
					hasDeleted=true;
					this._timers_.splice(i,1);
					i--;
				};
			}
			if (!hasDeleted)return;
			var tsz=0;
			for (i=0;i < this._timers_.length;i++){
				if (this._timers_[i].deleted){
					continue ;
				}
				this._timers_[tsz]=this._timers_[i];
				tsz++;
			}
			this._timers_.length=tsz;
		}

		__static(TimerCtrl,
		['__DEFAULT__',function(){return this.__DEFAULT__=new TimerCtrl();}
		]);
		return TimerCtrl;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/id3info.as
	//class iflash.media.ID3Info
	var ID3Info=(function(){
		function ID3Info(){
			this.album=null;
			this.artist=null;
			this.comment=null;
			this.genre=null;
			this.songName=null;
			this.track=null;
			this.year=null;
		}

		__class(ID3Info,'iflash.media.ID3Info',true);
		return ID3Info;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/soundloadercontext.as
	//class iflash.media.SoundLoaderContext
	var SoundLoaderContext=(function(){
		function SoundLoaderContext(__args){
			this.bufferTime=NaN;
			this.checkPolicyFile=false;
		}

		__class(SoundLoaderContext,'iflash.media.SoundLoaderContext',true);
		return SoundLoaderContext;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/soundmixer.as
	//class iflash.media.SoundMixer
	var SoundMixer=(function(){
		function SoundMixer(){};
		__class(SoundMixer,'iflash.media.SoundMixer',true);
		SoundMixer.areSoundsInaccessible=LAYAFNFALSE/*function(){return false}*/
		SoundMixer.computeSpectrum=function(outputArray,FFTMode,stretchFactor){
			(FFTMode===void 0)&& (FFTMode=false);
			(stretchFactor===void 0)&& (stretchFactor=0);
		}

		SoundMixer.stopAll=LAYAFNVOID/*function(){}*/
		SoundMixer.bufferTime=0;
		SoundMixer.soundTransform=null;
		return SoundMixer;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/soundtransform.as
	//class iflash.media.SoundTransform
	var SoundTransform=(function(){
		function SoundTransform(vol,panning){
			this._sound_=null;
			this._volume_=NaN;
			(vol===void 0)&& (vol=1);
			(panning===void 0)&& (panning=0);
			this.volume=vol;
		}

		__class(SoundTransform,'iflash.media.SoundTransform',true);
		var __proto=SoundTransform.prototype;
		__getset(0,__proto,'leftToLeft',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(leftToLeft){}*/);
		__getset(0,__proto,'leftToRight',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(leftToRight){}*/);
		__getset(0,__proto,'pan',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(panning){}*/);
		__getset(0,__proto,'rightToLeft',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(rightToLeft){}*/);
		__getset(0,__proto,'rightToRight',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(rightToRight){}*/);
		__getset(0,__proto,'volume',function(){
			return this._volume_;
			},function(vol){
			this._sound_ && (this._sound_.volume=vol);
			this._volume_=vol;
		});

		return SoundTransform;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/filefilter.as
	//class iflash.net.FileFilter
	var FileFilter=(function(){
		function FileFilter(description,extension,macType){}
		__class(FileFilter,'iflash.net.FileFilter',true);
		var __proto=FileFilter.prototype;
		__getset(0,__proto,'description',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'extension',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'macType',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return FileFilter;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/objectencoding.as
	//class iflash.net.ObjectEncoding
	var ObjectEncoding=(function(){
		function ObjectEncoding(){}
		__class(ObjectEncoding,'iflash.net.ObjectEncoding',true);
		__getset(1,ObjectEncoding,'dynamicPropertyWriter',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(object){}*/);
		ObjectEncoding.AMF0=0;
		ObjectEncoding.AMF3=3;
		ObjectEncoding.DEFAULT=3;
		return ObjectEncoding;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/responder.as
	//class iflash.net.Responder
	var Responder=(function(){
		function Responder(result,status){
			this._resp=null;
			this._resp=new iflash.net.Responder(result,status);
		}

		__class(Responder,'iflash.net.Responder',true);
		var __proto=Responder.prototype;
		__getset(0,__proto,'resp',function(){
			return this._resp;
		});

		return Responder;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/securitypanel.as
	//class iflash.net.SecurityPanel
	var SecurityPanel=(function(){
		function SecurityPanel(){}
		__class(SecurityPanel,'iflash.net.SecurityPanel',true);
		SecurityPanel.CAMERA="camera";
		SecurityPanel.DEFAULT="default";
		SecurityPanel.DISPLAY="display";
		SecurityPanel.LOCAL_STORAGE="localStorage";
		SecurityPanel.MICROPHONE="microphone";
		SecurityPanel.PRIVACY="privacy";
		SecurityPanel.SETTINGS_MANAGER="settingsManager";
		return SecurityPanel;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/sharedobjectflushstatus.as
	//class iflash.net.SharedObjectFlushStatus
	var SharedObjectFlushStatus=(function(){
		function SharedObjectFlushStatus(){}
		__class(SharedObjectFlushStatus,'iflash.net.SharedObjectFlushStatus',true);
		SharedObjectFlushStatus.FLUSHED="flushed";
		SharedObjectFlushStatus.PENDING="pending";
		return SharedObjectFlushStatus;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlloaderdataformat.as
	//class iflash.net.URLLoaderDataFormat
	var URLLoaderDataFormat=(function(){
		function URLLoaderDataFormat(){}
		__class(URLLoaderDataFormat,'iflash.net.URLLoaderDataFormat',true);
		URLLoaderDataFormat.BINARY="binary";
		URLLoaderDataFormat.TEXT="text";
		URLLoaderDataFormat.VARIABLES="variables";
		return URLLoaderDataFormat;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlrequest.as
	//class iflash.net.URLRequest
	var URLRequest=(function(){
		function URLRequest(url){
			this._contentType=null;
			this._data=null;
			this._digest=null;
			this._requestHeaders=[];
			this._url=null;
			this._method=/*iflash.net.URLRequestMethod.GET*/"GET";
			this._url=url;
		}

		__class(URLRequest,'iflash.net.URLRequest',true);
		var __proto=URLRequest.prototype;
		__getset(0,__proto,'contentType',function(){
			return this._contentType;
			},function(value){
			this._contentType=value;
		});

		__getset(0,__proto,'data',function(){
			return this._data;
			},function(value){
			this._data=value;
		});

		__getset(0,__proto,'url',function(){
			return this._url;
			},function(value){
			this._url=value;
		});

		__getset(0,__proto,'digest',function(){
			return this._digest;
			},function(value){
			this._digest=value;
		});

		__getset(0,__proto,'method',function(){
			return this._method;
			},function(value){
			this._method=value;
		});

		__getset(0,__proto,'requestHeaders',function(){
			return this._requestHeaders;
			},function(value){
			this._requestHeaders=value;
		});

		return URLRequest;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlrequestheader.as
	//class iflash.net.URLRequestHeader
	var URLRequestHeader=(function(){
		function URLRequestHeader(name,value){
			this.name="Content-Type";
			this.value="application/x-www-form-urlencoded";
			(name===void 0)&& (name="");
			(value===void 0)&& (value="");
			;
			this.name=name;
			this.value=value;
		}

		__class(URLRequestHeader,'iflash.net.URLRequestHeader',true);
		return URLRequestHeader;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlrequestmethod.as
	//class iflash.net.URLRequestMethod
	var URLRequestMethod=(function(){
		function URLRequestMethod(){}
		__class(URLRequestMethod,'iflash.net.URLRequestMethod',true);
		URLRequestMethod.DELETE="DELETE";
		URLRequestMethod.GET="GET";
		URLRequestMethod.HEAD="HEAD";
		URLRequestMethod.OPTIONS="OPTIONS";
		URLRequestMethod.POST="POST";
		URLRequestMethod.PUT="PUT";
		return URLRequestMethod;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlvariables.as
	//class iflash.net.URLVariables
	var URLVariables=(function(){
		function URLVariables(source){
			this.__decodeRegExp__=new RegExp("[?&]?([^=]+)=([^&]*)","g");
			__uns(this,['__decodeRegExp__']);
			source !=null && this.decode(source);
		}

		__class(URLVariables,'iflash.net.URLVariables',false);
		var __proto=URLVariables.prototype;
		__proto.decode=function(source){
			if(!source)return;
			if(!this.variables){
				this.variables={};
			}
			source=source.split("+").join(" ");
			var tokens,re=this.__decodeRegExp__;
			while (tokens=re.exec(source)){
				Log.unfinished("URLVariables","decode");
				this.variables[tokens[1]]=tokens[2];
			}
		}

		__proto.toString=function(){
			var variables={};
			var str="";
			var isFirst=true;
			if (!this.variables){
				for (var key in this){
					if(key=="variables"||key=="decode"||key=="__decodeRegExp__"||key=="toString")continue ;
					if(isFirst){
						isFirst=false;
					}
					else{
						str+="&";
					}
					str+=key+"="+this[key];
				}
				return str;
			}
			for(key in variables){
				if(isFirst){
					isFirst=false;
				}
				else{
					str+="&";
				}
				str+=key+"="+variables[key];
			}
			return str;
		}

		__uns(__proto,['decode','toString']);
		return URLVariables;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/swf/animation/animationdata.as
	//class iflash.swf.animation.AnimationData
	var AnimationData=(function(){
		function AnimationData(){
			this.objes={};
			this._parent=null;
			this.baseKey=-1;
			this.currentFrame=-1;
			this.labs={};
			this.isStop=false;
			this.totalFrame=0;
		}

		__class(AnimationData,'iflash.swf.animation.AnimationData',true);
		var __proto=AnimationData.prototype;
		__proto.lyclone=function(){
			var ani=new AnimationData()
			ani.totalFrame=this.totalFrame;
			ani.labs=this.labs;
			return ani;
		}

		__proto.destory=function(){
			this.objes=null;
			this._parent=null;
			this.labs=null;
		}

		return AnimationData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/swf/utils/swftools.as
	//class iflash.swf.utils.SWFTools
	var SWFTools=(function(){
		function SWFTools(){}
		__class(SWFTools,'iflash.swf.utils.SWFTools',true);
		SWFTools.connect=function(cla){
			if ((typeof cla=='string'))cla=ApplicationDomain.currentDomain.getDefinition2(cla);
			if(!cla||cla.f)return;
			var pre=cla.__super;
			cla.f=true;
			cla.__super=function (ex){
				(ex===void 0)&& (ex=true);
				pre.apply(this,arguments);
				if(ex)iflash.swf.utils.SWFTools._initClass_(cla,this);
			}
		}

		SWFTools.initClass=function(cla,obj,sourceMc){}
		SWFTools._initClass_=function(cla,obj,sourceMc){
			if((obj instanceof iflash.media.Sound ))return;
			var app=ApplicationDomain.currentDomain;
			var b;
			if ((obj instanceof iflash.display.BitmapData )){
				b=app.newInstance(iflash.utils.getQualifiedClassName(obj));
				obj._canvas_=b._canvas_.clone();
				obj._context_=obj._canvas_;
				obj.width=b.width;
				obj.height=b.height;
				return;
			}
			if((obj instanceof iflash.display.Bitmap )){
				b=app.newInstance(iflash.utils.getQualifiedClassName(obj));
				obj.bitmapData=new BitmapData(b.width,b.height);
				obj.bitmapData._canvas_=b._canvas_.clone();
				obj._modle_.vcanvas(obj.bitmapData._canvas_);
				obj.bitmapData.width=b.width;
				obj.bitmapData.height=b.height;
				obj.width=b.width;
				obj.height=b.height;
				return;
			};
			var mc
			if(cla!=null){
				var cName=iflash.utils.getQualifiedClassName(obj);
				mc=app.newDefinition(cName);
			}else mc=sourceMc;
			if(!mc)mc=new cla();
			if((obj instanceof iflash.display.MovieClip )){
				obj._interval_=mc._interval_=60;
				obj._animData_=mc._animData_.lyclone();
				obj.runner=mc.runner;
				obj._type_|=/*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10;
				obj.__id__=mc.__id__;
				obj._type_|=/*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10;
				if((obj instanceof iflash.display.SimpleButton ))obj.gotoAndStop(1);
				else obj._gotoAndPlay_(1);
				return
			}
			else if(((obj instanceof iflash.display.Sprite ))&&mc){
				var arrar=mc._childs_.concat();
				for(var j=0;j<arrar.length;j++){
					obj.addChild(arrar[j]);
				}
				for(var i in mc){
					if(i !='_childs_'&& mc[i]&&i!="runner")obj[i]=mc[i];
				}
				mc.stop();
				mc=null;
			}
		}

		return SWFTools;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/applicationdomain.as
	//class iflash.system.ApplicationDomain
	var ApplicationDomain=(function(){
		function ApplicationDomain(parentDomain){
			this._domainMemory=null;
			this._parentDomain_=null;
			this._resMapDic_={};
			this._id__=0;
			this._parentDomain_=parentDomain;
		}

		__class(ApplicationDomain,'iflash.system.ApplicationDomain',true);
		var __proto=ApplicationDomain.prototype;
		__proto.getDefinition=function(name){
			if(!name){
				throw new Error(name+' Variable a is not defined.');
				return;
			}
			name=(name.toString()).replace("::",".");
			if(name.split(".")[0]=="flash"){
				name=name.replace("flash" ,"iflash");
			};
			var result=iflash.utils.getDefinitionByName(name);
			if(result==null){
				result=this._resMapDic_[name];
				result&&(result.lin=name);
			}
			if (result==null){
				result=LAYABOX.getInterfaceDefinitionByName(name);
			}
			if(!result)
				throw new Error(name+' Variable a is not defined.')
			result.__isclass=true;
			return result;
		}

		__proto.getDefinition2=function(name){
			name=(name.toString()).replace("::",".");
			var result=iflash.utils.getDefinitionByName(name);
			if(result==null){
				result=this._resMapDic_[name];
			}
			return result;
		}

		__proto.newDefinition=function(name){
			name=name.replace("::",".");
			var ret;
			var cls=(this._resMapDic_[name]);
			if(!cls){
				var info;
				/*for each*/for(var $each_info in LoaderInfo._loaderInfos_){
					info=LoaderInfo._loaderInfos_[$each_info];
					if(info.applicationDomain==this)continue ;
					cls=(info.applicationDomain._resMapDic_[name]);
					if(cls)break ;
				}
			}
			if(cls){ret=new cls();ret.__id__=cls.__id__}
				return ret;
		}

		__proto.newInstance=function(name){
			name=name.replace("::",".");
			var result=this._resMapDic_[name];
			if(result==null)return null;
			result=new result();
			return result;
		}

		__proto.hasDefinition=function(name){
			if(!name)return false;
			name=name.replace("::",".");
			var boolean=false;
			this.getDefinition2(name)? boolean=true :boolean=false;
			if(!boolean){
				try{
					var obj=iflash.utils.getDefinitionByName(name);
					obj && (boolean=true);
				}catch(error){boolean=false;}
			}
			return boolean;
		}

		__proto.addResToMap=function(name,data){
			this._resMapDic_[name]=data;return;
			if(this._resMapDic_[name])return
				else this._resMapDic_[name]=data;
		}

		__getset(0,__proto,'__id__',function(){
			return this._id__;
			},function(value){
			this._id__=value;
		});

		__getset(0,__proto,'currentDomain',null,function(value){
			ApplicationDomain._currentDomain=value;
		});

		__getset(0,__proto,'domainMemory',function(){
			return this._domainMemory;
			},function(mem){
			this._domainMemory=mem;
		});

		__getset(0,__proto,'parentDomain',function(){
			return this._parentDomain_;
		});

		__getset(1,ApplicationDomain,'currentDomain',function(){
			if(ApplicationDomain._currentDomain==null){
				ApplicationDomain._currentDomain=new ApplicationDomain();
			}
			return ApplicationDomain._currentDomain;
		});

		__getset(1,ApplicationDomain,'MIN_DOMAIN_MEMORY_LENGTH',function(){
			return 0;
		});

		ApplicationDomain._currentDomain=null;
		return ApplicationDomain;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/capabilities.as
	//class iflash.system.Capabilities
	var Capabilities=(function(){
		function Capabilities(){}
		__class(Capabilities,'iflash.system.Capabilities',true);
		__getset(1,Capabilities,'isDebugger',function(){
			return Laya.FLASHVER ? Capabilities.isDebugger :"false";
		});

		__getset(1,Capabilities,'os',function(){
			if(Capabilities._os !=null)
				return Capabilities._os;
			/*__JS__ */var sUserAgent=navigator.userAgent;
			/*__JS__ */if ((navigator.platform=="Mac68K")|| (navigator.platform=="MacPPC")|| (navigator.platform=="Macintosh")|| (navigator.platform=="MacIntel"))Capabilities._os="Mac";
			/*__JS__ */if ((navigator.platform=="X11")&& !isWin && !isMac)Capabilities._os="Mac";
			/*__JS__ */if (navigator.platform.indexOf("Linux")>-1)Capabilities._os="Linux";
			/*__JS__ */if ((navigator.platform=="Win32")|| (navigator.platform=="Windows")){;
				/*__JS__ */ if (sUserAgent.indexOf("Windows NT 5.0")>-1 || sUserAgent.indexOf("Windows 2000")>-1)Capabilities._os="Windows 2000";
				/*__JS__ */ else if (sUserAgent.indexOf("Windows NT 5.1")>-1 || sUserAgent.indexOf("Windows XP")>-1)Capabilities._os="Windows XP";
				/*__JS__ */ else if (sUserAgent.indexOf("Windows NT 5.2")>-1 || sUserAgent.indexOf("Windows 2003")>-1)Capabilities._os="Win2003";
				/*__JS__ */ else if (sUserAgent.indexOf("Windows NT 6.0")>-1 || sUserAgent.indexOf("Windows Vista")>-1)Capabilities._os="Windows Vista";
				/*__JS__ */ else if (sUserAgent.indexOf("Windows NT 6.1")>-1 || sUserAgent.indexOf("Windows 7")>-1)Capabilities._os="Windows 7";
				/*__JS__ */ else Capabilities._os="Windows";
				/*__JS__ */};
			return Capabilities._os;
		});

		__getset(1,Capabilities,'playerType',function(){
			return null;
		});

		__getset(1,Capabilities,'screenDPI',function(){
			var dpi=240;
			if(Laya.CONCHVER){
				/*__JS__ */if(window.layabox&&window.layabox.getDeviceInfo){di=window.layabox.getDeviceInfo();dpi=di.dpi};
			}
			if(!dpi)
				dpi=240;
			return dpi;
		});

		__getset(1,Capabilities,'version',function(){
			return "";
		});

		__getset(1,Capabilities,'language',function(){
			return Laya.FLASHVER ? Capabilities.language :/*__JS__ */window.navigator.language;
		});

		__getset(1,Capabilities,'serverString',function(){
			return "";
		});

		__getset(1,Capabilities,'screenResolutionX',function(){
			return Capabilities._screenResolutionX;
		});

		__getset(1,Capabilities,'screenResolutionY',function(){
			return Capabilities._screenResolutionY;
		});

		Capabilities.initScreenResolutionXY=function(){
			Capabilities._screenResolutionX=/*__JS__ */window.screen.width;
			Capabilities._screenResolutionY=/*__JS__ */window.screen.height;
		}

		Capabilities._os=null;
		Capabilities._screenResolutionX=0;
		Capabilities._screenResolutionY=0;
		return Capabilities;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/imagedecodingpolicy.as
	//class iflash.system.ImageDecodingPolicy
	var ImageDecodingPolicy=(function(){
		function ImageDecodingPolicy(){}
		__class(ImageDecodingPolicy,'iflash.system.ImageDecodingPolicy',true);
		ImageDecodingPolicy.ON_DEMAND="onDemand";
		ImageDecodingPolicy.ON_LOAD="onLoad";
		return ImageDecodingPolicy;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/loadercontext.as
	//class iflash.system.LoaderContext
	var LoaderContext=(function(){
		function LoaderContext(checkPolicyFile,applicationDomain,securityDomain){
			this.applicationDomain=null;
			this.securityDomain=null;
			this.checkPolicyFile=false;
			this.allowCodeImport=false;
			this.imageDecodingPolicy=/*iflash.system.ImageDecodingPolicy.ON_LOAD*/"onLoad";
			(checkPolicyFile===void 0)&& (checkPolicyFile=false);
			this.applicationDomain=applicationDomain;
		}

		__class(LoaderContext,'iflash.system.LoaderContext',true);
		var __proto=LoaderContext.prototype;
		__getset(0,__proto,'allowLoadBytesCodeExecution',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(allow){}*/);
		return LoaderContext;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/security.as
	//class iflash.system.Security
	var Security=(function(){
		function Security(){};
		__class(Security,'iflash.system.Security',true);
		__getset(1,Security,'sandboxType',LAYAFNSTR/*function(){return ""}*/);
		Security.allowDomain=function(__rest){}
		Security.allowInsecureDomain=function(__rest){}
		Security.loadPolicyFile=LAYAFNVOID/*function(url){}*/
		Security.showSettings=function(panel){
			(panel===void 0)&& (panel="default");
		}

		Security.disableAVM1Loading=false;
		Security.exactSettings=false;
		Security.APPLICATION="application";
		Security.LOCAL_TRUSTED="localTrusted";
		Security.LOCAL_WITH_FILE="localWithFile";
		Security.LOCAL_WITH_NETWORK="localWithNetwork";
		Security.REMOTE="remote";
		return Security;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/securitydomain.as
	//class iflash.system.SecurityDomain
	var SecurityDomain=(function(){
		function SecurityDomain(){}
		__class(SecurityDomain,'iflash.system.SecurityDomain',true);
		__getset(1,SecurityDomain,'currentDomain',function(){
			return new SecurityDomain();
		});

		return SecurityDomain;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/system.as
	//class iflash.system.System
	var System=(function(){
		function System(){}
		__class(System,'iflash.system.System',true);
		__getset(1,System,'freeMemory',LAYAFN0/*function(){return 0}*/);
		__getset(1,System,'privateMemory',LAYAFN0/*function(){return 0}*/);
		__getset(1,System,'totalMemory',function(){
			return 0;
		});

		__getset(1,System,'totalMemoryNumber',LAYAFN0/*function(){return 0}*/);
		__getset(1,System,'useCodePage',function(){
			return System._useCodePage;
			},function(value){
			System._useCodePage=value;
		});

		__getset(1,System,'vmVersion',function(){
			return "ilaya-hello";
		});

		System.disposeXML=function(node){
			if(!((node instanceof iflash.xml.XMLElement ))){}
				}
		System.exit=LAYAFNVOID/*function(code){}*/
		System.gc=LAYAFNVOID/*function(){}*/
		System.nativeConstructionOnly=LAYAFNVOID/*function(object){}*/
		System.pause=LAYAFNVOID/*function(){}*/
		System.pauseForGCIfCollectionImminent=function(imminence){
			(imminence===void 0)&& (imminence=0.75);
		}

		System.resume=LAYAFNVOID/*function(){}*/
		System.setClipboard=LAYAFNVOID/*function(string){}*/
		System._useCodePage=false;
		return System;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/antialiastype.as
	//class iflash.text.AntiAliasType
	var AntiAliasType=(function(){
		function AntiAliasType(){}
		__class(AntiAliasType,'iflash.text.AntiAliasType',true);
		AntiAliasType.ADVANCED="advanced";
		AntiAliasType.NORMAL="normal";
		return AntiAliasType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/contentelement.as
	//class iflash.text.engine.ContentElement
	var ContentElement=(function(){
		function ContentElement(elementFormat,eventMirror,textRotation){
			this.userData=null;
			(textRotation===void 0)&& (textRotation="rotate0");
		}

		__class(ContentElement,'iflash.text.engine.ContentElement',true);
		var __proto=ContentElement.prototype;
		__getset(0,__proto,'elementFormat',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'eventMirror',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'textBlock',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'groupElement',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'rawText',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'text',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'textBlockBeginIndex',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'textRotation',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		ContentElement.GRAPHIC_ELEMENT=0xFDEF;
		return ContentElement;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/elementformat.as
	//class iflash.text.engine.ElementFormat
	var ElementFormat=(function(){
		function ElementFormat(__args){
			var args=arguments;return }
		__class(ElementFormat,'iflash.text.engine.ElementFormat',true);
		var __proto=ElementFormat.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__proto.getFontMetrics=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'alignmentBaseline',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(alignmentBaseline){}*/);
		__getset(0,__proto,'alpha',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'dominantBaseline',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(dominantBaseline){}*/);
		__getset(0,__proto,'baselineShift',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'breakOpportunity',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(opportunityType){}*/);
		__getset(0,__proto,'color',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'locked',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'digitCase',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(digitCaseType){}*/);
		__getset(0,__proto,'digitWidth',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(digitWidthType){}*/);
		__getset(0,__proto,'fontDescription',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fontSize',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'kerning',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'ligatureLevel',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(ligatureLevelType){}*/);
		__getset(0,__proto,'locale',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'textRotation',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'trackingLeft',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'trackingRight',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'typographicCase',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(typographicCaseType){}*/);
		return ElementFormat;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/fontdescription.as
	//class iflash.text.engine.FontDescription
	var FontDescription=(function(){
		function FontDescription(__args){
			var args=arguments;return }
		__class(FontDescription,'iflash.text.engine.FontDescription',true);
		var __proto=FontDescription.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'cffHinting',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fontLookup',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fontName',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fontPosture',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fontWeight',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'locked',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'renderingMode',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		FontDescription.isDeviceFontCompatible=LAYAFNFALSE/*function(fontName,fontWeight,fontPosture){return false}*/
		FontDescription.isFontCompatible=LAYAFNFALSE/*function(fontName,fontWeight,fontPosture){return false}*/
		return FontDescription;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/fontlookup.as
	//class iflash.text.engine.FontLookup
	var FontLookup=(function(){
		function FontLookup(){}
		__class(FontLookup,'iflash.text.engine.FontLookup',true);
		FontLookup.DEVICE="device";
		FontLookup.EMBEDDED_CFF="embeddedCFF";
		return FontLookup;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/fontmetrics.as
	//class iflash.text.engine.FontMetrics
	var FontMetrics=(function(){
		function FontMetrics(__args){
			this.emBox=null;
			this.lineGap=NaN;
			this.strikethroughOffset=NaN;
			this.strikethroughThickness=NaN;
			this.subscriptOffset=NaN;
			this.subscriptScale=NaN;
			this.superscriptOffset=NaN;
			this.superscriptScale=NaN;
			this.underlineOffset=NaN;
			var args=arguments;return }
		__class(FontMetrics,'iflash.text.engine.FontMetrics',true);
		return FontMetrics;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textjustifier.as
	//class iflash.text.engine.TextJustifier
	var TextJustifier=(function(){
		function TextJustifier(locale,lineJustification){}
		__class(TextJustifier,'iflash.text.engine.TextJustifier',true);
		var __proto=TextJustifier.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'lineJustification',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'locale',LAYAFNSTR/*function(){return ""}*/);
		TextJustifier.getJustifierForLocale=LAYAFNNULL/*function(locale){return null}*/
		return TextJustifier;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/tabstop.as
	//class iflash.text.engine.TabStop
	var TabStop=(function(){
		function TabStop(__a){}
		__class(TabStop,'iflash.text.engine.TabStop',true);
		var __proto=TabStop.prototype;
		__getset(0,__proto,'alignment',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'position',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'decimalAlignmentToken',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		return TabStop;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textbaseline.as
	//class iflash.text.engine.TextBaseline
	var TextBaseline=(function(){
		function TextBaseline(){}
		__class(TextBaseline,'iflash.text.engine.TextBaseline',true);
		TextBaseline.ASCENT="ascent";
		TextBaseline.DESCENT="descent";
		TextBaseline.IDEOGRAPHIC_BOTTOM="ideographicBottom";
		TextBaseline.IDEOGRAPHIC_CENTER="ideographicCenter";
		TextBaseline.IDEOGRAPHIC_TOP="ideographicTop";
		TextBaseline.ROMAN="roman";
		TextBaseline.USE_DOMINANT_BASELINE="useDominantBaseline";
		return TextBaseline;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textblock.as
	//class iflash.text.engine.TextBlock
	var TextBlock=(function(){
		function TextBlock(__a){
			this.userData=null;
			var a=arguments;return }
		__class(TextBlock,'iflash.text.engine.TextBlock',true);
		var __proto=TextBlock.prototype;
		__proto.createTextLine=function(previousLine,width,lineOffset,fitSomething){
			(width===void 0)&& (width=1000000);
			(lineOffset===void 0)&& (lineOffset=0);
			(fitSomething===void 0)&& (fitSomething=false);
			return null}
		__proto.dump=LAYAFNSTR/*function(){return ""}*/
		__proto.findNextAtomBoundary=LAYAFN0/*function(afterCharIndex){return 0}*/
		__proto.findNextWordBoundary=LAYAFN0/*function(afterCharIndex){return 0}*/
		__proto.findPreviousAtomBoundary=LAYAFN0/*function(beforeCharIndex){return 0}*/
		__proto.findPreviousWordBoundary=LAYAFN0/*function(beforeCharIndex){return 0}*/
		__proto.getTextLineAtCharIndex=LAYAFNNULL/*function(charIndex){return null}*/
		__proto.recreateTextLine=function(textLine,previousLine,width,lineOffset,fitSomething){
			(width===void 0)&& (width=1000000);
			(lineOffset===void 0)&& (lineOffset=0);
			(fitSomething===void 0)&& (fitSomething=false);
			return null}
		__proto.releaseLineCreationData=LAYAFNVOID/*function(){}*/
		__proto.releaseLines=LAYAFNVOID/*function(firstLine,lastLine){}*/
		__getset(0,__proto,'applyNonLinearFontScaling',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'content',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'firstInvalidLine',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'baselineFontDescription',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'baselineFontSize',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'baselineZero',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'bidiLevel',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'firstLine',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'lastLine',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'lineRotation',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'tabStops',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'textLineCreationResult',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'textJustifier',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		return TextBlock;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textlinemirrorregion.as
	//class iflash.text.engine.TextLineMirrorRegion
	var TextLineMirrorRegion=(function(){
		function TextLineMirrorRegion(){}
		__class(TextLineMirrorRegion,'iflash.text.engine.TextLineMirrorRegion',true);
		var __proto=TextLineMirrorRegion.prototype;
		__getset(0,__proto,'bounds',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'element',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'mirror',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'previousRegion',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'nextRegion',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'textLine',LAYAFNNULL/*function(){return null}*/);
		return TextLineMirrorRegion;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/font.as
	//class iflash.text.Font
	var Font=(function(){
		function Font(){}
		__class(Font,'iflash.text.Font',true);
		var __proto=Font.prototype;
		__proto.hasGlyphs=LAYAFNFALSE/*function(str){return false}*/
		__getset(0,__proto,'fontName',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'fontStyle',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'fontType',LAYAFNSTR/*function(){return ""}*/);
		Font.enumerateFonts=function(enumerateDeviceFonts){
			(enumerateDeviceFonts===void 0)&& (enumerateDeviceFonts=false);
			return []}
		Font.registerFont=LAYAFNVOID/*function(font){}*/
		return Font;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/fonttype.as
	//class iflash.text.FontType
	var FontType=(function(){
		function FontType(){}
		__class(FontType,'iflash.text.FontType',true);
		FontType.DEVICE="device";
		FontType.EMBEDDED="embedded";
		FontType.EMBEDDED_CFF="embeddedCFF";
		return FontType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/gridfittype.as
	//class iflash.text.GridFitType
	var GridFitType=(function(){
		function GridFitType(){;
		}

		__class(GridFitType,'iflash.text.GridFitType',true);
		GridFitType.NONE="none";
		GridFitType.PIXEL="pixel";
		GridFitType.SUBPIXEL="subpixel";
		return GridFitType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/stagetextinitoptions.as
	//class iflash.text.StageTextInitOptions
	var StageTextInitOptions=(function(){
		function StageTextInitOptions(multiline){
			this._multiline=false;
			(multiline===void 0)&& (multiline=false);
			;
			this.multiline=multiline;
		}

		__class(StageTextInitOptions,'iflash.text.StageTextInitOptions',true);
		var __proto=StageTextInitOptions.prototype;
		__getset(0,__proto,'multiline',function(){
			return this._multiline;
			},function(value){
			this._multiline=value;
		});

		return StageTextInitOptions;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textcolortype.as
	//class iflash.text.TextColorType
	var TextColorType=(function(){
		function TextColorType(){}
		__class(TextColorType,'iflash.text.TextColorType',true);
		TextColorType.DARK_COLOR="dark";
		TextColorType.LIGHT_COLOR="light";
		return TextColorType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textfieldautosize.as
	//class iflash.text.TextFieldAutoSize
	var TextFieldAutoSize=(function(){
		function TextFieldAutoSize(){
			;
		}

		__class(TextFieldAutoSize,'iflash.text.TextFieldAutoSize',true);
		TextFieldAutoSize.NONE="none";
		TextFieldAutoSize.LEFT="left";
		TextFieldAutoSize.CENTER="center";
		TextFieldAutoSize.RIGHT="right";
		return TextFieldAutoSize;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textfieldtype.as
	//class iflash.text.TextFieldType
	var TextFieldType=(function(){
		function TextFieldType(){
			;
		}

		__class(TextFieldType,'iflash.text.TextFieldType',true);
		TextFieldType.INPUT="input";
		TextFieldType.DYNAMIC="dynamic";
		return TextFieldType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textformat/fontstyle.as
	//class iflash.text.textformat.FontStyle
	var FontStyle=(function(){
		function FontStyle(){}
		__class(FontStyle,'iflash.text.textformat.FontStyle',true);
		return FontStyle;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textformat/imgtext.as
	//class iflash.text.textformat.ImgText
	var ImgText=(function(){
		function ImgText(){}
		__class(ImgText,'iflash.text.textformat.ImgText',true);
		var __proto=ImgText.prototype;
		__proto.getInstance=function(){
			if(iflash.text.textformat.ImgText.instance==null)
				iflash.text.textformat.ImgText.instance=new ImgText();
			return iflash.text.textformat.ImgText.instance;
		}

		__proto.formatFont=function(text,textFontObj){
			var textRect=new Rectangle();
			if(text.length <=0)
				return textRect;
			return null
		}

		ImgText.instance=null
		return ImgText;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textformat.as
	//class iflash.text.TextFormat
	var TextFormat=(function(){
		function TextFormat(font,size,color,bold,italic,underline,url,target,align,leftMargin,rightMargin,indent,leading){
			if(font)this.font=font;
			if(size)this.size=size;
			if(color)this.color=color;
			if(bold)this.bold=bold;
			if(italic)this.italic=italic;
			if(underline)this.underline=underline;
			if(align)this.align=align;
			if(leftMargin)this.leftMargin=leftMargin;
			if(rightMargin)this.rightMargin=rightMargin;
			if(indent)this.indent=indent;
			if(leading)this.leading=leading;
		}

		__class(TextFormat,'iflash.text.TextFormat',true);
		var __proto=TextFormat.prototype;
		__proto.measureText=function(text){
			var result={width:0,height:0};
			if (!text || !text.length)
				return result;
			if(text=="\n"){
				result={width:0,height:this._size+3};
				return result;
			}
			text=text.replace(/\n/g,"");
			TextFormat.ctx.font=this.getFont();
			var mRes=TextFormat.ctx.measureText(text);
			result.width=mRes.width1 || mRes.width;
			this._letterSpacing && (result.width+=this._letterSpacing *text.length);
			if(Laya.CONCHVER)
				result.height=mRes.height;
			else
			result.height=(int(this._size)|| 12)+TextFormat.HEI_OFF;
			return result;
		}

		__proto.getFont=function(){
			var result="";
			if (!Laya.CONCHVER){
				result+=this._italic ? "italic" :"normal";
				result+=" ";
				result+=this._bold ? "bold" :"normal";
				result+=" ";
				result+=(this._size ? this._size :12)+"px";
				result+=" ";
				if(this._font){
					if(/\d/.test(this._font.charAt(0)))
						result+="Microsoft YaHei";
					else
					result+=this._font;
				}
				else
				result+="Times New Roman";
			}
			else{
				result+=this._italic ? "italic" :"normal";
				result+=" ";
				result+=this._bold ? "700" :"100";
				result+=" ";
				result+=(this._size ? this._size :12)+"px";
				result+=" ";
				result+=this._font ? this._font.replace(/\x20/g,"_"):"Arial";
				result+=" ";
				result+=this._strokeColor ? "1 "+this._strokeColor :"0 0";
				result+=" ";
				result+=this._underline ? "1" :"0";
				result+=this._underline ? (this._color || "#000000"):"";
			}
			return result;
		}

		__proto.clone=function(){
			var result=new TextFormat();
			result._align=this._align;
			result._blockIndent=this._blockIndent;
			result._bold=this._bold;
			result._bullet=this._bullet;
			result._color=this._color;
			result._font=this._font;
			result._indent=this._indent;
			result._italic=this._italic;
			result._leading=this._leading;
			result._leftMargin=this._leftMargin;
			result._letterSpacing=this._letterSpacing;
			result._rightMargin=this._rightMargin;
			result._size=this._size;
			result._underline=this._underline;
			return result;
		}

		__getset(0,__proto,'align',function(){
			return this._align;
			},function(value){
			this._align=value;
		});

		__getset(0,__proto,'bold',function(){
			return this._bold;
			},function(value){
			this._bold=value;
		});

		__getset(0,__proto,'blockIndent',function(){
			return this._blockIndent;
			},function(value){
			this._blockIndent=Laya.__parseInt(value);
		});

		__getset(0,__proto,'display',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'bullet',function(){
			return this._bullet;
			},function(value){
			this._bullet=value;
		});

		__getset(0,__proto,'color',function(){
			return this._color;
			},function(value){
			this._color=value;
		});

		__getset(0,__proto,'font',function(){
			return this._font;
			},function(value){
			this._font=value;
		});

		__getset(0,__proto,'indent',function(){
			return this._indent;
			},function(value){
			this._indent=Laya.__parseInt(value);
		});

		__getset(0,__proto,'italic',function(){
			return this._italic;
			},function(value){
			this._italic=value;
		});

		__getset(0,__proto,'leading',function(){
			return this._leading;
			},function(value){
			this._leading=Laya.__parseInt(value);
		});

		__getset(0,__proto,'leftMargin',function(){
			return this._leftMargin;
			},function(value){
			this._leftMargin=value;
		});

		__getset(0,__proto,'letterSpacing',function(){
			return this._letterSpacing;
			},function(value){
			this._letterSpacing=Laya.__parseInt(value);
		});

		__getset(0,__proto,'rightMargin',function(){
			return this._rightMargin;
			},function(value){
			this._rightMargin=Laya.__parseInt(value);
		});

		__getset(0,__proto,'size',function(){
			return this._size;
			},function(value){
			this._size=Laya.__parseInt(value);
		});

		__getset(0,__proto,'kerning',LAYAFNVOID/*function(){}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'tabStops',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'target',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'url',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'underline',function(){
			return this._underline;
			},function(value){
			this._underline=value;
		});

		TextFormat.BULLET_INDENT=50;
		TextFormat.BULLET_RADIUS=2;
		TextFormat.HEI_OFF=3;
		__static(TextFormat,
		['canvas',function(){return this.canvas=Canvas.create();},'ctx',function(){return this.ctx=TextFormat.canvas.context;}
		]);
		return TextFormat;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textformatalign.as
	//class iflash.text.TextFormatAlign
	var TextFormatAlign=(function(){
		function TextFormatAlign(){}
		__class(TextFormatAlign,'iflash.text.TextFormatAlign',true);
		TextFormatAlign.CENTER="center";
		TextFormatAlign.JUSTIFY="justify";
		TextFormatAlign.LEFT="left";
		TextFormatAlign.RIGHT="right";
		return TextFormatAlign;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textlinemetrics.as
	//class iflash.text.TextLineMetrics
	var TextLineMetrics=(function(){
		function TextLineMetrics(x,width,height,ascent,descent,leading){
			this.ascent=NaN;
			this.descent=NaN;
			this.height=NaN;
			this.leading=NaN;
			this.width=NaN;
			this.x=NaN;
			this.x=x;
			this.width=width;
			this.height=height;
			this.ascent=ascent;
			this.descent=descent;
			this.leading=leading;
		}

		__class(TextLineMetrics,'iflash.text.TextLineMetrics',true);
		return TextLineMetrics;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textnodelist.as
	//class iflash.text.TextNodeList
	var TextNodeList=(function(){
		function TextNodeList(){
			this._source=null;
			this._source=[];
		}

		__class(TextNodeList,'iflash.text.TextNodeList',true);
		var __proto=TextNodeList.prototype;
		__proto.clear=function(){
			this._source.length=0;
		}

		__proto.getElem=function(index){
			return this._source[index];
		}

		__proto.push=function(value){
			this._source.push(value);
		}

		__proto.clone=function(){
			var result=new TextNodeList();
			var obj;
			for(var i=0,len=this._source.length;i<len;i++){
				obj={};
				for(var key in this._source[i]){
					obj[key]=this._source[i][key];
				}
				result.push(obj);
			}
			return result;
		}

		__getset(0,__proto,'length',function(){
			return this._source.length;
		});

		__getset(0,__proto,'source',function(){
			return this._source;
		});

		return TextNodeList;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textsnapshot.as
	//class iflash.text.TextSnapshot
	var TextSnapshot=(function(){
		function TextSnapshot(){}
		__class(TextSnapshot,'iflash.text.TextSnapshot',true);
		var __proto=TextSnapshot.prototype;
		__proto.findText=LAYAFN0/*function(beginIndex,textToFind,caseSensitive){return 0}*/
		__proto.getSelected=LAYAFNFALSE/*function(beginIndex,endIndex){return false}*/
		__proto.getSelectedText=function(includeLineEndings){
			(includeLineEndings===void 0)&& (includeLineEndings=false);
			return null}
		__proto.getText=function(beginIndex,endIndex,includeLineEndings){
			(includeLineEndings===void 0)&& (includeLineEndings=false);
			return null}
		__proto.getTextRunInfo=LAYAFNNULL/*function(beginIndex,endIndex){return null}*/
		__proto.hitTestTextNearPos=function(x,y,maxDistance){
			(maxDistance===void 0)&& (maxDistance=0);
			return 0}
		__proto.setSelectColor=function(hexColor){
			(hexColor===void 0)&& (hexColor=16776960);
		}

		__proto.setSelected=LAYAFNVOID/*function(beginIndex,endIndex,select){}*/
		__getset(0,__proto,'charCount',LAYAFN0/*function(){return 0}*/);
		return TextSnapshot;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/contextmenubuiltinitems.as
	//class iflash.ui.ContextMenuBuiltInItems
	var ContextMenuBuiltInItems=(function(){
		function ContextMenuBuiltInItems(){}
		__class(ContextMenuBuiltInItems,'iflash.ui.ContextMenuBuiltInItems',true);
		var __proto=ContextMenuBuiltInItems.prototype;
		__proto.clone=function(){
			return new ContextMenuBuiltInItems();
		}

		__getset(0,__proto,'forwardAndBack',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'loop',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'zoom',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'play',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'print',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'quality',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'rewind',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'save',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		return ContextMenuBuiltInItems;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/contextmenuclipboarditems.as
	//class iflash.ui.ContextMenuClipboardItems
	var ContextMenuClipboardItems=(function(){
		function ContextMenuClipboardItems(){}
		__class(ContextMenuClipboardItems,'iflash.ui.ContextMenuClipboardItems',true);
		var __proto=ContextMenuClipboardItems.prototype;
		__proto.clone=function(){
			return new ContextMenuClipboardItems();
		}

		__getset(0,__proto,'clear',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'copy',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'selectAll',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'cut',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		__getset(0,__proto,'paste',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(val){}*/);
		return ContextMenuClipboardItems;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/keyboard.as
	//class iflash.ui.Keyboard
	var Keyboard=(function(){
		function Keyboard(){
			;
		}

		__class(Keyboard,'iflash.ui.Keyboard',true);
		__getset(1,Keyboard,'capsLock',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,Keyboard,'physicalKeyboardType',LAYAFNSTR/*function(){return ""}*/);
		__getset(1,Keyboard,'numLock',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,Keyboard,'hasVirtualKeyboard',LAYAFNFALSE/*function(){return false}*/);
		Keyboard.isAccessible=LAYAFNFALSE/*function(){return false}*/
		Keyboard.KEYNAME_UPARROW="Up";
		Keyboard.KEYNAME_DOWNARROW="Down";
		Keyboard.KEYNAME_LEFTARROW="Left";
		Keyboard.KEYNAME_RIGHTARROW="Right";
		Keyboard.KEYNAME_F1="F1";
		Keyboard.KEYNAME_F2="F2";
		Keyboard.KEYNAME_F3="F3";
		Keyboard.KEYNAME_F4="F4";
		Keyboard.KEYNAME_F5="F5";
		Keyboard.KEYNAME_F6="F6";
		Keyboard.KEYNAME_F7="F7";
		Keyboard.KEYNAME_F8="F8";
		Keyboard.KEYNAME_F9="F9";
		Keyboard.KEYNAME_F10="F10";
		Keyboard.KEYNAME_F11="F11";
		Keyboard.KEYNAME_F12="F12";
		Keyboard.KEYNAME_F13="F13";
		Keyboard.KEYNAME_F14="F14";
		Keyboard.KEYNAME_F15="F15";
		Keyboard.KEYNAME_F16="F16";
		Keyboard.KEYNAME_F17="F17";
		Keyboard.KEYNAME_F18="F18";
		Keyboard.KEYNAME_F19="F19";
		Keyboard.KEYNAME_F20="F20";
		Keyboard.KEYNAME_F21="F21";
		Keyboard.KEYNAME_F22="F22";
		Keyboard.KEYNAME_F23="F23";
		Keyboard.KEYNAME_F24="F24";
		Keyboard.KEYNAME_F25="F25";
		Keyboard.KEYNAME_F26="F26";
		Keyboard.KEYNAME_F27="F27";
		Keyboard.KEYNAME_F28="F28";
		Keyboard.KEYNAME_F29="F29";
		Keyboard.KEYNAME_F30="F30";
		Keyboard.KEYNAME_F31="F31";
		Keyboard.KEYNAME_F32="F32";
		Keyboard.KEYNAME_F33="F33";
		Keyboard.KEYNAME_F34="F34";
		Keyboard.KEYNAME_F35="F35";
		Keyboard.KEYNAME_INSERT="Insert";
		Keyboard.KEYNAME_DELETE="Delete";
		Keyboard.KEYNAME_HOME="Home";
		Keyboard.KEYNAME_BEGIN="Begin";
		Keyboard.KEYNAME_END="End";
		Keyboard.KEYNAME_PAGEUP="PgUp";
		Keyboard.KEYNAME_PAGEDOWN="PgDn";
		Keyboard.KEYNAME_PRINTSCREEN="PrntScrn";
		Keyboard.KEYNAME_SCROLLLOCK="ScrlLck";
		Keyboard.KEYNAME_PAUSE="Pause";
		Keyboard.KEYNAME_SYSREQ="SysReq";
		Keyboard.KEYNAME_BREAK="Break";
		Keyboard.KEYNAME_RESET="Reset";
		Keyboard.KEYNAME_STOP="Stop";
		Keyboard.KEYNAME_MENU="Menu";
		Keyboard.KEYNAME_USER="User";
		Keyboard.KEYNAME_SYSTEM="Sys";
		Keyboard.KEYNAME_PRINT="Print";
		Keyboard.KEYNAME_CLEARLINE="ClrLn";
		Keyboard.KEYNAME_CLEARDISPLAY="ClrDsp";
		Keyboard.KEYNAME_INSERTLINE="InsLn";
		Keyboard.KEYNAME_DELETELINE="DelLn";
		Keyboard.KEYNAME_INSERTCHAR="InsChr";
		Keyboard.KEYNAME_DELETECHAR="DelChr";
		Keyboard.KEYNAME_PREV="Prev";
		Keyboard.KEYNAME_NEXT="Next";
		Keyboard.KEYNAME_SELECT="Select";
		Keyboard.KEYNAME_EXECUTE="Exec";
		Keyboard.KEYNAME_UNDO="Undo";
		Keyboard.KEYNAME_REDO="Redo";
		Keyboard.KEYNAME_FIND="Find";
		Keyboard.KEYNAME_HELP="Help";
		Keyboard.KEYNAME_MODESWITCH="ModeSw";
		Keyboard.NUMBER_0=48;
		Keyboard.NUMBER_1=49;
		Keyboard.NUMBER_2=50;
		Keyboard.NUMBER_3=51;
		Keyboard.NUMBER_4=52;
		Keyboard.NUMBER_5=53;
		Keyboard.NUMBER_6=54;
		Keyboard.NUMBER_7=55;
		Keyboard.NUMBER_8=56;
		Keyboard.NUMBER_9=57;
		Keyboard.A=65;
		Keyboard.B=66;
		Keyboard.C=67;
		Keyboard.D=68;
		Keyboard.E=69;
		Keyboard.F=70;
		Keyboard.G=71;
		Keyboard.H=72;
		Keyboard.I=73;
		Keyboard.J=74;
		Keyboard.K=75;
		Keyboard.L=76;
		Keyboard.M=77;
		Keyboard.N=78;
		Keyboard.O=79;
		Keyboard.P=80;
		Keyboard.Q=81;
		Keyboard.R=82;
		Keyboard.S=83;
		Keyboard.T=84;
		Keyboard.U=85;
		Keyboard.V=86;
		Keyboard.W=87;
		Keyboard.X=88;
		Keyboard.Y=89;
		Keyboard.Z=90;
		Keyboard.SEMICOLON=186;
		Keyboard.EQUAL=187;
		Keyboard.COMMA=188;
		Keyboard.MINUS=189;
		Keyboard.PERIOD=190;
		Keyboard.SLASH=191;
		Keyboard.BACKQUOTE=192;
		Keyboard.LEFTBRACKET=219;
		Keyboard.BACKSLASH=220;
		Keyboard.RIGHTBRACKET=221;
		Keyboard.QUOTE=222;
		Keyboard.ALTERNATE=18;
		Keyboard.BACKSPACE=8;
		Keyboard.CAPS_LOCK=20;
		Keyboard.COMMAND=15;
		Keyboard.CONTROL=17;
		Keyboard.DELETE=46;
		Keyboard.DOWN=40;
		Keyboard.END=35;
		Keyboard.ENTER=13;
		Keyboard.ESCAPE=27;
		Keyboard.F1=112;
		Keyboard.F2=113;
		Keyboard.F3=114;
		Keyboard.F4=115;
		Keyboard.F5=116;
		Keyboard.F6=117;
		Keyboard.F7=118;
		Keyboard.F8=119;
		Keyboard.F9=120;
		Keyboard.F10=121;
		Keyboard.F11=122;
		Keyboard.F12=123;
		Keyboard.F13=124;
		Keyboard.F14=125;
		Keyboard.F15=126;
		Keyboard.HOME=36;
		Keyboard.INSERT=45;
		Keyboard.LEFT=37;
		Keyboard.NUMPAD=21;
		Keyboard.NUMPAD_0=96;
		Keyboard.NUMPAD_1=97;
		Keyboard.NUMPAD_2=98;
		Keyboard.NUMPAD_3=99;
		Keyboard.NUMPAD_4=100;
		Keyboard.NUMPAD_5=101;
		Keyboard.NUMPAD_6=102;
		Keyboard.NUMPAD_7=103;
		Keyboard.NUMPAD_8=104;
		Keyboard.NUMPAD_9=105;
		Keyboard.NUMPAD_ADD=107;
		Keyboard.NUMPAD_DECIMAL=110;
		Keyboard.NUMPAD_DIVIDE=111;
		Keyboard.NUMPAD_ENTER=108;
		Keyboard.NUMPAD_MULTIPLY=106;
		Keyboard.NUMPAD_SUBTRACT=109;
		Keyboard.PAGE_DOWN=34;
		Keyboard.PAGE_UP=33;
		Keyboard.RIGHT=39;
		Keyboard.SHIFT=16;
		Keyboard.SPACE=32;
		Keyboard.TAB=9;
		Keyboard.UP=38;
		Keyboard.RED=16777216;
		Keyboard.GREEN=16777217;
		Keyboard.YELLOW=16777218;
		Keyboard.BLUE=16777219;
		Keyboard.CHANNEL_UP=16777220;
		Keyboard.CHANNEL_DOWN=16777221;
		Keyboard.RECORD=16777222;
		Keyboard.PLAY=16777223;
		Keyboard.PAUSE=16777224;
		Keyboard.STOP=16777225;
		Keyboard.FAST_FORWARD=16777226;
		Keyboard.REWIND=16777227;
		Keyboard.SKIP_FORWARD=16777228;
		Keyboard.SKIP_BACKWARD=16777229;
		Keyboard.NEXT=16777230;
		Keyboard.PREVIOUS=16777231;
		Keyboard.LIVE=16777232;
		Keyboard.LAST=16777233;
		Keyboard.MENU=16777234;
		Keyboard.INFO=16777235;
		Keyboard.GUIDE=16777236;
		Keyboard.EXIT=16777237;
		Keyboard.BACK=16777238;
		Keyboard.AUDIO=16777239;
		Keyboard.SUBTITLE=16777240;
		Keyboard.DVR=16777241;
		Keyboard.VOD=16777242;
		Keyboard.INPUT=16777243;
		Keyboard.SETUP=16777244;
		Keyboard.HELP=16777245;
		Keyboard.MASTER_SHELL=16777246;
		Keyboard.SEARCH=16777247;
		__static(Keyboard,
		['CharCodeStrings',function(){return this.CharCodeStrings=["Up","Down","Left","Right","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","F25","F26","F27","F28","F29","F30","F31","F32","F33","F34","F35","Insert","Delete","Home","Begin","End","PgUp","PgDn","PrntScrn","ScrlLck","Pause","SysReq","Break","Reset","Stop","Menu","User","Sys","Print","ClrLn","ClrDsp","InsLn","DelLn","InsChr","DelChr","Prev","Next","Select","Exec","Undo","Redo","Find","Help","ModeSw"];}
		]);
		return Keyboard;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/keyboardtype.as
	//class iflash.ui.KeyboardType
	var KeyboardType=(function(){
		function KeyboardType(){
			;
		}

		__class(KeyboardType,'iflash.ui.KeyboardType',true);
		KeyboardType.ALPHANUMERIC="alphanumeric";
		KeyboardType.KEYPAD="keypad";
		KeyboardType.NONE="none";
		return KeyboardType;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/keylocation.as
	//class iflash.ui.KeyLocation
	var KeyLocation=(function(){
		function KeyLocation(){
			;
		}

		__class(KeyLocation,'iflash.ui.KeyLocation',true);
		KeyLocation.STANDARD=0;
		KeyLocation.LEFT=1;
		KeyLocation.RIGHT=2;
		KeyLocation.NUM_PAD=3;
		KeyLocation.D_PAD=4;
		return KeyLocation;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/mouse.as
	//class iflash.ui.Mouse
	var Mouse=(function(){
		function Mouse(){
			;
		}

		__class(Mouse,'iflash.ui.Mouse',true);
		__getset(1,Mouse,'supportsCursor',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,Mouse,'cursor',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(1,Mouse,'supportsNativeCursor',LAYAFNFALSE/*function(){return false}*/);
		Mouse.hide=LAYAFNVOID/*function(){}*/
		Mouse.show=LAYAFNVOID/*function(){}*/
		Mouse.registerCursor=LAYAFNVOID/*function(value,cursorData){}*/
		Mouse.unregisterCursor=LAYAFNVOID/*function(param1){}*/
		return Mouse;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/mousecursor.as
	//class iflash.ui.MouseCursor
	var MouseCursor=(function(){
		function MouseCursor(){}
		__class(MouseCursor,'iflash.ui.MouseCursor',true);
		MouseCursor.ARROW="arrow";
		MouseCursor.AUTO="auto";
		MouseCursor.BUTTON="button";
		MouseCursor.HAND="hand";
		MouseCursor.IBEAM="ibeam";
		return MouseCursor;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/mousecursordata.as
	//class iflash.ui.MouseCursorData
	var MouseCursorData=(function(){
		function MouseCursorData(){
			;
		}

		__class(MouseCursorData,'iflash.ui.MouseCursorData',true);
		var __proto=MouseCursorData.prototype;
		__getset(0,__proto,'data',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'hotSpot',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'frameRate',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(param1){}*/);
		return MouseCursorData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/multitouch.as
	//class iflash.ui.Multitouch
	var Multitouch=(function(){
		function Multitouch(){};
		__class(Multitouch,'iflash.ui.Multitouch',true);
		__getset(1,Multitouch,'inputMode',function(){
			return Multitouch.$inputMode;
			},function(value){
			if(value==/*iflash.ui.MultitouchInputMode.GESTURE*/"gesture")
				Multitouch.implementGesture();
			if(value==/*iflash.ui.MultitouchInputMode.TOUCH_POINT*/"touchPoint")
				Multitouch.implementTouchPoint();
			Multitouch.$inputMode=value;
		});

		__getset(1,Multitouch,'isSupportTouch',function(){
			var doc=Browser.document;
			var isSupportTouch="ontouchend" in doc ? true :false;
			return isSupportTouch;
		});

		__getset(1,Multitouch,'maxTouchPoints',function(){
			Multitouch._$maxTouchPoints=3;
			return Multitouch._$maxTouchPoints;
			},function(value){
			Multitouch._$maxTouchPoints=value;
		});

		__getset(1,Multitouch,'supportedGestures',function(){
			Multitouch._$supportedGestures=[];
			if(Multitouch.isSupportTouch){
				Multitouch._$supportedGestures.push(/*iflash.events.TransformGestureEvent.GESTURE_PAN*/"gesturePan");
				Multitouch._$supportedGestures.push(/*iflash.events.TransformGestureEvent.GESTURE_ROTATE*/"gestureRotate");
				Multitouch._$supportedGestures.push(/*iflash.events.TransformGestureEvent.GESTURE_SWIPE*/"gestureSwipe");
				Multitouch._$supportedGestures.push(/*iflash.events.TransformGestureEvent.GESTURE_ZOOM*/"gestureZoom");
				Multitouch._$supportedGestures.push(/*iflash.events.GestureEvent.GESTURE_TWO_FINGER_TAP*/"gestureTwoFingerTap");
			}
			return Multitouch._$supportedGestures;
		});

		__getset(1,Multitouch,'supportsTouchEvents',function(){
			Multitouch._$supportsTouchEvents=Multitouch.isSupportTouch;
			return Multitouch._$supportsTouchEvents;
		});

		__getset(1,Multitouch,'mapTouchToMouse',function(){
			Multitouch._$mapTouchToMouse=Multitouch.isSupportTouch;
			return Multitouch._$mapTouchToMouse;
		});

		__getset(1,Multitouch,'supportsGestureEvents',function(){
			Multitouch._$supportsGestureEvents=Multitouch.isSupportTouch;
			return Multitouch._$supportsGestureEvents;
		});

		Multitouch.implementTouchPoint=function(){
			var doc=Browser.document;
		}

		Multitouch.implementGesture=function(){
			var doc=Browser.document;
		}

		Multitouch._$mapTouchToMouse=false;
		Multitouch._$maxTouchPoints=0;
		Multitouch._$supportedGestures=null
		Multitouch._$supportsGestureEvents=false;
		Multitouch._$supportsTouchEvents=false;
		__static(Multitouch,
		['$inputMode',function(){return this.$inputMode=/*iflash.ui.MultitouchInputMode.NONE*/"none";}
		]);
		return Multitouch;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/multitouchinputmode.as
	//class iflash.ui.MultitouchInputMode
	var MultitouchInputMode=(function(){
		function MultitouchInputMode(){};
		__class(MultitouchInputMode,'iflash.ui.MultitouchInputMode',true);
		MultitouchInputMode.GESTURE="gesture";
		MultitouchInputMode.NONE="none";
		MultitouchInputMode.TOUCH_POINT="touchPoint";
		return MultitouchInputMode;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/xml/xmlattribute.as
	//class iflash.xml.XMLAttribute
	var XMLAttribute=(function(){
		function XMLAttribute(){
			this._name=null;
			this._value=null;
		}

		__class(XMLAttribute,'iflash.xml.XMLAttribute',false);
		var __proto=XMLAttribute.prototype;
		Laya.imps(__proto,{"iflash.xml.IXMLElement":true})
		__proto.getAttribute=function(aName){
			return null;
		}

		__proto.attribute=function(aName){
			return null;
		}

		__proto.setChildByName=function(nName,value){
			return null;
		}

		__proto.getChildByAttribute=function(attribute,value,equal){
			(equal===void 0)&& (equal=true);
			return null;
		}

		__proto.getChildByName=function(nName){
			return null;
		}

		__proto.setAttribute=function(name,value){
			return null;
		}

		__proto.getAttributes=function(){
			return null;
		}

		__proto.attributes=function(){
			return null;
		}

		__proto.getChildAt=function(index){
			return null;
		}

		__proto.children=function(){
			return null;
		}

		__proto.elements=function(name){
			(name===void 0)&& (name="*");
			return null;
		}

		__proto.setName=function(str){
			this._name=str;
		}

		__proto.lengths=function(){
			return 0;
		}

		__proto.name=function(){
			return this._name;
		}

		__proto.appendChild=function(value){
			return null;
		}

		__proto.toString=function(){
			return this._value;
		}

		__proto.toXMLString=function(){
			return null;
		}

		__proto.parent=LAYAFNNULL/*function(){return null;}*/
		__proto.hasSimpleContent=LAYAFNFALSE/*function(){return false}*/
		__proto.hasComplexContent=LAYAFNFALSE/*function(){return false}*/
		__proto.hasOwnProperty=function(pName){
			return false;
		}

		__proto.copy=function(){
			var xa=new XMLAttribute();
			xa._name=this._name;
			xa._value=this._value;
			return xa;
		}

		__proto.copyFrom=function(source){
			if((source instanceof iflash.xml.XMLAttribute )){
				var value=source;
				this._name=value._name;
				this._value=value._value;
				return this;
			}
			return null;
		}

		__getset(0,__proto,'localName',function(){
			return null;
			},function(str){
			this._name=str;
		});

		__getset(0,__proto,'nodeType',function(){
			return "attribute";
		});

		__getset(0,__proto,'value',function(){
			return this._value;
			},function(str){
			this._value=str;
		});

		__getset(0,__proto,'childNodes',function(){
			return null;
		});

		__getset(0,__proto,'nodeName',function(){
			return null;
		});

		XMLAttribute.create=function(name,value){
			var xa=new XMLAttribute();
			xa._name=name;xa._value=value;
			return xa;
		}

		return XMLAttribute;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/xml/xmlelement.as
	//class iflash.xml.XMLElement
	var XMLElement=(function(){
		function XMLElement(value){
			this._nodeName=null;
			this._nodeType=null;
			this._nodeValue=null;
			this._parentNode=null;
			this._attributes=[];
			this._childNodes=[];
			this._nestCount=0;
			if((value instanceof iflash.xml.XMLElement )){return value}
				else if ((value instanceof iflash.xml.XMLElementList )){if (value.lengths()==1){return value[0]}else {return value;}}
			if (value){
				if(value && value['_data_']){value=value.toString();}
					if (value){
					XMLElement.create(value,this);
				}
			}
		}

		__class(XMLElement,'iflash.xml.XMLElement',false);
		var __proto=XMLElement.prototype;
		Laya.imps(__proto,{"iflash.xml.IXMLElement":true})
		__proto.addNamespace=function(ns){
			return this;
		}

		__proto.setAttribute=function(name,value){
			var o;
			/*for each*/for(var $each_o in this._attributes){
				o=this._attributes[$each_o];
				if (o.key==name){
					o.val=value;
					return value;
				}
			}
			this._attributes.push({key:name,val:value});
			return value;
		}

		__proto.getAttributes=function(){
			return this.attributes();
		}

		__proto.attributes=function(){
			return this.getAttribute("*");
		}

		__proto.getAttribute=function(name){
			var attributes=this._attributes;
			var arr=[];
			for (var j=0;j < attributes.length;j++){
				var value=attributes[j]['key'];
				if (name=="*" || value==name){
					arr.push({"key":attributes[j]['key'],"val":attributes[j]['val']});
				}
			}
			if (name!="*"){
				return arr.length>0?arr[0].val:undefined;
			}
			return XMLElementList.createFromAttribute(arr);
		}

		__proto.getAllAttribute=function(name){
			var arr=[];
			this._getAllAttribute_(arr,this,name);
			return XMLElementList.createFromAttribute(arr);
		}

		__proto._getAllAttribute_=function(arr,xml,name){
			var len=xml._childNodes ? xml._childNodes.length :0;
			for (var i=0;i < len;i++){
				var node=xml._childNodes [i];
				for (var j=0;j < node._attributes.length;j++){
					var key=node._attributes[j]['key'];
					var val=node._attributes[j]['val'];
					if (name=="*"){
						arr.push({"key":key,"val":val});
						}else if (key==name){
						arr.push({"key":key,"val":val});
					}
				}
				this._getAllAttribute_(arr,node,name);
			}
		}

		__proto.attribute=function(name){
			return this.getAttribute(name);
		}

		__proto.getChildByName=function(name){
			return this.child(name);
		}

		__proto.getAllChildByName=function(name){
			var arr=[];
			this._getAllChildByName_(arr,this,name);
			return XMLElementList.create(arr);
		}

		__proto._getAllChildByName_=function(arr,xml,name){
			var len=xml._childNodes ? xml._childNodes.length :0;
			for (var i=0;i < len;i++){
				var node=xml._childNodes [i];
				if(name=="*"){
					arr.push(node);
					}else if (node._nodeName==name){
					arr.push(node);
				}
				this._getAllChildByName_(arr,node,name);
			}
		}

		__proto.nodeKind=function(){
			return this._nodeType;
		}

		__proto.getChildByAttribute=function(attribute,value,equal){
			(equal===void 0)&& (equal=true);
			if (attribute=="" || attribute==null)
				return null;
			if (value=="" || value==null)
				return null;
			var ar=[],len=this._childNodes ? this._childNodes.length :0;
			for (var i=0;i < len;i++){
				var n=this._childNodes [i];
				for (var j=0;j < n._attributes.length;j++){
					if (n._attributes[j]['key']==attribute){
						if (equal && n._attributes[j]['val']==value){
							ar.push(n);
							}else if (!equal && n._attributes[j]['val'] !=value){
							ar.push(n);
						}
					}
				}
			}
			return XMLElementList.create(ar);
		}

		__proto.children=function(){
			var l=XMLElementList.create(this._childNodes);
			if(!l.length)
				if((typeof this._nodeValue=='string')&& this._nodeValue !=""){
				l.push(this._nodeValue);
			}
			return l;
		}

		__proto.getChildAt=function(index){
			if (!this._childNodes || index > this._childNodes.length)
				return null;
			return this._childNodes[index];
		}

		__proto.elements=function(name){
			(name===void 0)&& (name="*");
			if (name=='*')
				return XMLElementList.create(this._childNodes);
			return this.child(name);
		}

		__proto.appendChild=function(value){
			if ((typeof value=='string')){
				value=iflash.xml.XMLElement.create(String(value));
			}
			if ((value instanceof iflash.xml.XMLElement )){
				var name=value._nodeName;
				var list=this[name];
				if (!list){
					this[name]=list=new XMLElementList();
				}
				(((typeof list=='function'))!=true)&&(list.__addChild__(value));
				this._childNodes.push(value);
				}else if ((value instanceof iflash.xml.XMLElementList )){
				var len=value.lengths();
				for (var i=0;i < len;i++){
					this.appendChild(value[i]);
				}
			}
			value._parentNode=this;
			return value;
		}

		__proto.prependChild=function(value){
			var xml=this.appendChild(value);
			var nodes=this._childNodes;
			nodes.pop();
			nodes.splice(0,0,xml);
			return xml;
		}

		__proto.setChildByName=function(nName,value){
			var c=this.getChildByName(nName);
			if (!c)
				return null;
			var spliceIndex=this._childNodes.length;
			for (var i=this._childNodes.length-1;i >=0;i--){
				if (this._childNodes[i].localName==nName){
					this._childNodes.splice(i,1);
					spliceIndex=i;
				}
			}
			if ((value instanceof iflash.xml.XMLElementList )){
				for (i=0;i < value.lengths();i++){
					this._childNodes.splice(spliceIndex,0,value[i]);
					spliceIndex++;
				}
				}else if ((value instanceof iflash.xml.XMLElement )){
				this._childNodes.splice(spliceIndex,0,value);
				}else {
				return null;
			}
			return c;
		}

		__proto.copy=function(){
			var xml=new XMLElement(this.toXMLString());
			return xml;
		}

		__proto.copyFrom=function(source){
			if ((source instanceof iflash.xml.XMLElement )){
				var value=source;
				this._nodeName=value._nodeName;
				this._nodeValue=value._nodeValue;
				this._attributes=value._attributes;
				this._childNodes=value._childNodes;
				return this;
			}
			return null;
		}

		__proto.setName=function(str){
			this._nodeName=str;
		}

		__proto.hasOwnProperty=function(pName){
			var len=0,i=0;
			if(pName.indexOf("@")!=-1){
				var tmpPName=pName.substring(1);
				len=this._attributes.length;
				for (i=0;i < len;i++){
					if (this._attributes[i].key==tmpPName)
						return true;
				}
				}else{
				len=this._childNodes.length;
				for (i=0;i < len;i++){
					if (this._childNodes[i]._nodeName==pName)
						return true;
				}
			}
			return false;
		}

		__proto.hasSimpleContent=function(){
			if (this._childNodes.length > 1){
				return false;
				}else if (this._childNodes.length==1){
				if (!this._childNodes[0].localName)
					return true;
				return false;
			}
			return true;
		}

		__proto.hasComplexContent=function(){
			return this._childNodes.length > 0
		}

		__proto.lengths=function(){
			return 1
		}

		__proto.name=function(){
			return this._nodeName;
		}

		__proto.parent=function(){
			return this._parentNode;
		}

		__proto.toString=function(){
			var str="";
			if (this._childNodes.length){
				str=this.toXMLString();
			}else
			str=this._nodeValue;
			return str;
		}

		__proto.getString=function(){
			var str="";
			str=this.toXMLString();
			return str;
		}

		__proto.toXMLString=function(){
			if (!XMLElement._callee)
				XMLElement._callee=this;
			var str="";
			if (this._nodeName){
				str+="<"+this._nodeName;
				for (var i=0;i < this._attributes.length;i++){
					str+=" "+this._attributes[i]['key']+'="'+this._attributes[i]['val']+'"'
				}
			}
			if (this.hasSimpleContent()&& !this.value)
				str+="/>";
			else {
				str+=this._nodeName ? ">" :"";
				str+=(this._childNodes.length ? "\n" :this._nodeValue);
				this._nestCount=(this._childNodes.length)? this._nestCount+1 :this._nestCount;
				for (i=0;i < this._childNodes.length;i++){
					this._childNodes[i]._nestCount=this._nestCount;
					for (var j=0;j < this._nestCount;j++){
						str+="   ";
					}
					str+=this._childNodes[i].toXMLString();
					for (j=0;j < this._nestCount-1;j++){
						str+="   ";
					}
				}
				if (this._nodeName)
					str+="</"+this._nodeName+">";
			}
			if (XMLElement._callee !=this)
				str+="\n";
			else
			XMLElement._callee=null;
			return str;
		}

		__proto.child=function(nName){
			if((typeof nName=='number')){
				return XMLElementList.create([ this._childNodes[nName]]);
			};
			var ar=[],len=this._childNodes ? this._childNodes.length :0;
			for (var i=0;i < len;i++){
				var n=this._childNodes [i];
				if (n.localName==nName){
					ar.push(n);
				}
			}
			return XMLElementList.create(ar);
		}

		__proto.childIndex=function(){
			var parent=this._parentNode;
			if (parent){
				var nodes=parent._childNodes;
				for (var i=0,n=nodes.length;i < n;i++){
					if (nodes[i]==this){
						return i;
					}
				}
			}
			return-1;
		}

		__proto.insertChildBefore=function(child1,child2){
			if(!child1){
				this.prependChild(child2);
				return;
			}
			if ((child1 instanceof iflash.xml.XMLElementList ))
				child1=child1[0];
			var list=child1.parent().childNodes;
			if(list){
				var idx=list.indexOf(child1);
				list.splice(idx,0,child2);
				var xl=new XMLElementList();
				xl.push(child2);
				child2._parentNode=this;
				child1.parent()[child2.nodeName]=xl;
				return this;
			}
			return undefined;
		}

		__proto.insertChildAfter=function(child1,child2){
			if(!child1){
				this.appendChild(child2);
				return;
			}
			if ((child1 instanceof iflash.xml.XMLElementList ))
				child1=child1[0];
			var list=child1.parent().childNodes;
			if(list){
				var idx=list.indexOf(child1);
				list.splice(idx+1,0,child2);
				var xl=new XMLElementList();
				xl.push(child2);
				child2._parentNode=this;
				child1.parent()[child2.nodeName]=xl;
				return this;
			}
			return undefined;
		}

		__proto.normalize=function(){
			return null;
		}

		__proto.comments=function(){
			return null;
		}

		__proto.contains=function(value){
			return true;
		}

		__proto.defaultSettings=function(){
			return null;
		}

		__proto.descendants=function(name){
			return null;
		}

		__proto.inScopeNamespaces=function(){
			return [];
		}

		__proto.setLocalName=function(name){
			this._nodeName=name;
		}

		__getset(0,__proto,'localName',function(){
			return this._nodeName;
			},function(str){
			this._nodeName=str;
		});

		__getset(0,__proto,'nodeType',function(){
			return this._nodeType;
		});

		__getset(0,__proto,'childNodes',function(){
			return this._childNodes;
		});

		__getset(0,__proto,'nodeName',function(){
			return this._nodeName;
		});

		__getset(0,__proto,'value',function(){
			return this._nodeValue;
			},function(str){
			this._nodeValue=str;
		});

		__getset(0,__proto,'conchValue',function(){
			var temp="";
			if (this._childNodes){
				for (var i=0,len=this._childNodes.length;i < len;i++){
					temp+=this._childNodes[i].conchValue;
				}
				temp+=this.value;
			}
			else
			temp=this.value;
			return temp;
		});

		XMLElement.create=function(value,node){
			node=node ? node :new XMLElement();
			var xmld;
			if (IFlash.isRuningOnAccelerator && !((typeof value=='string'))){
				xmld=value;
				xmld=xmld.childNodes[0];
				}else{
				/*__JS__ */xmld=(new DOMParser()).parseFromString(value,'text/xml');var t_i=0;var t_xmld=null;do{t_xmld=xmld.childNodes[t_i++];if(t_xmld.nodeName !='#comment' ){xmld=t_xmld;break;}}while(t_i<xmld.childNodes.length);;
			}
			XMLElement.cloneXmlFromData(node,xmld);
			return node;
		}

		XMLElement.cloneXmlFromData=function(xml,data){
			xml._nodeName=data.nodeName;
			xml._nodeValue=data.nodeValue==null ? data.textContent :data.nodeValue;
			var attribs=data.attributes;
			var len=attribs ? attribs.length :0;
			var attributes=xml._attributes;
			for (var j=0;j < len;j++){
				var attr=attribs[j];
				attributes.push({key:attr.nodeName,val:attr.nodeValue});
			};
			var nodes=data.childNodes;
			var child;
			for (var i=0;i < nodes.length;i++){
				var node=nodes[i];
				var nodeName=node.nodeName;
				if(nodeName=="#text"){
					if(node.parentNode&&node.parentNode.textContent!=node.textContent){
						var tValue;
						tValue=node.nodeValue.replace(/(^\s*)|(\s*$)/g,'');
						if(tValue.length>1){
							node.nodeValue=tValue;
							child=new XMLElement();
							XMLElement.cloneXmlFromData(child,node);
							xml.appendChild(child);
						}
					}
				}else
				if (nodeName !="#text" && nodeName !="#comment"){
					if (nodeName=="#cdata-section" || nodeName==""){
						xml._nodeValue=node.nodeValue==null ? node.textContent :node.nodeValue;
						continue ;
					}
					child=new XMLElement();
					XMLElement.cloneXmlFromData(child,node);
					xml.appendChild(child);
				}
			}
		}

		XMLElement._callee=null
		return XMLElement;
	})()


	var XML=window.XML=iflash.xml.XMLElement;
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/mx/core/soundasset.as
	//class mx.core.SoundAsset
	var SoundAsset=(function(){
		function SoundAsset(){}
		__class(SoundAsset,'mx.core.SoundAsset',true);
		return SoundAsset;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/errors/illegaloperationerror.as
	//class iflash.errors.IllegalOperationError extends Error
	var IllegalOperationError=(function(_super){
		function IllegalOperationError(message,id){
			(message===void 0)&& (message="");
			(id===void 0)&& (id=0);
			IllegalOperationError.__super.call(this,message,id);
		}

		__class(IllegalOperationError,'iflash.errors.IllegalOperationError',true,Error);
		return IllegalOperationError;
	})(Error)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/errors/ioerror.as
	//class iflash.errors.IOError extends Error
	var IOError=(function(_super){
		function IOError(message,id){
			(message===void 0)&& (message="");
			(id===void 0)&& (id=0);
			IOError.__super.call(this,message,id);
		}

		__class(IOError,'iflash.errors.IOError',true,Error);
		return IOError;
	})(Error)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/xml/xmlelementlist.as
	//class iflash.xml.XMLElementList extends Array
	var XMLElementList=(function(_super){
		function XMLElementList(value){
			this._value="";
			this._parentNode=null;
			XMLElementList.__super.call(this);
			__uns(this,['_value','_parentNode']);
			if (value){
				value="<data>"+value+"</data>";
				var list=XMLElementList.create(XMLElement.create(value).childNodes);
				for (var i=0;i < list.length;i++){
					this.push(list[i]);
				}
			}
			/*__JS__ */Object.defineProperty(this,'length',{value:this.length,writable:true,enumerable:false,configurable:false});
		}

		__class(XMLElementList,'iflash.xml.XMLElementList',false,Array);
		var __proto=XMLElementList.prototype;
		Laya.imps(__proto,{"iflash.xml.IXMLElement":true})
		__proto.childIndex=function(){
			if (this.lengths()==1){
				var xml=this[0];
				var parent=xml._parentNode;
				if (parent){
					var nodes=parent._childNodes;
					for (var i=0,n=nodes.length;i < n;i++){
						if (nodes[i]==xml){
							return i;
						}
					}
				}
			}
			return-1;
		}

		__proto.getAttributes=function(){
			return this.attributes();
		}

		__proto.attributes=function(){
			return this.getAttribute("*");
		}

		__proto.getAttribute=function(name){
			var arr=[],len=this.length;
			for (var i=0;i < len;i++){
				var attributes=this[i]._attributes;
				for (var j=0;j < attributes.length;j++){
					var value=attributes[j]['key'];
					if (name=="*" || value==name){
						arr.push({"key":attributes[j]['key'],"val":attributes[j]['val']});
					}
				}
			}
			if (name!="*"){
				if(arr && arr.length==1){
					return arr.length>0?arr[0].val:undefined;
				}
			}
			return iflash.xml.XMLElementList.createFromAttribute(arr);
		}

		__proto.attribute=function(name){
			return this.getAttribute(name);
		}

		__proto.setAttribute=function(name,value){
			if (this.length==1){
				var o;
				/*for each*/for(var $each_o in this[0]._attributes){
					o=this[0]._attributes[$each_o];
					if (o['key']==name){
						o['val']=value;
						return value;
					}
				}
				this[0]._attributes.push({key:name,val:value});
			}
			return null;
		}

		__proto.getChildByName=function(name){
			return this.child(name);
		}

		__proto.child=function(name){
			if (!this.length)
				return new XMLElementList();
			var arr=[],len=this.lengths();
			for (var i=0;i < len;i++){
				var nodes=this[i].getChildByName(name);
				(nodes && nodes.length)&& (arr=arr.concat(this[i].getChildByName(name)));
			}
			return XMLElementList.create(arr);
		}

		__proto.getChildByAttribute=function(attribute,value,equal){
			(equal===void 0)&& (equal=true);
			if (attribute=="" || attribute==null)
				return null;
			if (value=="" || value==null)
				return null;
			var ar=[],len=this.length;
			for (var i=0;i < len;i++){
				var n=this [i];
				for (var j=0;j < n._attributes.length;j++){
					if (n._attributes[j]['key']==attribute){
						if (equal && n._attributes[j]['val']==value){
							ar.push(n);
							}else if (!equal && n._attributes[j]['val'] !=value){
							ar.push(n);
						}
					}
				}
			}
			return iflash.xml.XMLElementList.create(ar);
		}

		__proto.getChildAt=function(index){
			if (!this.length || index > this.length)
				return null;
			else
			return this[index];
		}

		__proto.children=function(){
			var xl=new XMLElementList();
			var len=this.lengths();
			for (var i=0;i < len;i++){
				var childs=this[i]._childNodes;
				var n=childs.length;
				for (var j=0;j < n;j++){
					xl.push(childs[j]);
				}
				if(n<1){
					xl.push(this[i]);
				}
			}
			return xl;
		}

		__proto.elements=function(name){
			(name===void 0)&& (name="*");
			if (!this.length)
				return new XMLElementList();
			if (name=="*")
				return this.children();
			return this.child(name);
		}

		__proto.appendChild=function(value){
			if ((typeof value=='string')){
				value=XMLElement.create(String(value));
			}
			this.__doAdd__(value);
			return value;
		}

		__proto.__addChild__=function(value){
			if ((value instanceof iflash.xml.XMLElement )){
				var ixl=value._childNodes,len=ixl.length;
				for (var i=0;i < len;i++){
					this.__doAdd__(ixl[i]);
				}
				this.push(value);
				}else if ((value instanceof iflash.xml.XMLElementList )){
				len=value.lengths();
				for (i=0;i < len;i++){
					this.__addChild__(value[i]);
				}
			}
		}

		__proto.__doAdd__=function(value){
			if (this.indexOf(value)!=-1)
				return;
			var n=value._nodeName;
			var x=this[n];
			if ((x instanceof iflash.xml.XMLElementList )){
				x.__addChild__(value);
				}else if ((x instanceof iflash.xml.XMLElement )){
				var tmp=x;
				x=this[n]=new XMLElementList();
				Object.defineProperty(this,[n],{value:this[n],writable:true,enumerable:false,configurable:false});
				x.__addChild__(tmp);
				x.__addChild__(value);
				}else if (!x){
				x=new XMLElementList();
				if (this.length==1){
					this[0][n]=x;
					this[0]._childNodes=x;
				}
				else
				this[n]=x;
				x.__addChild__(value);
				Object.defineProperty(this,[n],{value:this[n],writable:true,enumerable:false,configurable:false});
			}
		}

		__proto.setName=function(str){
			if (this.length==1){
				this[0]._nodeName=str;
			}
		}

		__proto.copyFrom=function(source){
			if (this.lengths()> 1)
				return null;
			var il=((source instanceof iflash.xml.XMLElementList ));
			if (source.lengths()> 1)
				return null;
			if (il)
				this[0].copyFrom(source.getChildAt(0));
			else
			this[0].copyFrom(source);
			return this [0];
		}

		__proto.hasOwnProperty=function(pName){
			if (this.length==0){
				return this[0].hasOwnProperty(pName);
				}else {
				var x;
				/*for each*/for(var $each_x in this){
					x=this[$each_x];
					if (x['hasOwnProperty'](pName))
						return true;
				}
			}
			return false;
		}

		__proto.setChildByName=function(nName,value){
			return null;
			this.splice(0,/*int.MAX_VALUE*/2147483647);
			if ((value instanceof iflash.xml.XMLElementList )&& value.lengths()==1){
				this.push(value[0]);
				}else if ((value instanceof iflash.xml.XMLElement )){
				this.push(value);
				}else {
				return null;
			}
			return this;
		}

		__proto.hasComplexContent=function(){
			return this.length > 0;
		}

		__proto.hasSimpleContent=function(){
			var len=this.length;
			for (var i=0;i < len;i++){
				if (this['_nodeValue'] !=null){
					return true
				}
			}
			return false
		}

		__proto.name=function(){
			if (this.length==1)
				return this[0].name();
			return null;
		}

		__proto.lengths=function(){
			for (var i=this.length-1;i >=0;i--){
				if (this[i]==undefined)
					this.splice(i,1);
			}
			return this.length;
		}

		__proto.toString=function(){
			var str="";
			if (this.lengths()){
				if (this.length==1){
					str+=this[0].toString();
					}else {
					for (var i=0;i < this.length;i++){
						if (this.length > 1)
							str+=this[i].getString();
					}
				}
			}
			return str;
		}

		__proto.toXMLString=function(){
			var str="";
			for (var i=0;i < this.length;i++){
				str+=this[i].toXMLString();
			}
			return str;
		}

		__proto.parent=function(){
			return this._parentNode;
		}

		__proto.copy=function(){
			var list=new XMLElementList(this.toXMLString());
			return list;
		}

		__proto.getString=function(){
			var str="";
			str=this.toXMLString();
			return str;
		}

		__proto.comments=function(){
			return null;
		}

		__proto.contains=function(value){
			return true;
		}

		__getset(0,__proto,'localName',function(){
			return null
			},function(str){
			if (this.length==1){
				this[0]._nodeName=str;
			}
		});

		__getset(0,__proto,'nodeType',function(){
			return "*";
		});

		__getset(0,__proto,'value',function(){
			if (this.length==1){
				return this[0]._nodeValue;
			}
			return "";
			},function(str){
			if (this.length==1){
				this[0]._nodeValue=str;
			}
		});

		__getset(0,__proto,'childNodes',function(){
			return null;
		});

		__getset(0,__proto,'nodeName',function(){
			return null;
		});

		__uns(__proto,['childIndex','getAttributes','attributes','getAttribute','attribute','setAttribute','getChildByName','child','getChildByAttribute','getChildAt','children','elements','appendChild','__addChild__','__doAdd__','setName','copyFrom','hasOwnProperty','setChildByName','hasComplexContent','hasSimpleContent','name','lengths','toString','toXMLString','parent','copy','getString','comments','contains']);
		XMLElementList.create=function(arr){
			var xl=new XMLElementList();
			for (var i=0;i < arr.length;i++){
				xl.__addChild__(arr[i]);
			}
			return xl;
		}

		XMLElementList.createFromAttribute=function(arr){
			var xl=new XMLElementList();
			for (var i=0;i < arr.length;i++){
				var xml=new XMLElement();
				var obj=arr[i];
				xml._nodeName=obj.key;
				xml._nodeValue=obj.val;
				xl.push(xml);
			}
			return xl;
		}

		return XMLElementList;
	})(Array)


	var XMLList=window.XMLList=iflash.xml.XMLElementList;
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/displayobject.as
	//class iflash.display.DisplayObject extends iflash.events.EventDispatcher
	var DisplayObject=(function(_super){
		function DisplayObject(){
			this._parent_=null;
			this._firstDisplayUnit_=null;
			this._left_=0;
			this._top_=0;
			this._width_=0;
			this._height_=0;
			this._blend_=null;
			this._zIndex_=0;
			this._sort_d_=-1;
			this._mouseX_=NaN;
			this._mouseY_=NaN;
			this.__id__=0;
			this._type2_=0;
			this._mask_=null;
			this._readyCallBack=null;
			this._readyCallParam=null;
			this._needNotice=false;
			DisplayObject.__super.call(this);
			this._Filters_=Filters.__DEFAULT__;
			this._transform_=Transform.__DEFAULT__;
			this._concatenatedMatrix=new Matrix();
			this._invertedConcatenatedMatrix=new Matrix();
			this._bounds=new Rectangle();
			this.__initModule();
			this._type_ |=0x400;
			this._propagateFlagsDown_(/*CLASS CONST:iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*CLASS CONST:iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
		}

		__class(DisplayObject,'iflash.display.DisplayObject',false,_super);
		var __proto=DisplayObject.prototype;
		__proto.__initModule=function(){
			if(DisplayObject.initModule){
				this._modle_=Browser._createModle_(2,this._id_,this);this._type_|=0x40;
			}else this._modle_=IModel.__DEFAULT__;
			if(Laya.CONCHVER)this._modle_.vcanvas=function (v){
				v.conchVirtualBitmap=v.conchVirtualBitmap || /*__JS__ */new ConchVirtualBitmap();
				this.conchVirtualBitmap=v.conchVirtualBitmap;
				this.virtualBitmap(v.conchVirtualBitmap);
				if(!v.inMap){ConchRenderVCanvas.maps.push(v);v.inMap=true;}
					}
		}

		__proto._lyPaint_=function(context,x,y){
			this._firstDisplayUnit_ && (this._firstDisplayUnit_.paint(context,x+this._left_ ,y+this._top_ ,this,this._width_,this._height_)|| (this._repaint_=0));
		}

		__proto.conchPaint=function(context,x,y,isfirst){
			(isfirst===void 0)&& (isfirst=false);
			this._paintTransform_(context,x,y,this._width_,this._height_,isfirst);
		}

		__proto._paintTransform_=function(context,x,y,w,h,isfirst){
			if (this._transform_ !=Transform.__DEFAULT__&&!isfirst){
				var m=this._transform_.matrix;
				if (!m || !m.isTransform()){
					this._paintclip_(context,x,y,w,h);
					return;
				}
				context.save();
				x-=this._left_;
				y-=this._top_;
				if (x !=0 || y !=0){
					context.translate(x,y);
					context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
					context.translate(-x,-y);
				}
				else {
					context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
				}
				this._paintclip_(context,x,y,w,h);
				context.restore();
			}
			else
			this._paintclip_(context,x,y,w,h);
		}

		__proto._paintclip_=function(context,x,y,w,h){
			var node=this;
			if ((this._type_ & 0x2)==0x2){
				if (!node._private_._scrollRect_){
					this._paintGraphics_(context,x,y,w,h);
					return;
				};
				var rect=node._private_._scrollRect_;
				context.save();
				context.beginPath();
				context.rect(x,y,rect.width,rect.height);
				context.clip();
				this._paintChild_(context,x,y,w,h);
				context.restore();
			}
			else{
				this._paintGraphics_(context,x,y,w,h);
			}
		}

		__proto._paintMask_=function(context,x,y,w,h){}
		__proto._paintBackground_=function(context,x,y,w,h){
			var fillStyle="#ff0000";
			context.save();
			context.fillStyle=fillStyle;
			context.fillRect(x,y,w,h);
			context.restore();
		}

		__proto._paintGraphics_=function(context,x,y,w,h){
			this._paintChild_(context,x,y,w,h);
		}

		__proto._paintChild_=LAYAFNVOID/*function(context,x,y,w,h){}*/
		__proto.lySize=function(w,h){
			if (w !=this._width_ || h !=this._height_){
				this._width_=(w>0)?w:-1;
				this._height_=(h>0)?h:-1;
				this._modle_.size(w,h);
				this._propagateFlagsDown_(/*CLASS CONST:iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*CLASS CONST:iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
			}
		}

		__proto._lyPos_=function(x,y){
			if (this._left_ !=x || this._top_ !=y){
				this._left_=x;
				this._top_=y;
				this._modle_.pos(x,y);
				this._type_ |=0x20000;
				this._propagateFlagsDown_(/*CLASS CONST:iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*CLASS CONST:iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
			}
		}

		__proto.localToGlobal=function(localPoint,goalPoint){
			if(!goalPoint)goalPoint=new Point();
			return this._getConcatenatedMatrix().transformPointInPlace(localPoint,goalPoint);
		}

		__proto.globalToLocal=function(globalPoint,goalPoint){
			if(!goalPoint)goalPoint=new Point();
			return this._getInvertedConcatenatedMatrix().transformPointInPlace(globalPoint,goalPoint);
		}

		__proto.hitTestPoint=function(globalX,globalY,shapeFlag){
			(shapeFlag===void 0)&& (shapeFlag=false);
			if (!this.visible)return false;
			DisplayObject.HELPER_POINT_ALT=this.root.localToGlobal(DisplayObject.HELPER_POINT.setTo(globalX,globalY),DisplayObject.HELPER_POINT_ALT);
			if (this.getBounds(Stage.stage).containsPoint(DisplayObject.HELPER_POINT_ALT))return true;
			else return false;
		}

		__proto._hitTest_=function(_x,_y){
			if (!this.visible)return null;
			if (!this._checkHitMask(_x,_y)){return null;}
				if (!this._checkHitScrollRect(_x,_y)){return null;}
			if (this._private_._scrollRect_){_x+=this._private_._scrollRect_.x;_y+=this._private_._scrollRect_.y;}
				if (this._getBounds_(this,DisplayObject.HELPER_RECTANGLET).containsPoint(DisplayObject.HELPER_POINT.setTo(_x,_y))){
				return this;
			}
			else{
				return null;
			}
		}

		__proto._checkHitMask=function(_x,_y){
			if(this._mask_){
				this._mask_.getBounds(Stage.stage,DisplayObject.HELPER_RECTANGLET);
				this._getInvertedConcatenatedMatrix().transformBounds(DisplayObject.HELPER_RECTANGLET);
				return DisplayObject.HELPER_RECTANGLET.containsPoint(DisplayObject.HELPER_POINT.setTo(_x,_y));
			}
			return true;
		}

		__proto._checkHitScrollRect=function(_x,_y){
			if (this._private_._scrollRect_ && this._private_._scrollRect_.width!=0 && this._private_._scrollRect_.height!=0){
				var rect=this._private_._scrollRect_.clone ();
				rect.x=0;
				rect.y=0;
				return rect.containsPoint(DisplayObject.HELPER_POINT.setTo(_x,_y));
			}
			return true;
		}

		__proto.hitTestObject=function(value){
			if (this.visible && this.parent !=null && value !=null && value.parent !=null){
				var currentBounds=this.getBounds(Stage.stage);
				var targetBounds=value.getBounds(Stage.stage);
				return currentBounds.intersects(targetBounds);
			}
			return false;
		}

		__proto.getRect=function(value){
			return this.getBounds(value);
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if(!resultRect)
				resultRect=DisplayObject.HELPER_RECTANGLET;
			DisplayObject.HELPER_POINT.identity();
			return resultRect.setTo(0,0,this._width_,this._height_);
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if ((targetSpace==Stage.stage)&& (this._type2_ & 0x4)==0){
				if(resultRect){
					resultRect.copyFrom(this._bounds);
					return resultRect
				}
				else{return this._bounds};
			};
			if (resultRect==null)resultRect=new Rectangle();
			this._getBounds_(targetSpace,resultRect);
			if(targetSpace!=this){
				if (targetSpace==this._parent_){
					DisplayObject.HELPER_MATRIX.copy(this.matrix);
					}else{
					Matrix.mul(DisplayObject.HELPER_MATRIX,targetSpace._getInvertedConcatenatedMatrix(),this._getConcatenatedMatrix());
				}
				DisplayObject.HELPER_MATRIX.transformBounds(resultRect);
			}
			if (targetSpace==Stage.stage){
				this._bounds.copyFrom(resultRect);
				this._type2_ &=~0x4;
			}
			return resultRect;
		}

		__proto.getTransformMatrix=function(targetSpace,resultMatrix){
			var commonParent;
			var currentObject;
			if (resultMatrix)resultMatrix.identity();
			else resultMatrix=new Matrix();
			if (targetSpace==this){
				return resultMatrix;
			}
			else if (targetSpace==this.parent || (targetSpace==null && this.parent==null)){
				resultMatrix.copy(this.matrix);
				return resultMatrix;
			}
			else if (targetSpace==null || targetSpace==this._root_){
				resultMatrix.copyFrom(this._getConcatenatedMatrix());
				return resultMatrix;
			}
			else if (targetSpace.parent==this){
				targetSpace.getTransformMatrix(this,resultMatrix);
				resultMatrix.invert();
				return resultMatrix;
			}
			Matrix.mul(resultMatrix,targetSpace._getInvertedConcatenatedMatrix(),this._getConcatenatedMatrix());
			return resultMatrix;
		}

		__proto._getConcatenatedMatrix=function(CalculateInvertedmt){
			(CalculateInvertedmt===void 0)&& (CalculateInvertedmt=true);
			if (this._type2_ & 0x1){
				if(this._parent_){
					this._parent_._getConcatenatedMatrix().preMultiplyInto(this.matrix,this._concatenatedMatrix);
				}
				else {return this.matrix };
				if (CalculateInvertedmt==true){
					this._invertedConcatenatedMatrix=this._concatenatedMatrix.clone();
					this._invertedConcatenatedMatrix.invert();
				}
				this._type2_ &=~0x1;
			}
			return this._concatenatedMatrix;
		}

		__proto._getInvertedConcatenatedMatrix=function(){
			if ((this._type2_ & 0x1)){
				this._invertedConcatenatedMatrix=this._getConcatenatedMatrix(false).clone();
				this._invertedConcatenatedMatrix.invert();
				this._type2_ &=~0x1;
			}
			return this._invertedConcatenatedMatrix.clone();
		}

		__proto._propagateFlagsDown_=function(flags){
			this._type2_ |=flags;
		}

		__proto.__addFrameTimer__=function(fn){
			return Stage.stage._tmctr_.addFrameTimer(fn,this);
		}

		__proto.__updatamask__=function(){
			this._mask_.getBounds(Stage.stage,DisplayObject.HELPER_RECTANGLET);
			this._getInvertedConcatenatedMatrix().transformBounds(DisplayObject.HELPER_RECTANGLET);
			var rect=DisplayObject.HELPER_RECTANGLET;
			if(rect.x!=this._private_.mask.x||rect.y!=this._private_.mask.y||rect.width!=this._private_.mask.width||rect.height!=this._private_.mask.height)
				this._private_.mask.setRect(rect.x,rect.y,rect.width,rect.height);
		}

		__proto._addCMask=function(){
			var isRemove=true;
			if (this._private_.mask){
				for (var i=0,n=DisplayObject.ConMasks.length;i < n;i++){
					if (this==DisplayObject.ConMasks[i]){
						isRemove=false;
					}
				}
				if(isRemove)DisplayObject.ConMasks.push(this);
			}
		}

		__proto._lyToBody_=function(){
			this._addCMask();
			this.dispatchEvent(new Event(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage"));
		}

		__proto._dispatchAddedEvent=function(target){
			var event=new Event(/*iflash.events.Event.ADDED*/"added");
			event._lytarget=target;
			event.bubbles=true;
			this.dispatchEvent(event);
		}

		__proto._removeCMask=function(){
			if (this._private_.mask){
				for (var i=0,n=DisplayObject.ConMasks.length;i < n;i++){
					if (this==DisplayObject.ConMasks[i]){
						DisplayObject.ConMasks.splice(i,1);
						break ;
					}
				}
			}
		}

		__proto._lyUnToBody_=function(){
			this._removeCMask();
			this.dispatchEvent(new Event(/*iflash.events.Event.REMOVED_FROM_STAGE*/"removedFromStage"));
		}

		__proto.removeFromBody=function(){
			this._parent_=null;
		}

		__proto._dispatchRemovedEvent=function(){
			this.dispatchEvent(new Event(/*iflash.events.Event.REMOVED*/"removed",true));
		}

		__proto.__dispatchEnterFrame__=function(e){
			e._currentTarget_=this;
			e._lytarget=this;
			this.dispatchEvent(e);
		}

		__proto.lyclone=LAYAFNVOID/*function(){}*/
		__proto.setReadyForDrawCall=function(_readyCall,param){
			this._readyCallParam=param;
			this._readyCallBack=_readyCall;
			if(this.isReadyForDraw){
				this.readyDrawCallBack();
				}else{
				this.setupReadyNoticeWork();
			}
		}

		__proto.readyDrawCallBack=function(){
			if(this._readyCallBack!=null){
				this._readyCallBack.apply(this,this._readyCallParam);
				this._readyCallBack=null;
				this._readyCallParam=null;
			}
		}

		__proto.setupReadyNoticeWork=function(ifSelfNotice){
			(ifSelfNotice===void 0)&& (ifSelfNotice=false);
			if(this.isReadyForDraw)return;
			this._needNotice=ifSelfNotice;
		}

		__proto.readyWork=function(){
			if(this._readyCallBack!=null){
				this.readyDrawCallBack();
			}
			this.noticeReadyToParent();
		}

		__proto.noticeReadyToParent=function(){
			if(!this._needNotice)return;
			if(this._parent_){
				this._parent_.oneChildReady();
			}
			this._needNotice=false;
		}

		__proto.layaDestory=function(){
			this._modle_ && this._modle_.destroy();
			this._concatenatedMatrix=null;
			this._invertedConcatenatedMatrix=null;
			this._bounds=null;
			this._modle_=null;
		}

		__getset(0,__proto,'_owidth_',function(){
			return this._width_/this.scaleX;
		});

		__getset(0,__proto,'name',function(){
			return this._private_._name_||(this._private_._name_="instance"+this._id_);
			},function(_name){
			this._private_._name_=_name;
		});

		__getset(0,__proto,'parent',function(){
			return this._parent_;
		});

		__getset(0,__proto,'_oheight_',function(){
			return this._height_/this.scaleY;
		});

		__getset(0,__proto,'y',function(){
			return this._top_;
			},function(value){
			this._lyPos_(this._left_,value);
		});

		__getset(0,__proto,'__onmask__',null,function(fn){
			if(this._private_.onmask)(this._private_.onmask.deleted=true);
			this._private_.onmask=this.__addFrameTimer__(fn);
		});

		__getset(0,__proto,'height',function(){
			return this.matrix.transformBounds(this._getBounds_(this)).height;
			},function(h){
			if(this._height_==h)
				return;
			this.scaleY=1.0;
			var oldH=this.height;
			oldH &&(this.scaleY=h / oldH);
			(this._height_ !=h)&& this.lySize(this._width_,h);
		});

		__getset(0,__proto,'skewX',function(){
			return this._transform_._skew_.x;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (value==0)return;
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_._setSkewX_(value);
		});

		__getset(0,__proto,'width',function(){
			return this.matrix.transformBounds(this._getBounds_(this)).width;
			},function(w){
			if(this._width_==w)
				return;
			this.scaleX=1.0;
			var oldW=this.width;
			oldW &&(this.scaleX=w / oldW);
			(this._width_ !=w)&& this.lySize(w,this._height_);
		});

		__getset(0,__proto,'blendMode',function(){return this._blend_},function(value){
			switch(value){
				case "add":
					value="lighter";
					break ;
				default :
					this._modle_.globalCompositeOperation(1);
					value=null;
					return;
					break ;
				}
			if(this._blend_==value)return;
			this._blend_=value;
			this._modle_.globalCompositeOperation(2);
			((this._type_ & 0x10000)==0)&& (DrawBlend.insertUnit(this),this._type_ |=0x10000);
		});

		__getset(0,__proto,'skewY',function(){
			return this._transform_._skew_.y;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (value==0)return;
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_._setSkewY_(value);
		});

		__getset(0,__proto,'rotation',function(){
			return this._transform_._rotate_;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (value==0)return;
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_._setRotation_(value);
		});

		__getset(0,__proto,'scaleY',function(){
			return this._transform_._scale_.y;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (value==1)return;
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_._setScaleY_(value);
		});

		__getset(0,__proto,'rotationX',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'transform',function(){
			return this._transform_==Transform.__DEFAULT__?(this._transform_=new Transform()._setNode_(this)):this._transform_;
			},function(value){
			(this._transform_=value)._setNode_(this);
		});

		__getset(0,__proto,'rotationY',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'rotationZ',function(){
			return this.rotation;
			},function(value){
			this.rotation=value;
		});

		__getset(0,__proto,'scaleX',function(){
			return this._transform_._scale_.x;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (value==1)return;
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_._setScaleX_(value);
		});

		__getset(0,__proto,'scaleZ',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'matrix',function(){
			return this._transform_!=Transform.__DEFAULT__?this._transform_.matrix:((this._transform_=new Transform())._setNode_(this)).matrix;
			},function(value){
			if (this._transform_==Transform.__DEFAULT__){
				if (!value.isTransform()){
					this._lyPos_(value.tx,value.ty);
					return;
				}
				this._transform_=new Transform()._setNode_(this);
			}
			this._transform_.matrix=value;
		});

		__getset(0,__proto,'visible',function(){
			return (this._type_&0x400)!=0;
			},function(value){
			if(value)
				this._type_|=0x400;
			else
			this._type_ &=~0x400;
			this._modle_.show(value);
		});

		__getset(0,__proto,'x',function(){
			return this._left_;
			},function(value){
			this._lyPos_(value,this._top_);
		});

		__getset(0,__proto,'z',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'alpha',function(){
			return this._Filters_._alpha_;
			},function(value){
			if(this._Filters_._alpha_ !=value){
				this._Filters_ !=Filters.__DEFAULT__?(this._Filters_.alpha(this,value)):(this._Filters_=new Filters).alpha(this,value);
			}
		});

		__getset(0,__proto,'mouseX',function(){
			DisplayObject.HELPER_POINT.setTo(Laya.document.mouseX,Laya.document.mouseY);
			this.globalToLocal(DisplayObject.HELPER_POINT,DisplayObject.HELPER_POINT_ALT);
			return DisplayObject.HELPER_POINT_ALT.x;
		});

		__getset(0,__proto,'mouseY',function(){
			DisplayObject.HELPER_POINT.setTo(Laya.document.mouseX,Laya.document.mouseY);
			this.globalToLocal(DisplayObject.HELPER_POINT,DisplayObject.HELPER_POINT_ALT);
			return DisplayObject.HELPER_POINT_ALT.y;
		});

		__getset(0,__proto,'loaderInfo',function(){
			return LoaderInfo.getLoaderInfo(this.__id__);
		});

		__getset(0,__proto,'_root_',function(){
			var currentObject=this;
			while (currentObject&&currentObject.parent)currentObject=currentObject.parent;
			return currentObject;
		});

		__getset(0,__proto,'root',function(){
			var currentObject=this;
			while (currentObject&&currentObject.parent&&currentObject.parent!=Stage.stage)currentObject=currentObject.parent;
			return currentObject;
		});

		__getset(0,__proto,'stage',function(){
			if(this._root_==Stage.stage)return Stage.stage;
			return null;
		});

		__getset(0,__proto,'scrollRect',function(){
			return this._private_._scrollRect_
			},function(value){
			if(!value){
				this._private_._scrollRect_=null;
				this._modle_.clip(false);
				this._modle_.scroll(0,0);
				return;
			}
			this._private_._scrollRect_=this._private_._scrollRect_|| new Rectangle();
			this._private_._scrollRect_.setTo(value.x,value.y,value.width,value.height);
			((this._type_ & 0x2)==0)&& (DrawClip.insertUnit(this),this._type_ |=0x2);
			if (Laya.CONCHVER){
				this._modle_.clip(true);
				this._modle_.scroll(-value.x,-value.y);
				this._modle_.size(value.width,value.height);
			}
		});

		__getset(0,__proto,'scale9Grid',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'filters',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'mask',function(){
			return this._mask_;
			},function(value){
			if(!value){
				if (this._mask_){
					this._mask_.visible=true;this._mask_=null;this._type_ &=~0x8000;
					this._removeCMask();
					this._private_.mask=null;
					this._modle_.mask(null);
				}
				return;
			};
			var _isChild_=false;
			var temp=value.parent;
			while(temp){
				if(this==temp){
					_isChild_=true;
					break ;
				}
				temp=temp.parent;
			}
			this._mask_=value;this._mask_.visible=false;
			if(_isChild_){
				((this._type_ & 0x8000)==0)&& (DrawMaskC.insertUnit(this));
				((this._type_ & 0x8000)==0)&& (this._type_ |=0x8000)
			}
			else{
				((this._type_ & 0x8000)==0)&& (DrawMask.insertUnit(this));
				((this._type_ & 0x8000)==0)&& (this._type_ |=0x8000);
			}
			if (Laya.CONCHVER){
				var mask=this._private_.mask|| new Browser.window._ConchMask();
				mask.setType(1);
				this._modle_.mask(mask);
				if(!this._private_.mask)DisplayObject.ConMasks.push(this);
				this._private_.mask=mask;
			}
		});

		__getset(0,__proto,'_to_sort_d',function(){
			return this._sort_d_=this.zIndex / 100000;
		});

		__getset(0,__proto,'zIndex',function(){
			return this._zIndex_;
			},function(value){
			this._zIndex_=value;
			this._modle_.zIndex(value);
		});

		__getset(0,__proto,'cacheAsBitmap',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'isReadyForDraw',function(){
			return true;
		});

		DisplayObject.sendMask=function(){
			for (var i=0,n=DisplayObject.ConMasks.length;i < n;i++){
				DisplayObject.ConMasks[i].__updatamask__();
			}
		}

		DisplayObject.ConMasks=[];
		DisplayObject.TYPE_IFLASH=0x400000;
		DisplayObject.TYPE2_DRAW_MASK=0;
		DisplayObject.TYPE2_DRAW_TANSFORM=0x1;
		DisplayObject.TYPE2_DRAW_FILTER=0x2;
		DisplayObject.TYPE2_DRAW_BACKGROUND=0x20;
		DisplayObject.TYPE2_DRAW_CLIP=0x100;
		DisplayObject.TYPE2_DRAW_MASKC=0x200;
		DisplayObject.TYPE2_DRAW_CHILDS=0x800;
		DisplayObject.TYPE2DEFAULT=0;
		DisplayObject.TYPE_CLIP=0x2;
		DisplayObject.TYPE_DRAWSHAP=0x4;
		DisplayObject.TYPE_DRAWCHILD=0x8;
		DisplayObject.TYPE_CREATE_FROM_TAG=0x10;
		DisplayObject.TYPE_MOUSE_CHILDREN=0x20;
		DisplayObject.TYPE_MOUSE_ENABLE=0x40;
		DisplayObject.TYPE_USEHANDCURSOR=0x80;
		DisplayObject.TYPE_MOUSE_DBCLICK_ENABLE=0x100;
		DisplayObject.TYPE_IS_RECT_CHANGE=0x200;
		DisplayObject.TYPE_IS_VISIBLE=0x400;
		DisplayObject.TYPE_IS_LOAD=0x800;
		DisplayObject.TYPE_DRAW_BIMAP_DATA=0x1000;
		DisplayObject.TYPE_DRAW_IMAGEELEMENT=0x2000;
		DisplayObject.TYPE_CHILDREN_SORT=0x4000;
		DisplayObject.TYPE_MASK=0x8000;
		DisplayObject.TYPE_BLEND=0x10000;
		DisplayObject.TYPE_MATRIX_CHG=0x20000;
		DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG=0x1;
		DisplayObject.TYPE2_BOUNDS_CHG=0x4;
		DisplayObject.TYPE2_RECT_CHG=0x2;
		DisplayObject.initModule=true;
		__static(DisplayObject,
		['HELPER_MATRIX',function(){return this.HELPER_MATRIX=new Matrix();},'HELPER_MATRIX_ALT',function(){return this.HELPER_MATRIX_ALT=new Matrix();},'HELPER_POINT',function(){return this.HELPER_POINT=new Point();},'HELPER_POINT_ALT',function(){return this.HELPER_POINT_ALT=new Point();},'HELPER_RECTANGLET',function(){return this.HELPER_RECTANGLET=new Rectangle();},'HELPER_RECTANGLET_ALT',function(){return this.HELPER_RECTANGLET_ALT=new Rectangle();}
		]);
		return DisplayObject;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/loaderinfo.as
	//class iflash.display.LoaderInfo extends iflash.events.EventDispatcher
	var LoaderInfo=(function(_super){
		function LoaderInfo(){
			this._actionScriptVersion_=1;
			this._sameDomain_=false;
			this._contentType="";
			this._applicationDomain=null;
			this._bytes=null;
			this._bytesLoaded=0;
			this._bytesTotal=0;
			this._childAllowsParent=false;
			this.__content__=null;
			this._frameRate=0;
			this._height=0;
			this._isURLInaccessible=false;
			this._loader=null;
			this._loaderURL=null;
			this._lyurl="";
			this._parameters=null;
			this._parentAllowsChild=false;
			this._swfVersion=0;
			this._width=0;
			this.objInfo=null;
			this._resourceDic_=null;
			this._reDomain_=null;
			this.__id__=0;
			this.__imageUrl__="";
			this.__fileurl="";
			this._nextid_=0;
			this.onload=null;
			this.onerror=null;
			this._uncaughtErrorEvents=null;
			this.temp=[];
			this.config=null;
			this.argData=null;
			this.pr=0
			this.countAsset=0;
			LoaderInfo.__super.call(this);
			this._resourceDic_=[];this.objInfo=[];
			this._applicationDomain=new ApplicationDomain();
			this._applicationDomain._parentDomain_=ApplicationDomain.currentDomain;
		}

		__class(LoaderInfo,'iflash.display.LoaderInfo',false,_super);
		var __proto=LoaderInfo.prototype;
		__proto.deleteResourceDic=function(){
			this._resourceDic_=null;
		}

		__proto.deleteLoader=function(){
			for(var key in LoaderInfo._loaderInfos_){
				delete LoaderInfo._loaderInfos_[key];
			}
			LoaderInfo._loaderInfos_=null;
		}

		__proto.pushSymbolClass=function(_name,tag){
			this._resourceDic_[_name]=tag;
		}

		__proto.pushResource=function(r,_name){
			this._resourceDic_[_name]=r;
		}

		__proto.getResource=function(_name){return this._resourceDic_[_name];}
		__proto.cloneByName=function(_name){
			var dec=this.getResource(_name).data.clone();
			return dec;
		}

		__proto.getBitmapData=function(_name,rect,rectSmall,format){
			var img=new LyImageElement();
			return img;
		}

		__proto.onUrlLoaderComplete=function(event){
			var source=event.target.data;
			source.position=0;
			var temp=new ByteArray();
			source.readUTF();
			source.readUTF();
			source.readBytes(temp,0,0);
			this.setByteArray(temp);
			source=null;
			temp=null;
			(event.target).removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onUrlLoaderComplete));
			(event.target).removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onUrlError));
		}

		__proto.onUrlError=function(event){
			Log.log(event.toString());
		}

		__proto.setUrl=function(url){
			this.lyurl=url=Method.formatUrl(url);
			if(this.lyurl.lastIndexOf(".swf")!=-1){
				this.__imageUrl__=this.lyurl.substr(0,this.lyurl.lastIndexOf(".swf"))+"/image/"
				}else{
				this.__imageUrl__=this.lyurl+"/image/";
			}
		}

		__proto.saveObjInfo=function(characterId,data){
			if(characterId)
			{this.objInfo[characterId]=data;}
		}

		__proto.getObjInfo=function(characterId){
			if(characterId)
			{return this.objInfo[characterId]
			}else return null;
		}

		__proto._getEvents_=function(obj){
			this._eventListener_=obj._eventListener_;
		}

		__proto._comp_=LAYAFNVOID/*function(){}*/
		__proto.readversion=function(data){
			var version="";
			version+=data.readByte().toString();
			version+=data.readByte().toString();
			version+=data.readByte().toString();
			version+=data.readByte().toString();
			return version;
		}

		__proto.setByteArray=function(data){
			var version=this.readversion(data);
			if(version>"0001"){
				var obj=data.readObject();
				this.config=obj["assets"];
				this.argData=obj['tagInfo'];
			};
			var runner=new Runnner();
			runner.compile(data,this);
			runner.getSysbomData(this);
			this.complete();
			runner.deleteLoaderInfo()
		}

		__proto.complete=function(){
			this.putResInDomain();
			Runnner.symbolClass.length=0;
			if(this.argData){
				for(var ip in this.argData){
					for(var k in this.argData[ip]){
						var obj=this.argData[ip][k];
						var objk=this.getResource(ip);
						objk[k]=obj;
					}
				}
			};
			var mainTime;
			if(this["mainClass"]){
				var main=iflash.utils.getDefinitionByName(this["mainClass"]);
				if(main){
					mainTime=new main();
					}else{
					var mainTime=this.getResource("32767");mainTime=mainTime.lyclone();
					mainTime&&mainTime.gotoAndStop(1);
				}
				}else{
				var mainTime=this.getResource("32767");mainTime=mainTime.lyclone();
				mainTime&&mainTime.gotoAndStop(1);
			}
			this.__content__=mainTime;
			if(!this.__fileurl){
				for(var i=0;i<Loader.preSwf.length;i++){
					if((this._lyurl+".swf").lastIndexOf(Loader.preSwf[i])!=-1){
						if(this.temp.length){
							this.checkHandler();
						}
						return;
					}
				}
			}
			if(Loader.preSwf.indexOf(this.__fileurl)!=-1){
				if(this.temp.length){
					this.checkHandler();
					}else{
					iflash.utils.setTimeout(__bind(this,this.__finish),0.001);
				}
				}else{
				iflash.utils.setTimeout(__bind(this,this.__finish),0.001);
			}
		}

		__proto.checkHandler=function(){
			var ly;
			for(var i=0;i<this.temp.length;i++){
				ly=this.temp[i];
				ly.checkImg();
				ly._image_.onload=iflash.method.bind(this,this.onPreComplete);
				ly._image_.onerror=iflash.method.bind(this,this.onPreComplete);
				ly._image_.src=ly.src;
			}
		}

		__proto.onPreComplete=function(e){
			this.pr++;
			if(this.pr>=this.temp.length){
				iflash.utils.setTimeout(__bind(this,this.__finish),0.001);
				this.temp.length=0;
			}
		}

		__proto.__finish=function(){
			this.temp.length=0;
			if(this.config&&this.config['textureList']&&this.config['textureList'].length){
				this.countAsset=this.config['textureList'].length;
				var ly=Browser.document.createElement("image");
				ly.onload=iflash.method.bind(this,this.onLoadHandler);
				var tUrl=this.__imageUrl__+"a"+this.countAsset+".png";
				ly.src=tUrl;
				TextureManager.getInstance().addTexture(tUrl,ly);
				}else{
				this.onload && this.onload();
			}
		}

		__proto.onLoadHandler=function(){
			this.countAsset--;
			if(this.countAsset){
				var ly=Browser.document.createElement("image");
				ly.onload=iflash.method.bind(this,this.onLoadHandler);
				var tUrl=this.__imageUrl__+"a"+this.countAsset+".png";
				ly.src=tUrl;
				TextureManager.getInstance().addTexture(tUrl,ly);
				}else{
				this.onload && this.onload();
			}
		}

		__proto.putResInDomain=function(){
			if(this._reDomain_){
				for(var key in this.applicationDomain._resMapDic_){
					this._reDomain_.addResToMap(key,this.applicationDomain._resMapDic_[key]);
				}
			}
		}

		__getset(0,__proto,'actionScriptVersion',function(){
			return this._actionScriptVersion_;
			},function(value){
			this._actionScriptVersion_=value;
		});

		__getset(0,__proto,'bytesLoaded',function(){
			return this._bytesLoaded;
			},function(value){
			this._bytesLoaded=value;
		});

		__getset(0,__proto,'width',function(){
			return this._width;
			},function(value){
			this._width=value;
		});

		__getset(0,__proto,'applicationDomain',function(){
			if(!this.__id__)return ApplicationDomain.currentDomain;
			return this._applicationDomain;
		});

		__getset(0,__proto,'bytes',function(){
			return this._bytes;
			},function(value){
			this._bytes=value
		});

		__getset(0,__proto,'content',function(){
			return this.__content__;
		});

		__getset(0,__proto,'bytesTotal',function(){
			return this._bytesTotal;
			},function(value){
			this._bytesTotal=value;
		});

		__getset(0,__proto,'childAllowsParent',function(){
			return this._childAllowsParent;
			},function(value){
			this._childAllowsParent=value;
		});

		__getset(0,__proto,'contentType',function(){
			return this._contentType;
		});

		__getset(0,__proto,'frameRate',function(){
			return this._frameRate;
			},function(value){
			this._frameRate=value;
		});

		__getset(0,__proto,'height',function(){
			return this._height;
			},function(value){
			this._height=value;
		});

		__getset(0,__proto,'isURLInaccessible',function(){
			return this._isURLInaccessible;
			},function(value){
			this._isURLInaccessible=value;
		});

		__getset(0,__proto,'loader',function(){
			if(this._loader==null){
				this._loader=new Loader();
			}
			return this._loader;
			},function(value){
			this._loader=value;
		});

		__getset(0,__proto,'sharedEvents',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'loaderURL',function(){
			return this._loaderURL;
			},function(value){
			this._loaderURL=value;
		});

		__getset(0,__proto,'parameters',function(){
			return this._parameters;
			},function(value){
			this._parameters=value;
		});

		__getset(0,__proto,'parentAllowsChild',function(){
			return this._parentAllowsChild;
			},function(value){
			this._parentAllowsChild=value;
		});

		__getset(0,__proto,'sameDomain',function(){
			return this._sameDomain_;
		});

		__getset(0,__proto,'swfVersion',function(){
			return this._swfVersion;
			},function(value){
			this._swfVersion=value;
		});

		__getset(0,__proto,'lyurl',function(){
			return this._lyurl;
			},function(value){
			this._lyurl=value;
		});

		__getset(0,__proto,'url',function(){
			return this.lyurl;
		});

		__getset(0,__proto,'src',function(){
			return this.lyurl;
			},function(url){
			this.lyurl=url=Method.formatUrl(url,Laya.document.baseURI.path);
			if(this.lyurl.lastIndexOf(".swf")!=-1){
				this.__imageUrl__=this.lyurl.substr(0,this.lyurl.lastIndexOf(".swf"))+"/image/"
			};
			var _urlLoad=new URLLoader();
			_urlLoad.dataFormat=/*iflash.net.URLLoaderDataFormat.BINARY*/"binary";
			_urlLoad.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onUrlLoaderComplete));
			_urlLoad.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onUrlError));
			_urlLoad.load(new URLRequest(url));
		});

		__getset(0,__proto,'uncaughtErrorEvents',function(){
			return this._uncaughtErrorEvents=this._uncaughtErrorEvents|| new UncaughtErrorEvents();
		});

		__getset(1,LoaderInfo,'currentLoadInfo',function(){
			if(!LoaderInfo.__currentLoaderInfo__)
				LoaderInfo.__currentLoaderInfo__=new LoaderInfo();
			return LoaderInfo.__currentLoaderInfo__;
		},iflash.events.EventDispatcher._$SET_currentLoadInfo);

		LoaderInfo.getLoaderInfoByDefinition=function(object){
			return object;
		}

		LoaderInfo.create=function(id){
			var li=new LoaderInfo();li.__id__=id;
			li.applicationDomain.__id__=id;
			return LoaderInfo._loaderInfos_[id]=li;
		}

		LoaderInfo.getLoaderInfo=function(id){
			if(id==0)return LoaderInfo.currentLoadInfo;
			return LoaderInfo._loaderInfos_[id];
		}

		LoaderInfo.__currentLoaderInfo__=null
		LoaderInfo._loaderInfos_={};
		LoaderInfo.minibitmapData=null;
		LoaderInfo.TextureSign="a";
		return LoaderInfo;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/nativemenu.as
	//class iflash.display.NativeMenu extends iflash.events.EventDispatcher
	var NativeMenu=(function(_super){
		function NativeMenu(){
			NativeMenu.__super.call(this);
		}

		__class(NativeMenu,'iflash.display.NativeMenu',false,_super);
		return NativeMenu;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/nativemenuitem.as
	//class iflash.display.NativeMenuItem extends iflash.events.EventDispatcher
	var NativeMenuItem=(function(_super){
		function NativeMenuItem(){
			NativeMenuItem.__super.call(this);
		}

		__class(NativeMenuItem,'iflash.display.NativeMenuItem',false,_super);
		var __proto=NativeMenuItem.prototype;
		__getset(0,__proto,'enabled',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(isSeparator){}*/);
		return NativeMenuItem;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stage3d.as
	//class iflash.display.Stage3D extends iflash.events.EventDispatcher
	var Stage3D=(function(_super){
		function Stage3D(){
			this.context3D=null;
			this._x=0;
			this._y=0;
			this._visible=true;
			Stage3D.__super.call(this);
		}

		__class(Stage3D,'iflash.display.Stage3D',false,_super);
		var __proto=Stage3D.prototype;
		__proto.requestContext3D=function(context3DRenderMode,profile){
			(context3DRenderMode===void 0)&& (context3DRenderMode="auto");
			(profile===void 0)&& (profile="baseline");
			iflash.utils.setTimeout(__bind(this,this.onCreateContext),1000)
				}
		__proto.onCreateContext=function(evt){
			this.context3D=new Context3D();
			this.context3D.webglContext=Laya.document.canvas3D.context3D;
			var event=new iflash.events.Event(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate");
			this.context3D.webglContext.enableErrorChecking=true;
			this.dispatchEvent(event);
		}

		__getset(0,__proto,'visible',function(){
			return this._visible;
			},function(value){
			this._visible=value;
		});

		__getset(0,__proto,'x',function(){
			return this._x;
			},function(value){
			this._x=value;
		});

		__getset(0,__proto,'y',function(){
			return this._y;
			},function(value){
			this._y=value;
		});

		return Stage3D;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/swf/classs/bdbs.as
	//class iflash.display.swf.classs.BDBS extends iflash.display.BitmapData
	var BDBS=(function(_super){
		function BDBS(width,height,transparent,fillColor){
			(width===void 0)&& (width=0);
			(height===void 0)&& (height=0);
			(transparent===void 0)&& (transparent=true);
			(fillColor===void 0)&& (fillColor=4.294967295E9);
			var ly=this["__data__"];
			var bitmapdata=ly.miniBitmapData;
			BDBS.__super.call(this,ly?ly.width:1,ly?ly.height:1,transparent,fillColor);
			if (ly){
				if(!bitmapdata._canvas_)bitmapdata.draw(LoaderInfo.minibitmapData,Matrix.__DEFAULT__,null,null,new Rectangle(0,0,ly.width,ly.height));
				this._canvas_=bitmapdata._canvas_.clone();
				ly._init_();ly._lyToBody_();
				this.width=ly.width;
				this.height=ly.height;
				this._canvas_.size(ly.width,ly.height);
			}
		}

		__class(BDBS,'iflash.display.swf.classs.BDBS',false,_super);
		return BDBS;
	})(BitmapData)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/context3d.as
	//class iflash.display3D.Context3D extends iflash.events.EventDispatcher
	var Context3D=(function(_super){
		function Context3D(){
			this.backBufferWidth=0;
			this.backBufferHeight=0;
			this._driverInfo=null;
			this.enableErrorChecking=false;
			this.maxBackBufferWidth=0;
			this.maxBackBufferHeight=0;
			this.profile=null;
			this.supportsVideoTexture=false;
			this.mAntiAlias=0;
			this.mEnableDepthAndStencil=true;
			this.mWantsBestResolution=false;
			this.mWantsBestResolutionOnBrowserZoom=false;
			this.m_internal_rttFramebuffer=null;
			this.m_internal_defautFBO=null;
			this.m_bInMainRender=true;
			this.m_currentProgram=null;
			this.webglContext=null;
			this.BlendFactor=[0x0304,0x0306,1,0x0305,0x0307,0x0303,0x0301,0x0302,0x0300,0];
			this.CompareMode=[0x0207,0x0202,0x0204,0x0206,0x0201,0x0203,0x0200,0x0205];
			this.CullMode=[0x0405,0x0404,0x0408];
			this.BufferFormat=[1,1,2,3,4];
			this.bNullTex=false;
			this.m_stencilRefVal=0;
			this.m_stencilWriteMask=0xff;
			this.m_vecStencilOp=null;
			this.m_vecStencilFunc=null;
			Context3D.__super.call(this);
			this.m_originViewport=new Rectangle(0,0,0,0);
			this.m_currentViewport=new Rectangle(0,0,0,0);
			Laya.document.canvas3D.width=Stage.stage.stageWidth;
			Laya.document.canvas3D.height=Stage.stage.stageHeight;
			this.webglContext=Laya.document.canvas3D.context3D;
			this.initWebGLContants();
			this.mAntiAlias=0;
			this.mEnableDepthAndStencil=true;
			this.mWantsBestResolution=false;
			this.mWantsBestResolutionOnBrowserZoom=false;
			Laya.CONCHVER&&/*__JS__ */SetupWebglContext(this.webglContext);
			this.webglContext.enable(this.webglContext.BLEND);
			this.webglContext.blendFunc(this.webglContext.SRC_ALPHA,this.webglContext.ONE_MINUS_SRC_ALPHA);
			this.webglContext.enable(this.webglContext.CULL_FACE);
			this.webglContext.cullFace(this.webglContext.BACK);
			this.m_currentProgram=null;
			this.initInternalObjects();
			var fullScreenWidth=Laya.window.innerWidth;
			var fullScreenHeight=Laya.window.innerHeight;
			this.webglContext.viewport(0,0,fullScreenWidth,fullScreenHeight);
			this.clear(0,0,0,1);
		}

		__class(Context3D,'iflash.display3D.Context3D',false,_super);
		var __proto=Context3D.prototype;
		__proto.initWebGLContants=function(){
			var context=this.webglContext;
			context.DEPTH_BUFFER_BIT=0x00000100;
			context.STENCIL_BUFFER_BIT=0x00000400;
			context.COLOR_BUFFER_BIT=0x00004000;
			context.POINTS=0x0000;
			context.LINES=0x0001;
			context.LINE_LOOP=0x0002;
			context.LINE_STRIP=0x0003;
			context.TRIANGLES=0x0004;
			context.TRIANGLE_STRIP=0x0005;
			context.TRIANGLE_FAN=0x0006;
			context.ZERO=0;
			context.ONE=1;
			context.SRC_COLOR=0x0300;
			context.ONE_MINUS_SRC_COLOR=0x0301;
			context.SRC_ALPHA=0x0302;
			context.ONE_MINUS_SRC_ALPHA=0x0303;
			context.DST_ALPHA=0x0304;
			context.ONE_MINUS_DST_ALPHA=0x0305;
			context.DST_COLOR=0x0306;
			context.ONE_MINUS_DST_COLOR=0x0307;
			context.SRC_ALPHA_SATURATE=0x0308;
			context.FUNC_ADD=0x8006;
			context.BLEND_EQUATION=0x8009;
			context.BLEND_EQUATION_RGB=0x8009;
			context.BLEND_EQUATION_ALPHA=0x883D;
			context.FUNC_SUBTRACT=0x800A;
			context.FUNC_REVERSE_SUBTRACT=0x800B;
			context.BLEND_DST_RGB=0x80C8;
			context.BLEND_SRC_RGB=0x80C9;
			context.BLEND_DST_ALPHA=0x80CA;
			context.BLEND_SRC_ALPHA=0x80CB;
			context.CONSTANT_COLOR=0x8001;
			context.ONE_MINUS_CONSTANT_COLOR=0x8002;
			context.CONSTANT_ALPHA=0x8003;
			context.ONE_MINUS_CONSTANT_ALPHA=0x8004;
			context.BLEND_COLOR=0x8005;
			context.ARRAY_BUFFER=0x8892;
			context.ELEMENT_ARRAY_BUFFER=0x8893;
			context.ARRAY_BUFFER_BINDING=0x8894;
			context.ELEMENT_ARRAY_BUFFER_BINDING=0x8895;
			context.STREAM_DRAW=0x88E0;
			context.STATIC_DRAW=0x88E4;
			context.DYNAMIC_DRAW=0x88E8;
			context.BUFFER_SIZE=0x8764;
			context.BUFFER_USAGE=0x8765;
			context.CURRENT_VERTEX_ATTRIB=0x8626;
			context.FRONT=0x0404;
			context.BACK=0x0405;
			context.FRONT_AND_BACK=0x0408;
			context.CULL_FACE=0x0B44;
			context.BLEND=0x0BE2;
			context.DITHER=0x0BD0;
			context.STENCIL_TEST=0x0B90;
			context.DEPTH_TEST=0x0B71;
			context.SCISSOR_TEST=0x0C11;
			context.POLYGON_OFFSET_FILL=0x8037;
			context.SAMPLE_ALPHA_TO_COVERAGE=0x809E;
			context.SAMPLE_COVERAGE=0x80A0;
			context.INVALID_ENUM=0x0500;
			context.INVALID_VALUE=0x0501;
			context.INVALID_OPERATION=0x0502;
			context.OUT_OF_MEMORY=0x0505;
			context.CW=0x0900;
			context.CCW=0x0901;
			context.LINE_WIDTH=0x0B21;
			context.ALIASED_POINT_SIZE_RANGE=0x846D;
			context.ALIASED_LINE_WIDTH_RANGE=0x846E;
			context.CULL_FACE_MODE=0x0B45;
			context.FRONT_FACE=0x0B46;
			context.DEPTH_RANGE=0x0B70;
			context.DEPTH_WRITEMASK=0x0B72;
			context.DEPTH_CLEAR_VALUE=0x0B73;
			context.DEPTH_FUNC=0x0B74;
			context.STENCIL_CLEAR_VALUE=0x0B91;
			context.STENCIL_FUNC=0x0B92;
			context.STENCIL_FAIL=0x0B94;
			context.STENCIL_PASS_DEPTH_FAIL=0x0B95;
			context.STENCIL_PASS_DEPTH_PASS=0x0B96;
			context.STENCIL_REF=0x0B97;
			context.STENCIL_VALUE_MASK=0x0B93;
			context.STENCIL_WRITEMASK=0x0B98;
			context.STENCIL_BACK_FUNC=0x8800;
			context.STENCIL_BACK_FAIL=0x8801;
			context.STENCIL_BACK_PASS_DEPTH_FAIL=0x8802;
			context.STENCIL_BACK_PASS_DEPTH_PASS=0x8803;
			context.STENCIL_BACK_REF=0x8CA3;
			context.STENCIL_BACK_VALUE_MASK=0x8CA4;
			context.STENCIL_BACK_WRITEMASK=0x8CA5;
			context.VIEWPORT=0x0BA2;
			context.SCISSOR_BOX=0x0C10;
			context.COLOR_CLEAR_VALUE=0x0C22;
			context.COLOR_WRITEMASK=0x0C23;
			context.UNPACK_ALIGNMENT=0x0CF5;
			context.PACK_ALIGNMENT=0x0D05;
			context.MAX_TEXTURE_SIZE=0x0D33;
			context.MAX_VIEWPORT_DIMS=0x0D3A;
			context.SUBPIXEL_BITS=0x0D50;
			context.RED_BITS=0x0D52;
			context.GREEN_BITS=0x0D53;
			context.BLUE_BITS=0x0D54;
			context.ALPHA_BITS=0x0D55;
			context.DEPTH_BITS=0x0D56;
			context.STENCIL_BITS=0x0D57;
			context.POLYGON_OFFSET_UNITS=0x2A00;
			context.POLYGON_OFFSET_FACTOR=0x8038;
			context.TEXTURE_BINDING_2D=0x8069;
			context.SAMPLE_BUFFERS=0x80A8;
			context.SAMPLES=0x80A9;
			context.SAMPLE_COVERAGE_VALUE=0x80AA;
			context.SAMPLE_COVERAGE_INVERT=0x80AB;
			context.COMPRESSED_TEXTURE_FORMATS=0x86A3;
			context.DONT_CARE=0x1100;
			context.FASTEST=0x1101;
			context.NICEST=0x1102;
			context.GENERATE_MIPMAP_HINT=0x8192;
			context.BYTE=0x1400;
			context.UNSIGNED_BYTE=0x1401;
			context.SHORT=0x1402;
			context.UNSIGNED_SHORT=0x1403;
			context.INT=0x1404;
			context.UNSIGNED_INT=0x1405;
			context.FLOAT=0x1406;
			context.DEPTH_COMPONENT=0x1902;
			context.ALPHA=0x1906;
			context.RGB=0x1907;
			context.RGBA=0x1908;
			context.LUMINANCE=0x1909;
			context.LUMINANCE_ALPHA=0x190A;
			context.UNSIGNED_SHORT_4_4_4_4=0x8033;
			context.UNSIGNED_SHORT_5_5_5_1=0x8034;
			context.UNSIGNED_SHORT_5_6_5=0x8363;
			context.FRAGMENT_SHADER=0x8B30;
			context.VERTEX_SHADER=0x8B31;
			context.MAX_VERTEX_ATTRIBS=0x8869;
			context.MAX_VERTEX_UNIFORM_VECTORS=0x8DFB;
			context.MAX_VARYING_VECTORS=0x8DFC;
			context.MAX_COMBINED_TEXTURE_IMAGE_UNITS=0x8B4D;
			context.MAX_VERTEX_TEXTURE_IMAGE_UNITS=0x8B4C;
			context.MAX_TEXTURE_IMAGE_UNITS=0x8872;
			context.MAX_FRAGMENT_UNIFORM_VECTORS=0x8DFD;
			context.SHADER_TYPE=0x8B4F;
			context.DELETE_STATUS=0x8B80;
			context.LINK_STATUS=0x8B82;
			context.VALIDATE_STATUS=0x8B83;
			context.ATTACHED_SHADERS=0x8B85;
			context.ACTIVE_UNIFORMS=0x8B86;
			context.ACTIVE_ATTRIBUTES=0x8B89;
			context.SHADING_LANGUAGE_VERSION=0x8B8C;
			context.CURRENT_PROGRAM=0x8B8D;
			context.NEVER=0x0200;
			context.LESS=0x0201;
			context.EQUAL=0x0202;
			context.LEQUAL=0x0203;
			context.GREATER=0x0204;
			context.NOTEQUAL=0x0205;
			context.GEQUAL=0x0206;
			context.ALWAYS=0x0207;
			context.KEEP=0x1E00;
			context.REPLACE=0x1E01;
			context.INCR=0x1E02;
			context.DECR=0x1E03;
			context.INVERT=0x150A;
			context.INCR_WRAP=0x8507;
			context.DECR_WRAP=0x8508;
			context.VENDOR=0x1F00;
			context.RENDERER=0x1F01;
			context.VERSION=0x1F02;
			context.NEAREST=0x2600;
			context.LINEAR=0x2601;
			context.NEAREST_MIPMAP_NEAREST=0x2700;
			context.LINEAR_MIPMAP_NEAREST=0x2701;
			context.NEAREST_MIPMAP_LINEAR=0x2702;
			context.LINEAR_MIPMAP_LINEAR=0x2703;
			context.TEXTURE_MAG_FILTER=0x2800;
			context.TEXTURE_MIN_FILTER=0x2801;
			context.TEXTURE_WRAP_S=0x2802;
			context.TEXTURE_WRAP_T=0x2803;
			context.TEXTURE_2D=0x0DE1;
			context.TEXTURE=0x1702;
			context.TEXTURE_CUBE_MAP=0x8513;
			context.TEXTURE_BINDING_CUBE_MAP=0x8514;
			context.TEXTURE_CUBE_MAP_POSITIVE_X=0x8515;
			context.TEXTURE_CUBE_MAP_NEGATIVE_X=0x8516;
			context.TEXTURE_CUBE_MAP_POSITIVE_Y=0x8517;
			context.TEXTURE_CUBE_MAP_NEGATIVE_Y=0x8518;
			context.TEXTURE_CUBE_MAP_POSITIVE_Z=0x8519;
			context.TEXTURE_CUBE_MAP_NEGATIVE_Z=0x851A;
			context.MAX_CUBE_MAP_TEXTURE_SIZE=0x851C;
			context.TEXTURE0=0x84C0;
			context.TEXTURE1=0x84C1;
			context.TEXTURE2=0x84C2;
			context.TEXTURE3=0x84C3;
			context.TEXTURE4=0x84C4;
			context.TEXTURE5=0x84C5;
			context.TEXTURE6=0x84C6;
			context.TEXTURE7=0x84C7;
			context.TEXTURE8=0x84C8;
			context.TEXTURE9=0x84C9;
			context.TEXTURE10=0x84CA;
			context.TEXTURE11=0x84CB;
			context.TEXTURE12=0x84CC;
			context.TEXTURE13=0x84CD;
			context.TEXTURE14=0x84CE;
			context.TEXTURE15=0x84CF;
			context.TEXTURE16=0x84D0;
			context.TEXTURE17=0x84D1;
			context.TEXTURE18=0x84D2;
			context.TEXTURE19=0x84D3;
			context.TEXTURE20=0x84D4;
			context.TEXTURE21=0x84D5;
			context.TEXTURE22=0x84D6;
			context.TEXTURE23=0x84D7;
			context.TEXTURE24=0x84D8;
			context.TEXTURE25=0x84D9;
			context.TEXTURE26=0x84DA;
			context.TEXTURE27=0x84DB;
			context.TEXTURE28=0x84DC;
			context.TEXTURE29=0x84DD;
			context.TEXTURE30=0x84DE;
			context.TEXTURE31=0x84DF;
			context.ACTIVE_TEXTURE=0x84E0;
			context.REPEAT=0x2901;
			context.CLAMP_TO_EDGE=0x812F;
			context.MIRRORED_REPEAT=0x8370;
			context.FLOAT_VEC2=0x8B50;
			context.FLOAT_VEC3=0x8B51;
			context.FLOAT_VEC4=0x8B52;
			context.INT_VEC2=0x8B53;
			context.INT_VEC3=0x8B54;
			context.INT_VEC4=0x8B55;
			context.BOOL=0x8B56;
			context.BOOL_VEC2=0x8B57;
			context.BOOL_VEC3=0x8B58;
			context.BOOL_VEC4=0x8B59;
			context.FLOAT_MAT2=0x8B5A;
			context.FLOAT_MAT3=0x8B5B;
			context.FLOAT_MAT4=0x8B5C;
			context.SAMPLER_2D=0x8B5E;
			context.SAMPLER_CUBE=0x8B60;
			context.VERTEX_ATTRIB_ARRAY_ENABLED=0x8622;
			context.VERTEX_ATTRIB_ARRAY_SIZE=0x8623;
			context.VERTEX_ATTRIB_ARRAY_STRIDE=0x8624;
			context.VERTEX_ATTRIB_ARRAY_TYPE=0x8625;
			context.VERTEX_ATTRIB_ARRAY_NORMALIZED=0x886A;
			context.VERTEX_ATTRIB_ARRAY_POINTER=0x8645;
			context.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=0x889F;
			context.IMPLEMENTATION_COLOR_READ_TYPE=0x8B9A;
			context.IMPLEMENTATION_COLOR_READ_FORMAT=0x8B9B;
			context.COMPILE_STATUS=0x8B81;
			context.LOW_FLOAT=0x8DF0;
			context.MEDIUM_FLOAT=0x8DF1;
			context.HIGH_FLOAT=0x8DF2;
			context.LOW_INT=0x8DF3;
			context.MEDIUM_INT=0x8DF4;
			context.HIGH_INT=0x8DF5;
			context.FRAMEBUFFER=0x8D40;
			context.RENDERBUFFER=0x8D41;
			context.RGBA4=0x8056;
			context.RGB5_A1=0x8057;
			context.RGB565=0x8D62;
			context.DEPTH_COMPONENT16=0x81A5;
			context.STENCIL_INDEX=0x1901;
			context.STENCIL_INDEX8=0x8D48;
			context.DEPTH_STENCIL=0x84F9;
			context.RENDERBUFFER_WIDTH=0x8D42;
			context.RENDERBUFFER_HEIGHT=0x8D43;
			context.RENDERBUFFER_INTERNAL_FORMAT=0x8D44;
			context.RENDERBUFFER_RED_SIZE=0x8D50;
			context.RENDERBUFFER_GREEN_SIZE=0x8D51;
			context.RENDERBUFFER_BLUE_SIZE=0x8D52;
			context.RENDERBUFFER_ALPHA_SIZE=0x8D53;
			context.RENDERBUFFER_DEPTH_SIZE=0x8D54;
			context.RENDERBUFFER_STENCIL_SIZE=0x8D55;
			context.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=0x8CD0;
			context.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=0x8CD1;
			context.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=0x8CD2;
			context.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=0x8CD3;
			context.COLOR_ATTACHMENT0=0x8CE0;
			context.DEPTH_ATTACHMENT=0x8D00;
			context.STENCIL_ATTACHMENT=0x8D20;
			context.DEPTH_STENCIL_ATTACHMENT=0x821A;
			context.NONE=0;
			context.FRAMEBUFFER_COMPLETE=0x8CD5;
			context.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=0x8CD6;
			context.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=0x8CD7;
			context.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=0x8CD9;
			context.FRAMEBUFFER_UNSUPPORTED=0x8CDD;
			context.FRAMEBUFFER_BINDING=0x8CA6;
			context.RENDERBUFFER_BINDING=0x8CA7;
			context.MAX_RENDERBUFFER_SIZE=0x84E8;
			context.INVALID_FRAMEBUFFER_OPERATION=0x0506;
			context.UNPACK_FLIP_Y_WEBGL=0x9240;
			context.UNPACK_PREMULTIPLY_ALPHA_WEBGL=0x9241;
			context.CONTEXT_LOST_WEBGL=0x9242;
			context.UNPACK_COLORSPACE_CONVERSION_WEBGL=0x9243;
			context.BROWSER_DEFAULT_WEBGL=0x9244;
		}

		__proto.initInternalObjects=function(){
			this.m_internal_rttFramebuffer=this.webglContext.createFramebuffer();
			this.m_internal_defautFBO=this.webglContext.getParameter(this.webglContext.FRAMEBUFFER_BINDING);
			this.webglContext.bindFramebuffer(this.webglContext.FRAMEBUFFER,this.m_internal_defautFBO);
		}

		__proto.clear=function(red,green,blue,alpha,depth,stencil,mask){
			(red===void 0)&& (red=0);
			(green===void 0)&& (green=0);
			(blue===void 0)&& (blue=0);
			(alpha===void 0)&& (alpha=1);
			(depth===void 0)&& (depth=1);
			(stencil===void 0)&& (stencil=0);
			(mask===void 0)&& (mask=4294967295);
			this.webglContext.clearColor(red,green,blue,alpha);
			this.webglContext.clear(this.webglContext.COLOR_BUFFER_BIT | this.webglContext.DEPTH_BUFFER_BIT);
		}

		__proto.setMainViewPortPos=function(_x,_y){
			this.m_originViewport.x=_x;
			this.m_originViewport.y=_y;
		}

		__proto.configureBackBuffer=function(width,height,antiAlias,enableDepthAndStencil,wantsBestResolution,wantsBestResolutionOnBrowserZoom){
			(enableDepthAndStencil===void 0)&& (enableDepthAndStencil=true);
			(wantsBestResolution===void 0)&& (wantsBestResolution=false);
			(wantsBestResolutionOnBrowserZoom===void 0)&& (wantsBestResolutionOnBrowserZoom=false);
			this.backBufferWidth=width;
			this.backBufferHeight=height;
			this.m_originViewport.x=0;
			this.m_originViewport.y=0;
			this.m_originViewport.width=this.backBufferWidth;
			this.m_originViewport.height=this.backBufferHeight;
			this.m_currentViewport.copyFrom(this.m_originViewport);
			this.mAntiAlias=antiAlias;
			this.mEnableDepthAndStencil=enableDepthAndStencil;
			this.mWantsBestResolution=wantsBestResolution;
			this.mWantsBestResolutionOnBrowserZoom=wantsBestResolutionOnBrowserZoom;
			this.webglContext.viewport(0,0,width,height);
			if (enableDepthAndStencil==true){
				this.webglContext.enable(this.webglContext.DEPTH_TEST);
				this.webglContext.depthFunc(this.webglContext.LEQUAL);
				this.webglContext.depthMask(true);
				this.webglContext.enable(this.webglContext.STENCIL_TEST);
				this.webglContext.stencilFunc(this.webglContext.ALWAYS,1,1);
				this.webglContext.stencilOp(this.webglContext.KEEP,this.webglContext.KEEP,this.webglContext.REPLACE);
			}
			else{
				this.webglContext.depthMask(false);
				this.webglContext.disable(this.webglContext.DEPTH_TEST);
				this.webglContext.disable(this.webglContext.STENCIL_TEST);
			}
		}

		__proto.createCubeTexture=function(size,format,optimizeForRenderToTexture){
			return null;
		}

		__proto.createIndexBuffer=function(numIndices,bufferUsage){
			(bufferUsage===void 0)&& (bufferUsage=/*iflash.display3D.Context3DBufferUsage.STATIC_DRAW*/"staticDraw");
			var indexBuffer=new IndexBuffer3D(numIndices,bufferUsage);
			return indexBuffer;
		}

		__proto.createProgram=function(){
			var program3D=new Program3D();
			return program3D;
		}

		__proto.createTexture=function(width,height,format,optimizeForRenderToTexture,streamingLevels){
			(streamingLevels===void 0)&& (streamingLevels=0);
			var texObj=new Texture(width,height,format,optimizeForRenderToTexture,streamingLevels);
			return texObj;
		}

		__proto.createVertexBuffer=function(numVertices,data32PerVertex,bufferUsage){
			(bufferUsage===void 0)&& (bufferUsage=/*iflash.display3D.Context3DBufferUsage.STATIC_DRAW*/"staticDraw");
			return new VertexBuffer3D(numVertices,data32PerVertex,bufferUsage);;
		}

		__proto.dispose=function(){
			console.log("注意！！！！  这个地方之所以不抛出异常是因为会经常调用到，影响调试");
		}

		__proto.drawToBitmapData=function(destination){
			console.log("drawToBitmapData");
		}

		__proto.drawTriangles=function(indexBuffer,firstIndex,numTriangles){
			(firstIndex===void 0)&& (firstIndex=0);
			(numTriangles===void 0)&& (numTriangles=-1);
			var numIndices=0;
			if(numTriangles==-1){
				numIndices=indexBuffer.m_numIndexes-firstIndex;
			}
			else{
				numIndices=((firstIndex+numTriangles *3)<=indexBuffer.m_numIndexes)? (numTriangles *3):(indexBuffer.m_numIndexes-firstIndex);
			}
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,indexBuffer.m_ibo);
			if (!this.bNullTex)
				this.webglContext.drawElements(this.webglContext.TRIANGLES,numIndices,WebGLAttrib.getConfig().drawElementSize,0);
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,null);
		}

		__proto.present=function(){
			this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,null);
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,null);
			this.webglContext.bindBuffer(this.webglContext.ELEMENT_ARRAY_BUFFER,null);
			this.webglContext.bindFramebuffer(this.webglContext.FRAMEBUFFER,this.m_internal_defautFBO);
			this.webglContext.flush();
			this.m_currentProgram=null;
		}

		__proto.setBlendFactors=function(sourceFactor,destinationFactor){
			this.webglContext.blendFunc(this.BlendFactor[Context3DBlendFactor[sourceFactor]],this.BlendFactor[Context3DBlendFactor[destinationFactor]]);
		}

		__proto.setColorMask=function(red,green,blue,alpha){
			this.webglContext.colorMask(red,green,blue,alpha);
		}

		__proto.setCulling=function(triangleFaceToCull){
			if(triangleFaceToCull==/*iflash.display3D.Context3DTriangleFace.NONE*/"none"){
				this.webglContext.disable(this.webglContext.CULL_FACE);
			}
			else{
				this.webglContext.enable(this.webglContext.CULL_FACE);
				this.webglContext.cullFace(this.CullMode[Context3DTriangleFace[triangleFaceToCull]]);
			}
		}

		__proto.setDepthTest=function(depthMask,passCompareMode){
			this.webglContext.depthMask(depthMask);
			this.webglContext.depthFunc(this.CompareMode[Context3DCompareMode[passCompareMode]]);
		}

		__proto.setProgram=function(program){
			if(program==null){
				return;
			}
			this.webglContext.useProgram(program.m_programID);
			this.m_currentProgram=program;
		}

		__proto.setProgramConstantsFromByteArray=function(programType,firstRegister,numRegisters,data,byteArrayOffset){
			console.log("Not Impl11111111111");
		}

		__proto.setProgramConstantsFromMatrix=function(programType,firstRegister,matrix,transposedMatrix){
			(transposedMatrix===void 0)&& (transposedMatrix=false);
			var f32Arr;
			if(!transposedMatrix){
				var matrixClone;
				matrixClone=matrix.clone();
				matrixClone.transpose();
				f32Arr=/*__JS__ */new Float32Array(matrixClone.rawData)
			}
			else{
				f32Arr=/*__JS__ */new Float32Array(matrix.rawData)
			}
			this.webglContext.uniformMatrix4fv(firstRegister,false,f32Arr);
		}

		__proto.setProgramConstantsFromVector=function(programType,firstRegister,data,numRegisters){
			(numRegisters===void 0)&& (numRegisters=-1);
			if(data.length==0 || this.m_currentProgram==null){
				return;
			};
			var f32Arr=/*__JS__ */new Float32Array(data)
			if(data.length !=16){
				this.webglContext.uniform4fv(firstRegister,f32Arr);
				}else {
				this.webglContext.uniformMatrix4fv(firstRegister,false,f32Arr);
			}
		}

		__proto.setRenderToBackBuffer=function(){
			this.m_currentViewport.copyFrom(this.m_originViewport);
			this.webglContext.viewport(this.m_currentViewport.x,this.m_currentViewport.y,this.m_currentViewport.width,this.m_currentViewport.height);
			this.webglContext.bindFramebuffer(this.webglContext.FRAMEBUFFER,this.m_internal_defautFBO);
			this.m_bInMainRender=true;
		}

		__proto.setRenderToTexture=function(texture,enableDepthAndStencil,antiAlias,surfaceSelector){
			(enableDepthAndStencil===void 0)&& (enableDepthAndStencil=false);
			(antiAlias===void 0)&& (antiAlias=0);
			(surfaceSelector===void 0)&& (surfaceSelector=0);
			if(texture==null){
				this.setRenderToBackBuffer();
			}
			else{
				this.m_currentViewport.x=0;
				this.m_currentViewport.y=0;
				this.m_currentViewport.width=texture.m_width;
				this.m_currentViewport.height=texture.m_height;
				this.webglContext.viewport(0,0,this.m_currentViewport.width,this.m_currentViewport.height);
				this.webglContext.bindFramebuffer(this.webglContext.FRAMEBUFFER,this.m_internal_rttFramebuffer);
				this.webglContext.framebufferTexture2D(this.webglContext.FRAMEBUFFER,this.webglContext.COLOR_ATTACHMENT0,this.webglContext.TEXTURE_2D,texture.m_texID,0);
				var status=this.webglContext.checkFramebufferStatus(this.webglContext.FRAMEBUFFER);
				if (status !=this.webglContext.FRAMEBUFFER_COMPLETE){
					this.setRenderToBackBuffer();
					return;
				}
				this.m_bInMainRender=false;
				this.webglContext.clearColor(0,0,0,0);
				if(enableDepthAndStencil)
					this.webglContext.clear(this.webglContext.COLOR_BUFFER_BIT | this.webglContext.DEPTH_BUFFER_BIT);
				else {
					this.webglContext.disable(this.webglContext.DEPTH_TEST);
					this.webglContext.clear(this.webglContext.COLOR_BUFFER_BIT);
				}
			}
		}

		__proto.setScissorRectangle=function(rectangle){
			if (rectangle==null){
				this.webglContext.disable(this.webglContext.SCISSOR_TEST);
				}else {
				if(this.m_bInMainRender){
					rectangle.x+=this.m_originViewport.x;
					rectangle.y-=this.m_originViewport.y;
				};
				var t_yStart;
				if (this.m_currentViewport.equals(this.m_originViewport)==false){
					t_yStart=rectangle.y;
					}else {
					t_yStart=this.m_currentViewport.height-(rectangle.y+rectangle.height);
					if(t_yStart < 0)t_yStart=0;
				}
				this.webglContext.scissor(rectangle.x,t_yStart,rectangle.width,rectangle.height);
				this.webglContext.enable(this.webglContext.SCISSOR_TEST);
			}
		}

		__proto.setStencilActions=function(triangleFace,compareMode,actionOnBothPass,actionOnDepthFail,actionOnDepthPassStencilFail){
			(triangleFace===void 0)&& (triangleFace="frontAndBack");
			(compareMode===void 0)&& (compareMode="always");
			(actionOnBothPass===void 0)&& (actionOnBothPass="keep");
			(actionOnDepthFail===void 0)&& (actionOnDepthFail="keep");
			(actionOnDepthPassStencilFail===void 0)&& (actionOnDepthPassStencilFail="keep");
			if(this.m_vecStencilOp==null){
				this.m_vecStencilOp=[this.webglContext.DECR,this.webglContext.DECR_WRAP,this.webglContext.INCR,this.webglContext.INCR_WRAP,
				this.webglContext.INVERT,this.webglContext.KEEP,this.webglContext.KEEP,this.webglContext.ZERO];
			};
			var t_iActionBothPass=this.m_vecStencilOp[Context3DStencilAction[actionOnBothPass]];
			var t_iActionOnDepthFail=this.m_vecStencilOp[Context3DStencilAction[actionOnDepthFail]];
			var t_iActionOnDepthPassStencilFail=this.m_vecStencilOp[Context3DStencilAction[actionOnDepthPassStencilFail]];
			this.webglContext.stencilOp(t_iActionOnDepthPassStencilFail,t_iActionOnDepthFail,t_iActionBothPass);
			if(this.m_vecStencilFunc==null){
				this.m_vecStencilFunc=[this.webglContext.ALWAYS,this.webglContext.EQUAL,this.webglContext.GREATER,
				this.webglContext.GEQUAL,this.webglContext.LESS,this.webglContext.LEQUAL,this.webglContext.NEVER,this.webglContext.NOTEQUAL];
			};
			var t_vecStencilFunc=this.m_vecStencilFunc[Context3DCompareMode[compareMode]];
			this.webglContext.stencilFunc(t_vecStencilFunc,this.m_stencilRefVal,this.m_stencilWriteMask);
		}

		__proto.setStencilReferenceValue=function(referenceValue,readMask,writeMask){
			(readMask===void 0)&& (readMask=255);
			(writeMask===void 0)&& (writeMask=255);
			this.m_stencilRefVal=referenceValue;
			this.m_stencilWriteMask=writeMask;
			this.webglContext.stencilMask(writeMask);
		}

		__proto.onConchRestore=function(){
			var sz=TextureBase.m_szRestoreTex.length;
			if ((!Laya.CONCHVER)||(sz==0))return;
			var t_bReset=false;
			for (var t_i=0;t_i < sz;t_i++){
				var t_tex=TextureBase.m_szRestoreTex[t_i];
				if (t_tex.bLostState){
					if(t_tex.restoreFunc !=null){
						t_tex.restoreFunc();
						}else {
						this.setRenderToTexture(t_tex);
						this.clear(0,0,0,0);
					}
					t_bReset=true;
					t_tex.bLostState=false;
				}
			}
			TextureBase.m_szRestoreTex.splice(0,sz);
			if (t_bReset)this.setRenderToBackBuffer();
		}

		__proto.setTextureAt=function(sampler,texture){
			if(texture==null){
				this.webglContext.activeTexture(this.webglContext["TEXTURE"+sampler]);
				this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,null);
				this.bNullTex=false;
			}
			else if (texture.m_texID==null){
				this.webglContext.activeTexture(this.webglContext["TEXTURE"+sampler]);
				this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,null);
				this.bNullTex=true;
				}else{
				this.bNullTex=false;
				this.webglContext.activeTexture(this.webglContext["TEXTURE"+sampler]);
				this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,texture.m_texID);
				if (Laya.CONCHVER && texture.bTargetS){
					this.webglContext.setTextureInvalidFunc(iflash.method.bind(texture,texture.informLostState));
					texture.bTargetS=false;
				}
			}
		}

		__proto.setVertexBufferAt=function(index,buffer,bufferOffset,format){
			(bufferOffset===void 0)&& (bufferOffset=0);
			(format===void 0)&& (format="float4");
			if(buffer && buffer.m_vbo){
				var components=this.BufferFormat[Context3DVertexBufferFormat[format]];
				this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,buffer.m_vbo);
				this.webglContext.enableVertexAttribArray(index);
				var m=/*__JS__ */Float32Array.BYTES_PER_ELEMENT;
				this.webglContext.vertexAttribPointer(index,components,this.webglContext.FLOAT,false,buffer.m_data32PerVertex *m,bufferOffset *m);
			}
			this.webglContext.bindBuffer(this.webglContext.ARRAY_BUFFER,null);
			if(buffer==null){
				this.webglContext.disableVertexAttribArray(index);
			}
		}

		__getset(0,__proto,'driverInfo',function(){
			if(Laya.CONCHVER){
				return "LayaBox.Player WebGL(OpenGL ES)"
			}
			else{
				return "HTML5 Canvas.WebGL"
			}
		});

		return Context3D;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawbitmapdata.as
	//class iflash.display.plug.DrawBitmapData extends iflash.display.plug.DisplayUnit
	var DrawBitmapData=(function(_super){
		function DrawBitmapData(){
			DrawBitmapData.__super.call(this);
		}

		__class(DrawBitmapData,'iflash.display.plug.DrawBitmapData',false,_super);
		var __proto=DrawBitmapData.prototype;
		__proto.clone=function(node){
			return new DrawBitmapData();
		}

		__proto.paint=function(context,x,y,node,w,h){
			var bitmapdata=node.bitmapData;
			bitmapdata && bitmapdata.paint && bitmapdata.paint.call(bitmapdata,context,x,y,w,h);
			if (this.next)this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE_DRAW_BIMAP_DATA*/0x1000;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE_DRAW_BIMAP_DATA*/0x1000;
		});

		DrawBitmapData._DEFAULT_=new DrawBitmapData();
		DrawBitmapData._cache_=[];
		return DrawBitmapData;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawblend.as
	//class iflash.display.plug.DrawBlend extends iflash.display.plug.DisplayUnit
	var DrawBlend=(function(_super){
		function DrawBlend(){
			DrawBlend.__super.call(this);
		}

		__class(DrawBlend,'iflash.display.plug.DrawBlend',false,_super);
		var __proto=DrawBlend.prototype;
		__proto.clone=function(node){
			return new DrawBlend();
		}

		__proto.paint=function(context,x,y,node,w,h){
			var value=node._blend_;
			if(value){
				context.save();
				context.globalCompositeOperation=value;
				this.next && this.next.paint(context,x,y,node,w,h);
				context.restore();
			}
			else{
				this.next && this.next.paint(context,x,y,node,w,h);
			}
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_TANSFORM*/0x1;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_TANSFORM*/0x1;
		});

		DrawBlend.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawBlend._DEFAULT_);
		}

		DrawBlend._DEFAULT_=new DrawBlend();
		return DrawBlend;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawchilds.as
	//class iflash.display.plug.DrawChilds extends iflash.display.plug.DisplayUnit
	var DrawChilds=(function(_super){
		function DrawChilds(node){
			DrawChilds.__super.call(this);
		}

		__class(DrawChilds,'iflash.display.plug.DrawChilds',false,_super);
		var __proto=DrawChilds.prototype;
		__proto.clone=function(node){
			return new DrawChilds(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			if(node._type_& /*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10){
				node.sortChildsByZIndex();
			};
			var sz=0,i=0;
			var c,childs;
			if ((sz=(childs=node._childs_).length)> 0){
				for (i=0;i < sz;i++){
					if ((c=childs[i])==null || !(c._type_& /*iflash.display.DisplayObject.TYPE_IS_VISIBLE*/0x400)||!c.alpha)continue ;
					node.updateScaleData(i);
					c._lyPaint_(context,x,y);
				}
			}
			this.next && this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		DrawChilds.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawChilds._DEFAULT_);
		}

		DrawChilds._DEFAULT_=new DrawChilds(null);
		return DrawChilds;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawclip.as
	//class iflash.display.plug.DrawClip extends iflash.display.plug.DisplayUnit
	var DrawClip=(function(_super){
		function DrawClip(node){
			DrawClip.__super.call(this);
		}

		__class(DrawClip,'iflash.display.plug.DrawClip',false,_super);
		var __proto=DrawClip.prototype;
		__proto.clone=function(node){
			return new DrawClip(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			if (!node._private_._scrollRect_){
				this.next && this.next.paint(context,x,y,node,w,h);
				return;
			};
			var rect=node._private_._scrollRect_;
			context.save();
			context.beginPath();
			context.rect(x,y,rect.width,rect.height);
			context.clip();
			this.next && this.next.paint(context,x-rect.x,y-rect.y,node,w,h);
			context.restore();
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CLIP*/0x100;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CLIP*/0x100;
		});

		DrawClip.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawClip._DEFAULT_);
		}

		DrawClip._DEFAULT_=new DrawClip(null);
		return DrawClip;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawgraphics.as
	//class iflash.display.plug.DrawGraphics extends iflash.display.plug.DisplayUnit
	var DrawGraphics=(function(_super){
		function DrawGraphics(){
			DrawGraphics.__super.call(this);
		}

		__class(DrawGraphics,'iflash.display.plug.DrawGraphics',false,_super);
		var __proto=DrawGraphics.prototype;
		__proto.clone=function(node){
			var temp=new DrawGraphics();
			return temp;
		}

		__proto.paint=function(context,x,y,node,w,h){
			var grapics=node["graphics"];
			if(grapics.isReady()){
				grapics._canvas_.paint(context,x,y,node._owidth_,node._oheight_);
			}
			if (this.next)this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return 0x300;
		});

		__getset(0,__proto,'id',function(){
			return 0x300;
		});

		DrawGraphics.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawGraphics._DEFAULT_);
		}

		DrawGraphics._DEFAULT_=new DrawGraphics();
		return DrawGraphics;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawgridimageelement.as
	//class iflash.display.plug.DrawGridImageElement extends iflash.display.plug.DisplayUnit
	var DrawGridImageElement=(function(_super){
		function DrawGridImageElement(imgelement){
			DrawGridImageElement.__super.call(this);
		}

		__class(DrawGridImageElement,'iflash.display.plug.DrawGridImageElement',false,_super);
		var __proto=DrawGridImageElement.prototype;
		__proto.clone=function(node){
			return new DrawImageElement(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			var bitmapdata=node.miniBitmapData;
			bitmapdata && bitmapdata.paint && bitmapdata.paint.call(bitmapdata,context,x,y,w,h);
			++Laya.document.drawCount;
			this.next && this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		DrawGridImageElement.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawGridImageElement._DEFAULT_);
		}

		__static(DrawGridImageElement,
		['_DEFAULT_',function(){return this._DEFAULT_=new DrawImageElement(null);}
		]);
		return DrawGridImageElement;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawimageelement.as
	//class iflash.display.plug.DrawImageElement extends iflash.display.plug.DisplayUnit
	var DrawImageElement=(function(_super){
		function DrawImageElement(imgelement){
			DrawImageElement.__super.call(this);
		}

		__class(DrawImageElement,'iflash.display.plug.DrawImageElement',false,_super);
		var __proto=DrawImageElement.prototype;
		__proto.clone=function(node){
			return new DrawImageElement(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			w=w<0?0:w;
			h=h<0?0:h;
			var img=node._image_;
			if(node.scale9Data&&node.arrX){
				var arrX=node.arrX;
				var arrY=node.arrY;
				var arrW=node.arrW;
				var arrH=node.arrH;
				var oArrX=node.oArrX;
				var oArrY=node.oArrY;
				var oArrW=node.oArrW;
				var oArrH=node.oArrH;
				for(var i=0;i<3;i++){
					for(var j=0;j<3;j++){
						var u=oArrX[i][j],v=oArrY[i][j],www=oArrW[i][j],hhh=oArrH[i][j],
						xx=arrX[i][j],yy=arrY[i][j],ww=arrW[i][j],hh=arrH[i][j];
						if(www<=0 || hhh<=0 || ww<=0 || hh<=0)continue ;
						if(node.isTexture()){
							var uP=node.assetConfig.x;
							var vP=node.assetConfig.y;
							context.drawImage(node.texture,u+uP,v+vP,www,hhh,xx+x,yy+y,ww,hh);
						}
						else{
							if(img.isReady())context.drawImage(img,u,v,www,hhh,xx+x,yy+y,ww,hh);
						}
					}
				}
			}
			else{
				if(node.isTexture()){
					var tConfig=node.assetConfig;
					context.drawImage(node.texture,tConfig.x,tConfig.y,tConfig.width,tConfig.height,x,y,w,h);
				}
				else
				(img.isReady())&&context.drawImage(img,x,y,w,h);
			}
			++Laya.document.drawCount;
			this.next && this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		DrawImageElement.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawImageElement._DEFAULT_);
		}

		DrawImageElement._DEFAULT_=new DrawImageElement(null);
		return DrawImageElement;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawmask.as
	//class iflash.display.plug.DrawMask extends iflash.display.plug.DisplayUnit
	var DrawMask=(function(_super){
		function DrawMask(node){
			DrawMask.__super.call(this);
		}

		__class(DrawMask,'iflash.display.plug.DrawMask',false,_super);
		var __proto=DrawMask.prototype;
		__proto.clone=function(node){
			return new DrawMask(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			if (!node.parent||!node._mask_){
				this.next && this.next.paint(context,x,y,node,w,h);
				return;
			};
			var m=node._mask_;
			m.getBounds(Stage.stage,DrawMask.HELPER_RECTANGLET);
			node._getInvertedConcatenatedMatrix().transformBounds(DrawMask.HELPER_RECTANGLET);
			context.save();
			context.beginPath();
			context.rect(x+DrawMask.HELPER_RECTANGLET.x,y+DrawMask.HELPER_RECTANGLET.y,DrawMask.HELPER_RECTANGLET.width,DrawMask.HELPER_RECTANGLET.height);
			context.clip();
			this.next && this.next.paint(context,x,y,node,w,h);
			context.restore();
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_MASK*/0;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_MASK*/0;
		});

		DrawMask.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawMask._DEFAULT_);
		}

		DrawMask._DEFAULT_=new DrawMask(null);
		__static(DrawMask,
		['HELPER_RECTANGLET',function(){return this.HELPER_RECTANGLET=new Rectangle();}
		]);
		return DrawMask;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawmaskc.as
	//class iflash.display.plug.DrawMaskC extends iflash.display.plug.DisplayUnit
	var DrawMaskC=(function(_super){
		function DrawMaskC(node){
			DrawMaskC.__super.call(this);
		}

		__class(DrawMaskC,'iflash.display.plug.DrawMaskC',false,_super);
		var __proto=DrawMaskC.prototype;
		__proto.clone=function(node){
			return new DrawMaskC(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			if (!node.parent||!node._mask_){
				this.next && this.next.paint(context,x,y,node,w,h);
				return;
			};
			var m=node._mask_;
			m.getBounds(Stage.stage,DrawMaskC.HELPER_RECTANGLET);
			node._getInvertedConcatenatedMatrix().transformBounds(DrawMaskC.HELPER_RECTANGLET);
			context.save();
			context.beginPath();
			context.rect(x+DrawMaskC.HELPER_RECTANGLET.x,y+DrawMaskC.HELPER_RECTANGLET.y,DrawMaskC.HELPER_RECTANGLET.width,DrawMaskC.HELPER_RECTANGLET.height);
			context.clip();
			this.next && this.next.paint(context,x,y,node,w,h);
			context.restore();
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_MASKC*/0x200;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_MASKC*/0x200;
		});

		DrawMaskC.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawMaskC._DEFAULT_);
		}

		DrawMaskC._DEFAULT_=new DrawMaskC(null);
		__static(DrawMaskC,
		['HELPER_RECTANGLET',function(){return this.HELPER_RECTANGLET=new Rectangle();}
		]);
		return DrawMaskC;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawshape.as
	//class iflash.display.plug.DrawShape extends iflash.display.plug.DisplayUnit
	var DrawShape=(function(_super){
		function DrawShape(shape){
			DrawShape.__super.call(this);
		}

		__class(DrawShape,'iflash.display.plug.DrawShape',false,_super);
		var __proto=DrawShape.prototype;
		__proto.clone=function(node){
			return new DrawShape(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			var data=node._image_;
			data&&(data._lyPaint_(context,x,y));
			this.next && this.next.paint(context,x,y,node,w,h);
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		DrawShape.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawShape._DEFAULT_);
		}

		DrawShape._DEFAULT_=new DrawShape(null);
		return DrawShape;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawtext.as
	//class iflash.display.plug.DrawText extends iflash.display.plug.DisplayUnit
	var DrawText=(function(_super){
		function DrawText(){
			this.line=null;
			DrawText.__super.call(this);
		}

		__class(DrawText,'iflash.display.plug.DrawText',false,_super);
		var __proto=DrawText.prototype;
		__proto.clone=function(node){
			return new DrawText();
		}

		__proto.paint=function(context,x,y,tf,w,h){
			context.save();
			DrawText.drawBG(context,x,y,tf);
			tf.drawCaret && (DrawText.caret.x < 1+tf.viewport[0]+tf.viewport[2])&& this.drawCaret(context,tf,x,y);
			context.beginPath();
			context.rect(
			x+/*iflash.text.TextField.LEFT_PADDING*/2,
			y,
			tf.viewport[2]-/*iflash.text.TextField.LEFT_PADDING*/2-/*iflash.text.TextField.RIGHT_PADDING*/2,
			tf.viewport[3]);
			context.clip();
			DrawText.printText(tf,context,x,y);
			context.closePath();
			context.restore();
		}

		__proto.drawCaret=function(context,tf,x,y){
			DrawText.caret.count++;
			if (DrawText.caret.count < 25){
				context.strokeStyle=DrawText.caret.color;
				context.lineWidth=1;
				context.beginPath();
				context.moveTo(DrawText.caret.x+x-tf.viewport[0],DrawText.caret.y+y-tf.viewport[1]);
				context.lineTo(DrawText.caret.x+x-tf.viewport[0],DrawText.caret.y+DrawText.caret.height+y-tf.viewport[1]);
				context.stroke();
			}
			else if (DrawText.caret.count > 50)
			DrawText.caret.count=0;
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_CHILDS*/0x800;
		});

		DrawText.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawText._DEFAULT_);
		}

		DrawText.drawBG=function(context,x,y,tf){
			var w=tf.viewport[2],h=tf.viewport[3];
			if(tf.background){
				context.fillStyle=tf._backgroundColor;
				context.fillRect(x,y,w,h);
			}
			if(tf.border){
				context.strokeStyle=tf._borderColor;
				context.strokeRect(x,y,w,h);
			}
		}

		DrawText.printText=function(tf,context,x,y){
			if(!Driver.enableTouch()&& tf._inputting)
				return;
			var numNodes=tf.nodes.length;
			for (var j=0;j < numNodes;j++){
				var node=tf.nodes.getElem(j);
				context.font=node.font;
				context.textBaseline='top';
				context.fillStyle=node.fillStyle;
				if (node.letterSpacing){
					var len=node.text.length;
					for (var i=0;i < len;i++){
						tf.strokeColor && DrawText.strokeText(
						node.text.charAt(i),
						tf.strokeColor,tf.strokeThickness,context,
						x+node.lettersX[i]-tf.viewport[0],
						node.y+y-tf.viewport[1]);
						context.fillText(
						node.text.charAt(i),
						x+node.lettersX[i]-tf.viewport[0],
						node.y+y-tf.viewport[1]);
					}
				}
				else{
					tf.strokeColor && DrawText.strokeText(node.text,tf.strokeColor,tf.strokeThickness,context,
					node.x+x-tf.viewport[0],
					node.y+y-tf.viewport[1]);
					context.fillText(
					node.text,
					node.x+x-tf.viewport[0],
					node.y+y-tf.viewport[1]);
				}
				if (!Laya.CONCHVER && node.underlineWidth !=0)
					DrawText.drawUnderline(context,node,x,y-tf.viewport[1]);
			}
		}

		DrawText.strokeText=function(text,strokeColor,strokeThickness,context,x,y){
			context.strokeStyle=strokeColor;
			context.lineWidth=strokeThickness;
			context.lineCap="round";
			context.strokeText(text,x,y);
		}

		DrawText.drawUnderline=function(context,node,x,y){
			context.lineWidth=1;
			context.strokeStyle=node.fillStyle;
			context.beginPath();
			context.moveTo(x+node.x,y+node.underlineY);
			context.lineTo(x+node.underlineWidth+node.x,y+node.underlineY);
			context.closePath();
			context.stroke();
		}

		DrawText.drawBullet=function(context,line,tx){}
		DrawText._DEFAULT_=new DrawText();
		DrawText.caret={};
		return DrawText;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/drawtransform.as
	//class iflash.display.plug.DrawTransform extends iflash.display.plug.DisplayUnit
	var DrawTransform=(function(_super){
		function DrawTransform(node){
			DrawTransform.__super.call(this);
		}

		__class(DrawTransform,'iflash.display.plug.DrawTransform',false,_super);
		var __proto=DrawTransform.prototype;
		__proto.clone=function(node){
			return new DrawTransform(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			var m=node._transform_.matrix;
			if (!m || !m.isTransform()){
				this.next && this.next.paint(context,x,y,node,w,h);
				return;
			}
			context.save();
			x-=node._left_;
			y-=node._top_;
			if (x !=0 || y !=0){
				context.translate(x,y);
				context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
				context.translate(-x,-y);
			}
			else {
				context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
			}
			this.next && this.next.paint(context,x,y,node,w,h);
			context.restore();
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_TANSFORM*/0x1;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_TANSFORM*/0x1;
		});

		DrawTransform.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,DrawTransform._DEFAULT_);
		}

		DrawTransform._DEFAULT_=new DrawTransform(null);
		return DrawTransform;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/plug/usefilter.as
	//class iflash.display.plug.UseFilter extends iflash.display.plug.DisplayUnit
	var UseFilter=(function(_super){
		function UseFilter(node){
			UseFilter.__super.call(this);
		}

		__class(UseFilter,'iflash.display.plug.UseFilter',false,_super);
		var __proto=UseFilter.prototype;
		__proto.clone=function(node){
			return new UseFilter(node);
		}

		__proto.paint=function(context,x,y,node,w,h){
			var filter=node._Filters_,preFilter;
			var pre=NaN;
			if ((filter._alpha_ < 0.01 && filter.key==0)|| !this.next)return;
			if (filter._alpha_==1){
				this.next.paint(context,x,y,node,w,h);
				return;
			}
			pre=context.globalAlpha;
			context.globalAlpha=filter._alpha_;
			this.next.paint(context,x,y,node,w,h);
			context.globalAlpha=pre;
		}

		__getset(0,__proto,'place',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_FILTER*/0x2;
		});

		__getset(0,__proto,'id',function(){
			return /*iflash.display.DisplayObject.TYPE2_DRAW_FILTER*/0x2;
		});

		UseFilter.insertUnit=function(node){
			return DisplayUnit._insertUnit_(node,UseFilter._DEFAULT_);
		}

		UseFilter._DEFAULT_=new UseFilter(null);
		return UseFilter;
	})(DisplayUnit)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/textures/texturebase.as
	//class iflash.display3D.textures.TextureBase extends iflash.events.EventDispatcher
	var TextureBase=(function(_super){
		function TextureBase(){
			this.m_texID=null;
			this.m_width=0;
			this.m_height=0;
			this.m_format=null;
			this.m_internalFormat=0;
			this.bLostState=false;
			this.bTargetS=false;
			this.restoreFunc=null;
			TextureBase.__super.call(this);
			this.m_texID=null;
			this.m_width=0;
			this.m_height=0;
			this.bLostState=false;
			this.bTargetS=false;
			this.restoreFunc=null;
		}

		__class(TextureBase,'iflash.display3D.textures.TextureBase',false,_super);
		var __proto=TextureBase.prototype;
		__proto.informLostState=function(){
			this.bLostState=true;
			TextureBase.m_szRestoreTex.push(this);
		}

		__proto.dispose=function(){
			Laya.document.canvas3D.context3D.deleteTexture(this.m_texID);
			this.m_texID=null;
			this.m_width=0;
			this.m_height=0;
			if (Laya.CONCHVER && this.bLostState){
				for (var t_i=0,sz=TextureBase.m_szRestoreTex.length;t_i < sz;t_i++){
					if (this==TextureBase.m_szRestoreTex[t_i]){
						TextureBase.m_szRestoreTex.splice(t_i,1);
						break ;
					}
				}
				this.bLostState=false;
			}
		}

		__static(TextureBase,
		['m_szRestoreTex',function(){return this.m_szRestoreTex=new Array;}
		]);
		return TextureBase;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/filereference.as
	//class iflash.net.FileReference extends iflash.events.EventDispatcher
	var FileReference=(function(_super){
		function FileReference(){
			FileReference.__super.call(this);
		}

		__class(FileReference,'iflash.net.FileReference',false,_super);
		var __proto=FileReference.prototype;
		__proto.browse=LAYAFNFALSE/*function(typeFilter){return false}*/
		__proto.cancel=LAYAFNVOID/*function(){}*/
		__proto.download=LAYAFNVOID/*function(request,defaultFileName){}*/
		__proto.load=function(){}
		__proto.save=LAYAFNVOID/*function(data,defaultFileName){}*/
		__proto.upload=function(request,uploadDataFieldName,testUpload){
			(uploadDataFieldName===void 0)&& (uploadDataFieldName="Filedata");
			(testUpload===void 0)&& (testUpload=false);
		}

		__getset(0,__proto,'creationDate',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'name',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'size',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'creator',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'modificationDate',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'data',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'type',LAYAFNSTR/*function(){return ""}*/);
		return FileReference;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/filestream.as
	//class iflash.filesystem.FileStream extends iflash.events.EventDispatcher
	var FileStream=(function(_super){
		function FileStream(){
			this._endian=null;
			this._objectEncoding=0;
			this._position=NaN;
			this._readAhead=NaN;
			this.urlLoader=null;
			this.fileBytes=null;
			this.file=null;
			this.fileMode=null;
			FileStream.__super.call(this);
		}

		__class(FileStream,'iflash.filesystem.FileStream',false,_super);
		var __proto=FileStream.prototype;
		__proto.open=function(file,fileMode){
			this.file=file;
			this.fileMode=fileMode;
			if (fileMode==/*iflash.filesystem.FileMode.READ*/"read"){
				if (file._isApplicationStorageDirectory){
					FileStorage.instance.getFile(file.url);
				}
				else if (file._isApplicationDirectory){
				}
				else{
					this.urlLoader=new URLLoader();
					this.urlLoader.dataFormat=/*iflash.net.URLLoaderDataFormat.BINARY*/"binary";
					this.urlLoader.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onLoadComplete));
					this.urlLoader.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onIOError));
					this.urlLoader.addEventListener(/*iflash.events.ProgressEvent.PROGRESS*/"progress",__bind(this,this.onLoadProgress));
					this.urlLoader.load(new URLRequest(file.url));
				}
			}
			else if (fileMode==/*iflash.filesystem.FileMode.WRITE*/"write"){
				if (!file._isApplicationStorageDirectory){
					throw new Error("only local file can be writed!")
				}
				this.fileBytes=FileStorage.instance.getBinaryFile(file.url);
			}
		}

		__proto.close=function(){
			var tmp=this.fileBytes.position;
			this.fileBytes.position=0;
			FileStorage.instance.fileWrite(this.file.url.replace("app-storage:/",""),this.fileBytes.readMultiByte(tmp,"utf8"));
			this.fileBytes.position=tmp;
		}

		__proto.openAsync=function(file,fileMode){
			this.file=file;
			this.fileMode=fileMode;
			this.urlLoader=new URLLoader();
			this.urlLoader.dataFormat=/*iflash.net.URLLoaderDataFormat.BINARY*/"binary";
			this.urlLoader.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onLoadComplete));
			this.urlLoader.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onIOError));
			this.urlLoader.addEventListener(/*iflash.events.ProgressEvent.PROGRESS*/"progress",__bind(this,this.onLoadProgress));
			this.urlLoader.load(new URLRequest(file.nativePath));
		}

		__proto.onIOError=function(evt){
			this.dispatchEvent(evt);
		}

		__proto.onLoadComplete=function(evt){
			if ((this.urlLoader.data instanceof iflash.utils.ByteArray )){
				this.fileBytes=new ByteArray();
				this.fileBytes.writeBytes(this.urlLoader.data,0,this.urlLoader.data.bytesAvailable)
				this.fileBytes.position=0;
			}
			this.dispatchEvent(evt);
		}

		__proto.onLoadProgress=function(evt){
			this.dispatchEvent(evt);
		}

		__proto.readBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			if (length > this.fileBytes.bytesAvailable){
				throw new Error("no enough data to be read!")
			}
			return this.fileBytes.readBytes(bytes,0,length);
		}

		__proto.readUTFBytes=function(length){
			if (length > this.fileBytes.bytesAvailable){
				throw new Error("no enough data to be read!")
			}
			return this.fileBytes.readUTFBytes(length);
		}

		__proto.writeBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			this.fileBytes.writeBytes(bytes,offset,length);
		}

		__proto.writeMultiByte=function(value,charSet){
			this.fileBytes.writeMultiByte(value,charSet);
		}

		__proto.writeUTFBytes=function(value){
			this.fileBytes.writeUTFBytes(value);
		}

		__getset(0,__proto,'bytesAvailable',function(){
			return this.fileBytes ? this.fileBytes.bytesAvailable :0;
		});

		__getset(0,__proto,'readAhead',function(){
			return this._readAhead;
			},function(value){
			this._readAhead=value;
		});

		__getset(0,__proto,'position',function(){
			return this.fileBytes.position;
			},function(value){
			this.fileBytes.position=value;
		});

		__getset(0,__proto,'endian',function(){
			return this._endian;
			},function(value){
			this._endian=value;
		});

		__getset(0,__proto,'objectEncoding',function(){
			return this._objectEncoding;
			},function(value){
			this._objectEncoding=value;
		});

		return FileStream;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/dom/document.as
	//class iflash.laya.dom.Document extends iflash.events.EventDispatcher
	var Document2=(function(_super){
		function Document(){
			this._element_class_map_=[];
			this._text_id_=[];
			this._baseURI_=null;
			this.canvas=null;
			this.canvas3D=null;
			this.styleSheets=[];
			this.activeElement=null;
			this.all=null;
			this.body=null;
			this.mouseX=NaN;
			this.mouseY=NaN;
			this.onkeydown=null;
			this.onkeyup=null;
			this.drawCount=0;
			this.drawObjectCount=0;
			this.adapter=null;
			this._strDebugMsg_="";
			Document.__super.call(this);
			var _$this=this;
			this.mouseY=this.mouseX=0;
			Laya.document=Laya.window.document=EventDispatcher.document=this;
			if (Laya.CONCHVER > 0){
			}
			this.canvas=Browser._createRootCanvas_();
			if (Laya.ENABLE3D){
				this.enableWebGL();
			}
			this.all=[];
			this.baseURI=new URI(EventDispatcher.window.location.href);
			EventDispatcher.window.lyAddEventListener(/*iflash.events.Event.RESIZE*/"resize",function(__args){
				var args=arguments;
				if (EventDispatcher.document.adapter.screenRotate==90){
					_$this.canvas && _$this.canvas.size(EventDispatcher.window.innerHeight,EventDispatcher.window.innerWidth);
				}
				else{
					_$this.canvas && _$this.canvas.size(EventDispatcher.window.innerWidth,EventDispatcher.window.innerHeight);
				}
			});
		}

		__class(Document,'iflash.laya.dom.Document',false,_super,'Document2');
		var __proto=Document.prototype;
		__proto.enableWebGL=function(){
			if (this.canvas3D)return this.canvas3D;
			Canvas._bIs3D=true;
			this.canvas3D=Browser._createWebGLCanvas_();
			Canvas._bIs3D=false;
			return this.canvas3D;
		}

		__proto.render=function(){
			if(!this.canvas.context)
				return;
			if (!this.canvas)return;
			this._repaint_=this.drawCount=this.drawObjectCount=0;
			this.canvas.context.textBaseline="top";
			this.canvas.context.clearRect(0,0,this.canvas.width,this.canvas.height);
			this.canvas.context.save();
			if (this.adapter.screenRotate !=0){
				this.canvas.context.translate(EventDispatcher.window.innerHeight,0);
				this.canvas.context.rotate(this.adapter.screenRotate *Math.PI / 180);
			}
			if(Laya.RENDERBYCANVAS){
				this.body._lyPaint_(this.canvas.context,0,0);
			}
			if (EventDispatcher.window.updatecount % 6==0)
				EventDispatcher.window.fps=Laya.__parseInt(1000 / EventDispatcher.window.delay[0] *10+"")/ 10;
			this.canvas.context.restore();
			if (Laya.FLASHVER > 1 || !Laya.config.showInfo || Laya.CONCHVER){
				this.canvas.context.restore();
				return;
			};
			var ctx=this.canvas.context;
			ctx.font="normal 100 12px Arial";
			if (EventDispatcher.window.updatecount % 1==0){
				this._strDebugMsg_="FPS:"+EventDispatcher.window.fps+"/"+Browser.frameRate+" draw:"+this.drawObjectCount+"/"+this.drawCount+" "+EventDispatcher.window.updatecount+" "+Browser.window.innerWidth+"/"+Browser.window.innerHeight;
			}
			ctx.fillStyle="#000000";
			ctx.fillText(this._strDebugMsg_,this.body._left_+9,this.body._top_+17);
			ctx.fillStyle="#000000";
			ctx.fillText(this._strDebugMsg_,this.body._left_+11,this.body._top_+19);
			ctx.fillStyle="#FFFF00";
			ctx.fillText(this._strDebugMsg_,this.body._left_+10,this.body._top_+18);
			this.canvas.context.restore();
		}

		__proto.setOrientationEx=function(type){
			if (((typeof type=='number')&& Math.floor(type)==type)){
				type=type==0?'portrait':'rotator';
			}
			if(this.adapter.autorotate !=type){
				this.adapter.autorotate=type;
				EventDispatcher.window.resizeTo(EventDispatcher.window.innerWidth ,EventDispatcher.window.innerHeight,true);
			}
		}

		__proto.init=function(){
			this.adapter=new DocumentAdapter();
			if(Laya.CONCHVER==0||Laya.RENDERBYCANVAS)
				(Laya.process !=null)&& (Laya.process.setRootNode(Stage.stage._modle_));
		}

		__proto.size=function(w,h){
			Stage.stage.width=w;
			Stage.stage.height=h;
			EventDispatcher.window.lyDispatchEvent(/*iflash.events.Event.RESIZE*/"resize");
		}

		__proto.getNodeRegClass=function(nodeName){
			return this._element_class_map_[nodeName.toLowerCase()];
		}

		__proto.regTextWithId=function(id,text){
			this._text_id_[id]=text;
		}

		__proto.getTextById=function(id){
			return this._text_id_[id];
		}

		__getset(0,__proto,'baseURI',function(){
			return this._baseURI_;
			},function(uri){
			this._baseURI_=uri;
		});

		return Document;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/net/httprequest.as
	//class iflash.laya.net.HttpRequest extends iflash.events.EventDispatcher
	var HttpRequest=(function(_super){
		function HttpRequest(){
			this.onload=null;
			this.onerror=null;
			this._req=null;
			this._callBackFunc=null;
			this._responseType_=null;
			HttpRequest.__super.call(this);
			if (Browser.window.XMLHttpRequest){
				this._req=/*__JS__ */new XMLHttpRequest();
			}
			else if (Browser.window.ActiveXObject){
				this._req=/*__JS__ */new ActiveXObject('Microsoft.XMLHTTP');
			}
		}

		__class(HttpRequest,'iflash.laya.net.HttpRequest',false,_super);
		var __proto=HttpRequest.prototype;
		__proto.onRequestHandler=function(_req){
			if (_req.readyState !=4){
				return;
			};
			var data=this._responseType_?_req.response:_req.responseText;
			if (_req.status==200 || (_req.can200&&_req.status==0&&data!=null&&data!="")){
				if (this._callBackFunc !=null)
					this._callBackFunc(data);
				if (this.onload !=null)
					this.onload(data);
			}
			else if (_req.status==404){
				if(this.onerror!=null){
					this.onerror(_req.status);
				}
			}
			else{
				if(this.onerror!=null){
					this.onerror(_req.status);
				}
			}
		}

		__proto.PostData=function(data,requestHeaders){
			if(requestHeaders && requestHeaders.length > 0){
				this._req.setRequestHeader(requestHeaders[0].name,requestHeaders[0].value);
				}else{
				this._req.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
			};
			var temp="";
			if((typeof data=='string')){
				temp=data;
				}else{
				var obj=data;
				if(data&&data.variables){
					obj=data.variables;
				}
				for(var key2 in obj){
					temp+=key2+"="+obj[key2]+"&";
				}
				temp=temp.substring(0,temp.length-1);
			}
			this._req.send(temp);
		}

		__proto.open=function(url,format,callBackFunc,isAsync,requestType,data,requestHeaders){
			var _$this=this;
			(isAsync===void 0)&& (isAsync=true);
			(requestType===void 0)&& (requestType="get");
			this._callBackFunc=callBackFunc;
			if (this._req==null)return false;
			try{
				this._req.onreadystatechange=function (_req){
					_$this.onRequestHandler(this);
				}
				this._req.onerror=function (_req){
					/*__JS__ */_$this.onerror(404);
				}
				if(requestType=="text"){
					requestType='get';
				};
				var r=this._req.open(requestType,url,isAsync);
				if (!Laya.CONCHVER){
					if (url.indexOf("file:")==0){
						this._req.can200=true;
					}
					else if (url.indexOf("http:")==0){
						this._req.can200=false;
					}
				}
				format && (this._responseType_=this._req.responseType=format);
				if (requestType.toLowerCase()=='get'){
					this._req.send();
				}
				else if (requestType.toLowerCase()=='post'){
					if(Laya.CONCHVER){
						if(data && data["_byteView_"]){
							this._req.send(data._byteView_.buffer.slice(0,data._length));
						}
						else{
							this.PostData(data,requestHeaders);
						}
					}
					else{
						if(data && data["_byteView_"]){
							throw ("un support binary post now");
						}
						else{
							this.PostData(data,requestHeaders);
						}
					}
				}
				else {}
			}
			catch(err){
				if(this.onerror!=null){
					this.onerror(-1);
				}
				return false;
			}
			return true;
		}

		return HttpRequest;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/window.as
	//class iflash.laya.Window extends iflash.events.EventDispatcher
	var Window3=(function(_super){
		function Window(){
			this.onScroll=null;
			this.updateTime=NaN;
			this._width=0;
			this._height=0;
			this.event=null;
			this.scale=null;
			this.mouseX=0;
			this.mouseY=0;
			this.left=0;
			this.top=0;
			this.disableMouse=false;
			this.document=null;
			this.location=null;
			this.fps=0;
			this.delay=null;
			this.updatecount=0;
			this.preUpdateTime=0;
			this._no3d_=true;
			this.nowOrientation=null;
			Window.__super.call(this);
			this.preOrientation=/*iflash.display.StageOrientation.DEFAULT*/"default";
			this.scale=new Point(1,1);
			Laya.window=EventDispatcher.window=this;
			this.location=new Location1();
			this.document=Laya.document=new Document2();
			this.init();
			this.resizeTo(Browser.window.innerWidth,Browser.window.innerHeight);
			this.updatecount=0;
			this.delay=[];
			this.updateTime=this.preUpdateTime=iflash.utils.getTimer();
		}

		__class(Window,'iflash.laya.Window',false,_super,'Window3');
		var __proto=Window.prototype;
		__proto.init=function(){
			this.document.init();
			this._no3d_=!iflash.utils.getDefinitionByName("iflash.display3D.Context3D");
		}

		__proto.enterFrame=function(){
			Stage.stage.sendRender();
			this.updateTime=iflash.utils.getTimer();
			this.delay[0]=this.updateTime-this.preUpdateTime;
			this.preUpdateTime=this.updateTime;
			this.lyDispatchEvent(/*iflash.events.Event.ENTER_FRAME*/"enterFrame");
			TimerCtrl.__DEFAULT__._update_(this.updateTime);
			EventManager.mgr.dispatchSystemEvent(this.delay[0]);
			TextField.renderTexts();
			DisplayObject.sendMask();
			Laya.CONCHVER&&ConchRenderVCanvas.INSTANCE.uploadConch();
			this.updatecount++;
		}

		__proto.resizeTo=function(w,h,forceUpdate){
			(forceUpdate===void 0)&& (forceUpdate=false);
			if(!forceUpdate){
				if ((this.document.adapter._screenRotate_==0 &&this._width==w && this._height==h)|| (this.document.adapter._screenRotate_==90 &&this._height==w && this._width==h))
					return;
			}
			this.document.adapter._screenRotate_=0;
			this._width=w;
			this._height=h;
			this.nowOrientation=/*iflash.display.StageOrientation.DEFAULT*/"default";
			if (Laya.HTMLVER&&this._no3d_){
				if(Stage.stage&&Stage.stage.autoOrients){
					if (this.document.adapter.autorotate=="rotator" && this._width < this._height){
						this.document.adapter._screenRotate_=90;
						this._width=h;
						this._height=w;
						this.nowOrientation=/*iflash.display.StageOrientation.ROTATED_RIGHT*/"rotatedRight";
					}
					else if (this.document.adapter.autorotate=="portrait" && this._width > this._height){
						this.document.adapter._screenRotate_=90;
						this._width=h;
						this._height=w;
						this.nowOrientation=/*iflash.display.StageOrientation.ROTATED_RIGHT*/"rotatedRight";
					}
					else{
						this.document.adapter._screenRotate_=0;
						this._width=w;
						this._height=h;
						this.nowOrientation=/*iflash.display.StageOrientation.DEFAULT*/"default";
					}
					}else{
					if (this.document.adapter.autorotate=="portrait"){
						this.document.adapter._screenRotate_=90;
						this._width=h;
						this._height=w;
						this.nowOrientation=/*iflash.display.StageOrientation.ROTATED_RIGHT*/"rotatedRight";
						}else{
						this.document.adapter._screenRotate_=0;
						this._width=w;
						this._height=h;
						this.nowOrientation=/*iflash.display.StageOrientation.DEFAULT*/"default";
					}
				}
			}
			this.lyDispatchEvent(/*iflash.events.Event.RESIZE*/"resize");
			if(this.nowOrientation!=this.preOrientation){
				Stage.stage.dispatchEvent(new StageOrientationEvent(/*iflash.events.StageOrientationEvent.ORIENTATION_CHANGE*/"orientationChange",true,true,this.preOrientation,this.nowOrientation));
				this.preOrientation=this.nowOrientation;
			}
		}

		__getset(0,__proto,'innerWidth',function(){
			return this._width;
			},function(w){
			this.resizeTo(w,this._height);
		});

		__getset(0,__proto,'fullScreenHeight',function(){
			/*__JS__ */return window.screen.height;
		});

		__getset(0,__proto,'fullScreenWidth',function(){
			/*__JS__ */return window.screen.width;
		});

		__getset(0,__proto,'innerHeight',function(){
			return this._height;
			},function(h){
			this.resizeTo(this._width,h);
		});

		return Window;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/audioelement.as
	//class iflash.media.AudioElement extends iflash.events.EventDispatcher
	var AudioElement=(function(_super){
		function AudioElement(){
			this._soundNode_=null;
			this._paramex_=0;
			this._enddel_=true;
			this._sound_type_=0;
			this._url_=null;
			this._volume_=1;
			this.onload=null;
			this.onerror=null;
			this.loops=0;
			this._currentTime_=0;
			this._onceLoad_=false;
			AudioElement.__super.call(this);
		}

		__class(AudioElement,'iflash.media.AudioElement',false,_super);
		var __proto=AudioElement.prototype;
		__proto.onAddDocument=function(){
			if (this._url_ !=null){
				var d=this._url_;
				this._url_=null;
				this.src=d;
			}
		}

		__proto.formatUrl=function(url){
			return Method.formatUrl(url,Laya.document.baseURI.path);
		}

		__proto.dispose=function(){
			this._removeevent_()
			delete AudioElement.audioCache[this._url_];
			Browser.removeFromBody(this._soundNode_);
			if(this._soundNode_){
				this._soundNode_=null;
			}
		}

		__proto.isUserEvent=function(param){
			if(!param)return false;
			if(((typeof param=='object'))&&param.hasOwnProperty("type")){
				var tType=param["type"];
				return !!tType && ((tType.indexOf("mouse")>=0)||(tType.indexOf("touch")>=0));
			}
			return false;
		}

		__proto.isUserAction=function(){
			var caller;
			caller=this.isUserAction;
			var triggerByUser=false;
			var limit=100;
			while(caller&&!triggerByUser){
				var arr;
				arr=caller.arguments;
				var callee=caller.arguments.callee;
				if(callee){
				};
				var i=0;
				var len=0;
				len=arr.length;
				for(i=0;i<len;i++){
					if(this.isUserEvent(arr[i])){
						triggerByUser=true;
						break ;
					}
				}
				caller=caller.caller;
				limit--;
				if(limit<0)break ;
			}
			return triggerByUser;
		}

		__proto.play=function(){
			if (this._soundNode_ !=null){
			}
		}

		__proto.restart=function(){
			if (this._soundNode_ !=null){
				try{
					if(this._soundNode_.currentTime < 0){
						/*__JS__ */this._soundNode_.currentTime=0;
					}
				}
				catch (e){
					/*__JS__ */this._soundNode_.src=this._url_;
				}
				if(AudioElement.disableAutoDetect|| !AudioElement.isMobile()||AudioElement.saveToPlayDic[this._url_]||this.isUserAction()){
					if (this._sound_type_==1){
						if (AudioElement.ACTIVEMUSIC&&AudioElement.ACTIVEMUSIC!=this && Laya.CONCHVER){
							Browser.alert("不能同时播放两个MP3"+this._url_);
						}
						else{
							AudioElement.ACTIVEMUSIC=this;
						}
					}
					this._soundNode_.play();
					}else{
					AudioElement.addToPlayList(this);
				}
			}
		}

		__proto.pause=function(){
			if (this._soundNode_ !=null){
				/*__JS__ */ this._soundNode_.pause();
				if (this._sound_type_==1){
					AudioElement.ACTIVEMUSIC=null;
				}
			}
		}

		__proto.muted=function(b){
			if (this._soundNode_ !=null)this._soundNode_.muted=b;
		}

		__proto.onEnded=function(){
			this.loops--;
			if (this.loops>0){
				this.restart();
			}
			else{
				this.lyDispatchEvent(/*iflash.events.Event.SOUND_COMPLETE*/"soundComplete");
			}
			if (this._sound_type_==1){
				AudioElement.ACTIVEMUSIC=null;
			}
		}

		__proto.onTimeUpdate=function(){}
		__proto._setevent_=function(){
			this._soundNode_.addEventListener("canplaythrough",__bind(this,this.onloadComplete));
			this._soundNode_.addEventListener("ended",__bind(this,this.onEnded));
			this._soundNode_.addEventListener("timeupdate",__bind(this,this.onTimeUpdate));
		}

		__proto._removeevent_=function(){
			this._soundNode_.removeEventListener("canplaythrough",__bind(this,this.onloadComplete));
			this._soundNode_.removeEventListener("ended",__bind(this,this.onEnded));
			this._soundNode_.removeEventListener("timeupdate",__bind(this,this.onTimeUpdate));
		}

		__proto.onloadComplete=function(__args){
			var args=arguments;
			!this._onceLoad_&&this.lyDispatchEvent(/*iflash.events.Event.COMPLETE*/"complete");
			this._onceLoad_=true;
		}

		__proto.load=function(){
			this._soundNode_.load();
		}

		__getset(0,__proto,'duration',function(){
			return this._soundNode_?this._soundNode_.duration:0;
		});

		__getset(0,__proto,'src',function(){
			return this._url_;
			},function(url){
			if (AudioElement._muted_==true){
				if ((this._paramex_ & 0x8)!=0){
					return;
				}
			}
			this._url_=this.formatUrl(url);
			var audioType=this._url_.substring(this._url_.lastIndexOf(".")+1,this._url_.length);
			if (audioType=="mp3"){
				this._sound_type_=1;
			}
			this._soundNode_=Browser.document.createElement("audio");
			this._setevent_();
			this.muted(AudioElement._muted_);
			this._soundNode_.src=this._url_;
			if (this.autoplay){
				this._soundNode_.play();
			}
			else{
				this._paramex_ |=0x10;
			}
		});

		__getset(0,__proto,'autoplay',function(){
			return (this._paramex_ & 0x1)!=0;
			},function(b){
			if (b){
				this._paramex_ |=0x1;
				if (this._soundNode_ !=null && (this._paramex_ & 0x10)!=0){
					this._soundNode_.play();
				}
			}
			else this._paramex_&=~0x1;
		});

		__getset(0,__proto,'loop',function(){
			return (this._paramex_ & 0x2)!=0;
			},function(b){
			if (b){
				this._paramex_ |=0x2;
			}
			else this._paramex_&=~0x2;
			this._soundNode_.loop=b;
		});

		__getset(0,__proto,'volume',function(){
			return this._volume_;
			},function(num){
			/*__JS__ */num==null && (num=0);
			var tmp=Math.max(Math.min(1,num),0);
			num=tmp;
			this._soundNode_ && (this._soundNode_.volume=num);
			this._volume_=num;
		});

		__getset(0,__proto,'position',function(){
			return this._soundNode_&&this._soundNode_.currentTime ? this._soundNode_.currentTime :0;
			},function(value){
			this._currentTime_=value;
			this._soundNode_&&(this._soundNode_.currentTime=value);
		});

		AudioElement.isMobile=function(){
			if(AudioElement._deviceType==-1){
				if(Browser.navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i)){
					AudioElement._deviceType=1;
					}else{
					AudioElement._deviceType=0;
				}
			}
			return AudioElement._deviceType==1;
		}

		AudioElement.addToPlayList=function(audio){
			AudioElement._toPlayList.push(audio);
			AudioElement.removeEvents();
			AudioElement.addEvents();
		}

		AudioElement.playToPlayLists=function(evt){
			AudioElement.removeEvents();
			if(AudioElement._toPlayList.length>0){
				var i=0,len=AudioElement._toPlayList.length;
				for(i=0;i<len;i++){
					AudioElement._toPlayList[i].restart();
				}
				AudioElement._toPlayList=[];
			}
		}

		AudioElement.addEvents=function(){
			EventManager.stage.addEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",AudioElement.playToPlayLists);
			EventManager.stage.addEventListener(/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin",AudioElement.playToPlayLists);
		}

		AudioElement.removeEvents=function(){
			EventManager.stage.removeEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",AudioElement.playToPlayLists);
			EventManager.stage.removeEventListener(/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin",AudioElement.playToPlayLists);
		}

		AudioElement._muted_=false;
		AudioElement._musicmuted_=false;
		AudioElement._AUTOPLAY_=0x1;
		AudioElement._LOOP_=0x2;
		AudioElement._PRELOAD_=0x4;
		AudioElement._MUSIC_=0x8;
		AudioElement._ISPLAY_=0x10;
		AudioElement.ACTIVEMUSIC=null
		AudioElement.audioCache={};
		AudioElement.disableAutoDetect=false;
		AudioElement._deviceType=-1;
		AudioElement.saveToPlayDic={};
		AudioElement._toPlayList=[];
		return AudioElement;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/camera.as
	//class iflash.media.Camera extends iflash.events.EventDispatcher
	var Camera=(function(_super){
		function Camera(){
			this._camera=null;
			Camera.__super.call(this);
		}

		__class(Camera,'iflash.media.Camera',false,_super);
		var __proto=Camera.prototype;
		__proto.setCamera=function(camera){
			this._camera=camera;
			return this;
		}

		__proto.setCursor=function(value){
			this._camera.setCursor(value);
		}

		__proto.setKeyFrameInterval=function(keyFrameInterval){
			this._camera.setKeyFrameInterval (keyFrameInterval);
		}

		__proto.setLoopback=function(compress){
			(compress===void 0)&& (compress=false);
			this._camera.setLoopback(compress);
		}

		__proto.setMode=function(width,height,fps,favorArea){
			(favorArea===void 0)&& (favorArea=true);
			this._camera.setMode(width,height,fps,favorArea);
		}

		__proto.setMotionLevel=function(motionLevel,timeout){
			(timeout===void 0)&& (timeout=2000);
			this._camera.setMotionLevel(motionLevel,timeout);
		}

		__proto.setQuality=function(bandwidth,quality){
			this._camera.setQuality(bandwidth,quality);
		}

		__getset(0,__proto,'activityLevel',function(){
			return this._camera.activityLevel;
		});

		__getset(0,__proto,'bandwidth',function(){
			return this._camera.bandwidth;
		});

		__getset(0,__proto,'currentFPS',function(){
			return this._camera.currentFPS;
		});

		__getset(0,__proto,'fps',function(){
			return this._camera.fps;
		});

		__getset(0,__proto,'keyFrameInterval',function(){
			return this._camera.keyFrameInterval;
		});

		__getset(0,__proto,'quality',function(){
			return this._camera.quality;
		});

		__getset(0,__proto,'motionLevel',function(){
			return this._camera.motionLevel;
		});

		__getset(0,__proto,'height',function(){
			return this._camera.height;
		});

		__getset(0,__proto,'index',function(){
			return this._camera.index;
		});

		__getset(0,__proto,'loopback',function(){
			return this._camera.loopback;
		});

		__getset(0,__proto,'motionTimeout',function(){
			return this._camera.motionTimeout;
		});

		__getset(0,__proto,'muted',function(){
			return this._camera.muted;
		});

		__getset(0,__proto,'name',function(){
			return this._camera.name;
		});

		__getset(0,__proto,'width',function(){
			return this._camera.width;
		});

		__getset(1,Camera,'isSupported',function(){
			return iflash.media.Camera.isSupported;
		},iflash.events.EventDispatcher._$SET_isSupported);

		__getset(1,Camera,'names',function(){
			var result=[];
			var key;
			/*for each*/for(var $each_key in Camera._cameras){
				key=Camera._cameras[$each_key];
				result.push(key);
			}
			return result;
		},iflash.events.EventDispatcher._$SET_names);

		Camera._scanHardware=function(){}
		Camera.getCamera=function(name){
			if (Camera._cameras[name])return Camera._cameras[name];
			var result=new Camera();
			Camera._cameras[name]=result;
			return result.setCamera(iflash.media.Camera.getCamera(name));
		}

		__static(Camera,
		['_cameras',function(){return this._cameras=new Object;}
		]);
		return Camera;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/microphone.as
	//class iflash.media.Microphone extends iflash.events.EventDispatcher
	var Microphone=(function(_super){
		function Microphone(){
			this._mic=null;
			Microphone.__super.call(this);
		}

		__class(Microphone,'iflash.media.Microphone',false,_super);
		var __proto=Microphone.prototype;
		__proto.setMicrophone=function(mic){
			this._mic=mic;
			return this;
		}

		__proto.setLoopBack=function(state){
			(state===void 0)&& (state=true);
			this._mic.setLoopBack=state;
		}

		__proto.setSilenceLevel=function(silenceLevel,timeout){
			(timeout===void 0)&& (timeout=-1);
			this._mic.setSilenceLevel(silenceLevel,timeout);
		}

		__proto.setUseEchoSuppression=function(useEchoSuppression){
			this._mic.setUseEchoSuppression(useEchoSuppression);
		}

		__getset(0,__proto,'activityLevel',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'enableVAD',function(){
			return this._mic.enableVAD;
			},function(enable){
			this._mic.enableVAD=enable;
		});

		__getset(0,__proto,'name',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'codec',function(){
			return this._mic.codec;
			},function(codec){
			this._mic.codec=codec;
		});

		__getset(0,__proto,'gain',function(){
			return this._mic.gain;
			},function(gain){
			this._mic.gain=gain;
		});

		__getset(0,__proto,'silenceLevel',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'encodeQuality',function(){
			return this._mic.encodeQuality;
			},function(quality){
			this._mic.encodeQuality=quality;
		});

		__getset(0,__proto,'framesPerPacket',function(){
			return this._mic.framesPerPacket;
			},function(frames){
			this._mic.framesPerPacket=frames;
		});

		__getset(0,__proto,'index',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'muted',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'noiseSuppressionLevel',function(){
			return this._mic.noiseSuppressionLevel;
			},function(level){
			this._mic.noiseSuppressionLevel=level;
		});

		__getset(0,__proto,'rate',function(){
			return this._mic.rate;
			},function(rate){
			this._mic.rate=rate;
		});

		__getset(0,__proto,'silenceTimeout',function(){
			return this._mic.activityLevel;
		});

		__getset(0,__proto,'soundTransform',function(){
			return this._mic.soundTransform;
			},function(sndTransform){
			this._mic.soundTransform=sndTransform;
		});

		__getset(0,__proto,'useEchoSuppression',function(){
			return this._mic.activityLevel;
		});

		__getset(1,Microphone,'isSupported',function(){
			return iflash.media.Microphone.isSupported;
		},iflash.events.EventDispatcher._$SET_isSupported);

		__getset(1,Microphone,'names',function(){
			var result=[];
			var mic;
			/*for each*/for(var $each_mic in Microphone._mics){
				mic=Microphone._mics[$each_mic];
				result.push(mic.name);
			}
			return result;
		},iflash.events.EventDispatcher._$SET_names);

		Microphone.getMicrophone=function(index){
			(index===void 0)&& (index=-1);
			if (Microphone._mics[index])return Microphone._mics[index];
			var result=new Microphone();
			Microphone._mics[index]=result;
			return result.setMicrophone(iflash.media.Microphone.getMicrophone(index));
		}

		__static(Microphone,
		['_mics',function(){return this._mics=new Object;}
		]);
		return Microphone;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/sound.as
	//class iflash.media.Sound extends iflash.events.EventDispatcher
	var Sound=(function(_super){
		function Sound(stream,context){
			this._soundChannel_=null;
			this.audio=null;
			Sound.__super.call(this);
			this.audio=new AudioElement();
			this.audio.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.aodioComplete));
			stream && this.load(stream,context);
		}

		__class(Sound,'iflash.media.Sound',false,_super);
		var __proto=Sound.prototype;
		__proto.close=function(){
			this.audio&&this.audio.pause();
		}

		__proto.dispose=function(){
			this.audio&&this.audio.dispose();
			this.audio=null;
		}

		__proto.extract=function(target,length,startPosition){
			(startPosition===void 0)&& (startPosition=-1);
			return 0}
		__proto.load=function(stream,context){
			this.audio.src=stream.url;
		}

		__proto.play=function(startTime,loops,sndTransform){
			(startTime===void 0)&& (startTime=0);
			(loops===void 0)&& (loops=0);
			this.audio.loop=false;
			if(loops==/*int.MAX_VALUE*/2147483647){
				this.audio.loop=true;
			}
			else if (loops !=0){
				this.audio.loops=loops;
			}
			if(startTime>this.length){
				startTime=0;
			}
			if(startTime<0)startTime=0;
			this.audio.position=startTime/1000;
			!this._soundChannel_ && (this._soundChannel_=new SoundChannel());
			this._soundChannel_._sound_=this.audio;
			if(!this.audio.hasEventListener(/*iflash.events.Event.SOUND_COMPLETE*/"soundComplete")){
				this.audio.addEventListener(/*iflash.events.Event.SOUND_COMPLETE*/"soundComplete",__bind(this,this._soundCompleteH));
			}
			this.audio.restart();
			return this._soundChannel_;
		}

		__proto._soundCompleteH=function(__args){
			var args=arguments;
			this.audio !=null && (this.audio.removeEventListener(/*iflash.events.Event.SOUND_COMPLETE*/"soundComplete",__bind(this,this._soundCompleteH)));
			this._soundChannel_.dispatchEvent(new Event(/*iflash.events.Event.SOUND_COMPLETE*/"soundComplete"));
		}

		__proto.aodioComplete=function(__args){
			var args=arguments;
			this.audio !=null && (this.audio.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.aodioComplete)));
			this.lyDispatchEvent(/*iflash.events.Event.COMPLETE*/"complete");
		}

		__proto.loadCompressedDataFromByteArray=function(bytes,length){}
		__getset(0,__proto,'bytesLoaded',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'isURLInaccessible',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'bytesTotal',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'isBuffering',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'id3',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'length',function(){
			return this.audio.duration*1000;
		});

		__getset(0,__proto,'url',LAYAFNSTR/*function(){return ""}*/);
		return Sound;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/soundchannel.as
	//class iflash.media.SoundChannel extends iflash.events.EventDispatcher
	var SoundChannel=(function(_super){
		function SoundChannel(){
			this._sound_=null;
			this._soundTransform_=null;
			SoundChannel.__super.call(this);
		}

		__class(SoundChannel,'iflash.media.SoundChannel',false,_super);
		var __proto=SoundChannel.prototype;
		__proto.stop=function(){
			this._sound_ && this._sound_.pause();
		}

		__getset(0,__proto,'leftPeak',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'soundTransform',function(){
			return this._soundTransform_?this._soundTransform_:this._soundTransform_=new SoundTransform();
			},function(sndTransform){
			this._soundTransform_=sndTransform;
			if (!isNaN(this._soundTransform_.volume)){
				if(this._sound_==null)return;
				this._sound_.volume=this._soundTransform_.volume;
			}
			this._soundTransform_._sound_=this._sound_;
		});

		__getset(0,__proto,'position',function(){
			if(this._sound_&&this._sound_.position)return this._sound_.position*1000;
			return 0;
		});

		__getset(0,__proto,'rightPeak',LAYAFN0/*function(){return 0}*/);
		return SoundChannel;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/stagewebview.as
	//class iflash.media.StageWebView extends iflash.events.EventDispatcher
	var StageWebView=(function(_super){
		function StageWebView(useNative){
			StageWebView.__super.call(this);
			(useNative===void 0)&& (useNative=false);
		}

		__class(StageWebView,'iflash.media.StageWebView',false,_super);
		var __proto=StageWebView.prototype;
		__proto.stop=LAYAFNVOID/*function(){}*/
		__proto.reload=LAYAFNVOID/*function(){}*/
		__proto.loadURL=LAYAFNVOID/*function(url){}*/
		__proto.loadString=function(text,mimeType){
			(mimeType===void 0)&& (mimeType="text/html");
		}

		__proto.historyForward=LAYAFNVOID/*function(){}*/
		__proto.historyBack=LAYAFNVOID/*function(){}*/
		__proto.drawViewPortToBitmapData=LAYAFNVOID/*function(bitmap){}*/
		__proto.dispose=LAYAFNVOID/*function(){}*/
		__proto.assignFocus=function(direction){
			(direction===void 0)&& (direction="none");
		}

		__getset(0,__proto,'title',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'viewPort',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(rect){}*/);
		__getset(0,__proto,'stage',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(rect){}*/);
		__getset(0,__proto,'location',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'isHistoryBackEnabled',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'isHistoryForwardEnabled',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,StageWebView,'isSupported',LAYAFNFALSE/*function(){return false}*/,iflash.events.EventDispatcher._$SET_isSupported);
		return StageWebView;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/localconnection.as
	//class iflash.net.LocalConnection extends iflash.events.EventDispatcher
	var LocalConnection=(function(_super){
		function LocalConnection(){
			LocalConnection.__super.call(this);
		}

		__class(LocalConnection,'iflash.net.LocalConnection',false,_super);
		var __proto=LocalConnection.prototype;
		__proto.allowDomain=function(__rest){}
		__proto.allowInsecureDomain=function(__rest){}
		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.connect=LAYAFNVOID/*function(connectionName){}*/
		__proto.send=function(connectionName,methodName,__rest){}
		__getset(0,__proto,'client',function(){
			return null;
			},function(client){
		});

		__getset(0,__proto,'domain',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'isPerUser',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(newValue){}*/);
		__getset(1,LocalConnection,'isSupported',LAYAFNFALSE/*function(){return false}*/,iflash.events.EventDispatcher._$SET_isSupported);
		return LocalConnection;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/netconnection.as
	//class iflash.net.NetConnection extends iflash.events.EventDispatcher
	var NetConnection=(function(_super){
		function NetConnection(){
			this._version=0;
			this._netConnection=null;
			NetConnection.__super.call(this);
			Log.error("NetConnection no");
			if(this._netConnection==null){
			}
		}

		__class(NetConnection,'iflash.net.NetConnection',false,_super);
		var __proto=NetConnection.prototype;
		__proto.addHeader=function(operation,mustUnderstand,param){
			(mustUnderstand===void 0)&& (mustUnderstand=false);
			this._netConnection.addHeader(operation,mustUnderstand,param);
		}

		__proto.call=function(command,responder,__rest){
			var rest=[];for(var i=2,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			var args=[command,responder.resp];
			rest && rest.length>0 && (args=args.concat(rest));
			this._netConnection.call.apply(this._netConnection,args);
		}

		__proto.close=function(){
			this._netConnection.close();
		}

		__proto.connect=function(command,__rest){
			var rest=[];for(var i=1,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			if (command==null){
				Log.error("Error: Can only connect in \"HTTP streaming\" mode");
			}
			this._netConnection.connect(command,rest);
		}

		__getset(0,__proto,'client',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(object){}*/);
		__getset(0,__proto,'maxPeerConnections',function(){
			return 8;
		},LAYAFNVOID/*function(maxPeers){}*/);

		__getset(0,__proto,'connected',LAYAFNTRUE/*function(){return true}*/);
		__getset(0,__proto,'objectEncoding',function(){
			return this._version
			},function(version){
			this._version=version;
		});

		__getset(0,__proto,'connectedProxyType',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'farID',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'nearID',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'nearNonce',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'unconnectedPeerStreams',LAYAFNARRAY/*function(){return []}*/);
		__getset(0,__proto,'farNonce',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'uri',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'protocol',LAYAFNSTR/*function(){return ""}*/);
		__getset(0,__proto,'proxyType',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(ptype){}*/);
		__getset(0,__proto,'usingTLS',LAYAFNFALSE/*function(){return false}*/);
		__getset(1,NetConnection,'defaultObjectEncoding',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(version){}*/);
		NetConnection.CONNECT_SUCCESS="connectSuccess";
		return NetConnection;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/netstream.as
	//class iflash.net.NetStream extends iflash.events.EventDispatcher
	var NetStream=(function(_super){
		function NetStream(connection,peerID){
			NetStream.__super.call(this);
			(peerID===void 0)&& (peerID="connectToFMS");
		}

		__class(NetStream,'iflash.net.NetStream',false,_super);
		var __proto=NetStream.prototype;
		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.pause=LAYAFNVOID/*function(){}*/
		__proto.play=function(__rest){}
		__proto.seek=LAYAFNVOID/*function(offset){}*/
		__getset(0,__proto,'bufferLength',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'client',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(object){}*/);
		__getset(0,__proto,'bytesLoaded',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'bytesTotal',LAYAFN0/*function(){return 0}*/);
		return NetStream;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/sharedobject.as
	//class iflash.net.SharedObject extends iflash.events.EventDispatcher
	var SharedObject=(function(_super){
		function SharedObject(){
			this.cookie=null;
			SharedObject.__super.call(this);
		}

		__class(SharedObject,'iflash.net.SharedObject',false,_super);
		var __proto=SharedObject.prototype;
		__proto.clear=function(){
			this.cookie.clear();
		}

		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.flush=function(minDiskSpace){
			(minDiskSpace===void 0)&& (minDiskSpace=0);
			return this.cookie.flush(minDiskSpace);
		}

		__proto.send=function(__rest){}
		__proto.setDirty=LAYAFNVOID/*function(propertyName){}*/
		__proto.setProperty=function(propertyName,value){
			this.cookie.setProperty(propertyName,value);
		}

		__proto.setCookie=function(value){
			this.cookie=value;
			return this;
		}

		__getset(0,__proto,'client',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(object){}*/);
		__getset(0,__proto,'data',function(){
			return this.cookie.data;
		});

		__getset(0,__proto,'objectEncoding',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(version){}*/);
		__getset(0,__proto,'fps',null,LAYAFNVOID/*function(updatesPerSecond){}*/);
		__getset(0,__proto,'size',function(){
			if(this.data==null)return 0;
			return JSON.stringify(this.data).length;
		});

		__getset(1,SharedObject,'defaultObjectEncoding',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(version){}*/);
		SharedObject.deleteAll=LAYAFN0/*function(url){return 0}*/
		SharedObject.getDiskUsage=LAYAFN0/*function(url){return 0}*/
		SharedObject.getLocal=function(name,localPath,secure){
			(secure===void 0)&& (secure=false);
			if (SharedObject._cookies_[name])return SharedObject._cookies_[name];
			var result=new SharedObject();
			SharedObject._cookies_[name]=result;
			return result.setCookie(Cookie.getLocal(name,localPath,secure));
		}

		SharedObject.getRemote=function(name,remotePath,persistence,secure){
			(persistence===void 0)&& (persistence=false);
			(secure===void 0)&& (secure=false);
			return null}
		SharedObject._cookies_=[];
		return SharedObject;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/socket.as
	//class iflash.net.Socket extends iflash.events.EventDispatcher
	var Socket=(function(_super){
		function Socket(host,port){
			this._stamp=NaN;
			this._socket=null;
			this._connected=false;
			this._host=null;
			this._port=0;
			this._addInputPosition=0;
			this._input=null;
			this._output=null;
			this._bytes=null;
			this.timeout=0;
			this.objectEncoding=0;
			this._endian=null;
			(port===void 0)&& (port=0);
			Socket.__super.call(this);
			this._endian="bigEndian";
			this.timeout=20000;
			this._addInputPosition=0;
			if(port > 0 && port < 65535)
				this.connect(host,port);
		}

		__class(Socket,'iflash.net.Socket',false,_super);
		var __proto=Socket.prototype;
		__proto.connect=function(host,port){
			if(this._socket !=null)
				this._socket.onclose=null;
			this.close();
			var url="ws://"+host+":"+port;
			this._host=host;
			this._port=port;
			this._socket=/*__JS__ */new WebSocket(url);
			this._socket.binaryType="arraybuffer";
			this._stamp=iflash.utils.getTimer();
			this._output=new ByteArray();
			this._output.endian=this.endian;
			this._input=new ByteArray();
			this._input.endian=this.endian;
			this._socket.onopen=iflash.method.bind(this,this.onOpenHandler);
			this._socket.onmessage=iflash.method.bind(this,this.onMessageHandler);
			this._socket.onclose=iflash.method.bind(this,this.onCloseHandler);
			this._socket.onerror=iflash.method.bind(this,this.onErrorHandler);
			this._socket.binaryType="arraybuffer";
		}

		__proto.cleanSocket=function(){
			try {
				this._socket.close();
			}catch (e){}
			this._socket=null;
		}

		__proto.close=function(){
			if(this._socket!=null){
				this._connected=false;
				this.cleanSocket();
			}
		}

		__proto.readBoolean=function(){
			return this._input.readBoolean();
		}

		__proto.readByte=function(){
			return this._input.readByte();
		}

		__proto.readDouble=function(){
			return this._input.readDouble();
		}

		__proto.readFloat=function(){
			return this._input.readFloat();
		}

		__proto.readInt=function(){
			return this._input.readInt();
		}

		__proto.readMultiByte=function(length,charSet){
			return this._input.readMultiByte(length,charSet);
		}

		__proto.readObject=function(){
			return this._input.readObject();
		}

		__proto.readShort=function(){
			return this._input.readShort();
		}

		__proto.readUnsignedByte=function(){
			return this._input.readUnsignedByte();
		}

		__proto.readUnsignedInt=function(){
			return this._input.readUnsignedInt();
		}

		__proto.readUnsignedShort=function(){
			return this._input.readUnsignedShort();
		}

		__proto.readUTF=function(){
			return this._input.readUTF();
		}

		__proto.readUTFBytes=function(length){
			return this._input.readUTFBytes(length);
		}

		__proto.readBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			/*__JS__ */this._input.readBytes(bytes,offset,length);
		}

		__proto.writeBoolean=function(value){
			this._output.writeBoolean(value);
		}

		__proto.writeByte=function(value){
			this._output.writeByte(value);
		}

		__proto.writeDouble=function(value){
			this._output.writeDouble(value);
		}

		__proto.writeFloat=function(value){
			this._output.writeFloat(value);
		}

		__proto.writeInt=function(value){
			this._output.writeInt(value);
		}

		__proto.writeMultiByte=function(value,charSet){
			(charSet===void 0)&& (charSet="UTF-8");
			this._output.writeMultiByte(value,charSet);
		}

		__proto.writeShort=function(value){
			this._output.writeShort(value);
		}

		__proto.writeUTF=function(value){
			this._output.writeUTF(value);
		}

		__proto.writeUTFBytes=function(value){
			this._output.writeUTFBytes(value);
		}

		__proto.writeUnsignedInt=function(value){
			this._output.writeUnsignedInt(value);
		}

		__proto.writeBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			/*__JS__ */this._output.writeBytes(bytes,offset,length);
		}

		__proto.onOpenHandler=function(__args){
			var args=arguments;
			this._connected=true;
			this.dispatchEvent (new Event(/*iflash.events.Event.CONNECT*/"connect"));
		}

		__proto.onMessageHandler=function(msg){
			if (this._input.length>=0 && this._input.bytesAvailable<1){
				this._input.clear();
				this._addInputPosition=0;
			};
			var pre=this._input.position;
			!this._addInputPosition && (this._addInputPosition=0);
			this._input.position=this._addInputPosition;
			if(msg){
				if((typeof msg.data=='string')){
					this._input.writeUTFBytes(msg.data);
					}else{
					this._input.writeArrayBuffer(msg.data);
				}
			}
			this._addInputPosition=this._input.position;
			this._input.position=pre;
			this.dispatchEvent(new Event(/*iflash.events.ProgressEvent.SOCKET_DATA*/"socketData"));
		}

		__proto.onflashMessage=function(evt){
			this.dispatchEvent(new ProgressEvent(/*iflash.events.ProgressEvent.SOCKET_DATA*/"socketData"));
		}

		__proto.onCloseHandler=function(__args){
			var args=arguments;
			this._connected=false;
			this.dispatchEvent (new Event(/*iflash.events.Event.CLOSE*/"close"));
		}

		__proto.onErrorHandler=function(__args){
			var args=arguments;
			this.dispatchEvent (new IOErrorEvent (/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError"));
		}

		__proto.flush=function(){
			if(this._output && this._output.length > 0){
				try {
					this._socket && this._socket.send(this._output.__getBuffer());
					this._output.endian=this.endian;
					this._output.clear();
				}catch (e){}
			}
		}

		__getset(0,__proto,'connected',function(){
			return this._connected;
		});

		__getset(0,__proto,'endian',function(){
			return this._endian;
			},function(value){
			this._endian=value;
			if(this._input !=null)this._input.endian=value;
			if (this._output !=null)this._output.endian=value;
		});

		__getset(0,__proto,'bytesAvailable',function(){
			return this._input.bytesAvailable;
		});

		__getset(0,__proto,'bytesPending',function(){
			return this._output.length;
		});

		Socket.LITTLE_ENDIAN="littleEndian";
		Socket.BIG_ENDIAN="bigEndian";
		return Socket;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlloader.as
	//class iflash.net.URLLoader extends iflash.events.EventDispatcher
	var URLLoader=(function(_super){
		function URLLoader(request){
			this.bytesLoaded=0;
			this.bytesTotal=0;
			this.data=null;
			this.fileData=null;
			this.crossDomain=false;
			this.IsWriteXmlData=true;
			this.file=null;
			this._bitmapData=null;
			URLLoader.__super.call(this);
			this.dataFormat=/*iflash.net.URLLoaderDataFormat.TEXT*/"text";
			if(request !=null){
				this.load(request);
			}
		}

		__class(URLLoader,'iflash.net.URLLoader',false,_super);
		var __proto=URLLoader.prototype;
		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.load=function(request){
			var _$this=this;
			var contentType=Method.formatUrlType(request.url);
			if(this.dataFormat==/*iflash.net.URLLoaderDataFormat.TEXT*/"text"){
				if(contentType=="xml"){
					if(Laya.CONCHVER&& this.IsWriteXmlData){
						/*__JS__ */var domparser=new DOMParser();
						/*__JS__ */domparser.onload=function(xmlData){;
							/*__JS__ */_$this.data=domparser.getResult();;
							/*__JS__ */_$this.dispatchEvent(new Event(Event.COMPLETE));};
						/*__JS__ */domparser._parser.onerror=function(){;
							/*__JS__ */_$this.dispatchEvent(new IOErrorEvent(IOErrorEvent.IO_ERROR,false,false,"ioError"))};
						/*__JS__ */domparser.src=Method.formatUrl(request.url);
					}
					else{
						this.file=new FileRead(request.url,{onload:__bind(this,this._Loader),unOnload:__bind(this,this._LoaderError)},null);
						this.file.contentType=contentType;
					}
				}
				else if(contentType=="fnt"){
					this.file=new FileRead(request.url,{onload:__bind(this,this._Loader),unOnload:__bind(this,this._LoaderError)},null);
					this.file.contentType=contentType;
				}
				else if(request.url.indexOf("?")>-1 && Laya.HTMLVER && this.crossDomain){
					var _this=this;
					var f=function (d){
						var e=new Event(/*iflash.events.Event.COMPLETE*/"complete");
						_this.data=e.lyData=d;
						_this.dispatchEvent(e);
					}
					Ajax.GetJSON(request.url,f);
				}
				else{
					if(request.data !=null){
						var data2=request.data.toString();
						if(data2){
							var method=request.method.toLowerCase();
							if(method!="post"){
								if(request.url.indexOf("?")==-1){
									request.url=request.url+"?"+data2;
									}else{
									request.url=request.url+"&"+data2;
								}
							}
						}
					}
					this.file=new FileRead(request.url,{onload:__bind(this,this._Loader),unOnload:__bind(this,this._LoaderError)},null,request);
					this.file.contentType=contentType;
				}
				}else if(this.dataFormat==/*iflash.net.URLLoaderDataFormat.BINARY*/"binary"){
				if (["jpg","gif","png"].indexOf(contentType)!=-1){
					if (this._bitmapData==null)this._bitmapData=new BitmapData();
					this.data=Browser.document.createElement("image");
					this.data.onload=function (__args){
						var args=arguments;
						if ("tagName" in this){
							}else {
							this.tagName="IMG";
						}
						_$this._bitmapData.setImage(this);
						_$this.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
					};
					this.data.onerror=function (){
						_$this.dispatchEvent(new IOErrorEvent(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",false,false,"ioError"));
					}
					this.data.src=Method.formatUrl(request.url);
				}
				else{
					this.file=new FileRead(request.url,{onload:__bind(this,this._Loader),unOnload:__bind(this,this._LoaderError)},/*iflash.net.URLLoaderDataFormat.BINARY*/"binary");
					this.file.contentType=Method.formatUrlType(request.url);
				}
				}else{
			}
		}

		__proto._LoaderError=function(fileread){
			this.dispatchEvent(new IOErrorEvent(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError"));
			this.file=null;
		}

		__proto._Loader=function(fileread){
			if(fileread.contentType=="swf"){
				var bytes=new ByteArray();
				bytes.writeUTF(fileread.contentType);
				bytes.writeUTF(fileread.url);
				fileread.contentdata.readBytes(bytes,bytes.position);
				bytes.position=0;
				this.data=bytes;
				bytes=null;
				}else{
				this.data=fileread.contentdata;
			}
			this.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
			this.file=null;
		}

		__getset(0,__proto,'bitmapdata',function(){
			return this._bitmapData;
		});

		URLLoader.isCatchfile=false;
		return URLLoader;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/net/urlstream.as
	//class iflash.net.URLStream extends iflash.events.EventDispatcher
	var URLStream=(function(_super){
		function URLStream(){
			this._input=null;
			this.fileData=null;
			this.file=null;
			URLStream.__super.call(this);
			this._input==null && (this._input=new ByteArray());
		}

		__class(URLStream,'iflash.net.URLStream',false,_super);
		var __proto=URLStream.prototype;
		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.load=function(request){
			var index=(request.url).lastIndexOf("?");
			var contentType=Method.formatUrlType(request.url);
			this.file=new FileRead(request.url,{onload:__bind(this,this._Loader),unOnload:__bind(this,this._LoaderError)},/*iflash.net.URLLoaderDataFormat.BINARY*/"binary",request);
			this.file.contentType=Method.formatUrlType(request.url);
		}

		__proto._LoaderError=function(fileread){
			this.dispatchEvent(new IOErrorEvent(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError"));
		}

		__proto._Loader=function(fileread){
			if(fileread.contentType=="swf"){
				var bytes=new ByteArray();
				bytes.writeUTF(fileread.contentType);
				bytes.writeUTF(fileread.url);
				fileread.contentdata.readBytes(bytes,bytes.position);
				bytes.position=0;
				this._input=bytes;
				bytes=null;
				}else{
				fileread.contentdata.position=0;
				this._input=fileread.contentdata;
			}
			this.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
		}

		__proto.readBoolean=function(){
			return this._input.readBoolean();
		}

		__proto.readByte=function(){
			return this._input.readByte();
		}

		__proto.readBytes=function(bytes,offset,length){
			(offset===void 0)&& (offset=0);
			(length===void 0)&& (length=0);
			return this._input.readBytes(bytes);
		}

		__proto.readDouble=function(){
			return this._input.readDouble();
		}

		__proto.readFloat=function(){
			return this._input.readFloat();
		}

		__proto.readInt=function(){
			return this._input.readInt();
		}

		__proto.readMultiByte=function(length,charSet){
			return this._input.readMultiByte(length,charSet);
		}

		__proto.readObject=function(){
			return this._input.readObject();
		}

		__proto.readShort=function(){
			return this._input.readShort();
		}

		__proto.readUnsignedByte=function(){
			return this._input.readUnsignedByte();
		}

		__proto.readUnsignedInt=function(){
			return this._input.readUnsignedInt();
		}

		__proto.readUnsignedShort=function(){
			return this._input.readUnsignedShort();
		}

		__proto.readUTF=function(){
			return this._input.readUTF();
		}

		__proto.readUTFBytes=function(length){
			return this._input.readUTFBytes(length);
		}

		__getset(0,__proto,'bytesAvailable',function(){
			if(this._input.bytesAvailable==0){
				this._input.position=0;
			}
			return this._input.bytesAvailable;
		});

		__getset(0,__proto,'connected',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'endian',function(){
			return this._input.endian;
			},function(type){
			this._input.endian=type;
		});

		__getset(0,__proto,'objectEncoding',function(){
			return this._input.objectEncoding;
			},function(version){
			this._input.objectEncoding=version;
		});

		return URLStream;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/sensors/accelerometer.as
	//class iflash.sensors.Accelerometer extends iflash.events.EventDispatcher
	var Accelerometer=(function(_super){
		function Accelerometer(){
			this._useCount=0;
			this._interval=30;
			this._curTimestamp=0;
			Accelerometer.__super.call(this);
		}

		__class(Accelerometer,'iflash.sensors.Accelerometer',false,_super);
		var __proto=Accelerometer.prototype;
		__proto.setRequestedUpdateInterval=function(interval){
			this._interval=interval;
		}

		__proto.addEventListener=function(type,listener,useCapture,priority,useWeakReference){
			(useCapture===void 0)&& (useCapture=false);
			(priority===void 0)&& (priority=0);
			(useWeakReference===void 0)&& (useWeakReference=false);
			_super.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
			if(this._useCount==0){
				Accelerometer.acceptSysOrientationListener();
			}
			if(Accelerometer._accList.indexOf(this)==-1){
				Accelerometer._accList.push(this);
				this._useCount++;
			}
		}

		__proto.removeEventListener=function(type,listener,useCapture){
			(useCapture===void 0)&& (useCapture=false);
			_super.prototype.removeEventListener.call(this,type,listener,useCapture);
			var index=Accelerometer._accList.indexOf(this);
			if(index!=-1){
				Accelerometer._accList.splice(index,1);
				this._useCount--;
			}
			if(this._useCount==0){
				Accelerometer.removeSysOrientationListener();
			}
		}

		__proto.dispatchAccEvent=function(e){
			if(e.timestamp-this._curTimestamp>this._interval){
				this.dispatchEvent(e);
				this._curTimestamp=e.timestamp;
			}
		}

		__getset(0,__proto,'muted',function(){
			return false;
		});

		__getset(1,Accelerometer,'isSupported',function(){
			if(Browser.window.DeviceMotionEvent)
				return true;
			return false;
		},iflash.events.EventDispatcher._$SET_isSupported);

		Accelerometer.orientationListener=function(e){
			var e=AccelerometerEvent.copySysEvent(e);
			var ar;
			/*for each*/for(var $each_ar in Accelerometer._accList){
				ar=Accelerometer._accList[$each_ar];
				ar.dispatchAccEvent(e);
			}
		}

		Accelerometer.acceptSysOrientationListener=function(){
			Browser.window.addEventListener('devicemotion',Accelerometer.orientationListener,false);
		}

		Accelerometer.removeSysOrientationListener=function(){
			Browser.window.removeEventListener('devicemotion',Accelerometer.orientationListener,false);
		}

		Accelerometer._accList=[];
		return Accelerometer;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/sensors/geolocation.as
	//class iflash.sensors.Geolocation extends iflash.events.EventDispatcher
	var Geolocation=(function(_super){
		function Geolocation(target){
			this.preTime=0;
			this._muted=true;
			this._isFirstStatu=true;
			this._listenID=NaN;
			this._inteval=10;
			Geolocation.__super.call(this,target);
		}

		__class(Geolocation,'iflash.sensors.Geolocation',false,_super);
		var __proto=Geolocation.prototype;
		__proto.positionGet=function(pos){
			this.muteds=false;
			var tTime=DebugTools.getTTime();
			if(tTime-this.preTime>this._inteval){
				var evt;
				evt=GeolocationEvent.getFromH5Event(pos.coords);
				evt.timestamp=pos.timestamp;
				this.dispatchEvent(evt);
				this.preTime=tTime;
				}else{
			}
		}

		__proto.positionFail=function(error){
			switch(error.code){
				case 0:
					break ;
				case 1:
					break ;
				case 2:
					break ;
				case 3:
					break ;
				}
			this.muteds=true;
		}

		__proto.beginGetPosition=function(){
			this.stopGetPostion();
			this._listenID=Browser.navigator.geolocation.watchPosition(__bind(this,this.positionGet),__bind(this,this.positionFail));
		}

		__proto.stopGetPostion=function(){
			Browser.navigator.geolocation.clearWatch(this._listenID);
		}

		__proto.addEventListener=function(type,listener,useCapture,priority,useWeakReference){
			(useCapture===void 0)&& (useCapture=false);
			(priority===void 0)&& (priority=0);
			(useWeakReference===void 0)&& (useWeakReference=false);
			_super.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
			if(type==/*iflash.events.GeolocationEvent.UPDATE*/"update"){
				this.beginGetPosition();
			}
		}

		__proto.removeEventListener=function(type,listener,useCapture){
			(useCapture===void 0)&& (useCapture=false);
			_super.prototype.removeEventListener.call(this,type,listener,useCapture);
			if(type==/*iflash.events.GeolocationEvent.UPDATE*/"update"){
				this.stopGetPostion();
			}
		}

		__proto.setRequestedUpdateInterval=function(interval){
			(interval===void 0)&& (interval=500);
			this._inteval=interval;
			return;
		}

		__getset(0,__proto,'muted',function(){
			return this._muted;
		});

		__getset(0,__proto,'muteds',null,function(value){
			if((value!=this._muted)||this._isFirstStatu){
				var evt=new StatusEvent(/*iflash.events.StatusEvent.STATUS*/"status");
				this._muted=value;
				this.dispatchEvent(evt);
				this._isFirstStatu=false;
			}
		});

		__getset(1,Geolocation,'isSupported',function(){
			return Browser.navigator.geolocation;
		},iflash.events.EventDispatcher._$SET_isSupported);

		return Geolocation;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/fileevent.as
	//class iflash.filesystem.FileEvent extends iflash.events.Event
	var FileEvent=(function(_super){
		function FileEvent(type,bubbles,cancelable,_d){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			FileEvent.__super.call(this,type,bubbles,cancelable,_d);
		}

		__class(FileEvent,'iflash.filesystem.FileEvent',false,_super);
		FileEvent.FILE_STATUS="fileStatus";
		return FileEvent;
	})(Event)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/system/ime.as
	//class iflash.system.IME extends iflash.events.EventDispatcher
	var IME=(function(_super){
		function IME(target){
			IME.__super.call(this,target);
		}

		__class(IME,'iflash.system.IME',false,_super);
		__getset(1,IME,'conversionMode',function(){
			return "";
			},function(mode){
		});

		__getset(1,IME,'enabled',function(){
			return false;
			},function(enabled){
		});

		__getset(1,IME,'isSupported',function(){
			return false;
		},iflash.events.EventDispatcher._$SET_isSupported);

		return IME;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/stylesheet.as
	//class iflash.text.StyleSheet extends iflash.events.EventDispatcher
	var StyleSheet=(function(_super){
		function StyleSheet(){
			StyleSheet.__super.call(this);
		}

		__class(StyleSheet,'iflash.text.StyleSheet',false,_super);
		var __proto=StyleSheet.prototype;
		__proto.clear=LAYAFNVOID/*function(){}*/
		__proto.getStyle=LAYAFNNULL/*function(styleName){return null}*/
		__proto.parseCSS=LAYAFNVOID/*function(CSSText){}*/
		__proto.setStyle=LAYAFNVOID/*function(styleName,styleObject){}*/
		__proto.transform=LAYAFNNULL/*function(formatObject){return null}*/
		__getset(0,__proto,'styleNames',LAYAFNNULL/*function(){return null}*/);
		return StyleSheet;
	})(EventDispatcher)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/bevelfilter.as
	//class iflash.filters.BevelFilter extends iflash.filters.BitmapFilter
	var BevelFilter=(function(_super){
		function BevelFilter(distance,angle,highlightColor,highlightAlpha,shadowColor,shadowAlpha,blurX,blurY,strength,quality,type,knockout){
			this.angle=NaN;
			this.blurX=NaN;
			this.blurY=NaN;
			this.distance=NaN;
			this.highlightAlpha=NaN;
			this.highlightColor=0;
			this.knockout=false;
			this.quality=0;
			this.shadowAlpha=NaN;
			this.shadowColor=0;
			this.strength=NaN;
			this.type=null;
			(distance===void 0)&& (distance=0);
			(angle===void 0)&& (angle=0);
			(highlightColor===void 0)&& (highlightColor=0xFF);
			(highlightAlpha===void 0)&& (highlightAlpha=1);
			(shadowColor===void 0)&& (shadowColor=0);
			(shadowAlpha===void 0)&& (shadowAlpha=1);
			(blurX===void 0)&& (blurX=4);
			(blurY===void 0)&& (blurY=4);
			(strength===void 0)&& (strength=1);
			(quality===void 0)&& (quality=1);
			(type===void 0)&& (type="full");
			(knockout===void 0)&& (knockout=false);
			BevelFilter.__super.call(this,"BevelFilter");
			this.distance=distance;
			this.angle=angle;
			this.highlightColor=highlightColor;
			this.highlightAlpha=highlightAlpha;
			this.shadowColor=shadowColor;
			this.shadowAlpha=shadowAlpha;
			this.blurX=blurX;
			this.blurY=blurY;
			this.strength=strength;
			this.quality=quality;
			this.type=type;
			this.knockout=knockout;
		}

		__class(BevelFilter,'iflash.filters.BevelFilter',false,_super);
		return BevelFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/blurfilter.as
	//class iflash.filters.BlurFilter extends iflash.filters.BitmapFilter
	var BlurFilter=(function(_super){
		function BlurFilter(inBlurX,inBlurY,inQuality){
			this.blurX=NaN;
			this.blurY=NaN;
			this.quality=0;
			this.MAX_BLUR_WIDTH=0;
			this.MAX_BLUR_HEIGHT=0;
			this.__bG=null;
			this.__kernel=null;
			(inBlurX===void 0)&& (inBlurX=4);
			(inBlurY===void 0)&& (inBlurY=4);
			(inQuality===void 0)&& (inQuality=1);
			BlurFilter.__super .call(this,"BlurFilter");
			this.blurX=(inBlurX ? inBlurX :4.0);
			this.blurY=(inBlurY ? inBlurY :4.0);
			this.MAX_BLUR_WIDTH=Laya.window.innerWidth;
			this.MAX_BLUR_HEIGHT=Laya.window.innerHeight;
			this.quality=(inQuality ? inQuality :1);
		}

		__class(BlurFilter,'iflash.filters.BlurFilter',false,_super);
		var __proto=BlurFilter.prototype;
		__proto.applyFilter=function(inBitmapData,inRect,inPoint,inBitmapFilter){}
		__proto.clone=function(){
			return new BlurFilter (this.blurX,this.blurY,this.quality);
		}

		__proto.__applyFilter=function(surface){
			var ctx=surface.context;
			this.__kernel=new Array;
			if (surface.width==0 || surface.height==0)return;
			var width=(surface.width > this.MAX_BLUR_WIDTH)? this.MAX_BLUR_WIDTH :surface.width;
			var height=(surface.height > this.MAX_BLUR_HEIGHT)? this.MAX_BLUR_HEIGHT :surface.height;
		}

		__proto.__buildKernel=function(src,srcW,srcH,dst){
			var i=0,j=0,tot=[],maxW=srcW *4;
			for (var y=0;y < srcH;y++){
				for (var x=0;x < srcW;x++){
					tot[0]=src[j];
					tot[1]=src[j+1];
					tot[2]=src[j+2];
					tot[3]=src[j+3];
					if (x > 0){
						tot[0]+=dst[i-4];
						tot[1]+=dst[i-3];
						tot[2]+=dst[i-2];
						tot[3]+=dst[i-1];
					}
					if (y > 0){
						tot[0]+=dst[i-maxW];
						tot[1]+=dst[i+1-maxW];
						tot[2]+=dst[i+2-maxW];
						tot[3]+=dst[i+3-maxW];
					}
					if (x > 0 && y > 0){
						tot[0]-=dst[i-maxW-4];
						tot[1]-=dst[i-maxW-3];
						tot[2]-=dst[i-maxW-2];
						tot[3]-=dst[i-maxW-1];
					}
					dst[i]=tot[0];
					dst[i+1]=tot[1];
					dst[i+2]=tot[2];
					dst[i+3]=tot[3];
					i+=4;
					j+=4;
				}
			}
		}

		__proto.__boxBlur=function(dst,srcW,srcH,p,boxW,boxH){
			var mul1=1.0 / ((boxW *2+1)*(boxH *2+1)),i=0,tot=[],h1=0,l1=0,h2=0,l2=0;
			var mul2=1.7 / ((boxW *2+1)*(boxH *2+1));
			for (var y=0;y < srcH;y++){
				for (var x=0;x < srcW;x++){
					if (x+boxW >=srcW)h1=srcW-1;else h1=(x+boxW);
					if (y+boxH >=srcH)l1=srcH-1;else l1=(y+boxH);
					if (x-boxW < 0)h2=0;else h2=(x-boxW);
					if (y-boxH < 0)l2=0;else l2=(y-boxH);
					tot[0]=p[(h1+l1 *srcW)*4]+p[(h2+l2 *srcW)*4]-p[(h2+l1 *srcW)*4]-p[(h1+l2 *srcW)*4];
					tot[1]=p[(h1+l1 *srcW)*4+1]+p[(h2+l2 *srcW)*4+1]-p[(h2+l1 *srcW)*4+1]-p[(h1+l2 *srcW)*4+1];
					tot[2]=p[(h1+l1 *srcW)*4+2]+p[(h2+l2 *srcW)*4+2]-p[(h2+l1 *srcW)*4+2]-p[(h1+l2 *srcW)*4+2];
					tot[3]=p[(h1+l1 *srcW)*4+3]+p[(h2+l2 *srcW)*4+3]-p[(h2+l1 *srcW)*4+3]-p[(h1+l2 *srcW)*4+3];
					dst[i]=Math.floor (Math.abs((255-this.__bG[0])-tot[0] *mul1));
					dst[i+1]=Math.floor (Math.abs((255-this.__bG[1])-tot[1] *mul1));
					dst[i+2]=Math.floor (Math.abs((255-this.__bG[2])-tot[2] *mul1));
					dst[i+3]=Math.floor (tot[3] *mul2);
					i+=4;
				}
			}
		}

		return BlurFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/colormatrixfilter.as
	//class iflash.filters.ColorMatrixFilter extends iflash.filters.BitmapFilter
	var ColorMatrixFilter=(function(_super){
		function ColorMatrixFilter(matrix){
			this.matrix=null;
			ColorMatrixFilter.__super.call(this,"ColorMatrixFilter");
			this.matrix=matrix;
		}

		__class(ColorMatrixFilter,'iflash.filters.ColorMatrixFilter',false,_super);
		var __proto=ColorMatrixFilter.prototype;
		__proto.clone=function(){
			return new ColorMatrixFilter(this.matrix);
		}

		__proto.__applyFilter=function(src){
			return;
			var ctx=src.context;
			var imagedata=ctx.getImageData(0,0,src.width,src.height);
			var offsetX=0;
			for (var i=0,sz=imagedata.data.length >> 2;i < sz;i++){
				offsetX=i *4;
				var srcR=imagedata.data[offsetX];
				var srcG=imagedata.data[offsetX+1];
				var srcB=imagedata.data[offsetX+2];
				var srcA=imagedata.data[offsetX+3];
				imagedata.data[offsetX]=int((this.matrix[0] *srcR)+(this.matrix[1] *srcG)+(this.matrix[2] *srcB)+(this.matrix[3] *srcA)+this.matrix[4]);
				imagedata.data[offsetX+1]=int((this.matrix[5] *srcR)+(this.matrix[6] *srcG)+(this.matrix[7] *srcB)+(this.matrix[8] *srcA)+this.matrix[9]);
				imagedata.data[offsetX+2]=int((this.matrix[10] *srcR)+(this.matrix[11] *srcG)+(this.matrix[12] *srcB)+(this.matrix[13] *srcA)+this.matrix[14]);
				imagedata.data[offsetX+3]=int((this.matrix[15] *srcR)+(this.matrix[16] *srcG)+(this.matrix[17] *srcB)+(this.matrix[18] *srcA)+this.matrix[19]);
			}
			ctx.putImageData(imagedata,0,0);
		}

		return ColorMatrixFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/convolutionfilter.as
	//class iflash.filters.ConvolutionFilter extends iflash.filters.BitmapFilter
	var ConvolutionFilter=(function(_super){
		function ConvolutionFilter(matrixX,matrixY,matrix,divisor,bias,preserveAlpha,clamp,color,alpha){
			this.alpha=NaN;
			this.bias=NaN;
			this.clamp=false;
			this.color=0;
			this.divisor=NaN;
			this.matrix=null;
			this.matrixX=NaN;
			this.matrixY=NaN;
			this.preserveAlpha=false;
			(matrixX===void 0)&& (matrixX=0);
			(matrixY===void 0)&& (matrixY=0);
			(divisor===void 0)&& (divisor=1);
			(bias===void 0)&& (bias=0);
			(preserveAlpha===void 0)&& (preserveAlpha=true);
			(clamp===void 0)&& (clamp=true);
			(color===void 0)&& (color=0);
			(alpha===void 0)&& (alpha=0);
			ConvolutionFilter.__super.call(this,"ConvolutionFilter");
			this.matrixX=matrixX;
			this.matrixY=matrixY;
			this.matrix=matrix;
			this.divisor=divisor;
			this.preserveAlpha=preserveAlpha;
			this.clamp=clamp;
			this.color=color;
			this.alpha=alpha;
		}

		__class(ConvolutionFilter,'iflash.filters.ConvolutionFilter',false,_super);
		return ConvolutionFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/displacementmapfilter.as
	//class iflash.filters.DisplacementMapFilter extends iflash.filters.BitmapFilter
	var DisplacementMapFilter=(function(_super){
		function DisplacementMapFilter(mapBitmap,mapPoint,componentX,componentY,scaleX,scaleY,mode,color,alpha){
			this.alpha=NaN;
			this.color=0;
			this.componentX=0;
			this.componentY=0;
			this.mapBitmap=null;
			this.mapPoint=null;
			this.mode=null;
			this.scaleX=NaN;
			this.scaleY=NaN;
			(componentX===void 0)&& (componentX=0);
			(componentY===void 0)&& (componentY=0);
			(scaleX===void 0)&& (scaleX=0);
			(scaleY===void 0)&& (scaleY=0);
			(color===void 0)&& (color=0);
			(alpha===void 0)&& (alpha=0);
			DisplacementMapFilter.__super.call(this,"DisplacementMapFilter");
			this.mapBitmap=mapBitmap;
			this.mapPoint=mapPoint;
			this.componentY=componentY;
			this.scaleX=scaleX;
			this.scaleY=scaleY;
			this.mode=mode;
			this.color=color;
			this.alpha=alpha;
		}

		__class(DisplacementMapFilter,'iflash.filters.DisplacementMapFilter',false,_super);
		return DisplacementMapFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/dropshadowfilter.as
	//class iflash.filters.DropShadowFilter extends iflash.filters.BitmapFilter
	var DropShadowFilter=(function(_super){
		function DropShadowFilter(in_distance,in_angle,in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout,in_hideObject){
			this.alpha=NaN;
			this.angle=NaN;
			this.blurX=NaN;
			this.blurY=NaN;
			this.color=0;
			this.distance=NaN;
			this.hideObject=false;
			this.inner=false;
			this.knockout=false;
			this.quality=0;
			this.strength=NaN;
			(in_distance===void 0)&& (in_distance=4.0);
			(in_angle===void 0)&& (in_angle=45.0);
			(in_color===void 0)&& (in_color=0);
			(in_alpha===void 0)&& (in_alpha=1.0);
			(in_blurX===void 0)&& (in_blurX=4.0);
			(in_blurY===void 0)&& (in_blurY=4.0);
			(in_strength===void 0)&& (in_strength=1.0);
			(in_quality===void 0)&& (in_quality=1);
			(in_inner===void 0)&& (in_inner=false);
			(in_knockout===void 0)&& (in_knockout=false);
			(in_hideObject===void 0)&& (in_hideObject=false);
			DropShadowFilter.__super.call(this,"DropShadowFilter");
			this.distance=in_distance;
			this.angle=in_angle;
			this.color=in_color;
			this.alpha=in_alpha;
			this.blurX=in_blurX;
			this.blurY=in_blurX;
			this.strength=in_strength;
			this.quality=in_quality;
			this.inner=in_inner;
			this.knockout=in_knockout;
			this.hideObject=in_hideObject;
		}

		__class(DropShadowFilter,'iflash.filters.DropShadowFilter',false,_super);
		var __proto=DropShadowFilter.prototype;
		__proto.clone=function(){
			return new DropShadowFilter(this.distance,this.angle,this.color,this.alpha,this.blurX,this.blurY,this.strength,this.quality,this.inner,this.knockout,this.hideObject);
		}

		__proto.__preApplyFilter=function(dec){
			var distanceX=this.distance *Math.sin(2 *Math.PI *this.angle / 360.0);
			var distanceY=this.distance *Math.cos(2 *Math.PI *this.angle / 360.0);
			var blurRadius=Math.max(this.blurX,this.blurY,this.strength);
			dec.shadowOffsetX=distanceX;
			dec.shadowOffsetY=distanceY;
			dec.shadowBlur=blurRadius;
			dec.shadowColor="rgba("+((this.color >> 16)& 0xFF)+","+((this.color >> 8)& 0xFF)+","+(this.color & 0xFF)+","+this.alpha+")";
		}

		DropShadowFilter.DEGREES_FULL_RADIUS=360.0;
		return DropShadowFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/mx/core/bytearrayasset.as
	//class mx.core.ByteArrayAsset extends iflash.utils.ByteArray
	var ByteArrayAsset=(function(_super){
		function ByteArrayAsset(){
			ByteArrayAsset.__super.call(this);
			console.log("ByteArrayAsset");
		}

		__class(ByteArrayAsset,'mx.core.ByteArrayAsset',false,_super);
		return ByteArrayAsset;
	})(ByteArray)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/gradientbevelfilter.as
	//class iflash.filters.GradientBevelFilter extends iflash.filters.BitmapFilter
	var GradientBevelFilter=(function(_super){
		function GradientBevelFilter(distance,angle,colors,alphas,ratios,blurX,blurY,strength,quality,type,knockout){
			this.alphas=null;
			this.angle=NaN;
			this.blurX=NaN;
			this.blurY=NaN;
			this.colors=null;
			this.distance=NaN;
			this.knockout=false;
			this.quality=0;
			this.ratios=null;
			this.strength=NaN;
			this.type=null;
			(distance===void 0)&& (distance=4);
			(angle===void 0)&& (angle=45);
			(blurX===void 0)&& (blurX=4);
			(blurY===void 0)&& (blurY=4);
			(strength===void 0)&& (strength=1);
			(quality===void 0)&& (quality=1);
			(type===void 0)&& (type="inner");
			(knockout===void 0)&& (knockout=false);
			GradientBevelFilter.__super.call(this,"GradientBevelFilter");
			this.distance=distance;
			this.angle=angle;
			this.colors=colors;
			this.alphas=alphas;
			this.ratios=ratios;
			this.blurX=blurX;
			this.blurY=blurY;
			this.strength=strength;
			this.quality=quality;
			this.type=type;
			this.knockout=knockout;
		}

		__class(GradientBevelFilter,'iflash.filters.GradientBevelFilter',false,_super);
		return GradientBevelFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/gradientglowfilter.as
	//class iflash.filters.GradientGlowFilter extends iflash.filters.BitmapFilter
	var GradientGlowFilter=(function(_super){
		function GradientGlowFilter(distance,angle,colors,alphas,ratios,blurX,blurY,strength,quality,type,knockout){
			this.alphas=null;
			this.angle=NaN;
			this.blurX=NaN;
			this.blurY=NaN;
			this.colors=null;
			this.distance=NaN;
			this.knockout=false;
			this.quality=0;
			this.ratios=null;
			this.strength=NaN;
			this.type=null;
			(distance===void 0)&& (distance=4);
			(angle===void 0)&& (angle=45);
			(blurX===void 0)&& (blurX=4);
			(blurY===void 0)&& (blurY=4);
			(strength===void 0)&& (strength=1);
			(quality===void 0)&& (quality=1);
			(type===void 0)&& (type="inner");
			(knockout===void 0)&& (knockout=false);
			GradientGlowFilter.__super.call(this,"GradientGlowFilter");
			this.distance=distance;
			this.colors=colors;
			this.alphas=alphas;
			this.ratios=ratios;
			this.blurX=blurX;
			this.blurY=blurY;
			this.strength=strength;
			this.quality=quality;
			this.type=type;
			this.knockout=knockout;
		}

		__class(GradientGlowFilter,'iflash.filters.GradientGlowFilter',false,_super);
		return GradientGlowFilter;
	})(BitmapFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/runner/onecmddatauseid.as
	//class iflash.laya.runner.OneCmdDataUseId extends iflash.laya.runner.OneCmdData
	var OneCmdDataUseId=(function(_super){
		function OneCmdDataUseId(){
			this.id=null;
			OneCmdDataUseId.__super.call(this);
		}

		__class(OneCmdDataUseId,'iflash.laya.runner.OneCmdDataUseId',false,_super);
		var __proto=OneCmdDataUseId.prototype;
		__proto.applyTo=function(who,one){
			return this.oneFun._fun_.apply(one.ids[this.id],this.args);
		}

		return OneCmdDataUseId;
	})(OneCmdData)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/graphicelement.as
	//class iflash.text.engine.GraphicElement extends iflash.text.engine.ContentElement
	var GraphicElement=(function(_super){
		function GraphicElement(__args){
			GraphicElement.__super.call(this);
			var args=arguments;return }
		__class(GraphicElement,'iflash.text.engine.GraphicElement',false,_super);
		var __proto=GraphicElement.prototype;
		__getset(0,__proto,'elementHeight',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'elementWidth',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'graphic',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		return GraphicElement;
	})(ContentElement)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/groupelement.as
	//class iflash.text.engine.GroupElement extends iflash.text.engine.ContentElement
	var GroupElement=(function(_super){
		function GroupElement(__a){
			GroupElement.__super.call(this);
		}

		__class(GroupElement,'iflash.text.engine.GroupElement',false,_super);
		var __proto=GroupElement.prototype;
		__proto.getElementAt=LAYAFNNULL/*function(index){return null}*/
		__proto.getElementAtCharIndex=LAYAFNNULL/*function(charIndex){return null}*/
		__proto.getElementIndex=LAYAFN0/*function(element){return 0}*/
		__proto.groupElements=LAYAFNNULL/*function(beginIndex,endIndex){return null}*/
		__proto.mergeTextElements=LAYAFNNULL/*function(beginIndex,endIndex){return null}*/
		__proto.replaceElements=LAYAFNNULL/*function(beginIndex,endIndex,newElements){return null}*/
		__proto.setElements=LAYAFNVOID/*function(value){}*/
		__proto.splitTextElement=LAYAFNNULL/*function(elementIndex,splitIndex){return null}*/
		__proto.ungroupElements=LAYAFNVOID/*function(groupIndex){}*/
		__getset(0,__proto,'elementCount',LAYAFN0/*function(){return 0}*/);
		return GroupElement;
	})(ContentElement)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textelement.as
	//class iflash.text.engine.TextElement extends iflash.text.engine.ContentElement
	var TextElement=(function(_super){
		function TextElement(__a){
			TextElement.__super.call(this);
		}

		__class(TextElement,'iflash.text.engine.TextElement',false,_super);
		var __proto=TextElement.prototype;
		__proto.replaceText=LAYAFNVOID/*function(beginIndex,endIndex,newText){}*/
		__getset(0,__proto,'text',_super.prototype._$get_text,LAYAFNVOID/*function(value){}*/);
		return TextElement;
	})(ContentElement)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/spacejustifier.as
	//class iflash.text.engine.SpaceJustifier extends iflash.text.engine.TextJustifier
	var SpaceJustifier=(function(_super){
		function SpaceJustifier(locale,lineJustification,letterSpacing){
			(locale===void 0)&& (locale="en");
			(lineJustification===void 0)&& (lineJustification="unjustified");
			(letterSpacing===void 0)&& (letterSpacing=false);
			SpaceJustifier.__super.call(this,locale,lineJustification);
		}

		__class(SpaceJustifier,'iflash.text.engine.SpaceJustifier',false,_super);
		var __proto=SpaceJustifier.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'letterSpacing',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'maximumSpacing',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'minimumSpacing',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'optimumSpacing',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		return SpaceJustifier;
	})(TextJustifier)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/avm1movie.as
	//class iflash.display.AVM1Movie extends iflash.display.DisplayObject
	var AVM1Movie=(function(_super){
		function AVM1Movie(){
			AVM1Movie.__super.call(this);
		}

		__class(AVM1Movie,'iflash.display.AVM1Movie',false,_super);
		var __proto=AVM1Movie.prototype;
		__proto.addCallback=LAYAFNVOID/*function(functionName,closure){}*/
		__proto.call=function(functionName,__rest){}
		return AVM1Movie;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/bitmap.as
	//class iflash.display.Bitmap extends iflash.display.DisplayObject
	var Bitmap=(function(_super){
		function Bitmap(bitmapData,pixelSnapping,smoothing){
			this._bitmapData_=null;
			this._setDraw_=false;
			this._scaleY_=1;
			this._scaleX_=1;
			(pixelSnapping===void 0)&& (pixelSnapping="auto");
			(smoothing===void 0)&& (smoothing=false);
			Bitmap.__super.call(this);
			bitmapData&&(this.bitmapData=bitmapData);
		}

		__class(Bitmap,'iflash.display.Bitmap',false,_super);
		var __proto=Bitmap.prototype;
		__proto._paintChild_=function(context,x,y,w,h){
			this._bitmapData_ && this._bitmapData_.paint(context,x,y,w,h);
		}

		__proto.lyclone=function(){
			var b=new Bitmap(this._bitmapData_);
			return b;
		}

		__getset(0,__proto,'bitmapData',function(){
			return this._bitmapData_;
			},function(value){
			if(value){
				this._bitmapData_=value;
				this._width_=Math.abs(this._bitmapData_.width*this._scaleX_);
				this._height_=Math.abs(this._bitmapData_.height *this._scaleY_);
				this._modle_.size(this._width_ ,this._height_);
				this._type2_ |=(0x1 | 0x4);
				if (Laya.RENDERBYCANVAS && !this._setDraw_){
					this._setDraw_=true;
					DisplayUnit._insertUnit_(this,DrawBitmapData._DEFAULT_);
				}
				else if (!Laya.RENDERBYCANVAS){
					this.bitmapData._createCMD_();
					if(this.bitmapData.type==/*iflash.display.BitmapData.CANVAS*/1){
						this._modle_.virtualBitmap(null);
						this._modle_["conchVirtualBitmap"]=null;
						this._modle_.image(this.bitmapData._canvas_,true)
					}
					else{
						this._modle_.image(null);
						this._modle_.vcanvas(this.bitmapData._canvas_);
					}
				}
			}
			else if(this._bitmapData_){
				this._bitmapData_=value;
				if(!Laya.RENDERBYCANVAS){
					this._modle_.virtualBitmap(null);
					this._modle_["conchVirtualBitmap"]=null;
				}
			}
		});

		__getset(0,__proto,'isReadyForDraw',function(){
			return this.bitmapData!=null;
		});

		__getset(0,__proto,'width',_super.prototype._$get_width,function(w){
			if(this._width_==w)return;
			var oldW=this._width_/this._scaleX_;
			oldW &&(this._scaleX_=w / oldW);
			this._width_=Math.abs(w);
			this._modle_.size(this._width_,this._height_);
			this._type2_ |=(0x1 | 0x4);
		});

		__getset(0,__proto,'height',_super.prototype._$get_height,function(h){
			if(this._height_==h)
				return;
			var oldH=this._height_/this._scaleY_;
			oldH &&(this._scaleY_=h / oldH);
			this._height_=Math.abs(h);
			this._modle_.size(this._width_,this._height_);
			this._type2_ |=(0x1 | 0x4);
		});

		__getset(0,__proto,'pixelSnapping',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'scaleX',function(){
			return this._scaleX_
			},function(value){
			var oldW=NaN;
			if(this._width_*this._scaleX_==0&&this.bitmapData)oldW=this.bitmapData.width;
			else oldW=this._width_/this._scaleX_;
			this._scaleX_=value;
			this._width_=Math.abs(oldW *value);
			this._modle_.size(this._width_,this._height_);
			_super.prototype._$set_scaleX.call(this,this._scaleX_>0?1:-1);
		});

		__getset(0,__proto,'scaleY',function(){
			return this._scaleY_;
			},function(value){
			var oldH=NaN
			if(this._height_*this._scaleY_==0&&this.bitmapData)oldH=this.bitmapData.height;
			else oldH=this._height_/this._scaleY_;
			this._scaleY_=value;
			this._height_=Math.abs(oldH *value);
			this._modle_.size(this._width_,this._height_);
			_super.prototype._$set_scaleY.call(this,this._scaleY_>0?1:-1);
		});

		__getset(0,__proto,'smoothing',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		return Bitmap;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/interactiveobject.as
	//class iflash.display.InteractiveObject extends iflash.display.DisplayObject
	var InteractiveObject=(function(_super){
		function InteractiveObject(){
			InteractiveObject.__super.call(this);
		}

		__class(InteractiveObject,'iflash.display.InteractiveObject',false,_super);
		var __proto=InteractiveObject.prototype;
		__proto.changeFocus=function(){
			if(this.stage==null)return;
			if(this.stage.focus!=this){
				this.repaint();
			}
		}

		__proto.repaint=function(){}
		__proto._hitTest_=function(_x,_y){
			var target=_super.prototype._hitTest_.call(this,_x,_y);
			if(target){
				return this.mouseEnabled?this:this.parent;
			}
			return null;
		}

		__getset(0,__proto,'mouseEnabled',function(){
			return (this._type_&0x40)!=0;
			},function(value){
			if(value)
				this._type_|=0x40;
			else
			this._type_&=~0x40;
		});

		__getset(0,__proto,'tabIndex',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'doubleClickEnabled',function(){
			return (this._type_&0x100)!=0;
			},function(value){
			if(value)
				this._type_|=0x100;
			else
			this._type_&=~0x100;
		});

		__getset(0,__proto,'tabEnabled',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'contextMenu',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(cm){}*/);
		return InteractiveObject;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/lyimageelement.as
	//class iflash.display.LyImageElement extends iflash.display.DisplayObject
	var LyImageElement=(function(_super){
		function LyImageElement(){
			this.src=null;
			this.assetUr=null;
			this.assetConfig=null;
			this._texture=null;
			this._image_=null
			this._content_=null;
			this.scale9Data=null;
			this.orgW=NaN;
			this.orgH=NaN;
			this.arrX=null;
			this.arrY=null;
			this.arrW=null;
			this.arrH=null;
			this.oArrX=null;
			this.oArrY=null;
			this.oArrW=null;
			this.oArrH=null;
			this.miniBitmapData=new BitmapData();
			this._image_=Browser.document.createElement("image");LyImageElement.__super.call(this);}
		__class(LyImageElement,'iflash.display.LyImageElement',false,_super);
		var __proto=LyImageElement.prototype;
		__proto.checkImg=LAYAFNVOID/*function(){}*/
		__proto._paintChild_=function(context,x,y,w,h){
			var bitmapdata=this.miniBitmapData;
			bitmapdata && bitmapdata.paint && bitmapdata.paint.call(bitmapdata,context,x,y,w,h);
		}

		__proto._init_=function(){
			if ((this._type_ & 0x2000)!=0)return;
			if (Laya.RENDERBYCANVAS){
				DrawImageElement.insertUnit(this);
			}
			else{
				if(this._modle_==IModel.__DEFAULT__){
					this.__initModule();
				}
				this._modle_.size(this._width_,this._height_);
			}
			this.miniBitmapData.size(this._width_,this._height_);
			if (this.scale9Data){
				this.miniBitmapData.setImage(this._image_);
				this.miniBitmapData._canvas_.removeImage();
				this._modle_.vcanvas(this.miniBitmapData._canvas_);
			}
			else if (!this.assetConfig){
				this._modle_.image(this._image_);
				this.miniBitmapData.setImage(this._image_);
			}
			this._type_|=0x2000;
		}

		__proto.onLoad=function(__args){
			var args=arguments;
			this._type_|=0x800;
			this.dispatchEvent(new Event("lyImageLoadedEvent"));
			this.readyWork();
		}

		__proto.isReady=function(readyCallBack){
			if(this.isTexture())return true;
			if(!this._image_)return false;
			return this._image_.isReady();
		}

		__proto.isTexture=function(){
			return this.assetConfig!=null;
		}

		__proto._lyToBody_=function(){
			if(!(this._image_.isReady())){
				this._image_.onload=iflash.method.bind(this,this.onLoad);
			}
			else {
				if (!this.assetConfig){
					this.miniBitmapData&&!this.miniBitmapData._canvas_&&this.miniBitmapData.setImage(this._image_);
				}
				this._type_|=0x800;
			}
			if(this.assetConfig!=null&&this.miniBitmapData&&this._texture==null){
				this.initTexture();
			}
			if(!this.assetConfig&&!(this._image_.isReady())){
				this._image_.src=this.src;
			}
		}

		__proto.initTexture=function(){
			if(this._texture)return;
			var tImg;
			tImg=TextureManager.getInstance().getTexture(this.assetUr);
			this._texture=tImg;
			this.miniBitmapData.destroy();
			this.miniBitmapData._createCMD_();
			this.miniBitmapData._canvas_.drawImage(this.texture,this.assetConfig.x,this.assetConfig.y,this.assetConfig.width,this.assetConfig.height,0,0,this.assetConfig.width,this.assetConfig.height);
			this._modle_.vcanvas (this.miniBitmapData._canvas_);
			this._type_|=0x800;
		}

		__proto.calcScaleData=function(){
			var x1=this.scale9Data.x1-this.x;
			var y1=this.scale9Data.y1-this.y;
			var x2=this.scale9Data.x2-this.x;
			var y2=this.scale9Data.y2-this.y;
			if(this.arrX==null){
				this.arrX=[[],[],[]];
				this.arrY=[[],[],[]];
				this.arrW=[[],[],[]];
				this.arrH=[[],[],[]];
				this.oArrX=[[],[],[]];
				this.oArrY=[[],[],[]];
				this.oArrW=[[],[],[]];
				this.oArrH=[[],[],[]];
			};
			var orgW_x2=this.orgW-x2;
			this.oArrW[2][0]=this.oArrW[1][0]=this.oArrW[0][0]=x1;
			this.oArrW[2][1]=this.oArrW[1][1]=this.oArrW[0][1]=x2-x1;
			this.oArrW[2][2]=this.oArrW[1][2]=this.oArrW[0][2]=orgW_x2;
			var orgH_y2=this.orgH-y2;
			this.oArrH[0][2]=this.oArrH[0][1]=this.oArrH[0][0]=y1;
			this.oArrH[1][2]=this.oArrH[1][1]=this.oArrH[1][0]=y2-y1;
			this.oArrH[2][2]=this.oArrH[2][1]=this.oArrH[2][0]=orgH_y2;
			this.oArrX[2][0]=this.oArrX[1][0]=this.oArrX[0][0]=0;
			this.oArrX[2][1]=this.oArrX[1][1]=this.oArrX[0][1]=x1;
			this.oArrX[2][2]=this.oArrX[1][2]=this.oArrX[0][2]=x2;
			this.oArrY[0][2]=this.oArrY[0][1]=this.oArrY[0][0]=0;
			this.oArrY[1][2]=this.oArrY[1][1]=this.oArrY[1][0]=y1;
			this.oArrY[2][2]=this.oArrY[2][1]=this.oArrY[2][0]=y2;
			var w01_23=this.orgW-this.oArrW[2][1];
			var h01_23=this.orgH-this.oArrH[1][2];
			if(this.width < w01_23){
				var ssw=this.width/w01_23;
				var ssX1=x1 *ssw;
				this.arrX[2][0]=this.arrX[1][0]=this.arrX[0][0]=0;
				this.arrX[2][2]=this.arrX[1][2]=this.arrX[0][2]=this.arrX[2][1]=this.arrX[1][1]=this.arrX[0][1]=ssX1;
				this.arrW[2][0]=this.arrW[1][0]=this.arrW[0][0]=ssX1;
				this.arrW[2][1]=this.arrW[1][1]=this.arrW[0][1]=0;
				this.arrW[2][2]=this.arrW[1][2]=this.arrW[0][2]=this.width-ssX1;
			}
			else{
				this.arrX[2][0]=this.arrX[1][0]=this.arrX[0][0]=0;
				this.arrX[2][1]=this.arrX[1][1]=this.arrX[0][1]=x1;
				this.arrX[2][2]=this.arrX[1][2]=this.arrX[0][2]=this.width-orgW_x2;
				this.arrW[2][0]=this.arrW[1][0]=this.arrW[0][0]=x1;
				this.arrW[2][1]=this.arrW[1][1]=this.arrW[0][1]=this.width-x1-orgW_x2;
				this.arrW[2][2]=this.arrW[1][2]=this.arrW[0][2]=orgW_x2;
			}
			if(this.height < h01_23){
				var ssh=this.height/h01_23;
				var ssY1=y1 *ssh;
				this.arrY[0][2]=this.arrY[0][1]=this.arrY[0][0]=0;
				this.arrY[1][2]=this.arrY[1][1]=this.arrY[1][0]=this.arrY[2][2]=this.arrY[2][1]=this.arrY[2][0]=ssY1;
				this.arrH[0][2]=this.arrH[0][1]=this.arrH[0][0]=ssY1;
				this.arrH[1][2]=this.arrH[1][1]=this.arrH[1][0]=0;
				this.arrH[2][2]=this.arrH[2][1]=this.arrH[2][0]=this.height-ssY1;
			}
			else{
				this.arrY[0][2]=this.arrY[0][1]=this.arrY[0][0]=0;
				this.arrY[1][2]=this.arrY[1][1]=this.arrY[1][0]=y1;
				this.arrY[2][2]=this.arrY[2][1]=this.arrY[2][0]=this.height-orgH_y2;
				this.arrH[0][2]=this.arrH[0][1]=this.arrH[0][0]=y1;
				this.arrH[1][2]=this.arrH[1][1]=this.arrH[1][0]=this.height-y1-orgH_y2;
				this.arrH[2][2]=this.arrH[2][1]=this.arrH[2][0]=orgH_y2;
			}
			if (Laya.CONCHVER){
				var context=this.miniBitmapData._canvas_;
				context.clear();
				for(var i=0;i<3;i++){
					for(var j=0;j<3;j++){
						var u=this.oArrX[i][j],v=this.oArrY[i][j],www=this.oArrW[i][j],hhh=this.oArrH[i][j],
						xx=this.arrX[i][j],yy=this.arrY[i][j],ww=this.arrW[i][j],hh=this.arrH[i][j];
						if(www<1 || hhh<1 || ww<1 || hh<1)continue ;
						if(this.isTexture()){
							var uP=this.assetConfig.x;
							var vP=this.assetConfig.y;
							context.drawImage(this.texture,u+uP,v+vP,www,hhh,xx,yy,ww,hh);
						}
						else{
							context.drawImage(this._image_,u,v,www,hhh,xx,yy,ww,hh);
						}
					}
				}
			}
		}

		__proto.__preload__=function(){
			this._lyToBody_();
		}

		__proto.lyclone=function(){
			var result=new LyImageElement();
			result._image_=this._image_;
			result.orgW=this.orgW;
			result.orgH=this.orgH;
			result._width_=this.orgW;
			result._height_=this.orgH;
			result.src=this.src;
			result.assetConfig=this.assetConfig;
			result.assetUr=this.assetUr;
			return result;
		}

		__proto.layaDestory=function(){
			_super.prototype.layaDestory.call(this);
			this._image_ && (this._image_.onload !=null)&& (this._image_.onload=null);
			this._image_=null;
			this.miniBitmapData&&this.miniBitmapData.clear();
			this.miniBitmapData=null;
			this.scale9Data=null;
			this._texture=null;
		}

		__getset(0,__proto,'isReadyForDraw',function(){
			return this.isReady();
		});

		__getset(0,__proto,'width',function(){
			return this._width_
			},function(w){
			this._width_=w;
			this.scale9Data&&this.calcScaleData();
		});

		__getset(0,__proto,'texture',function(){
			if(this._texture==null){
				this.initTexture();
			}
			return this._texture;
		});

		__getset(0,__proto,'height',function(){
			return this._height_;
			},function(h){
			this._height_=h;
			this.scale9Data&&this.calcScaleData();
		});

		return LyImageElement;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/shape.as
	//class iflash.display.Shape extends iflash.display.DisplayObject
	var Shape=(function(_super){
		function Shape(){
			this._sc9Y_=1;
			this._sc9X_=1;
			this._scaleY_=1;
			this._scaleX_=1;
			this._image_=null;
			this._content_=null;
			this._graphics=null;
			this._scale9Data=null;
			Shape.__super.call(this);
		}

		__class(Shape,'iflash.display.Shape',false,_super);
		var __proto=Shape.prototype;
		__proto._paintGraphics_=function(context,x,y,w,h){
			if (this._graphics){
				var grapics=this._graphics;
				if(grapics.isReady()){
					grapics._canvas_.paint(context,x,y,w,h);
				}
				this._paintChild_(context,x,y,w,h);
			}
			else
			this._paintChild_(context,x,y,w,h);
		}

		__proto._paintChild_=function(context,x,y,w,h){
			var data=this._image_;
			data&&(data.conchPaint(context,x+data._left_,y+data._top_));
		}

		__proto._init_=function(content){
			if (!content)
				return;
			this._content_=content;
			if(content.data.scale9Data){
				this._image_=content.data.lyclone();
				this._image_._width_=this._image_.orgW=content.data.width;
				this._image_._height_=this._image_.orgH=content.data.height;
				this.scale9Data=content.data.scale9Data.scale9Data;
			}
			else{
				this._image_=content.data;
			}
			if(DisplayObject.initModule){
				this._image_._init_();
				if(!this.scale9Data&&this._modle_.quoteEx)
					this._modle_.quoteEx(this._image_._modle_,true);
				else
				this._modle_.quote(this._image_._modle_);
				this._image_.matrix=content.matrix;
			}
			this._width_=content.data.width;
			this._height_=content.data.height;
			this._modle_.size(this._width_,this._height_);
			Laya.RENDERBYCANVAS && ((this._type_ & 0x4)==0)&& (DrawShape.insertUnit(this),this._type_ |=0x4);
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if (!targetSpace)
				targetSpace=this;
			if (!resultRect)
				resultRect=DisplayObject.HELPER_RECTANGLET;
			if (!this._image_){
				resultRect.setTo(0,0,0,0);
				DisplayObject.HELPER_POINT.setTo(0,0);
				resultRect.setTo(0,0,0,0);
			}
			else{
				resultRect.setTo(this._image_.x,this._image_.y,this._image_._width_ ,this._image_._height_);
			}
			if (this._graphics){
				DisplayObject.HELPER_RECTANGLET_ALT.setTo(this._graphics.x,this._graphics.y,this._graphics.width ,this._graphics.height);
				resultRect._union_(DisplayObject.HELPER_RECTANGLET_ALT);
			}
			return resultRect;
		}

		__proto._lyToBody_=function(){
			if(this.scale9Data){
				this._image_ &&(this._image_.scale9Data=this.scale9Data);
			}
			this._image_ && this._image_._lyToBody_();
			_super.prototype._lyToBody_.call(this);
		}

		__proto._lyUnToBody_=function(){
			this._image_ && (this._image_._lyUnToBody_());
			_super.prototype._lyUnToBody_.call(this);
		}

		__proto.lyclone=function(){
			var s=new Shape();
			s._init_(this._content_);
			return s;
		}

		__proto.setupReadyNoticeWork=function(ifSelfNotice){
			(ifSelfNotice===void 0)&& (ifSelfNotice=false);
			if(this.isReadyForDraw)return;
			this._needNotice=ifSelfNotice;
			this._image_.setReadyForDrawCall(__bind(this,this.readyWork));
		}

		__proto.layaDestory=function(){
			_super.prototype.layaDestory.call(this);
			this._content_=null;
			this._image_=null;
			this._scale9Data=null;
		}

		__getset(0,__proto,'isReadyForDraw',function(){
			return this._image_.isReadyForDraw;
		});

		__getset(0,__proto,'scale9Data',function(){
			return this._scale9Data;
			},function(value){
			this._scale9Data=value;
			if (this._image_){
				this._image_.scale9Data=value;
				this._image_._modle_.image(null);
				if(this._image_.miniBitmapData._canvas_)
					this._image_._modle_.vcanvas(this._image_.miniBitmapData._canvas_);
			}
		});

		__getset(0,__proto,'width',function(){
			return this.scale9Data?this._width_:_super.prototype._$get_width.call(this);
			},function(w){
			if (this._width_==w)
				return;
			if(this.scale9Data){
				this._scaleX_=1;
				this._width_=w;
				this._image_&&(this._image_.width=w);
				return;
			};
			var oldW=this._width_ / this._scaleX_;
			if (this._width_ *this._scaleX_==0 && this.graphics)
				oldW=this.graphics.width;
			oldW && (this._scaleX_=w / oldW);
			_super.prototype._$set_scaleX.call(this,this._scaleX_);
			this._modle_.size(this._width_,this._height_);
			this._type2_ |=(0x1 | 0x4);
		});

		__getset(0,__proto,'graphics',function(){
			if (!this._graphics)
				this._graphics=new Graphics(this);
			return this._graphics;
		});

		__getset(0,__proto,'height',function(){
			return this.scale9Data?this._height_:_super.prototype._$get_height.call(this);
			},function(h){
			if (this._height_==h)
				return;
			if(this.scale9Data){
				this._scaleY_=1;
				this._height_=h;
				this._image_&&(this._image_.height=h);
				this._modle_.size(this._width_,this._height_);
				this._type2_ |=(0x1 | 0x4);
				return;
			};
			var oldH=NaN;
			if (this._height_ *this._scaleY_==0 && this.graphics)
				oldH=this.graphics.height;
			else
			oldH=this._height_ / this._scaleY_;
			oldH && (this._scaleY_=h / oldH);
			_super.prototype._$set_scaleY.call(this,this._scaleY_);
			this._modle_.size(this._width_,this._height_);
			this._type2_ |=(0x1 | 0x4);
		});

		__getset(0,__proto,'scaleX',function(){
			return this.scale9Data?this._sc9X_:this._scaleX_;
			},function(value){
			var oldW=NaN;
			if (this._width_ *this._scaleX_==0 && this.graphics)
				oldW=this.graphics.width;
			else
			oldW=this._width_ / this._scaleX_;
			this._width_=Math.abs(oldW *value);
			if(this.scale9Data)
			{_super.prototype._$set_scaleX.call(this,this._scaleX_=1);
				this._image_&&(this._image_.width=this._width_);
				this._sc9X_=value;
				return;
			}
			this._scaleX_=value;
			this._modle_.size(this._width_,this._height_);
			_super.prototype._$set_scaleX.call(this,this._scaleX_);
			this._type2_ |=(0x1 | 0x4);
		});

		__getset(0,__proto,'scaleY',function(){
			return this.scale9Data?this._sc9Y_:this._scaleY_;
			},function(value){
			var oldH=NaN;
			if (this._height_ *this._scaleY_==0 && this.graphics)
				oldH=this.graphics.height;
			else
			oldH=this._height_ / this._scaleY_;
			this._height_=Math.abs(oldH *value);
			if(this.scale9Data){
				_super.prototype._$set_scaleX.call(this,this._scaleY_=1);
				this._image_&&(this._image_.height=this._height_);
				this._sc9Y_=value;
				return;
			}
			this._scaleY_=value;
			this._modle_.size(this._width_,this._height_);
			_super.prototype._$set_scaleY.call(this,this._scaleY_);
			this._type2_ |=(0x1 | 0x4);
		});

		return Shape;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/laya/body.as
	//class iflash.laya.Body extends iflash.display.DisplayObject
	var Body=(function(_super){
		function Body(){
			this._stage_=null;
			Body.__super.call(this);
			this._stage_=Stage.stage;
			this._modle_.insert(this._stage_._modle_,0,1);
			if(Laya.CONCHVER){
				var editborder;
				/*__JS__ */conch.editborder=editborder=conch.createNode();
				this._modle_.insert(editborder,1,2);
				editborder.border("#28FFFA");
				editborder.bgcolor("#FFFFFF");
				editborder.show(false);
			}
			Laya.CONCHVER&&/*__JS__ */conch.setRootNode(this._modle_);
		}

		__class(Body,'iflash.laya.Body',false,_super);
		var __proto=Body.prototype;
		__proto._lyPaint_=function(context,x,y){
			var m=this.matrix;
			if (!m || !m.isTransform()){
				context.beginPath();
				if(Stage.stage.scaleMode==/*iflash.display.StageScaleMode.NO_SCALE*/"noScale"){
					context.rect(0,0,Stage.stage.stageWidth,Stage.stage.stageHeight);
				}
				else{
					context.rect(this._left_,this._top_,Stage.stage.width,Stage.stage.height);
				}
				context.clip();
				this._stage_._lyPaint_(context,this._left_,this._top_);
				return;
			}
			context.save();
			x=-this._left_;
			y=-this._top_;
			if (x !=0 || y !=0){
				context.translate(x,y);
				context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
				context.translate(-x,-y);
			}
			else {
				context.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
			}
			context.beginPath();
			var xx=x+this._left_/this.scaleX,yy=y+this._top_/this.scaleY;
			context.rect(xx,yy,Stage.stage.stageWidth,Stage.stage.stageHeight);
			context.clip();
			this._stage_._lyPaint_(context,xx,yy);
			context.restore();
		}

		return Body;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/textures/cubetexture.as
	//class iflash.display3D.textures.CubeTexture extends iflash.display3D.textures.TextureBase
	var CubeTexture=(function(_super){
		function CubeTexture(){
			CubeTexture.__super.call(this);
		}

		__class(CubeTexture,'iflash.display3D.textures.CubeTexture',false,_super);
		var __proto=CubeTexture.prototype;
		__proto.uploadCompressedTextureFromByteArray=function(data,byteArrayOffset,async){
			(async===void 0)&& (async=false);
		}

		__proto.uploadFromBitmapData=function(source,side,miplevel){
			(miplevel===void 0)&& (miplevel=0);
		}

		__proto.uploadFromByteArray=function(data,byteArrayOffset,side,miplevel){
			(miplevel===void 0)&& (miplevel=0);
		}

		return CubeTexture;
	})(TextureBase)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/textures/rectangletexture.as
	//class iflash.display3D.textures.RectangleTexture extends iflash.display3D.textures.TextureBase
	var RectangleTexture=(function(_super){
		function RectangleTexture(){
			RectangleTexture.__super.call(this);
		}

		__class(RectangleTexture,'iflash.display3D.textures.RectangleTexture',false,_super);
		var __proto=RectangleTexture.prototype;
		__proto.uploadFromBitmapData=LAYAFNVOID/*function(source){}*/
		__proto.uploadFromByteArray=LAYAFNVOID/*function(data,byteArrayOffset){}*/
		return RectangleTexture;
	})(TextureBase)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/textures/texture.as
	//class iflash.display3D.textures.Texture extends iflash.display3D.textures.TextureBase
	var Texture=(function(_super){
		function Texture(width,height,format,optimizeForRenderToTexture,streamingLevels){
			this.m_optimizeForRenderToTexture=false;
			this.m_streamingLevels=0;
			this.webglContext=null;
			this.InternalFormat=[ 0x1908,0x8033,0x8363,0,0,0];
			Texture.__super.call(this);
			(streamingLevels===void 0)&& (streamingLevels=0);
			this.m_width=this.getNextPowerOfTwo(width);
			this.m_height=this.getNextPowerOfTwo(height);
			this.m_format=this.InternalFormat[Context3DTextureFormat[format]];
			this.m_optimizeForRenderToTexture=optimizeForRenderToTexture;
			this.m_streamingLevels=streamingLevels;
			this.webglContext=Laya.document.canvas3D.context3D;
			this.m_internalFormat=this.InternalFormat[Context3DTextureFormat[format]];
			this.webglContext.pixelStorei(this.webglContext.UNPACK_ALIGNMENT,1);
			this.m_texID=this.webglContext.createTexture();
			if(this.m_texID !=null){
				this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,this.m_texID);
				this.webglContext.texParameteri (this.webglContext.TEXTURE_2D,this.webglContext.TEXTURE_MIN_FILTER,this.webglContext.LINEAR);
				this.webglContext.texParameteri (this.webglContext.TEXTURE_2D,this.webglContext.TEXTURE_MAG_FILTER,this.webglContext.LINEAR);
				this.webglContext.texParameteri (this.webglContext.TEXTURE_2D,this.webglContext.TEXTURE_WRAP_S,this.webglContext.CLAMP_TO_EDGE);
				this.webglContext.texParameteri (this.webglContext.TEXTURE_2D,this.webglContext.TEXTURE_WRAP_T,this.webglContext.CLAMP_TO_EDGE);
				this.webglContext.texImage2D(this.webglContext.TEXTURE_2D,0,this.m_internalFormat,this.m_width,this.m_height,
				0,this.m_internalFormat,this.webglContext.UNSIGNED_BYTE,null);
			}
		}

		__class(Texture,'iflash.display3D.textures.Texture',false,_super);
		var __proto=Texture.prototype;
		__proto.uploadCompressedTextureFromByteArray=function(data,byteArrayOffset,async){
			(async===void 0)&& (async=false);
			var a=0;
		}

		__proto.uploadFromBitmapData=function(bmpData,miplevel){
			(miplevel===void 0)&& (miplevel=0);
			if (bmpData && ((bmpData instanceof iflash.display.BitmapData )))
				bmpData=bmpData.getCanvas();
			this.webglContext.bindTexture(this.webglContext.TEXTURE_2D,this.m_texID);
			this.webglContext.pixelStorei(this.webglContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL,true);
			this.webglContext.texSubImage2D(this.webglContext.TEXTURE_2D,0,0,0,this.webglContext.RGBA,this.webglContext.UNSIGNED_BYTE,bmpData);
		}

		__proto.uploadFromByteArray=function(data,byteArrayOffset,miplevel){
			(miplevel===void 0)&& (miplevel=0);
			var a=0;
		}

		__proto.getNextPowerOfTwo=function(number){
			if (((typeof number=='number')&& Math.floor(number)==number)&& number > 0 && (number & (number-1))==0)
				return number;
			else{
				var result=1;
				number-=0.000000001;
				while (result < number)
				result<<=1;
				return result;
			}
		}

		return Texture;
	})(TextureBase)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display3d/textures/videotexture.as
	//class iflash.display3D.textures.VideoTexture extends iflash.display3D.textures.TextureBase
	var VideoTexture=(function(_super){
		function VideoTexture(){
			this._videoHeight=240;
			this._videoWidth=320;
			VideoTexture.__super.call(this);
		}

		__class(VideoTexture,'iflash.display3D.textures.VideoTexture',false,_super);
		var __proto=VideoTexture.prototype;
		__proto.attachCamera=function(theCamera){
			throw new Error("");
		}

		__getset(0,__proto,'videoHeight',function(){
			return this._videoHeight;
			},function(value){
			this._videoHeight=value;
		});

		__getset(0,__proto,'videoWidth',function(){
			return this._videoWidth;
			},function(value){
			this._videoWidth=value;
		});

		return VideoTexture;
	})(TextureBase)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/media/video.as
	//class iflash.media.Video extends iflash.display.DisplayObject
	var Video=(function(_super){
		function Video(width,height){
			(width===void 0)&& (width=320);
			(height===void 0)&& (height=240);
			Video.__super.call(this);
		}

		__class(Video,'iflash.media.Video',false,_super);
		var __proto=Video.prototype;
		__proto.attachCamera=LAYAFNVOID/*function(camera){}*/
		__proto.attachNetStream=LAYAFNVOID/*function(netStream){}*/
		__proto.clear=LAYAFNVOID/*function(){}*/
		__getset(0,__proto,'deblocking',LAYAFN0/*function(){return 0}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'smoothing',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'videoHeight',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'videoWidth',LAYAFN0/*function(){return 0}*/);
		return Video;
	})(DisplayObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filesystem/file.as
	//class iflash.filesystem.File extends iflash.net.FileReference
	var File=(function(_super){
		function File(path,statusHandler){
			this._isApplicationDirectory=false;
			this._isApplicationStorageDirectory=false;
			this.downloaded=false;
			this.exists=false;
			this._isDirectory=false;
			this.isHidden=false;
			this.isPackage=false;
			this.isSymbolicLink=false;
			this.lineEnding=null;
			this.nativePath=null;
			this.parent=null;
			this.separator=null;
			this.spaceAvailable=NaN;
			this.systemCharset=null;
			this._url=null;
			this._extension=null;
			this._name=null;
			this._statusHandler=null;
			this.urlLoader=null;
			this._data=null;
			File.__super.call(this);
			var $this=this;
			if (path==null)
				return;
			if (statusHandler !=null)
				this._statusHandler=statusHandler;
			this.url=path;
		}

		__class(File,'iflash.filesystem.File',false,_super);
		var __proto=File.prototype;
		__proto.load=function(){
			if (this.nativePath.lastIndexOf("/")< this.nativePath.length-1){
				this.urlLoader=new URLLoader();
				this.urlLoader.dataFormat=/*iflash.net.URLLoaderDataFormat.BINARY*/"binary";
				this.urlLoader.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onFileStatusComplete));
				this.urlLoader.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onFileStatusIOError));
				this.urlLoader.load(new URLRequest(this.nativePath));
			}
		}

		__proto.onFileStatusIOError=function(event){
			this.exists=false;
			this.urlLoader.close();
			this.dispatchEvent(new Event("fileStatusOk",true));
		}

		__proto.onFileStatusComplete=function(event){
			this.exists=true;
			this._data=event.target.data;
			this.urlLoader.close();
			this.dispatchEvent(new Event("fileStatusOk",true));
		}

		__proto.getDirectoryListing=function(){
			if (this._isApplicationStorageDirectory){
				return FileStorage.instance.getList(this._url.replace("app-storage:/",""))
			}
			else if (this._isApplicationDirectory){
				return null;
			}
			else{
				return null;
			}
		}

		__proto.resolvePath=function(path){
			if (this._isApplicationStorageDirectory){
				return new File(this._url+path);
			}
			else if (this._isApplicationDirectory){
				return new File(this._url+path);
			}
			else{
				return null;
			}
		}

		__proto.deleteFile=LAYAFNVOID/*function(){}*/
		__proto.deleteFileAsync=LAYAFNVOID/*function(){}*/
		__proto.deleteDirectory=function(deleteDirectoryContents){
			(deleteDirectoryContents===void 0)&& (deleteDirectoryContents=false);
		}

		__proto.copyTo=function(newLocation,overwrite){
			(overwrite===void 0)&& (overwrite=false);
		}

		__proto.moveTo=function(newLocation,overwrite){
			(overwrite===void 0)&& (overwrite=false);
		}

		__proto.deleteDirectoryAsync=function(deleteDirectoryContents){
			(deleteDirectoryContents===void 0)&& (deleteDirectoryContents=false);
		}

		__getset(0,__proto,'isDirectory',function(){
			return this._isDirectory;
		});

		__getset(0,__proto,'type',function(){
			return this._extension ? "."+this._extension :null;
		});

		__getset(0,__proto,'data',function(){
			return this._data;
		});

		__getset(0,__proto,'extension',function(){
			return this._extension;
		});

		__getset(0,__proto,'url',function(){
			return this._url;
			},function(value){
			var arr;
			if (value.search("[a-zA-Z]:\\/")==0){
				throw new Error("not support local file to read");
			}
			else if (value.indexOf("file:///")==0){
				throw new Error("not support local file to read");
				return;
				this._url=value;
				value=value.replace("file:///","").replace("\\/{2,99}","/");
				if (value.search("[a-zA-Z]:\\/")==0){
					arr=value.split("/");
					this.nativePath=arr.join("\\");
				}
				this._extension=value.lastIndexOf(".")>-1 ? value.substr(value.lastIndexOf(".")+1):null;
				this._name=value.lastIndexOf("/")>-1 ? value.substr(value.lastIndexOf("/")+1):null;
			}
			else if (value.indexOf("app:/")==0){
				this._isApplicationDirectory=true;
				this._isApplicationStorageDirectory=false;
				this._url=value;
				this.nativePath=(/*__JS__ */LAYABOX.APP_ROOT ? /*__JS__ */LAYABOX.APP_ROOT :"")+value.replace("app:/","");
				this._extension=value.lastIndexOf(".")>-1 ? value.substr(value.lastIndexOf(".")+1):null;
				this._name=value.lastIndexOf("/")>-1 ? value.substr(value.lastIndexOf("/")+1):null;
			}
			else if (value.indexOf("app-storage:/")==0){
				this._isApplicationDirectory=false;
				this._isApplicationStorageDirectory=true;
				this._url=value;
				this.nativePath=(/*__JS__ */LAYABOX.APP_ROOT ? /*__JS__ */LAYABOX.APP_ROOT :"")+value.replace("app-storage:/","");
				this._extension=value.lastIndexOf(".")>-1 ? value.substr(value.lastIndexOf(".")+1):null;
				this._name=value.lastIndexOf("/")>-1 ? value.substr(value.lastIndexOf("/")+1):null;
				this.exists=FileStorage.instance.fileExist(this._url.replace("app-storage:/",""));
				this._data=FileStorage.instance.getFile(this._url.replace("app-storage:/",""));
			}
			else{
				throw new Error("file address is invalid");
			}
		});

		__getset(0,__proto,'name',function(){
			return this._name;
		});

		__getset(1,File,'applicationDirectory',function(){
			return File._applicationDirectory;
		},iflash.net.FileReference._$SET_applicationDirectory);

		__getset(1,File,'systemCharset',LAYAFNSTR/*function(){return ""}*/,iflash.net.FileReference._$SET_systemCharset);
		__getset(1,File,'applicationStorageDirectory',function(){
			return File._applicationStorageDirectory;
		},iflash.net.FileReference._$SET_applicationStorageDirectory);

		__getset(1,File,'separator',function(){
			return "\\";
		},iflash.net.FileReference._$SET_separator);

		File.getRootDirectories=LAYAFNNULL/*function(){return null}*/
		File.createTempDirectory=function(){
			return new File();
		}

		File.createTempFile=function(){
			return new File();
		}

		File.lineEnding="\r\n";
		__static(File,
		['_applicationDirectory',function(){return this._applicationDirectory=new File("app:/");},'_applicationStorageDirectory',function(){return this._applicationStorageDirectory=new File("app-storage:/");}
		]);
		return File;
	})(FileReference)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/contextmenu.as
	//class iflash.ui.ContextMenu extends iflash.display.NativeMenu
	var ContextMenu=(function(_super){
		function ContextMenu(){
			ContextMenu.__super.call(this);
		}

		__class(ContextMenu,'iflash.ui.ContextMenu',false,_super);
		var __proto=ContextMenu.prototype;
		__proto.clone=function(){
			return new NativeMenu();
		}

		__proto.hideBuiltInItems=LAYAFNVOID/*function(){}*/
		__getset(0,__proto,'builtInItems',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'clipboardItems',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'clipboardMenu',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'customItems',LAYAFNARRAY/*function(){return []}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'link',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(1,ContextMenu,'isSupported',LAYAFNFALSE/*function(){return false}*/,iflash.display.NativeMenu._$SET_isSupported);
		return ContextMenu;
	})(NativeMenu)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/ui/contextmenuitem.as
	//class iflash.ui.ContextMenuItem extends iflash.display.NativeMenuItem
	var ContextMenuItem=(function(_super){
		function ContextMenuItem(caption,separatorBefore,enabled,visible){
			(separatorBefore===void 0)&& (separatorBefore=false);
			(enabled===void 0)&& (enabled=true);
			(visible===void 0)&& (visible=true);
			ContextMenuItem.__super.call(this);
		}

		__class(ContextMenuItem,'iflash.ui.ContextMenuItem',false,_super);
		var __proto=ContextMenuItem.prototype;
		__proto.clone=LAYAFNNULL/*function(){return null}*/
		__getset(0,__proto,'caption',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'separatorBefore',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'visible',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		return ContextMenuItem;
	})(NativeMenuItem)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/filters/glowfilter.as
	//class iflash.filters.GlowFilter extends iflash.filters.DropShadowFilter
	var GlowFilter=(function(_super){
		function GlowFilter(in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout){
			(in_color===void 0)&& (in_color=0);
			(in_alpha===void 0)&& (in_alpha=1.0);
			(in_blurX===void 0)&& (in_blurX=6.0);
			(in_blurY===void 0)&& (in_blurY=6.0);
			(in_strength===void 0)&& (in_strength=1.0);
			(in_quality===void 0)&& (in_quality=1);
			(in_inner===void 0)&& (in_inner=false);
			(in_knockout===void 0)&& (in_knockout=false);
			GlowFilter.__super.call(this,0,0,in_color,in_alpha,in_blurX,in_blurY,in_strength,in_quality,in_inner,in_knockout,false);
		}

		__class(GlowFilter,'iflash.filters.GlowFilter',false,_super);
		return GlowFilter;
	})(DropShadowFilter)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/embedimage.as
	//class iflash.display.EmbedImage extends iflash.display.Bitmap
	var EmbedImage=(function(_super){
		function EmbedImage(bitmapData,pixelSnapping,smoothing){
			this._loader=null;
			this._url=null;
			(pixelSnapping===void 0)&& (pixelSnapping="auto");
			(smoothing===void 0)&& (smoothing=false);
			EmbedImage.__super.call(this,bitmapData,pixelSnapping,smoothing);
		}

		__class(EmbedImage,'iflash.display.EmbedImage',false,_super);
		var __proto=EmbedImage.prototype;
		__proto.load=function(url){
			this._url=url;
			if (EmbedImage._imgMap[this._url] !=null){
				this.bitmapData=EmbedImage._imgMap[this._url];
				}else if (Boolean(this._url)){
				this._loader=new Loader();
				this._loader.contentLoaderInfo.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onComplete));
				this._loader.contentLoaderInfo.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onError));
				this._loader.load(new URLRequest(this._url),EmbedImage._loaderContent);
			}
		}

		__proto.onComplete=function(e){
			if (this._loader){
				var bmd=(this._loader.content).bitmapData;
				this.bitmapData=EmbedImage._imgMap[this._url]=bmd;
				this.clearLoader();
				this.readyWork();
			}
		}

		__proto.clearLoader=function(){
			this._loader.unloadAndStop();
			this._loader.contentLoaderInfo.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onComplete));
			this._loader.contentLoaderInfo.removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onError));
			this._loader=null;
		}

		__proto.onError=function(e){
			console.log("IO Error:"+this._url);
		}

		EmbedImage._imgMap={};
		__static(EmbedImage,
		['_loaderContent',function(){return this._loaderContent=new LoaderContext(false,ApplicationDomain.currentDomain);}
		]);
		return EmbedImage;
	})(Bitmap)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/displayobjectcontainer.as
	//class iflash.display.DisplayObjectContainer extends iflash.display.InteractiveObject
	var DisplayObjectContainer=(function(_super){
		function DisplayObjectContainer(){
			this.scale9Data=null;
			this._childs_=EventDispatcher.__NULLARRAY__;
			DisplayObjectContainer.__super.call(this);this._type_|=0x20;
		}

		__class(DisplayObjectContainer,'iflash.display.DisplayObjectContainer',false,_super);
		var __proto=DisplayObjectContainer.prototype;
		__proto._paintChild_=function(context,x,y,w,h){
			this._type_& /*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10&&this.sortChildsByZIndex();
			var sz=0,i=0;
			var c,childs;
			if ((sz=(childs=this._childs_).length)> 0){
				for (i=0;i < sz;i++){
					if ((c=childs[i])==null || !(c._type_& /*iflash.display.DisplayObject.TYPE_IS_VISIBLE*/0x400)||!c.alpha)continue ;
					c.conchPaint(context,x+c._left_,y+c._top_);
				}
			}
		}

		__proto.addChild=function(c){
			if(c==null)
				throw new Error("param is null");
			if(c._parent_!=null){
				if (c._parent_==this){
					var pre=this.childIndexOf(c);
					this.lyRemoveChildAt(pre,false);
				}
				else c._parent_.removeChild(c);
			}
			this._childs_==EventDispatcher.__NULLARRAY__ && (this._childs_=[],Laya.RENDERBYCANVAS && (this._type_&0x8)==0 && DrawChilds.insertUnit(this),this._type_|=0x8);
			Method.insert(this._childs_,this._childs_.length,c);
			this._modle_ && this._modle_.insert(c._modle_,this._childs_.length-1,this._childs_.length);
			c._parent_=this;
			if(EventDispatcher._isOpenTypeAdded)c._dispatchAddedEvent(c);
			this._type_|=0x4000;
			c._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
			if(this._root_==Stage.stage){
				c._lyToBody_();
			}
			return c;
		}

		__proto.swapAt=function(frome,to){
			if (frome >=0 && to >=0 && frome!=to){
				var fromeNode=this._childs_[frome];
				var toNone=this._childs_[to];
				this._childs_[frome]=toNone;
				this._childs_[to]=fromeNode;
				var tmp=toNone._id_;
				toNone._id_=fromeNode._id_;
				fromeNode._id_=tmp;
				this._modle_ && this._modle_.swap(fromeNode._modle_,toNone._modle_);
			}
		}

		__proto.childIndexOf=function(child){
			return this._childs_.indexOf(child);
		}

		__proto.addChildAt=function(c,index){
			if(!c)return null;
			if (c.deleted==true)return c;
			if(c._parent_!=null){
				if (c._parent_==this){
					var pre=this.childIndexOf(c);
					if (index==pre)return c;
					this.lyRemoveChildAt(pre,false);
				}else c._parent_.removeChild(c);
			}
			this._childs_==EventDispatcher.__NULLARRAY__ && (this._childs_=[],Laya.RENDERBYCANVAS && (this._type_&0x8)==0 && DrawChilds.insertUnit(this),this._type_|=0x8);
			Method.insert(this._childs_,index,c);this._firstDisplayUnit_
			c._parent_=this;
			if(EventDispatcher._isOpenTypeAdded)c._dispatchAddedEvent(c);
			this._type_|=0x4000;
			c._propagateFlagsDown_(/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
			if(this._root_==Stage.stage){
				c._lyToBody_();
			}
			c._modle_ && this._modle_ && this._modle_.insert(c._modle_,index,this._childs_.length);
			return c;
		}

		__proto.getObjectsUnderPoint=LAYAFNNULL/*function(point){return null}*/
		__proto.removeChildAt=function(index){
			return this.lyRemoveChildAt(index);
		}

		__proto.lyRemoveChildAt=function(index,isSendEvent){
			(isSendEvent===void 0)&& (isSendEvent=true);
			if (index < 0)return this;
			var c=this._childs_[index];
			this._childs_.splice(index,1);
			this._modle_ && this._modle_.removeAt(index,c._modle_,this._childs_.length);
			if(isSendEvent){
				c._dispatchRemovedEvent();
				if(this._root_==Stage.stage){
					c._lyUnToBody_();
				}
			}
			c._parent_=null;
			c._type2_ &=~ (/*iflash.display.DisplayObject.TYPE2_CONCATENATEDMATRIX_CHG*/0x1 | /*iflash.display.DisplayObject.TYPE2_BOUNDS_CHG*/0x4);
			if(Laya.document.activeElement&&Laya.document.activeElement.__owner__.root!=this.stage)
			{Laya.document.activeElement.blur();Laya.document.activeElement=null;}
			return c;
		}

		__proto.removeChild=function(c){
			this._type_|=0x4000;
			return this.lyRemoveChildAt(this.childIndexOf(c));
		}

		__proto.getChildAt=function(index){
			return this._childs_[index];
		}

		__proto.sortChildsByZIndex=function(){
			this.sortChildren(__bind(this,this._sort_));
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (!targetSpace)targetSpace=this;
			if (!resultRect)resultRect=new Rectangle();
			this._getBounds_(targetSpace,resultRect);
			if(targetSpace!=this){
				if (targetSpace==this._parent_){
					DisplayObject.HELPER_MATRIX.copy(this.matrix);
					}else{
					Matrix.mul(DisplayObject.HELPER_MATRIX,targetSpace._getInvertedConcatenatedMatrix(),this._getConcatenatedMatrix());
				}
				DisplayObject.HELPER_MATRIX.transformBounds(resultRect);
			}
			this._type2_ &=~0x4;
			return resultRect;
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if(!targetSpace)targetSpace=this;
			var p=DisplayObject.HELPER_POINT;
			if (resultRect==null)resultRect=new Rectangle();
			var numChildren=this._childs_.length;
			var child;
			if (numChildren==0){
				resultRect.setTo(0,0,0,0);
			}
			else if (numChildren==1){
				child=this._childs_[0];
				child._getBounds_(this,resultRect);
				child.matrix.transformBounds(resultRect);
			}
			else{
				var minX=Number.MAX_VALUE,maxX=-Number.MAX_VALUE;
				var minY=Number.MAX_VALUE,maxY=-Number.MAX_VALUE;
				for (var i=0;i<numChildren;++i){
					child=(this._childs_[i]);
					var r=DisplayObject.HELPER_RECTANGLET.setTo(0,0,0,0);
					child._getBounds_(this,r);
					child.matrix.transformBounds(r);
					if (minX > r.x)minX=r.x;
					if (maxX < r.right)maxX=r.right;
					if (minY > r.y)minY=r.y;
					if (maxY < r.bottom)maxY=r.bottom;
				}
				resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			}
			if(resultRect.width<0){
				resultRect.x-=resultRect.width;
				resultRect.width=Math.abs(resultRect.width);
			}
			if(resultRect.height<0){
				resultRect.y-=resultRect.height;
				resultRect.height=Math.abs(resultRect.height);
			}
			if(!resultRect){
				resultRect.width *=this.scaleX;
				resultRect.height *=this.scaleY;
			}
			return resultRect;
		}

		__proto._hitTest_=function(x,y){
			if(!this.visible)return null;
			if (!this._checkHitMask(x,y)){return null;}
				if (!this._checkHitScrollRect(x,y)){return null;}
			if (this._private_._scrollRect_){x+=this._private_._scrollRect_.x;y+=this._private_._scrollRect_.y;};
			var target=null,shapes=[],displayObjs=[],i=0,child,numChildren=this._childs_.length;
			var sortArr=[];
			for (i=0;i<numChildren;i++){
				child=this._childs_[i];
				if((child instanceof iflash.display.InteractiveObject )){
					sortArr.push(child);
				}
				else{
					sortArr.unshift(child);
				}
			}
			for(i=numChildren-1;i>=0;i--){
				child=sortArr[i];
				if((child instanceof iflash.display.InteractiveObject )){
					this.getTransformMatrix(child,DisplayObject.HELPER_MATRIX);
					MatrixUtil.transformCoords(DisplayObject.HELPER_MATRIX,x,y,DisplayObject.HELPER_POINT);
					target=child._hitTest_(DisplayObject.HELPER_POINT.x,DisplayObject.HELPER_POINT.y);
					if(target){
						if((target instanceof iflash.display.Sprite )){
							var sp=target;
							if(!sp.mouseChildren && !sp.mouseEnabled){
								if(sp.numChildren==1 && sp.graphicsHited(DisplayObject.HELPER_POINT.x,DisplayObject.HELPER_POINT.y)){
									return this;
								}
								continue ;
							}
							else if(!sp.mouseEnabled && this.mouseChildren){
								if(this.numChildren==1 && this.mouseEnabled){
									return this;
								}
								else{
									continue ;
								}
							}
						}
						return this.mouseChildren?target:this;
					}
				}
				else{
					this.getTransformMatrix(child,DisplayObject.HELPER_MATRIX);
					MatrixUtil.transformCoords(DisplayObject.HELPER_MATRIX,x,y,DisplayObject.HELPER_POINT);
					target=child._hitTest_(DisplayObject.HELPER_POINT.x,DisplayObject.HELPER_POINT.y);
					if(target)return this;
				}
			}
			return null;
		}

		__proto.setChildIndex=function(child,index){this.addChildAt(child,index);}
		__proto.getChildIndex=function(child){return this._childs_.indexOf(child);}
		__proto._sort_=function(a,b){
			return a._to_sort_d-b._to_sort_d;
		}

		__proto.getChildByName=function(value){
			var child;
			/*for each*/for(var $each_child in this._childs_){
				child=this._childs_[$each_child];
				if(child.name==value)return child;
			}
			return null;
		}

		__proto.sortChildren=function(keyOrFunction){
			if((this._type_&0x4000)==0)return;
			var f=keyOrFunction,key;
			if (typeof (f)=="string"){
				key=f;
				f=function (a,b){
					return b[key]-a[key];
				};
			}
			this._childs_.sort(f);
			this._type_&=~0x4000
		}

		__proto.swapChildrenAt=function(index1,index2){
			var c=this._childs_[index1];
			this._modle_.swap(c._modle_,this._childs_[index2]._modle_);
			this._childs_[index1]=this._childs_[index2];
			this._childs_[index2]=c;
			this._type_ |=0x4000;
		}

		__proto.swapChildren=function(child1,child2){
			var index1=this._childs_.indexOf(child1);
			var index2=this._childs_.indexOf(child2);
			this.swapChildrenAt(index1,index2);
		}

		__proto._lyToBody_=function(){
			this.dispatchAdd(this);
			iflash.display.DisplayObject.prototype._lyToBody_.call(this);
		}

		__proto.dispatchAdd=function(child){
			var len=child._childs_.length;
			var i=0;
			while(i<len)
			{child._childs_[i]._lyToBody_();i++;}
		}

		__proto._lyUnToBody_=function(){
			iflash.display.DisplayObject.prototype._lyUnToBody_.call(this);
			this.dispatchUnAdd(this);
		}

		__proto.dispatchUnAdd=function(child){
			var len=child._childs_.length;
			var i=0;
			while(i<len)
			{child._childs_[i]._lyUnToBody_();i++;}
		}

		__proto.contains=function(child){
			if(this._childs_==null){
				return false;
			};
			var result={flag:false};
			this.checkContainsByChild(this,child,result);
			return result.flag;
		}

		__proto.checkContainsByChild=function(display,child,result){
			if(display==child){
				result.flag=true;
				return;
			}
			if((display instanceof iflash.display.DisplayObjectContainer )){
				var box=display;
				for (var i=0,n=box._childs_.length;i <n;i++){
					this.checkContainsByChild(box._childs_[i],child,result);
				}
			}
		}

		__proto.removeChildren=function(beginIndex,endIndex){
			(beginIndex===void 0)&& (beginIndex=0);
			(endIndex===void 0)&& (endIndex=2147483647);
			if(this.numChildren==0)
				return;
			(beginIndex < 0)&& (beginIndex=0);
			(endIndex > this.numChildren)&& (endIndex=this.numChildren-1);
			while(endIndex>=beginIndex){
				this.lyRemoveChildAt(endIndex);
				endIndex--;
			}
		}

		__proto._propagateFlagsDown_=function(flags){
			if ((this._type2_ & flags)==flags)return;
			var child;
			var num=this._childs_.length;
			for (var i=0;i < num;i++){
				child=this._childs_[i];
				child._propagateFlagsDown_(flags);
			}
			this._type2_ |=flags;
		}

		__proto.setupReadyNoticeWork=function(ifSelfNotice){
			(ifSelfNotice===void 0)&& (ifSelfNotice=false);
			iflash.display.DisplayObject.prototype.setupReadyNoticeWork.call(this,ifSelfNotice);
			if(this.isReadyForDraw)return;
			if(!this._childs_||this._childs_.length<1)return;
			var i=0,len=0;
			len=this._childs_.length;
			var tChild;
			for(i=0;i<len;i++){
				tChild=this._childs_ [i];
				tChild.setupReadyNoticeWork(true);
			}
		}

		__proto.oneChildReady=function(){
			if(this.isReadyForDraw){
				this.readyWork();
				}else{
			}
		}

		__proto.updateScaleData=function(index){
			(index===void 0)&& (index=0);
			if(this.scale9Data){
				var c=this._childs_[index];
				(c.scale9Data==null)&& (c.scale9Data={});
				c.scale9Data.x1=this.scale9Data.x1-c.x;
				c.scale9Data.y1=this.scale9Data.y1-c.y;
				c.scale9Data.x2=this.scale9Data.x2-c.x;
				c.scale9Data.y2=this.scale9Data.y2-c.y;
				if(this._width_!=c._width_)c.width=this.width;
				if(this._height_!=c._height_)c.height=this.height;
			}
		}

		__proto.layaDestory=function(){
			iflash.display.DisplayObject.prototype.layaDestory.call(this);
			for (var i=0,sz=this._childs_.length;i < sz;i++){
				this._childs_[i].layaDestory();
			}
			this._childs_.length=0;
		}

		__getset(0,__proto,'numChildren',function(){
			return this._childs_.length;
		});

		__getset(0,__proto,'tabChildren',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'mouseChildren',function(){
			return (this._type_&0x20)!=0;
			},function(value){
			if(value)
				this._type_|=0x20;
			else
			this._type_&=~0x20;
		});

		__getset(0,__proto,'scaleX',_super.prototype._$get_scaleX,function(value){
			_super.prototype._$set_scaleX.call(this,value);
		});

		__getset(0,__proto,'scaleY',_super.prototype._$get_scaleY,function(value){
			_super.prototype._$set_scaleY.call(this,value);
		});

		__getset(0,__proto,'isReadyForDraw',function(){
			if(!this._childs_||this._childs_.length<1)return true;
			var i=0,len=0;
			len=this._childs_.length;
			var tChild;
			for(i=0;i<len;i++){
				tChild=this._childs_ [i];
				if(tChild&&!tChild.isReadyForDraw){
					return false;
				}
			}
			return true;
		});

		__getset(0,__proto,'width',function(){
			if(this.scale9Data)return this._width_<=0?_super.prototype._$get_width.call(this):this._width_;
			else return _super.prototype._$get_width.call(this);
			},function(w){
			if(this._width_==w)
				return;
			this.scaleX=1.0;
			var oldW=this.getBounds(this).width;
			oldW &&(this.scaleX=w / oldW);
			(this._width_ !=w)&& this.lySize(w,this._height_);
		});

		__getset(0,__proto,'height',function(){
			if(this.scale9Data)return this._height_<=0?_super.prototype._$get_height.call(this):this._height_;
			else return _super.prototype._$get_height.call(this);
			},function(h){
			if(this._height_==h)
				return;
			this.scaleY=1.0;
			var oldH=this.getBounds(this).height;
			oldH &&(this.scaleY=h / oldH);
			(this._height_ !=h)&& this.lySize(this._width_,h);
		});

		return DisplayObjectContainer;
	})(InteractiveObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/textfield.as
	//class iflash.text.TextField extends iflash.display.InteractiveObject
	var TextField=(function(_super){
		function TextField(){
			this.formatIndices=[];
			this._scroller=null;
			this._inputting=false;
			this._nodeIndex=0;
			TextField.__super.call(this);
			this._lines=[];
			this._originFormats=[];
			this._formats=[];
			this._nodeCoordinate=new Point();
			this.nodes=new TextNodeList()
			this._textWidth=2+2;
			this._textHeight=2+2;
			this._autoSizeWidth=this._width=100;
			this._autoSizeWidth=this._height=100;
			this._modle_.size(this._width,this._height+5);
			this._selectable=true;
			Laya.RENDERBYCANVAS && DrawText.insertUnit(this);
			DrawText.insertUnit(this);
			this.viewport=[0,0,this._width,this._height];
			this._text="";
			this._htmlText="";
			this._type=/*iflash.text.TextFieldType.DYNAMIC*/"dynamic";
			this._df=TextField.DF;
			this.addEventListener(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.onTextAdded));
		}

		__class(TextField,'iflash.text.TextField',false,_super);
		var __proto=TextField.prototype;
		__proto.onTextAdded=function(e){
			this.addEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this.onTextFocus),false,-99);
			this.addEventListener(/*iflash.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.onTextRemoved));
			this.removeEventListener(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.onTextAdded));
		}

		__proto.onTextRemoved=function(e){
			this.addEventListener(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.onTextAdded));
			this.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.onTextFocus));
			if (this._scroller)
				this._scroller.removeEventListener(/*iflash.events.TimerEvent.TIMER*/"timer",__bind(this,this.onTextScroll));
		}

		__proto.onBrowserInputKeyDown=function(e){
			if(e.keyCode==/*iflash.ui.Keyboard.ENTER*/13){
				e.returnValue=false;
				e.preventDefault();
			}
		}

		__proto.onMaxCharsLimit=function(e){
			if(Browser.input.value.length > this._maxChars){
				Browser.input.value=Browser.input.value.substr(0,this._maxChars);
			}
		}

		__proto.onTextFocus=function(e){
			if (!this.stage)
				return;
			if (this._links && this._links.length){
				this._caretIndex=this.getCharIndexAtPoint(this.mouseX,this.mouseY,true);
				this.checkLinkEvent(this._caretIndex);
			}
			else if (this._type=="input"){
				if(this._inputting){
					if(Driver.enableTouch())
						this.checkTextFocusout(null);
					return;
				}
				TextField.onMobile && Driver.deactivateTouchEvent();
				this._inputting=true;
				TextField.isInputting=true;
				this._caretIndex=this.getCharIndexAtPoint(this.mouseX,this.mouseY,true);
				if (this.stage.currentFocus !=this){
					var concatedMatrix=this._getConcatenatedMatrix();
					Browser.input.setType(this._disAsPass ? "password" :"text");
					if(Laya.CONCHVER || !Driver.enableTouch()){
						Browser.input.setColor(StringMethod.getColorString(this._df.color)|| "#000000");
						Browser.input.setSize(this._width,this._height);
						Browser.input.setFont(this._df.font || "Times New Roman");
						Browser.input.setFontSize(this._df.size || 12);
						Browser.input.setScale(this.scaleX *Laya.window.scale.x *concatedMatrix.a,this.scaleY *Laya.window.scale.y *concatedMatrix.d);
						if(Laya.CONCHVER){
							this._modle_.setHideText(true);
							this._maxChars ? Browser.input.setMaxLength(this._maxChars):Browser.input.setMaxLength(1e8);
							if (this._restrict && this._restrict !="")
								Browser.input.setRegular("["+this._restrict+"]");
							else
							Browser.input.setRegular(".*");
						}
						Browser.input.value=this._text;
						var pos=new Point(concatedMatrix.tx,concatedMatrix.ty);
						Browser.input.setPos(pos.x *Laya.window.scale.x+Laya.document.body.x,pos.y *Laya.window.scale.y+Laya.document.body.y);
					}
					else{
						Browser.input.setPos(0,0);
						Browser.input.clear();{
							Browser.input.setSize(TextField.initialWindowWidth,(this._multiline ? TextField.textAreaHeight:TextField.inputHeight));
							Browser.input.setFontSize(TextField.inputFontSize);
							Browser.input.style.background="Linen";
							Browser.input.style.borderTop="3px solid orange";
							Browser.input.style.borderBottom="3px solid orange";
							Browser.input.value=this._text;
							/*__JS__ */window.document.body.scrollTop=0;
						}
					}
					if(!Laya.CONCHVER){
						if(!TextField.onMobile){
							Browser.addToBody(Browser.input);
							Browser.input.setAlign(this._df.align || 'left');
						}
						Browser.input.style.whiteSpace=(this._wordWrap || this._multiline)? "normal" :"nowrap";
						Browser.input.onkeydown=this._multiline ? null :this.onBrowserInputKeyDown;
						Browser.input.oninput=this._maxChars > 0 ? /*__JS__ */this.onMaxCharsLimit.bind(this):null;
					}
					Browser.input.target=this;
					TextField.onMobile || Browser.input.focus();
					Stage.stage.addEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this.checkTextFocusout));
				}
				Browser.input.addEventListener("input",__bind(this,this.dispathInput));
				var caretIndex=this._caretIndex;
				if(caretIndex < 0)caretIndex=0;
				else if(caretIndex > this._text.length)caretIndex=this._text.length;
			}
			if (this.stage && (this.stage.currentFocus !=this && this._selectable)){
				this.dispatchEvent(new FocusEvent(/*iflash.events.FocusEvent.FOCUS_IN*/"focusIn"));
				this.stage.currentFocus=this;
			}
			if(this.type=="input")
				this.setHtmlInputCaret(caretIndex);
		}

		__proto.checkTextFocusout=function(e){
			if(!e || e.target !=this){
				this._inputting=false;
				TextField.isInputting=false;
				this._text=Browser.input.value;
				if(!Laya.CONCHVER){
					if(this._restrict)
						this._text=this._text.replace(this._restrict,"");
				}
				this._formats[0]=this._formats[0]||({begin:0,end:0});
				this._formats[0].format=this._df;
				this._formats[0].end=this._text.length;
				this.engine_updateStyle();
				if(Laya.CONCHVER){
					this._modle_.setHideText(false);
					this.dispathInput();
				}
				Browser.input.removeEventListener("input",__bind(this,this.dispathInput));
				Stage.stage.removeEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this.checkTextFocusout));
				Browser.removeFromBody(Browser.input);
				Browser.input.setSize(1,1);
				Browser.input.setPos(0,-2000);
				TextField.onMobile && Driver.activateTouchEvent();
			}
			Stage.stage.focus=null;
			this.dispatchEvent(new FocusEvent(/*iflash.events.FocusEvent.FOCUS_OUT*/"focusOut"));
		}

		__proto.checkLinkEvent=function(indexClick){
			var link;
			for (var i=this._links.length-1;i >=0;i--){
				link=this._links[i];
				if (indexClick >=link.begin && indexClick < link.end){
					if ((typeof link.event=='string'))
						iflash.net.navigateToURL(link.event);
					else
					this.dispatchEvent(link.event);
					return;
				}
			}
		}

		__proto.addToRender=function(){
			if (TextField.TextsToRender.indexOf(this)==-1)
				TextField.TextsToRender.push(this);
		}

		__proto.renderThis=function(){
			var idx=TextField.TextsToRender.indexOf(this);
			if (idx !=-1){
				TextField.TextsToRender.splice(idx,1);
				this.engine_updateStyle();
				return true;
			}
			return false;
		}

		__proto.engine_updateStyle=function(){
			if(this._text==""){
				this.engine_clear();
				this.updateViewportSize();
				return;
			}
			this._textWidth=0;
			this._lines.length=0;
			this._currLineInfo=null;
			this._nodeCoordinate.setTo(2,2);
			this._nodeIndex=0;
			if (this._text.length){
				if (this._disAsPass){
					this._charsToRender="";
					for (var i=this._text.length;i > 0;i--)
					this._charsToRender+="*";
				}
				else
				this._charsToRender=this._text;
				var len=this._formats.length;
				var format;
				for (i=0;i < len;i++){
					format=this._formats[i];
					this.createStyleFromTextFormat(format.begin,format.end-1,format.format);
				}
				if (this._type==/*iflash.text.TextFieldType.INPUT*/"input"){
					var textLen=this._text.length;
					if(this._text.charAt(textLen-1)=="\n")
						this.pushNewLineToLines();
				};
				var tempLineIdx=this._lines.length;
				if (tempLineIdx){
					this._textHeight=this._lines[tempLineIdx-1].y+this._lines[tempLineIdx-1].height;
					if ((!this._autoSize || this._autoSize=="none")&& this._textHeight > this._height){
						for (i=tempLineIdx-1;i >=0;i--){
							if (this._textHeight-this._lines[i].y > this._height){
								this._maxScrollV=i+2;
								break ;
							}
						}
						this._bottomScrollV=this.getBottomScrollV(this._scrollV);
					}
					else
					this._bottomScrollV=this._lines.length;
				}
				else{
					this._textHeight=0;
					this._maxScrollV=0;
				}
				this.engine_layout(true);
				this.checkActiveScroll();
				this._charsToRender=null;
			}
			this.updateViewportSize();
			this.autosize();
		}

		__proto.pushNewLineToLines=function(){
			this._lines.push({
				text:"",
				maxLeading:0,
				y:this._lines[this._lines.length-1].y+this._df.size+(this._df.leading ? this._df.leading :0),
				height:this._df.size+3,
				width:0,
				nodes:[{
					x:2,
					firstCharIndex:this._text.length,
					lastCharIndex:this._text.length,
					format:this._df,
					text:""
				}],
				begin:this._text.length-1,
				end:this._text.length-1,
				isFirstLineOfParagraph:false
			});
		}

		__proto.createStyleFromTextFormat=function(startIndex,endIndex,format){
			var text=this._charsToRender.substring(startIndex,endIndex+1);
			if (!this._currLineInfo){
				this._currLineInfo={
					text:"",
					maxLeading:0,
					y:this._nodeCoordinate.y,
					height:0,
					width:0,
					nodes:[],
					begin:startIndex,
					end:startIndex,
					isFirstLineOfParagraph:this._isNextLineNewParagraph};
				this._lines.push(this._currLineInfo);
			}
			this._isNextLineNewParagraph=false;
			var lineBreakIdx=text.indexOf("\n");
			if (lineBreakIdx==-1){
				var textWidth=format.measureText(text).width;
				if (!this._wordWrap || this.stuffEnough(this._nodeCoordinate.x+textWidth,format)|| this._type=='static'){
					this.createNodeStyle(text,this._nodeIndex,format,textWidth);
					this._nodeCoordinate.x+=textWidth;
					this._nodeIndex+=text.length;
				}
				else{
					textWidth=format.measureText(text.charAt(0)).width;
					if(!this.stuffEnough(this._nodeCoordinate.x+textWidth,format)&& this._currLineInfo.text.length > 0){
						this.resetToNewline(format);
						this.createStyleFromTextFormat(startIndex,endIndex,format);
						return;
					};
					var charWidth=0;
					for (var i=1,len=text.length;i < len;i++){
						charWidth=format.measureText(text.charAt(i)).width;
						textWidth+=charWidth;
						if (!this.stuffEnough(((format.indent && this._currLineInfo.isFirstLineOfParagraph)? format.indent :0)+this._nodeCoordinate.x+textWidth,format,false)){
							var execResult=/\b\w+$/.exec(text.substring(0,i));
							if (execResult){
								if (execResult.index==0)
									i=text.length;
								else
								i=execResult.index;
							}
							this.createNodeStyle(text.substring(0,i),this._nodeIndex,format,textWidth-charWidth);
							this._nodeIndex+=i;
							this.resetToNewline(format);
							if (startIndex+1 <=endIndex)
								this.createStyleFromTextFormat(startIndex+i,endIndex,format);
							break ;
						}
					}
				}
			}
			else{
				this._isNextLineNewParagraph=true;
				if (text=="\n"){
					this._currLineInfo.text+="\n";
					if (!this._currLineInfo.height){
						this._currLineInfo.height=format.size ? format.size :12;
					}
					this._currLineInfo.nodes.push({
						x:2,
						firstCharIndex:startIndex,
						lastCharIndex:startIndex,
						format:format,
						text:"\n"
					});
					this.resetToNewline(format);
				}
				else{
					this.createStyleFromTextFormat(startIndex,startIndex+lineBreakIdx-1,format);
					this._currLineInfo.text+="\n";
					if(this._currLineInfo.nodes.length)
						this._currLineInfo.nodes[this._currLineInfo.nodes.length-1].text+="\n";
					if (!this._currLineInfo.height){
						this._currLineInfo.height=format.size ? format.size :12;
					}
					this._currLineInfo.end++;
					this.resetToNewline(format);
					if (startIndex+lineBreakIdx+1 <=endIndex)
						this.createStyleFromTextFormat(startIndex+lineBreakIdx+1,endIndex,format);
				}
			}
		}

		__proto.resetToNewline=function(format){
			this._nodeIndex=0;
			this._nodeCoordinate.x=2;
			this._nodeCoordinate.y+=this._currLineInfo.height+(format.leading ? format.leading :0)+TextField.LINE_LEADING;
			this._currLineInfo=null;
		}

		__proto.createNodeStyle=function(text,startIndex,format,wordWidth){
			var node={};
			node.x=this._nodeCoordinate.x;
			this._currLineInfo.nodes.push(node);
			node.firstCharIndex=startIndex;
			node.lastCharIndex=node.firstCharIndex+text.length-1;
			node.format=format;
			if(Laya.CONCHVER)
				format._strokeColor=this.strokeColor;
			node.text=text;
			this._currLineInfo.text+=text;
			this._currLineInfo.end+=text.length-1;
			this._currLineInfo.height=Math.max(format.measureText(this._currLineInfo.text).height,this._currLineInfo.height);
			this._currLineInfo.width+=wordWidth;
			this._currLineInfo.maxLeading=Math.max(this._currLineInfo.maxLeading,(format.leading ? Number(format.leading):0));
			this._textWidth=Math.max(this._textWidth,this._currLineInfo.width);
		}

		__proto.engine_layout=function(updateNodeX){
			(updateNodeX===void 0)&& (updateNodeX=false);
			if (Laya.CONCHVER){
				this.conchNodes=this.conchNodes || /*__JS__ */new ConchArrayTextStr();
				this.conchNodes.clear();
			}
			this.nodes.clear();
			var line;
			var lineNodes;
			var numNodes=0;
			var node;
			var format;
			var xOffset=0,yOffset=0;
			var actualWidth=(this._autoSize && this._autoSize !="none" && !this._wordWrap)? (2+2+this._textWidth):this._width-2;
			var numLines=this._lines.length;
			for (var li=0;li < numLines;li++){
				if (this._textHeight > this._height && (!this._autoSize || this._autoSize=="none")){
					if (li < this._scrollV-1)
						continue ;
					else if (li >=this._bottomScrollV)
					break ;
				}
				line=this._lines[li];
				lineNodes=line.nodes;
				numNodes=lineNodes.length;
				if (!numNodes)
					continue ;
				node=lineNodes[0];
				format=node.format;
				yOffset=line.y;
				xOffset=node.x;
				var align=format.align;
				if(updateNodeX && (!this._autoSize || this._autoSize=="none" || this._wordWrap)){
					if(align==/*iflash.text.TextFormatAlign.CENTER*/"center"){
						xOffset+=(this._width-line.width)/ 2;
					}
					else if(align==/*iflash.text.TextFormatAlign.RIGHT*/"right"){
						xOffset+=(this._width-line.width-2-2)
					}
				}
				if(updateNodeX){
					if (line.isFirstLineOfParagraph && format.indent)
						xOffset+=format.indent;
					xOffset+=(format.blockIndent ? format.blockIndent :0);
				}
				for (var ni=0;ni < numNodes;ni++){
					node=lineNodes[ni];
					format=node.format;
					var letterSpacing=int(format.letterSpacing);
					var nodeMetrics=format.measureText(node.text);
					var nodeToPush;
					var tempFont=format.getFont();
					var tempFillStyle=StringMethod.getColorString(Number(format.color)|| 0x000000);
					var tempUnderlineWidth=format.underline ? nodeMetrics.width-(format.letterSpacing ? format.letterSpacing :0):0;
					if (Laya.CONCHVER){
						var tempNode=/*__JS__ */new ConchTextStr();
						tempNode.font=tempFont;
						tempNode.fillStyle=tempFillStyle;
						tempNode.x=xOffset;
						tempNode.y=yOffset+line.height-(nodeMetrics.height || format.size);
						tempNode.letterSpacing=letterSpacing;
						tempNode.text=node.text;
						tempNode.underlineWidth=tempUnderlineWidth;
						this.conchNodes.push(tempNode);
					}
					nodeToPush={};
					this.nodes.push(nodeToPush);
					nodeToPush.font=tempFont;
					nodeToPush.fillStyle=tempFillStyle;
					nodeToPush.x=xOffset;
					nodeToPush.y=yOffset+line.height-(nodeMetrics.height || format.size);;
					nodeToPush.letterSpacing=letterSpacing;
					nodeToPush.text=node.text;
					nodeToPush.underlineWidth=tempUnderlineWidth;
					nodeToPush.underlineY=line.y+line.height;
					updateNodeX && (node.x=xOffset);
					if (letterSpacing){
						var lettersX=[];
						var m=node.text.length;
						nodeToPush.lettersX=lettersX;
						for (var j=0;j < m;j++){
							var word=node.text.charAt(j);
							lettersX.push(xOffset);
							xOffset+=format.measureText(word).width;
						}
					}
					else
					xOffset+=nodeMetrics.width;
				}
			}
			Laya.CONCHVER && (this._modle_.textStrs(this.conchNodes));
		}

		__proto.checkActiveScroll=function(){
			if (this._selectable &&
				this._type=="dynamic" &&
			(!this._autoSize || this._autoSize=="none")&&
			(this._textWidth > this._width ||
			this._textHeight > this._height)&& this._type !="static" && !this._scroller){
				this._scrollV=1;
				this._scroller=new Timer(100);
				this._scroller.addEventListener(/*iflash.events.TimerEvent.TIMER*/"timer",__bind(this,this.onTextScroll),false,0,true);
				this.addEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this.onTextMouseDown),false,0,true);
			}
		}

		__proto.onTextMouseDown=function(e){
			if (this._scroller){
				this._scroller.start();
				this._mouseDownX=this.mouseX;
				this._mouseDownY=this.mouseY;
			}
			Stage.stage.addEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this.onTextMouseUp));
		}

		__proto.onTextMouseUp=function(e){
			Stage.stage.removeEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this.onTextMouseUp));
			this._scroller && this._scroller.stop();
		}

		__proto.onTextScroll=function(e){
			if (this._lines.length==0)
				return;
			var hSpeed=this.mouseX-this._mouseDownX;
			var vDir=0;
			if (this.mouseY==this._mouseDownY)
				vDir=0;
			else if (this.mouseY < this._mouseDownY)
			vDir=1;
			else
			vDir=-1;
			this.scrollVWithoutRender(this._scrollV+vDir);
			this.scrollHWithoutRender(this.viewport[0]+hSpeed);
			this.engine_layout();
		}

		__proto.autosize=function(){
			if(this._wordWrap)
				return;
			switch(this._autoSize){
				case "center":
					_super.prototype._$set_x.call(this,(this._autoSizeX || 0)-this._textWidth/2);
					break ;
				case "right":
					_super.prototype._$set_x.call(this,(this._autoSizeX || 0)-this._textWidth-2);
					break ;
				case "left":
				case "none":
					_super.prototype._$set_x.call(this,this._autoSizeX||0);
					break ;
				}
		}

		__proto.updateViewportSize=function(){
			var w=0,h=0;
			if(this.autoSize !='none' && this.autoSize){
				w=this._wordWrap ? this._width :this._textWidth+2+2;
				h=(this._textHeight || this._df.size)+2+2;
			}
			else{
				w=this._width;
				h=this._height;
			}
			this.viewport[2]=w;
			this.viewport[3]=h;
			this._modle_.size(this.viewport[2]+5,this.viewport[3]+10);
		}

		__proto.engine_clear=function(clearInputValue){
			(clearInputValue===void 0)&& (clearInputValue=false);
			this.nodes.clear();
			this.conchNodes && this.conchNodes.clear();
			Laya.CONCHVER && this._modle_.textStrs(this.conchNodes);
			this._lines.length=0;
			this._numLines=1;
			this._textWidth=0;
			this._textHeight=0;
			this._text='';
			this._htmlText=null;
			this._charsToRender=null;
			this._nodeIndex=0;
			var idx=TextField.TextsToRender.indexOf(this);
			if (idx >-1)
				TextField.TextsToRender.splice(idx,1);
			if (this._type=='input' && clearInputValue){
				Browser.input.value='';
			}
		}

		__proto.dispathInput=function(){
			this.dispatchEvent(new TextEvent(/*iflash.events.TextEvent.TEXT_INPUT*/"textInput"));
			if(Laya.CONCHVER || !Driver.enableTouch())
				this._text=Browser.input.value;
			else
			this.text=Browser.input.value;
			this.dispatchEvent(new Event(/*iflash.events.Event.CHANGE*/"change"));
		}

		__proto.appendText=function(newText){
			if (this._text)
				newText=this._text+newText;
			this._originFormats.length=0;
			this._text=newText.toString();
			this._nodeIndex=0;
			this._originFormats.push({begin:0,end:this._text.length,format:this._df});
			this.createFormats();
			this.addToRender();
		}

		__proto.getCharBoundaries=function(charIndex,workInternally){
			(workInternally===void 0)&& (workInternally=false);
			if (charIndex >=this._text.length || charIndex < 0)
				return null;
			workInternally || this.renderThis();
			var result=new Rectangle();
			var line=this._lines[this.getLineIndexOfChar(charIndex)];
			charIndex-=line.begin;
			var node=this.getNodeFromLineByIndex(charIndex,line);
			charIndex-=node.firstCharIndex;
			var format=node.format;
			var metrics=format.measureText(node.text.substring(0,charIndex));
			result.x=node.x+metrics.width;
			var char=node.text.charAt(charIndex);
			metrics=format.measureText(char);
			result.y=line.height-metrics.height+line.y;
			result.width=metrics.width;
			result.height=metrics.height;
			return result;
		}

		__proto.getCharIndexAtPoint=function(x,y,workForCaret){
			(workForCaret===void 0)&& (workForCaret=false);
			if (!this._text || this._text=="" || this._text.length==0)
				return 0;
			this.renderThis();
			x+=this.viewport[0];
			y+=this.viewport[1];
			var charIndex=0;
			if (y < this._textHeight){
				var line;
				var i=this._scrollV ? this._scrollV-1 :0;
				for (i;i < this._bottomScrollV;i++){
					line=this._lines[i];
					if (y < line.y+line.height){
						break ;
					}
				}
			}
			if (!line){
				if (workForCaret)
					line=this._lines[this._lines.length-1];
				else
				return-1;
			}
			if (x > line.width+line.nodes[0].x){
				if (workForCaret){
					if (this._text.charAt(line.end)=="\n"){
						return line.end;
					}
					return line.end+1;
				}
				return-1;
			};
			var nodes=line.nodes;
			var node;
			var format;
			var tempX=0;
			var tempWid=0;
			var len=nodes.length;
			var find=false;
			for (i=0;i < len;i++){
				node=nodes[i];
				format=node.format;
				tempX=node.x;
				var numChars=node.text.length;
				if(!numChars)return line.end;
				for (var j=0;j < numChars;j++){
					var char=node.text[j];
					if (char=="\n" && workForCaret)
						return line.end;
					tempWid=format.measureText(char).width;
					tempX+=tempWid;
					charIndex++;
					if (tempX > x){
						find=true;
						tempX-=(format.letterSpacing)? format.letterSpacing :0;
						return workForCaret ? ((tempX-(tempWid >> 1))< x ? charIndex+line.begin :charIndex+line.begin-1):(charIndex+line.begin-1);
					}
				}
			}
			return-1;
		}

		__proto.getFirstCharInParagraph=function(charIndex){
			return 0;
		}

		__proto.getImageReference=function(id){
			return null;
		}

		__proto.getLineIndexAtPoint=function(x,y){
			this.renderThis();
			var charIndex=this.getCharIndexAtPoint(x,y);
			return this.getLineIndexOfChar(charIndex);
		}

		__proto.getLineIndexOfChar=function(charIndex){
			if (charIndex < 0 || charIndex >=this._text.length)
				return-1;
			this.renderThis();
			var len=this._lines.length;
			var line;
			for (var i=0;i < len;i++){
				line=this._lines[i];
				if (charIndex >=line.begin && charIndex <=line.end)
					return i;
			}
			return this._lines.length-1;
		}

		__proto.getLineLength=function(lineIndex){
			this.renderThis();
			return this._lines[lineIndex].text.length;
		}

		__proto.getLineMetrics=function(lineIndex){
			this.renderThis();
			if (lineIndex < 0 || lineIndex >=this._lines.length)
				return new TextLineMetrics(0,0,this._df.size+TextFormat.HEI_OFF,0,0,0);
			var line=this._lines[lineIndex];
			var x=line.nodes ? line.nodes[0].x :0;
			var wid=line.width;
			var hei=line.height;
			var ascent=0;
			var descent=0;
			var leading=line.maxLeading;
			return new TextLineMetrics(x,wid,hei,ascent,descent,leading);
		}

		__proto.getLineOffset=function(lineIndex){
			this.renderThis();
			return this._lines[lineIndex].begin;
		}

		__proto.getLineText=function(lineIndex){
			this.renderThis();
			return this._lines[lineIndex].text;
		}

		__proto.getParagraphLength=function(charIndex){
			return 0;
		}

		__proto.getTextFormat=function(beginIndex,endIndex){
			(beginIndex===void 0)&& (beginIndex=-1);
			(endIndex===void 0)&& (endIndex=-1);
			if (beginIndex==-1 && endIndex==-1)
				return this._df.clone();
			var format;
			if (beginIndex !=-1 && endIndex !=-1){
				for (var i=this._originFormats.length-1;i >=0;i--){
					format=this._originFormats[i];
					if (format.begin==beginIndex && format.end==endIndex)
						return format.format.clone();
				}
				return null;
			}
			if (beginIndex !=-1 && endIndex==-1){
				for (i=this._originFormats.length-1;i >=0;i--){
					format=this._originFormats[i];
					if (beginIndex >=format.begin && beginIndex < format.end)
						return format.format;
				}
			}
			return null;
		}

		__proto.replaceText=function(beginIndex,endIndex,newText){
			var forepart=this._text.substring(0,beginIndex);
			var endpart=this._text.substring(endIndex);
			this._text=forepart+newText+endpart;
			var format;
			for (var i=0,len=this._originFormats.length;i < len;i++){
				format=this._originFormats[i];
				if (format.begin <=beginIndex && format.end >=beginIndex){
					format.end+=newText.length-(endIndex-beginIndex);
				}
			}
			this.createFormats();
			this.addToRender();
		}

		__proto.setSelection=function(beginIndex,endIndex){}
		__proto.setTextFormat=function(format,beginIndex,endIndex){
			if (!this._text || !this._text.length)
				return;
			this._formats=[];
			if (arguments.length==1){
				beginIndex=0;
				endIndex=this.text.length;
			}
			else if (arguments.length==2){
				endIndex=beginIndex+1;
			}
			this.addToRender();
			var tempFormat;
			for (var i=this._originFormats.length-1;i >=0;i--){
				tempFormat=this._originFormats[i];
				if (tempFormat.begin==beginIndex && tempFormat.end==endIndex){
					this._originFormats[i].format=this.mixTextFormats([this._originFormats[i].format,format]);
					this.createFormats();
					return;
				}
			}
			this.insertFormt(format,beginIndex,endIndex);
			this.createFormats();
		}

		__proto.numberSortCallback=function(a,b){
			return a > b ? 1 :-1;
		}

		__proto.createFormats=function(){
			if(!this._originFormats.length)
				this._originFormats.push({begin:0,end:this._text.length,format:this._df});
			this._formats.length=0;
			this.formatIndices.push(0,this._text.length);
			this.formatIndices.sort(__bind(this,this.numberSortCallback));
			var lastValue=this.formatIndices[this.formatIndices.length-1];
			for (var i=this.formatIndices.length-2;i >=0;i--){
				if (this.formatIndices[i]==lastValue || this.formatIndices[i] > this._text.length)
					this.formatIndices.splice(i,1);
				lastValue=this.formatIndices[i];
			}
			if(this.formatIndices[this.formatIndices.length-1] > this._text.length)
				this.formatIndices.pop();
			var end=this.formatIndices.length-1;
			for (i=0;i < end;i++){
				var relateFormats=this.getRelateTextForamts(this.formatIndices[i]);
				this._formats.push({format:this.mixTextFormats(relateFormats),begin:this.formatIndices[i],end:this.formatIndices[i+1]});
			}
			this.addToRender();
		}

		__proto.getBottomScrollV=function(startLine){
			if (this._lines.length==0 || startLine > this._lines.length)
				return 0;
			if (this._lines.length==1)
				return 1;
			if (this._textHeight < this._height)
				return this._lines.length;
			var totalLines=this._lines.length;
			for (var i=startLine-1;i < totalLines;i++){
				if (this._lines[i].y+this._lines[i].height > this._height+this.viewport[1])
					return i;
			}
			return totalLines;
		}

		__proto.getRelateTextForamts=function(index){
			var result=[];
			var len=this._originFormats.length;
			for (var i=0;i < len;i++){
				var format=this._originFormats[i];
				if (index >=format.begin && index < format.end){
					result.push(format.format);
				}
			}
			return result;
		}

		__proto.mixTextFormats=function(formats){
			var format;
			var result=formats[formats.length-1].clone();
			for (var i=formats.length-2;i >=0;i--){
				format=formats[i];
				result._align=(!result._align || result._align=="left")? format._align :result._align;
				result._bold=result._bold || format._bold;
				result._color=result._color || format._color;
				result._font=result._font || format._font;
				result._italic=result._italic || format._italic;
				result._leading=result._leading || format._leading;
				result._leftMargin=result._leftMargin || format._leftMargin;
				result._letterSpacing=result._letterSpacing || format._letterSpacing;
				result._size=result._size || format._size;
				result._underline=result._underline || format._underline;
			}
			result._strokeColor=this.strokeColor;
			return result;
		}

		__proto.stuffEnough=function(value,format,leftMargin){
			(leftMargin===void 0)&& (leftMargin=true);
			return value+(leftMargin && format.leftMargin ? format.leftMargin :0)+(format.blockIndent ? format.blockIndent :0)+(format.rightMargin ? format.rightMargin :0)<=this._width-2;
		}

		__proto.maxCharsLimit=function(text){
			if (this._maxChars > 0 && text.length > this._maxChars){
				if (this._text.length >=this._maxChars){
					if (text.length > this._text.length)
						text=this._text;
					else
					if (this._lastPressKey==/*iflash.ui.Keyboard.BACKSPACE*/8)
						this._caretIndex--;
				}
				else
				text=text.substr(0,this._maxChars);
				Browser.input.value=text;
				this.setHtmlInputCaret(this._caretIndex);
			}
			return text;
		}

		__proto.replaceSelectedText=function(value){}
		__proto.lyclone=function(){
			var result=new TextField();
			this.getTextResult(result);
			return result;
		}

		__proto.getTextResult=function(result){
			result._autoSize=this._autoSize;
			result.maxChars=this.maxChars;
			result.border=this.border;
			result._multiline=this._multiline;
			result._textHeight=this._textHeight;
			result._textWidth=this._textWidth;
			result._width=this._width;
			result._height=this._height;
			if (this._wordWrap)
				result._wordWrap=this._wordWrap;
			result.type=this._type;
			if (this.tempBound)
				result.tempBound=this.tempBound;
			result.x=this.x;
			result.y=this.y;
			if (this._df !=TextField.DF)
				result._df=this._df.clone()
			if (this._htmlText)
				result.htmlText=this._htmlText;
			else
			result.text=this._text;
			result.strokeColor=this.strokeColor;
			result.strokeThickness=this.strokeThickness;
		}

		__proto.parseHTMLText=function(xml){
			if(xml==null)return;
			var tagName=xml.nodeName;
			if (tagName=="#text" || tagName=="#cdata-section")
				this._text+=xml.textContent;
			else if (!xml.length){
				var startIndex=this._text.length;
				var format=new TextFormat();
				if (xml.childNodes && !xml.childNodes.length){
					if (xml.firstChild && xml.firstChild.nodeType==3)
						this._text+=xml.textContent;
				}
				else{
					this.parseHTMLText(xml.childNodes);
				};
				var getAtt=function (name){
					if (Laya.CONCHVER){
						var atts=xml.attributes;
						for (var i=atts.length-1;i >=0;i--){
							if (atts[i].nodeName==name || atts[i].nodeName==name.toUpperCase())
								return atts[i].nodeValue;
						}
					}
					else
					return xml.getAttribute(name)|| xml.getAttribute(name.toUpperCase());
				};
				tagName=tagName.toLowerCase();
				switch (tagName){
					case "b":
						format.bold=true;
						break ;
					case "br":
						this._text+="\n";
						break ;
					case "font":;
						var color=getAtt("color");
						if (color){
							format.color=String(color).replace("#","0x");
							format.color=Laya.__parseInt(format.color,16);
						};
						var face=getAtt("face");
						if (face)
							format.font=face;
						var size=getAtt("size");
						if (size){
							var firstChar=size.charAt(0);
							if (firstChar=="+")
								format.size=Number(format.size)+Laya.__parseInt(size);
							else if (firstChar=="-")
							format.size=Number(format.size)-Laya.__parseInt(size);
							else
							format.size=getAtt("size");
						}
						break ;
					case "i":
						format.italic=true;
						break ;
					case "p":;
						var align=getAtt("align");
						if (align)
							format.align=align;
						this._multiline && (this._text+="\n");
						break ;
					case "textformat":;
						var blockIndent=getAtt("blockindent");
						if (blockIndent)
							format.blockIndent=blockIndent;
						var indent=getAtt("indent");
						if (indent)
							format.indent=indent;
						var leading=getAtt("leading");
						if (leading)
							format.leading=leading;
						var leftmargin=getAtt("leftmargin");
						if (leftmargin)
							format.leftMargin=leftmargin;
						var rightmargin=getAtt("rightmargin");
						if (rightmargin)
							format.rightMargin=rightmargin;
						break ;
					case "u":
						format.underline=true;
						break ;
					case "a":;
						var href=getAtt("href");
						this._links || (this._links=[]);
						href || (href="");
						if (href.indexOf("event:")==0){
							var te=new TextEvent(/*iflash.events.TextEvent.LINK*/"link");
							te.text=href.substr(6);
							this._links.push({event:te});
						}
						else{
							this._links.push({event:href});
						}
						break ;
					case "img":
						break ;
					}
				if (tagName=="a"){
					this._links[this._links.length-1].begin=startIndex;
					this._links[this._links.length-1].end=this._text.length;
				}
				else
				this.insertFormt(format,startIndex,this._text.length,false);
			}
			else{
				var xmlLength=xml.length;
				if (xmlLength==1 && xml[0].nodeType==3){
					this._text+=xml[0].textContent;
				}
				else{
					for (var i=0;i < xmlLength;i++){
						this.parseHTMLText(xml[i]);
					}
				}
			}
		}

		__proto.insertFormt=function(format,beginIndex,endIndex,usePush){
			(usePush===void 0)&& (usePush=true);
			var temp={begin:beginIndex,end:endIndex,format:format.clone()};
			if (usePush)
				this._originFormats.push(temp);
			else
			this._originFormats.unshift(temp);
			this.formatIndices.push(beginIndex,endIndex);
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if (!resultRect)
				resultRect=new Rectangle();
			if(this._type=="input")
				resultRect.setTo(this.viewport[0],this.viewport[1],this._width,this._height);
			else
			resultRect.setTo(this.viewport[0],this.viewport[1],this.width,this.height);
			return resultRect;
		}

		__proto._hitTest_=function(_x,_y){
			if (!this.visible || !this.mouseEnabled)
				return null;
			if (!this._checkHitMask(_x,_y)){
				return null;
			}
			if (this._getBounds_(this,DisplayObject.HELPER_RECTANGLET).containsPoint(DisplayObject.HELPER_POINT.setTo(_x,_y))){
				return this;
			}
			else{
				return null;
			}
		}

		__proto._paintChild_=function(context,x,y,w,h){
			this.renderThis();
			DrawText.drawBG(context,x,y,this);
			DrawText.printText(this,context,x,y);
		}

		__proto.getLineIndex=function(line){
			for (var i=this._lines.length-1;i >=0;i--){
				if (this._lines[i]==line)
					return i;
			}
			return-1;
		}

		__proto.getNodeFromLineByIndex=function(index,line){
			var nodes=line.nodes;
			var node;
			var len=nodes.length;
			for (var i=0;i < len;i++){
				node=nodes[i];
				if (index >=node.firstCharIndex && index <=node.lastCharIndex)
					return node;
			}
			return nodes[len-1];
		}

		__proto.setHtmlInputCaret=function(caret){
			caret=Math.max(this._text.length,caret);
			Browser.input.setSelectionRange(caret,caret);
		}

		__proto.scrollVWithoutRender=function(value){
			if (value < 0 || value > this._lines.length)
				return;
			if (this._maxScrollV > 1){
				var lastValue=this._scrollV;
				this._scrollV=Math.max(value,1)| 0;
				this._scrollV=Math.min(this._scrollV,this._maxScrollV)| 0;
				if (this._scrollV > this._maxScrollV)
					if (lastValue==this._scrollV)
				return;
				this.viewport[1]=this._lines[this._scrollV-1].y;
				this._bottomScrollV=this.getBottomScrollV(this._scrollV);
				this._modle_.textView(this.viewport[0],this.viewport[1]);
				this.dispatchEvent(new Event(/*iflash.events.Event.SCROLL*/"scroll"));
			}
			else{
				this._bottomScrollV=this._lines.length;
				this._scrollV=1;
				this.viewport[1]=0;
				this._modle_.textView(this.viewport[0],this.viewport[1]);
			}
		}

		__proto.scrollHWithoutRender=function(value){
			if (value < 0)
				value=0;
			else if (value > this.maxScrollH)
			value=this.maxScrollH;
			if (this.viewport[0]==value)
				return;
			this.viewport[0]=value;
			this._modle_.textView(this.viewport[0],this.viewport[1]);
			this.dispatchEvent(new Event(/*iflash.events.Event.SCROLL*/"scroll"));
		}

		__proto.layaDestory=function(){
			this._df=null;
			this.nodes=null;
			if(this._scroller){
				this._scroller.stop();
				this._scroller.removeEventListener(/*iflash.events.TimerEvent.TIMER*/"timer",__bind(this,this.onTextScroll));
				this._scroller=null;
			}
			this._originFormats=null;
			this._formats=null;
			this._lines=null;
			this._currLineInfo=null;
			this._nodeCoordinate=null;
		}

		__getset(0,__proto,'autoSize',function(){
			return this._autoSize;
			},function(value){
			var oldAutoSize=this._autoSize || "none";
			var newAutoSize=value || "none";
			if(oldAutoSize !=newAutoSize && !this._wordWrap){
				this.addToRender();
				this.renderThis();
				if(newAutoSize=='center')
					this._autoSizeX=this["_left_"]+(this._autoSizeWidth)/ 2;
				else if(newAutoSize=='right')
				this._autoSizeX=this["_left_"]+(this._autoSizeWidth-this._textWidth);
				else
				this._autoSizeX=this._originalX || 0;
			}
			this._autoSize=value;
			this.autosize();
		});

		__getset(0,__proto,'displayAsPassword',function(){
			return this._disAsPass;
			},function(value){
			this._disAsPass=value;
			this.addToRender();
		});

		__getset(0,__proto,'background',function(){
			return this._background || false;
			},function(value){
			this._backgroundColor || (this._backgroundColor="#FFFFFF");
			this._background=value;
			(Laya.CONCHVER && value)&& (this._modle_.bgcolor(this._backgroundColor));
		});

		__getset(0,__proto,'backgroundColor',function(){
			if (this._backgroundColor)
				return Laya.__parseInt("0x"+this._backgroundColor.substring(2),16);
			return 0xFFFFFF;
			},function(value){
			this._backgroundColor=StringMethod.getColorString(value);
			(Laya.CONCHVER && this._background)&& (this._modle_.bgcolor(this._backgroundColor));
		});

		__getset(0,__proto,'caretIndex',function(){
			return this._caretIndex;
		});

		__getset(0,__proto,'border',function(){
			return this._border || false;
			},function(value){
			this._borderColor || (this._borderColor="#000000");
			this._border=value;
			(Laya.CONCHVER && value)&& (this._modle_.border(this._borderColor));
		});

		__getset(0,__proto,'embedFonts',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'text',function(){
			return this._text;
			},function(value){
			this._htmlText='';
			if(value==undefined){
				throw new Error("Parameter text must be non-null.");
			}
			if (value==""){
				this.engine_clear(true);
				return;
			}
			this._text=value+'';
			this._nodeIndex=0;
			this.addToRender();
			this.viewport[0]=0;
			this._modle_.textView(this.viewport[0],this.viewport[1]);
			this._scrollV=1;
			this._originFormats.length=0;
			this._originFormats.push({begin:0,end:this._text.length,format:this._df});
			this.formatIndices.length=0;
			this.createFormats();
			this._isNextLineNewParagraph=true;
		});

		__getset(0,__proto,'condenseWhite',function(){
			return this._condenseWhite;
			},function(value){
			this._condenseWhite=value;
		});

		__getset(0,__proto,'selectedText',function(){
			return this._selectable;
		});

		__getset(0,__proto,'borderColor',function(){
			return Laya.__parseInt("0x"+this._borderColor.substring(2),16);
			},function(value){
			this._borderColor=StringMethod.getColorString(value);
			(Laya.CONCHVER && this._border)&& (this._modle_.border(this._borderColor));
		});

		__getset(0,__proto,'scrollH',function(){
			return this.viewport[0];
			},function(value){
			this.scrollHWithoutRender(value);
			this.engine_layout();
		});

		__getset(0,__proto,'bottomScrollV',function(){
			this.renderThis();
			return this._bottomScrollV;
		});

		__getset(0,__proto,'defaultTextFormat',function(){
			return this._df.clone();
			},function(format){
			if (this._df==TextField.DF)
				this._df=new TextFormat();
			this._df.align=format.align || this._df.align;
			this._df.blockIndent=format.blockIndent || this._df.blockIndent;
			this._df.bold=format.bold || this._df.bold;
			this._df.bullet=format.bold || this._df.bullet;
			if(format.color !=null)
				this._df.color=format.color;
			else
			this._df.color=this._textColor || this._df.color;
			this._df.display=format.display || this._df.display;
			this._df.font=format.font || this._df.font;
			this._df.indent=format.indent || this._df.indent;
			this._df.italic=format.italic || this._df.italic;
			this._df.leading=format.leading || this._df.leading;
			this._df.leftMargin=format.leftMargin || this._df.leftMargin;
			this._df.letterSpacing=format.letterSpacing || this._df.letterSpacing;
			this._df.rightMargin=format.rightMargin || this._df.rightMargin;
			this._df.size=format.size || this._df.size;
			this._df.tabStops=format.tabStops || this._df.tabStops;
			this._df.target=format.target || this._df.target;
			this._df.underline=format.underline || this._df.underline;
			this._df.url=format.url;
			if (this._type !="input" && this._text && this._text.length){
				this.addToRender();
				this.createFormats();
			}
		});

		__getset(0,__proto,'htmlText',function(){
			return this._htmlText;
			},function(value){
			if (value=="" && this._text)
				this.engine_clear(true);
			this._links && (this._links.length=0);
			this._originFormats.length=0;
			this._htmlText=value;
			this._text="";
			if (!this._htmlText || !this._htmlText.length){
				this.nodes.clear();
				this.conchNodes && this.conchNodes.clear();
				Laya.CONCHVER && (this._modle_.textStrs(this.conchNodes));
				return;
			}
			this.addToRender();
			if(Laya.CONCHVER){
				if(/^\x20+$/g.test(value)){
					this.text=value;
					return;
				}
			}
			value="<data>"+value+"</data>";
			value=value.replace(/(\<br\>|\n)/g,"<br/>");
			if (this._condenseWhite)
				value=value.replace(/(\s)+/g,'$1');
			/*__JS__ */var xml=(new DOMParser()).parseFromString(value,'text/xml');;
			if (!Laya.CONCHVER){
				/*__JS__ */if(!xml.childNodes[0].textContent)return;
			}
			/*__JS__ */var data=xml.childNodes[0].childNodes;
			this.formatIndices.length=0;
			this.parseHTMLText(/*__JS__ */data);
			if (Laya.CONCHVER)
				this._text=TextField.decodeFromEntities(this._text);
			this._originFormats.unshift({begin:0,end:this._text.length,format:this._df});
			this.createFormats();
			this._isNextLineNewParagraph=true;
		});

		__getset(0,__proto,'length',function(){
			return this._text ? this._text.length :0;
		});

		__getset(0,__proto,'maxChars',function(){
			return this._maxChars;
			},function(value){
			this._maxChars=value;
		});

		__getset(0,__proto,'maxScrollH',function(){
			if (!this._textWidth)
				return 0;
			this.renderThis();
			return Math.max(0,this._textWidth-(this._width-1-2-2));
		});

		__getset(0,__proto,'maxScrollV',function(){
			this.renderThis();
			return this._maxScrollV ? this._maxScrollV :1;
		});

		__getset(0,__proto,'multiline',function(){
			return this._multiline;
			},function(value){
			this._multiline=value;
		});

		__getset(0,__proto,'numLines',function(){
			this.renderThis();
			if (!this._lines || this._lines.length==0)
				return 1;
			return this._lines.length;
		});

		__getset(0,__proto,'restrict',function(){
			if (Laya.CONCHVER)
				return this._restrict;
			else
			return !this._restrict ? "" :this._restrict.source;
			},function(value){
			if (Laya.CONCHVER)
				this._restrict=value;
			else{
				if (!value){
					this._restrict=null;
					return;
				}
				if (!(/^\[.+\]$/.test(value)))
					value="[^"+value+"]";
				this._restrict=new RegExp(value,"g");
			}
		});

		__getset(0,__proto,'scrollV',function(){
			return this._scrollV ? this._scrollV :1;
			},function(value){
			this.scrollVWithoutRender(value);
			this.engine_layout();
		});

		__getset(0,__proto,'useRichTextClipboard',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'_filters',null,function(value){
			var a=value[0];
			this.strokeColor=StringMethod.getColorString(a.color);
			this.strokeThickness=a.blurX;
		});

		__getset(0,__proto,'selectable',function(){
			return this._selectable;
			},function(value){
			this._selectable=value;
			if (!value && this._scroller){
				this._scroller.running && this._scroller.stop();
				this._scroller.removeEventListener(/*iflash.events.TimerEvent.TIMER*/"timer",__bind(this,this.onTextScroll));
				this._scroller=null;
			}
		});

		__getset(0,__proto,'selectionBeginIndex',function(){
			return this._selectionBeginIndex;
		});

		__getset(0,__proto,'y',function(){
			return _super.prototype._$get_y.call(this)-(this.tempBound ? this.tempBound.y :0);
			},function(value){
			_super.prototype._$set_y.call(this,value+(this.tempBound ? this.tempBound.y :0));
			if(this._type=="input" && Laya.CONCHVER && (Stage.stage.focus==this)){
				var concatedMatrix=this._getConcatenatedMatrix();
				var tempY=concatedMatrix.ty *Laya.window.scale.y+Laya.document.body.y;
				if(tempY !=Browser.input.top){
					Browser.input.setPos(concatedMatrix.tx *Laya.window.scale.x+Laya.document.body.x,tempY);
				}
			}
		});

		__getset(0,__proto,'selectionEndIndex',function(){
			return this._selectionEndIndex;
		});

		__getset(0,__proto,'sharpness',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'textColor',function(){
			return this._textColor;
			},function(value){
			if (value > 0xFFFFFF)
				value=Number("0x"+value.toString(16).substr(2));
			if (this._df==TextField.DF)
				this._df=new TextFormat();
			if (this._originFormats[0])
				this._originFormats[0].format=this._df;
			this._textColor=value;
			this._df.color=this._textColor;
			if (this._text && this._text.length > 0){
				this.createFormats();
				this.addToRender();
			}
		});

		__getset(0,__proto,'textHeight',function(){
			this.renderThis();
			return this._textHeight;
		});

		__getset(0,__proto,'thickness',function(){
			return 0;
			},function(value){
		});

		__getset(0,__proto,'textWidth',function(){
			this.renderThis();
			return this._textWidth;
		});

		__getset(0,__proto,'type',function(){
			return this._type;
			},function(value){
			this._type=value;
			if (this._type=="input"){
				this._caretIndex=0;
				if(!Laya.document.canvas['onmouseup'] && TextField.onMobile){
					Laya.document.canvas['onmouseup']=function (e){
						if(iflash.text.TextField.isInputting){
							if(Browser.input.parentNode)
								Browser.input.target.checkTextFocusout(null);
							else
							Browser.addToBody(Browser.input);
							Browser.input.focus();
						}
					}
				}
			}
		});

		__getset(0,__proto,'wordWrap',function(){
			return this._wordWrap || false;
			},function(value){
			if (this._wordWrap !=value)
				this.addToRender();
			this._wordWrap=value;
		});

		__getset(0,__proto,'width',function(){
			this.renderThis();
			if (this._wordWrap)
				return this._width;
			return (this._autoSize && this._autoSize !="none")? this._textWidth+(2+2):this._width;
			},function(value){
			if (value < 0)
				return;
			if(this._autoSize && this._autoSize !="none"){
				this.renderThis();
				if(this._autoSize=="center"){
					this._autoSizeX=this.x+value / 2;
				}
				else if(this._autoSize=="right"){
					this._autoSizeX=this.x+value;
				}
				this._autoSizeWidth=this._textWidth;
			}
			else
			this._autoSizeWidth=value;
			this._width=value;
			this.addToRender();
		});

		__getset(0,__proto,'height',function(){
			this.renderThis();
			return (this._autoSize && this._autoSize !="none")? this._textHeight+2+2 :this._height;
			},function(value){
			if (value==this._height || value <=0)
				return;
			this._height=value;
			this.addToRender();
		});

		__getset(0,__proto,'x',function(){
			this.renderThis();
			return _super.prototype._$get_x.call(this)-(this.tempBound ? this.tempBound.x :0);
			},function(value){
			this._originalX=value;
			if(this._autoSize=='center')
				this._autoSizeX=value+this.width / 2;
			else if(this._autoSize=='right')
			this._autoSizeX=value+this.width;
			else
			this._autoSizeX=value;
			if(this._autoSize && this._autoSize !="none")
				this._autoSizeWidth=this._textWidth;
			else
			this._autoSizeWidth=this._width;
			_super.prototype._$set_x.call(this,value+(this.tempBound ? this.tempBound.x :0));
			if(this._type=="input" && (Stage.stage.focus==this)){
				var concatedMatrix=this._getConcatenatedMatrix();
				var tempX=concatedMatrix.tx *Laya.window.scale.x+Laya.document.body.x;
				if(tempX !=Browser.input.left){
					Browser.input.setPos(tempX,concatedMatrix.ty *Laya.window.scale.y+Laya.document.body.y);
				}
			}
		});

		__getset(0,__proto,'filters',_super.prototype._$get_filters,function(filters){
			if (!filters){
				_super.prototype._$set_filters.call(this,filters);
				return;
			};
			var strokeFilter;
			for (var i=filters.length-1;i >=0;i--){
				if (((filters[i])instanceof iflash.filters.GlowFilter )){
					strokeFilter=filters[i];
					filters.splice(i,1);
					break ;
				}
			}
			if (strokeFilter){
				this.strokeColor=StringMethod.getColorString(strokeFilter.color);
				this.strokeThickness=(strokeFilter.blurX / 5)*3+1;
				if (this._text && this._text.length){
					for (i=this._formats.length-1;i >=0;i--)
					this._formats[i].format._strokeColor=this.strokeColor;
				}
			}
			else{
				this.strokeColor=null;
				this.strokeThickness=null;
			}
			_super.prototype._$set_filters.call(this,filters);
		});

		__getset(0,__proto,'gridFitType',function(){
			return '';
			},function(value){
		});

		__getset(0,__proto,'textInteractionMode',function(){
			return null
		});

		__getset(0,__proto,'alwaysShowSelection',function(){
			return false;
			},function(value){
		});

		__getset(0,__proto,'mouseWheelEnabled',function(){
			return false
			},function(value){
		});

		__getset(0,__proto,'styleSheet',function(){
			return null;
			},function(value){
		});

		TextField.renderTexts=function(){
			var len=TextField.TextsToRender.length;
			if (len==0)
				return;
			for (var i=len-1;i >=0;i--){
				var t=TextField.TextsToRender.pop();
				t.engine_updateStyle();
			}
		}

		TextField.isFontCompatible=function(fontName,fontStyle){
			return true;
		}

		TextField.decodeFromEntities=function(str){
			return str.replace(/\&#?\w{2,6};/g,function(__args){
				var args=arguments;
				return TextField.Entities[args[0]];
			});
		}

		TextField.LINE_WIDTH=1;
		TextField.LEFT_PADDING=2;
		TextField.RIGHT_PADDING=2;
		TextField.TOP_PADDING=2;
		TextField.BOTTOM_PADDING=2;
		TextField.borderStyle="3px solid orange";
		TextField.TextsToRender=[];
		TextField.isInputting=false;
		__static(TextField,
		['LINE_LEADING',function(){return this.LINE_LEADING=Laya.CONCHVER ?-2 :0;},'myAgent',function(){return this.myAgent=/*__JS__ */navigator.userAgent;},'onIPhone',function(){return this.onIPhone=TextField.myAgent.indexOf("iPhone")>-1;},'onIPad',function(){return this.onIPad=TextField.myAgent.indexOf("iPad")>-1;},'onAndriod',function(){return this.onAndriod=TextField.myAgent.indexOf("Android")>-1;},'onWP',function(){return this.onWP=TextField.myAgent.indexOf("Windows Phone")>-1;},'onQQ',function(){return this.onQQ=TextField.myAgent.indexOf("QQBrowser")>-1;},'onMobile',function(){return this.onMobile=TextField.onIPhone || TextField.onAndriod || TextField.onWP || TextField.onIPad;},'initialWindowWidth',function(){return this.initialWindowWidth=/*__JS__ */window.innerWidth;},'initialWindowHeight',function(){return this.initialWindowHeight=/*__JS__ */window.innerHeight;},'deviceAvailWidth',function(){return this.deviceAvailWidth=/*__JS__ */window.screen.availWidth;},'deviceAvailHeight',function(){return this.deviceAvailHeight=/*__JS__ */window.screen.availHeight;},'pixelRatio',function(){return this.pixelRatio=TextField.deviceAvailHeight / TextField.initialWindowHeight;},'inputHeight',function(){return this.inputHeight=(50 / Math.min(1,TextField.pixelRatio)/ 2 | 0)*2;},'textAreaHeight',function(){return this.textAreaHeight=(80 / Math.min(1,TextField.pixelRatio)/ 2 | 0)*2;},'inputFontSize',function(){return this.inputFontSize=((25 / Math.min(1,TextField.pixelRatio)/ 2 | 0)+1)*2;},'DF',function(){return this.DF=new TextFormat("Times New Roman",12,0x000000,false,false,false,null,null,"left",null,null,null,null);},'Entities',function(){return this.Entities={"&nbsp;":" ","&#160;":" ","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&amp;":"&","&amp;":"&","&quot;":"\"","&#34;":"\"","&apos;":"'",
				"&#39;":"'","&cent;":"￠","&#162;":"￠","&pound;":"￡","&#163;":"￡","&yen;":"￥","&#165;":"￥","&euro;":"€","&#8364;":"€","&sect;":"§","&#167;":"§","&copy;":"?","&#169;":"?",
				"&reg;":"?","&#174;":"?","&trade;":"?","&#8482;":"?","&times;":"×","&#215;":"×","&divide;":"÷","&#247;":"÷"};}
		]);
		return TextField;
	})(InteractiveObject)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/sprite.as
	//class iflash.display.Sprite extends iflash.display.DisplayObjectContainer
	var Sprite=(function(_super){
		function Sprite(){
			this._graphics=null;
			this._dragRect_=null;
			this._prelocationX_=0;
			this._prelocationY_=0;
			this._sc9Y_=1;
			this._sc9X_=1;
			this._hitArea=null;
			Sprite.__super.call(this);
		}

		__class(Sprite,'iflash.display.Sprite',false,_super);
		var __proto=Sprite.prototype;
		__proto._paintGraphics_=function(context,x,y,w,h){
			if (this._graphics){
				var grapics=this._graphics;
				if(grapics.isReady()){
					grapics._canvas_.paint(context,x,y,w,h);
				}
				this._paintChild_(context,x,y,w,h);
			}
			else
			this._paintChild_(context,x,y,w,h);
		}

		__proto.startDrag=function(lockCenter,bounds){
			(lockCenter===void 0)&& (lockCenter=false);
			this._dragRect_=bounds;
			this.stage.addEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.__drag__));
			if(lockCenter){
				this._prelocationX_=0;
				this._prelocationY_=0;
				}else{
				if(Sprite._startedDrag_)return;
				this._prelocationX_=EventManager._stageX-this.x;
				this._prelocationY_=EventManager._stageY-this.y;
			}
			Sprite._startedDrag_=true;
			this.__drag__();
		}

		__proto.stopDrag=function(){
			this.stage&&this.stage.removeEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.__drag__));
			this._dragRect_=null;
			Sprite._startedDrag_=false;
		}

		__proto.__drag__=function(e){
			if(!Sprite._startedDrag_)return;
			this.x=EventManager._stageX-this._prelocationX_;
			this.y=EventManager._stageY-this._prelocationY_;
			if(this._dragRect_){
				if(this.x>this._dragRect_.width+this._dragRect_.x)
					this.x=this._dragRect_.width+this._dragRect_.x;
				if(this.y>this._dragRect_.height+this._dragRect_.y)
					this.y=this._dragRect_.height+this._dragRect_.y;
				if(this.x<this._dragRect_.x)
					this.x=this._dragRect_.x;
				if(this.y<this._dragRect_.y)
					this.y=this._dragRect_.y;
			}
		}

		__proto._lyToBody_=function(){
			this.updateScaleData();
			_super.prototype._lyToBody_.call(this);
		}

		__proto._hitTest_=function(x,y){
			if(!this.visible)return null;
			var target=_super.prototype._hitTest_.call(this,x,y);
			if(target)return target;
			return this.graphicsHited(x,y);
		}

		__proto.graphicsHited=function(x,y){
			if(this._graphics){
				if (!this._checkHitMask(x,y)){return null;}
					if (!this._checkHitScrollRect(x,y)){return null;}
				if (this._private_._scrollRect_){x+=this._private_._scrollRect_.x;y+=this._private_._scrollRect_.y;}
					DisplayObject.HELPER_RECTANGLET.setTo(this._graphics.x,this._graphics.y,this._graphics.width*this.scaleX,this._graphics.height*this.scaleY);
				if(DisplayObject.HELPER_RECTANGLET.contains(x,y)){
					return this;
				}
			}
			return null;
		}

		__proto.hitAreaMouseHandler=function(event){
			this.dispatchEvent(new MouseEvent(event.type));
		}

		__proto._getBounds_=function(targetSpace,resultRect){
			if(!resultRect)
				resultRect=new Rectangle();
			_super.prototype._getBounds_.call(this,targetSpace,resultRect);
			if(this._graphics){
				DisplayObject.HELPER_RECTANGLET_ALT.setTo(this._graphics.x,this._graphics.y,this._graphics.width,this._graphics.height);
				if(DisplayObject.HELPER_RECTANGLET_ALT.width&&DisplayObject.HELPER_RECTANGLET_ALT.height){
					if(this.numChildren)
						resultRect._union_(DisplayObject.HELPER_RECTANGLET_ALT);
					else
					resultRect.setTo(DisplayObject.HELPER_RECTANGLET_ALT.x,DisplayObject.HELPER_RECTANGLET_ALT.y,DisplayObject.HELPER_RECTANGLET_ALT.width,DisplayObject.HELPER_RECTANGLET_ALT.height);
				}
			}
			return resultRect;
		}

		__getset(0,__proto,'graphics',function(){if(!this._graphics)this._graphics=new Graphics(this);
			return this._graphics;
		});

		__getset(0,__proto,'buttonMode',function(){
			return false;
		},LAYAFNVOID/*function(value){}*/);

		__getset(0,__proto,'width',_super.prototype._$get_width,function(w){
			if(w<0)return;
			if(this.scale9Data){
				var c=this._childs_[0];
				c&&c.scale9Data&&(c.width=w);
				this._width_=w
			}
			else _super.prototype._$set_width.call(this,w);
		});

		__getset(0,__proto,'useHandCursor',function(){
			return (this._type_&0x80)!=0;
			},function(value){
			if(value)
				this._type_|=0x80;
			else
			this._type_&=~0x80;
		});

		__getset(0,__proto,'dropTarget',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'height',_super.prototype._$get_height,function(h){
			if(h<0)return;
			if(this.scale9Data){
				var c=this._childs_[0];
				c&&c.scale9Data&&(c.height=h);
				this._height_=h;
			}
			else _super.prototype._$set_height.call(this,h);
		});

		__getset(0,__proto,'hitArea',function(){
			return this._hitArea;
			},function(value){
			if (this._hitArea){
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.DOUBLE_CLICK*/"doubleClick",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.MOUSE_OUT*/"mouseOut",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.removeEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this.hitAreaMouseHandler));
			}
			this._hitArea=value;
			this.mouseEnabled=this._hitArea !=null ? false :true;
			if (this._hitArea){
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.DOUBLE_CLICK*/"doubleClick",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.MOUSE_OUT*/"mouseOut",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver",__bind(this,this.hitAreaMouseHandler));
				this._hitArea.addEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this.hitAreaMouseHandler));
			}
		});

		__getset(0,__proto,'scaleY',function(){
			return this.scale9Data?this._sc9Y_:_super.prototype._$get_scaleY.call(this);
			},function(value){
			if(this.scale9Data){
				var c=this._childs_[0];
				c&&c.scale9Data&&(c.scaleY=value);
				this._sc9Y_=value;
				this._height_ *=value;
			}
			else _super.prototype._$set_scaleY.call(this,value);
		});

		__getset(0,__proto,'scaleX',function(){
			return this.scale9Data?this._sc9X_:_super.prototype._$get_scaleX.call(this);
			},function(value){
			if(this.scale9Data){
				var c=this._childs_[0];
				c&&c.scale9Data&&(c.scaleX=value);
				this._sc9X_=value;
				this._width_ *=value;
			}
			else _super.prototype._$set_scaleX.call(this,value);
		});

		Sprite._startedDrag_=false;
		return Sprite;
	})(DisplayObjectContainer)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/loader.as
	//class iflash.display.Loader extends iflash.display.DisplayObjectContainer
	var Loader=(function(_super){
		function Loader(){
			this._contentLoaderInfo=null;
			this.__content__=null;
			this.__element__=null;
			this._bitmapData=null;
			this._resUrl="";
			this.shapeRes=null;
			this.preIndex=0;
			this.preLoader=[];
			this.isFlag=false;
			Loader.__super.call(this);
			this._contentLoaderInfo=LoaderInfo.create(this._getID_);
			this._contentLoaderInfo.loader=this;
		}

		__class(Loader,'iflash.display.Loader',false,_super);
		var __proto=Loader.prototype;
		__proto.onSetResUrlHandler=function(evt){
			this._resUrl=evt.lyData.url;
		}

		__proto.disposeLoader=function(){
			if(!this._contentLoaderInfo)
				return
			this.unload();
			this.isFlag=false;
			var resMapDic=this._contentLoaderInfo._resourceDic_;
			var reDomain=this._contentLoaderInfo._reDomain_;
			for(var key in resMapDic){
				var clas=resMapDic[key];
				if(reDomain){
					if(reDomain._resMapDic_[key])
						delete reDomain._resMapDic_[key];
				}
				if((clas instanceof iflash.display.MovieClip )){
					clas.layaDestory();
					Runnner.template.splice(Runnner.template.indexOf(clas.runner),1);
					}else{
					if((clas instanceof iflash.text.StaticText ))
						return;
					if((clas instanceof iflash.text.TextField ))
						return;
					if(clas)clas.layaDestory();
				}
			}
			this._contentLoaderInfo._applicationDomain._resMapDic_=null;
			this._contentLoaderInfo._applicationDomain=null;
			this._contentLoaderInfo._resourceDic_ && (this._contentLoaderInfo.deleteResourceDic());
			this._contentLoaderInfo._reDomain_=null;
			this._contentLoaderInfo && (delete LoaderInfo._loaderInfos_[this._contentLoaderInfo.__id__]);
			this._contentLoaderInfo=null;
			this._eventListener_ && (this._eventListener_=null);
		}

		__proto.load=function(request,context){
			var _$this=this;
			this._checkloaderInfo();
			var index=(request.url).lastIndexOf("?");
			this._contentLoaderInfo.lyurl=request.url;
			this._contentLoaderInfo.__fileurl=request.url;
			var urlStr=Method.formatUrlType(request.url);
			request.url=Method.formatUrl(request.url);
			if(!context){
				context=new LoaderContext(false,new ApplicationDomain());
			}
			this._contentLoaderInfo._reDomain_=context.applicationDomain;
			this.contains(this.__content__)&&this.removeChild(this.__content__);
			switch (urlStr){
				case "swf":
				case "swp":
				case "cvt":
					Stage.USE_SMALL ? this.loadSwf_Small(request.url,urlStr):this.loadSwf(request.url);
					break ;
				default :
					this._bitmapData=new BitmapData();
					var fileLoadType=false;
					var data=Browser.document.createElement("image");
					data.onload=function (__args){
						var args=arguments;
						if (Laya.HTMLVER&&!Laya.CONCHVER&&urlStr=="jng"){
							data=Method._JpgToPng(data);
							_$this._bitmapData.setType(/*iflash.display.BitmapData.CANVAS*/1);
							_$this._bitmapData.setCanvas(data);
						}else _$this._bitmapData.setImage(data);
						_$this.__content__=new Bitmap(_$this._bitmapData);
						_$this._contentLoaderInfo.__content__=_$this.__content__;
						_$this._contentLoaderInfo.height=_$this.__content__.height;
						_$this._contentLoaderInfo.width=_$this.__content__.width;
						_$this.addChild(_$this.__content__);
						_$this.__element__=data;
						_$this.contentLoaderInfo.dispatchEvent(new Event(/*iflash.events.Event.INIT*/"init",false,false,_$this.__content__));
						_$this.contentLoaderInfo.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete",false,false,_$this.__content__));
						_$this.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
						data.onerror=data.onload=null;
						fileLoadType=true;
					};
					data.onerror=function (__args){
						var args=arguments;
						var io=new IOErrorEvent(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError");
						io.text="找不到"+data.src;
						_$this.contentLoaderInfo.dispatchEvent(io);
						data.onerror=data.onload=null;
						fileLoadType=true;
					};
					data.src=request.url;
					break ;
				}
		}

		__proto.close=LAYAFNVOID/*function(){}*/
		__proto.unload=function(){
			if(this.__content__){
				this.removeChild(this.__content__);
				this.__content__._removeEvents_();
				this.__content__=null;
				this._bitmapData=null;
			}
			if(this.parent){
				this.parent._type_|=0x4000;
				this.parent.lyRemoveChildAt(this.childIndexOf(this));
			}
		}

		__proto._checkloaderInfo=function(){
			if(this.isFlag){
				var t=this._contentLoaderInfo;
				this._contentLoaderInfo=LoaderInfo.create(this._getID_);
				this._contentLoaderInfo.loader=this;
				this._contentLoaderInfo._getEvents_(t);
				t=null;
				}else{
				this.isFlag=true;
			}
		}

		__proto.loadBytes=function(data,context){
			this._checkloaderInfo();
			var _this=this;
			this.contains(this.__content__)&&this.removeChild(this.__content__);
			if((data instanceof Array)){
			}
			else if((data instanceof iflash.utils.ByteArray )){
				data.position=0;
				var fileHeadType=data.readUTF();
				var tmpBytes=new ByteArray();
				if(fileHeadType !="swf"){
					throw "un support img binary!";
				}
				else{
					context&&(this._contentLoaderInfo._reDomain_=context.applicationDomain);
					var fileUrl=data.readUTF();
					var filetype=fileHeadType;
					data.readBytes(tmpBytes,0,tmpBytes.bytesAvailable);
					Stage.USE_SMALL ? this.loadSwf_Small(fileUrl,filetype,tmpBytes):this.loadSwf(fileUrl.substring(0,fileUrl.lastIndexOf("."+filetype)),tmpBytes);
				}
			}
			else{
				this._bitmapData=new BitmapData();
				this._bitmapData.setImage(data);
				this.__content__=this.contentLoaderInfo.__content__=new Bitmap(this._bitmapData);
				this.addChild(this.__content__);
				this.addEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame));
			}
		}

		__proto.getFileType=function(fileData){
			var b0=fileData.readUnsignedByte();
			var b1=fileData.readUnsignedByte();
			var fileType="unknown";
			if(b0==66 && b1==77){
				fileType="BMP";
			}
			else if(b0==255 && b1==216){
				fileType="JPG";
				}else if(b0==137 && b1==80){
				fileType="PNG";
				}else if(b0==71 && b1==73){
				fileType="GIF";
			}
			return fileType;
		}

		__proto._buildLoaderContext=function(context){
			if(context==null){
				context=new LoaderContext();
			}
			if(context.applicationDomain==null){
				context.applicationDomain=new ApplicationDomain(ApplicationDomain.currentDomain);
			}
			return context;
		}

		__proto.onEnterFrame=function(evt){
			this.removeEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame));
			this.contentLoaderInfo.dispatchEvent(new iflash.events.Event(/*iflash.events.Event.COMPLETE*/"complete",false,false));
		}

		__proto.unloadAndStop=function(gc){
			(gc===void 0)&& (gc=true);
			this.unload();
		}

		__proto.deleteKey=function(arr){
			for(var i in arr){
				delete arr[i];
			}
			arr.length=0;
		}

		__proto.loadSwf=function(url,tmpBytes){
			this._contentLoaderInfo.onload=iflash.method.bind(this,this.onLoadeComplete);
			if(tmpBytes){
				this._contentLoaderInfo.setUrl(url);
				this._contentLoaderInfo.setByteArray(tmpBytes);
			}else
			this._contentLoaderInfo.src=url;
		}

		__proto.loadSwf_Small=function(url,urltype,tmpBytes){
			var _$this=this;
			var $this=this;
			if(!Loader.imgLoader){
				Loader.imgLoader=Browser.document.createElement("image");
			}
			else{
				this._contentLoaderInfo.onload=iflash.method.bind($this,this.onLoadeComplete);
				LoaderInfo.minibitmapData=new BitmapData();
				LoaderInfo.minibitmapData.setImage(Loader.imgLoader);
				if(tmpBytes){
					this._contentLoaderInfo.setUrl(url.substring(0,url.lastIndexOf("."+urltype)));
					this._contentLoaderInfo.setByteArray(tmpBytes);
				}else
				this._contentLoaderInfo.src=url;
				return;
			}
			Loader.imgLoader.onload=function (){
				_$this._contentLoaderInfo.onload=iflash.method.bind($this,_$this.onLoadeComplete);
				LoaderInfo.minibitmapData=new BitmapData();
				LoaderInfo.minibitmapData.setImage(Loader.imgLoader);
				if(tmpBytes){
					_$this._contentLoaderInfo.setUrl(url.substring(0,url.lastIndexOf("."+urltype)));
					_$this._contentLoaderInfo.setByteArray(tmpBytes);
				}else
				{_$this._contentLoaderInfo.src=url;}
				Loader.imgLoader=null;
				LoaderInfo.minibitmapData=null;
			};
			Loader.imgLoader.onerror=function (){
				_$this.contentLoaderInfo.dispatchEvent(new IOErrorEvent(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError"));
				Loader.imgLoader=null;
			};
			var charIndex=url.lastIndexOf("."+urltype);
			Loader.imgLoader.src=url.substring(0,charIndex)+"/small.png";
		}

		__proto.onLoadeComplete=function(__args){
			var args=arguments;
			this.addChild(this._contentLoaderInfo.__content__);
			this.__content__=this.contentLoaderInfo.__content__;
			if(this.preLoader.length>0){
				this.onPreLoader();
				}else {
				this.contentLoaderInfo.dispatchEvent(new Event(/*iflash.events.Event.INIT*/"init"));
				this.contentLoaderInfo.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
			}
		}

		__proto.onPreLoader=function(){
			Runnner.preResCollection=[];
			for (var i=0;i < this.preLoader.length;i++){
				var obj=this.contentLoaderInfo.applicationDomain.newInstance(this.preLoader[i]);
				if((obj instanceof iflash.display.MovieClip )){
					obj.runner.getPreRes(this.contentLoaderInfo);
				}
				if((obj instanceof iflash.display.Shape )){
					Runnner.preResCollection.push(res);
				}
				if((obj instanceof iflash.display.LyImageElement )){
					Runnner.preResCollection.push(res);
				}
			};
			var arr=Runnner.preResCollection;
			this.preIndex=0;
			while(Runnner.preResCollection.length>0){
				var res=Runnner.preResCollection.pop();
				if((res instanceof iflash.display.Shape )){
					this.preIndex++;
					res._image_._image_.onload=iflash.method.bind(this,this.onPreComplete);
					res._image_._image_.src=res._image_.src;
				}
				if((res instanceof iflash.display.LyImageElement )){
					this.preIndex++;
					res._image_.onload=iflash.method.bind(this,this.onPreComplete);
					res._image_.src=res._image_.src;
				}
			}
		}

		__proto.onPreComplete=function(obj){
			this.preIndex--;
			if(this.preIndex <=0){
				this.contentLoaderInfo.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
			}
		}

		__getset(0,__proto,'contentLoaderInfo',function(){
			return this._contentLoaderInfo;
		});

		__getset(0,__proto,'_getID_',function(){
			return++Loader.__ID__;
		});

		__getset(0,__proto,'content',function(){
			return this.__content__;
		});

		__getset(0,__proto,'element',function(){
			return this.__element__;
		});

		Loader.removeNameChar=function(fileName){
			var urls=fileName.split("/");
			var str,i=1,size=urls.length;
			while (i < size){
				str=urls[i];
				if (str==null)break ;
				if (str==''){
					urls.splice(i,1);
					continue ;
				}
				i+=1;
			}
			fileName=urls.join("/");
			return fileName;
		}

		Loader.preswfAsset=function(arr){
			Loader.preSwf=Loader.preSwf.concat(arr);
		}

		Loader.__isPNG=function(bytes){
			bytes.position=0;
			return (bytes.readByte ()==0x89 && bytes.readByte ()==0x50 && bytes.readByte ()==0x4E && bytes.readByte ()==0x47 && bytes.readByte ()==0x0D && bytes.readByte ()==0x0A && bytes.readByte ()==0x1A && bytes.readByte ()==0x0A);
		}

		Loader.__ID__=0;
		Loader.preSwf=[];
		Loader.imgLoader=null
		return Loader;
	})(DisplayObjectContainer)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/stage.as
	//class iflash.display.Stage extends iflash.display.DisplayObjectContainer
	var Stage=(function(_super){
		function Stage(){
			this.contentsScaleFactor=1;
			this._useActivateEventCount_=0;
			this._infoFlag=true;
			this._algin="";
			this.currentFocus=null;
			this._isInvalidate=false;
			this._tmctr_=null;
			this._bgc_=0xffffff;
			this._bgc2_="#ffffff";
			this.autoOrients=false;
			this.visibilityChange="hidden";
			this.visibilityState="visibilityState";
			this.stage3Ds=([new Stage3D(),new Stage3D(),new Stage3D(),new Stage3D()]);
			this._scaleMode_=/*iflash.display.StageScaleMode.SHOW_ALL*/"showAll";
			Stage.__super.call(this);
			this._width_=EventDispatcher.window.innerWidth;
			this._height_=EventDispatcher.window.innerHeight;
			this._tmctr_=TimerCtrl.__DEFAULT__;
		}

		__class(Stage,'iflash.display.Stage',false,_super);
		var __proto=Stage.prototype;
		__proto.setOrientationEx=function(type){
			Laya.document.setOrientationEx(type);
		}

		__proto.setSize=function(w,h){
			Laya.document.size(w,h);
		}

		__proto.invalidate=function(){
			this._isInvalidate=true;
		}

		__proto.size=function(width,height){
			Laya.document.size(width,height);
		}

		__proto._hitTest_=function(x,y){
			var target=_super.prototype._hitTest_.call(this,x,y);
			if (!target)
				target=this;
			return target;
		}

		__proto.sendRender=function(){
			if(this._isInvalidate){
				this._isInvalidate=false;
				this.lyDispatchEvent(/*iflash.events.Event.RENDER*/"render");
			}
		}

		__proto.addEventListener=function(type,listener,useCapture,priority,useWeakReference){
			(useCapture===void 0)&& (useCapture=false);
			(priority===void 0)&& (priority=0);
			(useWeakReference===void 0)&& (useWeakReference=false);
			if(type==/*iflash.events.Event.ACTIVATE*/"activate" || type==/*iflash.events.Event.DEACTIVATE*/"deactivate"){
				if(this.hasEventListener(type))return;
				if(this._useActivateEventCount_==0){
					this.addVisibilityChangeEvent();
				}
				this._useActivateEventCount_++;
			}
			iflash.events.EventDispatcher.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
		}

		__proto.removeEventListener=function(type,listener,useCapture){
			(useCapture===void 0)&& (useCapture=false);
			if(type==/*iflash.events.Event.ACTIVATE*/"activate" || type==/*iflash.events.Event.DEACTIVATE*/"deactivate"){
				if(!this.hasEventListener(type))return;
				this._useActivateEventCount_--;
				if(this._useActivateEventCount_==0){
					this.removeVisibilityChangeEvent();
				}
			}
			iflash.events.EventDispatcher.prototype.removeEventListener.call(this,type,listener,useCapture);
		}

		__proto.visibilitySysEvtHandler=function(e){
			var evt=new Event(Browser.document[this.visibilityState]=="hidden"? /*iflash.events.Event.DEACTIVATE*/"deactivate":/*iflash.events.Event.ACTIVATE*/"activate",e.bubbles,e.cancelable);
			this.dispatchEvent(evt);
		}

		__proto.addVisibilityChangeEvent=function(){
			var document=Browser.document;
			if ("hidden" in document){
				this.visibilityChange="visibilitychange";
				this.visibilityState="visibilityState";
				}else if ("mozHidden" in document){
				this.visibilityChange="mozvisibilitychange";
				this.visibilityState="mozVisibilityState";
				}else if ("msHidden" in document){
				this.visibilityChange="msvisibilitychange";
				this.visibilityState="msVisibilityState";
				}else if ("webkitHidden" in document){
				this.visibilityChange="webkitvisibilitychange";
				this.visibilityState="webkitVisibilityState";
			}
			Browser.document.addEventListener(this.visibilityChange,__bind(this,this.visibilitySysEvtHandler));
		}

		__proto.removeVisibilityChangeEvent=function(){
			Browser.document.removeEventListener(this.visibilityChange,__bind(this,this.visibilitySysEvtHandler));
		}

		__proto.setAspectRatio=function(newAspectRatio){
			switch(newAspectRatio){
				case /*iflash.display.StageAspectRatio.PORTRAIT*/"portrait":
					IFlash.setAutoOrients(false);
					EventDispatcher.document.setOrientationEx(0);
					this.dispatchEvent(new StageOrientationEvent(/*iflash.events.StageOrientationEvent.ORIENTATION_CHANGE*/"orientationChange"));
					break ;
				case /*iflash.display.StageAspectRatio.LANDSCAPE*/"landscape":
					IFlash.setAutoOrients(false);
					EventDispatcher.document.setOrientationEx(1);
					this.dispatchEvent(new StageOrientationEvent(/*iflash.events.StageOrientationEvent.ORIENTATION_CHANGE*/"orientationChange"));
					break ;
				case /*iflash.display.StageAspectRatio.ANY*/"any":
					IFlash.setAutoOrients(true);
					break ;
				}
		}

		__getset(0,__proto,'displayState',function(){
			return "";
			},function(val){
		});

		__getset(0,__proto,'focus',function(){
			return this.currentFocus
			},function(val){
			if ((val instanceof iflash.text.TextField ))
				val["onTextFocus"](null);
			this.currentFocus=val;
		});

		__getset(0,__proto,'showDefaultContextMenu',function(){
			return false
			},function(val){
		});

		__getset(0,__proto,'stageWidth',function(){
			return this._scaleMode_==/*iflash.display.StageScaleMode.NO_SCALE*/"noScale"?EventDispatcher.window.innerWidth:this.width;
		});

		__getset(0,__proto,'allowsFullScreen',function(){
			return false;
		});

		__getset(0,__proto,'allowsFullScreenInteractive',function(){
			return false;
		});

		__getset(0,__proto,'showInfo',null,function(value){
			if (value !=this._infoFlag){
				Laya.config.showInfo=value;
				Laya.SHOW_FPS=value;
				Laya.conch && Laya.conch.ShowFPS(value,Laya.conch.m_pFps);
			}
		});

		__getset(0,__proto,'width',function(){
			return this._width_;
			},function(w){
			this._width_=w;
			this._modle_.size(this._width_,this._height_);
		});

		__getset(0,__proto,'stageHeight',function(){
			return this._scaleMode_==/*iflash.display.StageScaleMode.NO_SCALE*/"noScale"?EventDispatcher.window.innerHeight:this.height;
		});

		__getset(0,__proto,'scaleMode',function(){
			return this._scaleMode_;
			},function(value){
			var isChange=value !=this._scaleMode_;
			this._scaleMode_=value;
			if(isChange && Laya.window){
				Laya.window.lyDispatchEvent(/*iflash.events.Event.RESIZE*/"resize");
			}
		});

		__getset(0,__proto,'height',function(){
			return this._height_;
			},function(h){
			this._height_=h;
			this._modle_.size(this._width_,this._height_);
		});

		__getset(0,__proto,'color',function(){return this._bgc_},function(value){
			this.bgcolor=value;
		});

		__getset(0,__proto,'bgcolor',null,function(value){
			if((typeof value=='string')){
				var v=value.replace("#","");
				/*__JS__ */v=parseInt(v,16);;
				this._bgc_=v;
				if (isNaN(this._bgc_))this._bgc_=0xffffff;
				this._bgc2_=value;
			}
			else{
				this._bgc_=value;
				if (isNaN(this._bgc_))this._bgc_=0xffffff;
				this._bgc2_=StringMethod.getColorString(this._bgc_);
			}
			if(Laya.CONCHVER)/*__JS__ */conch.setBgColor(this._bgc2_)
				else /*__JS__ */window.document.body.style.backgroundColor=this._bgc2_;
		});

		__getset(0,__proto,'autoScaleDifference',null,function(value){
			Laya.document.adapter.autoScaleDifference=value;
		});

		__getset(0,__proto,'frameRate',function(){
			return Browser.frameRate;
			},function(value){
			Browser.frameRate=value;
		});

		__getset(0,__proto,'align',function(){
			return this._algin;
			},function(value){
			var isChange=value !=this._algin;
			this._algin=value;
			if(isChange && Laya.window){
				Laya.window.lyDispatchEvent(/*iflash.events.Event.RESIZE*/"resize");
			}
		});

		__getset(0,__proto,'stageFocusRect',function(){
			return false;
		},LAYAFNVOID/*function(param1){}*/);

		__getset(0,__proto,'quality',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'fullScreenWidth',function(){
			return EventDispatcher.window.fullScreenWidth;
		});

		__getset(0,__proto,'fullScreenHeight',function(){
			return EventDispatcher.window.fullScreenHeight;
		});

		__getset(1,Stage,'stage',function(){
			return Stage._stage ? Stage._stage :(Stage._stage=new Stage());
		},iflash.display.DisplayObjectContainer._$SET_stage);

		__getset(1,Stage,'supportsOrientationChange',function(){
			return true;
		},iflash.display.DisplayObjectContainer._$SET_supportsOrientationChange);

		Stage.USE_SMALL=true;
		Stage.__frameRate__=16;
		Stage._stage=null;
		return Stage;
	})(DisplayObjectContainer)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/engine/textline.as
	//class iflash.text.engine.TextLine extends iflash.display.DisplayObjectContainer
	var TextLine=(function(_super){
		function TextLine(){
			this.userData=null;
			TextLine.__super.call(this);
			this.getMirrorRegion=/*__JS__ */$null;
		}

		__class(TextLine,'iflash.text.engine.TextLine',false,_super);
		var __proto=TextLine.prototype;
		__proto.dump=LAYAFNSTR/*function(){return ""}*/
		__proto.flushAtomData=LAYAFNVOID/*function(){}*/
		__proto.getAtomBidiLevel=LAYAFN0/*function(atomIndex){return 0}*/
		__proto.getAtomBounds=LAYAFNNULL/*function(atomIndex){return null}*/
		__proto.getAtomCenter=LAYAFN0/*function(atomIndex){return 0}*/
		__proto.getAtomGraphic=LAYAFNNULL/*function(atomIndex){return null}*/
		__proto.getAtomIndexAtCharIndex=LAYAFN0/*function(charIndex){return 0}*/
		__proto.getAtomIndexAtPoint=LAYAFN0/*function(stageX,stageY){return 0}*/
		__proto.getAtomTextBlockBeginIndex=LAYAFN0/*function(atomIndex){return 0}*/
		__proto.getAtomTextBlockEndIndex=LAYAFN0/*function(atomIndex){return 0}*/
		__proto.getAtomTextRotation=LAYAFNSTR/*function(atomIndex){return ""}*/
		__proto.getAtomWordBoundaryOnLeft=LAYAFNFALSE/*function(atomIndex){return false}*/
		__proto.getBaselinePosition=LAYAFN0/*function(baseline){return 0}*/
		__getset(0,__proto,'ascent',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'atomCount',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'focusRect',null,LAYAFNVOID/*function(focusRect){}*/);
		__getset(0,__proto,'contextMenu',_super.prototype._$get_contextMenu,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'textBlockBeginIndex',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'hasTabs',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'descent',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'mirrorRegions',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'totalAscent',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'hasGraphicElement',LAYAFNFALSE/*function(){return false}*/);
		__getset(0,__proto,'nextLine',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'previousLine',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'rawTextLength',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'specifiedWidth',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'tabChildren',_super.prototype._$get_tabChildren,LAYAFNVOID/*function(enable){}*/);
		__getset(0,__proto,'tabEnabled',_super.prototype._$get_tabEnabled,LAYAFNVOID/*function(enabled){}*/);
		__getset(0,__proto,'tabIndex',_super.prototype._$get_tabIndex,LAYAFNVOID/*function(index){}*/);
		__getset(0,__proto,'textBlock',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'textHeight',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'textWidth',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'totalDescent',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'totalHeight',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'unjustifiedTextWidth',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'validity',LAYAFNSTR/*function(){return ""}*/,LAYAFNVOID/*function(value){}*/);
		TextLine.MAX_LINE_WIDTH=1000000;
		return TextLine;
	})(DisplayObjectContainer)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/text/statictext.as
	//class iflash.text.StaticText extends iflash.text.TextField
	var StaticText=(function(_super){
		function StaticText(){
			StaticText.__super.call(this);
		}

		__class(StaticText,'iflash.text.StaticText',false,_super);
		var __proto=StaticText.prototype;
		__proto.lyclone=function(){
			var result=new StaticText();
			result.type="static";
			this.getTextResult(result);
			return result;
		}

		return StaticText;
	})(TextField)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/embedsymbol.as
	//class iflash.display.EmbedSymbol extends iflash.display.Sprite
	var EmbedSymbol=(function(_super){
		function EmbedSymbol(){
			this._loader=null;
			this._swfUrl=null;
			this._symbol=null;
			EmbedSymbol.__super.call(this);
		}

		__class(EmbedSymbol,'iflash.display.EmbedSymbol',false,_super);
		var __proto=EmbedSymbol.prototype;
		__proto.load=function(swfUrl,symbol){
			this._swfUrl=swfUrl;
			this._symbol=symbol;
			if(symbol && this.hasClass(symbol)){
				this.createAsset();
				}else {
				this._loader=new Loader();
				this._loader.contentLoaderInfo.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onComplete));
				this._loader.contentLoaderInfo.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onError));
				this._loader.load(new URLRequest(swfUrl),EmbedSymbol._loaderContent);
			}
		}

		__proto.onComplete=function(e){
			if (Boolean(this._symbol)){
				if (this.hasClass(this._symbol)){
					this.createAsset();
				}
				if (this._loader){
					this.clearLoader();
				}
				}else {
				this.addChild(this._loader);
			}
		}

		__proto.clearLoader=function(){
			this._loader.unloadAndStop();
			this._loader.contentLoaderInfo.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.onComplete));
			this._loader.contentLoaderInfo.removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",__bind(this,this.onError));
			this._loader=null;
		}

		__proto.onError=function(e){
			console.log("IO Error:"+this._swfUrl);
		}

		__proto.createAsset=function(){
			var res=this.getAsset(this._symbol);
			if ((res instanceof iflash.display.BitmapData )){
				var display=new Bitmap(res);
				}else {
				display=res;
			}
			this.addChild(display);
		}

		__proto.hasClass=function(name){
			return EmbedSymbol._domain.hasDefinition(name);
		}

		__proto.getClass=function(name){
			if (this.hasClass(name)){
				return EmbedSymbol._domain.getDefinition2(name);
			}
			return null;
		}

		__proto.getAsset=function(name){
			var assetClass=this.getClass(name);
			if (assetClass !=null){
				return new assetClass();
			}
			return null;
		}

		__static(EmbedSymbol,
		['_domain',function(){return this._domain=ApplicationDomain.currentDomain;},'_loaderContent',function(){return this._loaderContent=new LoaderContext(false,ApplicationDomain.currentDomain);}
		]);
		return EmbedSymbol;
	})(Sprite)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/movieclip.as
	//class iflash.display.MovieClip extends iflash.display.Sprite
	var MovieClip=(function(_super){
		function MovieClip(){
			this._interval_=60;
			this._preFrame_=0;
			this._preTime_=0;
			this.runner=null;
			this._scriptList_=[];
			this._animData_=new AnimationData();
			MovieClip.__super.call(this);}
		__class(MovieClip,'iflash.display.MovieClip',false,_super);
		var __proto=MovieClip.prototype;
		__proto._lyMCDispose=function(mc){
			var num=mc.numChildren;
			var child;
			var ly;
			while(num){
				child=mc.getChildAt(num-1);
				if((child instanceof iflash.display.MovieClip )){
					child.stop();
					if(child._private_.onupdate){child._private_.onupdate.deleted=true;};
					child.runner=null;
					this._lyMCDispose(child);
					}else if((child instanceof iflash.display.Shape )){
					ly=child._image_;
					ly=null;
				}
				num--;
			}
			mc.runner=null;
			mc._private_.onupdate && (mc._private_.onupdate.deleted=true);
			mc._private_.onupdate=null;
		}

		__proto._onupdate_=function(tm,tmgo,o){
			if(this.isPlaying){
				if ((tm-this._preTime_)>=this.interval){
					this._scriptList_[this.currentFrame] && this._scriptList_[this.currentFrame].call(this);
					this._preTime_=tm;
					this.runner._updata_(this);
				}
			}
			return true;
		}

		__proto.addFrameScript=function(__rest){
			var rest=arguments;
			for (var i=0,sz=rest.length;i < sz;i+=2){
				this._addFrameScript_(rest[i],rest[i+1]);
			}
		}

		__proto._addFrameScript_=function(index,fn){
			this._scriptList_[index+1]=fn;
			if(index+1==this.currentFrame){
				this._scriptList_[this.currentFrame] && this._scriptList_[this.currentFrame].call(this);
			}
		}

		__proto.gotoAndPlay=function(frame,scene){
			this._gotoAndPlay_(frame,scene);
			this._animData_.isStop=false;
		}

		__proto._gotoAndPlay_=function(frame,scene){
			if((typeof frame=='string')){
				frame=int(this._animData_.labs[frame]);
				this.runner.gotoAndPlay(frame,this);
				}else{
				this.runner.gotoAndPlay(frame-1,this);
			}
			this._scriptList_[this.currentFrame] && this._scriptList_[this.currentFrame].call(this);
		}

		__proto.gotoAndStop=function(frame,scene){
			if(this.runner==null)return;
			if((typeof frame=='string')){
				frame=int(this._animData_.labs[frame]);
				this.runner.gotoAndStop(frame,this);
				}else{
				if(frame>this.totalFrames){
					frame=this.totalFrames;
				}
				this.runner.gotoAndStop(frame-1,this);
			}
			this._scriptList_[this.currentFrame] && this._scriptList_[this.currentFrame].call(this);
		}

		__proto.nextFrame=function(){
			this.runner.gotoAndStop(this._animData_.currentFrame+1,this);
		}

		__proto.prevFrame=function(){
			this.runner.gotoAndStop(this._animData_.currentFrame-1,this);
		}

		__proto.play=function(){
			this.gotoAndPlay(this.currentFrame+1);
		}

		__proto.stop=function(){
			if(this.runner)
				this.runner.stop(this);
		}

		__proto.prevScene=LAYAFNVOID/*function(){}*/
		__proto.nextScene=LAYAFNVOID/*function(){}*/
		__proto.addFrameTimer=function(fn){
			return Stage.stage._tmctr_.addFrameTimer(fn,this);
		}

		__proto.addChild=function(child){
			if(this._type_&0x10&&this.numChildren){
				this.sortChildsByZIndex();
				var disp=this.getChildAt(this.numChildren-1);
				child.zIndex=disp.zIndex+1;
			}
			return iflash.display.DisplayObjectContainer.prototype.addChild.call(this,child);
		}

		__proto.addChildAt=function(child,index){
			if(this._type_&0x10&&this.numChildren){
				this.sortChildsByZIndex();
				var disp=this.getChildAt(index);
				child.zIndex=disp.zIndex-1;
				if(index>0){
					if(child.zIndex<this.getChildAt(index-1).zIndex){
						var i=0;
						while(i<index-1)
						{this.getChildAt(i).zIndex--;i++;}
					}
				}
			}
			return iflash.display.DisplayObjectContainer.prototype.addChildAt.call(this,child,index);
		}

		__proto._lyToBody_=function(){
			_super.prototype._lyToBody_.call(this);
			this._preTime_=0;
			if(this.runner){
				this.onupdate=this._onupdate_;
				this._private_.onupdate.deleted=false;
			}
		}

		__proto._lyUnToBody_=function(){
			iflash.display.DisplayObjectContainer.prototype._lyUnToBody_.call(this);
			if(this._private_.onupdate){this._private_.onupdate.deleted=true;};
		}

		__proto.stopAll=function(mc){
			var i=mc.numChildren;
			while(i){
				var m=mc.getChildAt(i-1);
				m&&(m.stop(),this.stopAll(m));
				i--;
			}
		}

		__proto.lyclone=function(){
			var movie=new MovieClip();
			if(this.scale9Data)movie.scale9Data={x1:this.scale9Data.x1,y1:this.scale9Data.y1,x2:this.scale9Data.x2,y2:this.scale9Data.y2};
			movie._animData_=this._animData_.lyclone();
			movie.runner=this.runner;
			movie._interval_=this._interval_;
			movie.__id__=this.__id__;
			movie.charId=this.charId;
			movie.characterId=this.characterId;
			movie._type_|=(this._type_& /*iflash.display.DisplayObject.TYPE_CREATE_FROM_TAG*/0x10);
			movie.gotoAndPlay(1);
			movie.width=movie.width;
			movie.height=movie.height;
			movie.sortChildsByZIndex();
			return movie;
		}

		__getset(0,__proto,'onupdate',null,function(fn){
			if(this._private_.onupdate)(this._private_.onupdate.deleted=true);
			this._private_.onupdate=this.addFrameTimer(fn);
		});

		__getset(0,__proto,'interval',function(){
			return Stage.__frameRate__;
			},function(value){
			this._interval_=value;
		});

		__getset(0,__proto,'currentFrame',function(){
			var value=this._animData_.currentFrame+1;
			if(value>this.totalFrames)value=this.totalFrames;
			return value<1?1:value;
		});

		__getset(0,__proto,'enabled',LAYAFNTRUE/*function(){return true;}*/,LAYAFNVOID/*function(value){}*/);
		__getset(0,__proto,'totalFrames',function(){
			return this._animData_.totalFrame;
		});

		__getset(0,__proto,'currentLabel',function(){
			var index=this.currentFrame-1;
			var label;
			var frame=0;
			var arr={};
			for (var key in this._animData_.labs){
				label=key;
				frame=int(this._animData_.labs[key]);
				if(index==frame){
					return label;
				}
				arr[frame]=label;
			}
			label=null;
			while(label==null){
				label=arr[index];
				index--;
				if(index==-1)break ;
			}
			return label;
		});

		__getset(0,__proto,'isPlaying',function(){
			return !this._animData_.isStop;
		});

		__getset(0,__proto,'framesLoaded',LAYAFN0/*function(){return 0}*/);
		__getset(0,__proto,'currentFrameLabel',function(){
			var index=this.currentFrame-1;
			var label;
			var frame=0;
			for (var key in this._animData_.labs){
				label=key;
				frame=int(this._animData_.labs[key]);
				if(index==frame){
					return label;
				}
			}
			return null;
		});

		__getset(0,__proto,'currentScene',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'currentLabels',function(){
			var labs=this._animData_.labs,arr=[];
			for (var key in labs){
				var fl=new FrameLabel();
				fl.name=key;
				fl.frame=int(labs[key])+1;
				arr.push(fl);
			}
			return arr;
		});

		__getset(0,__proto,'scenes',LAYAFNNULL/*function(){return null}*/);
		__getset(0,__proto,'trackAsMenu',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(value){}*/);
		MovieClip.USE_LINK_CLASS=true;
		return MovieClip;
	})(Sprite)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/shaderjob.as
	//class iflash.display.ShaderJob extends iflash.display.Sprite
	var ShaderJob=(function(_super){
		function ShaderJob(__a){
			ShaderJob.__super.call(this);
		}

		__class(ShaderJob,'iflash.display.ShaderJob',false,_super);
		var __proto=ShaderJob.prototype;
		__proto.start=function(waitForCompletion){
			(waitForCompletion===void 0)&& (waitForCompletion=false);
		}

		return ShaderJob;
	})(Sprite)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/simplebutton.as
	//class iflash.display.SimpleButton extends iflash.display.MovieClip
	var SimpleButton=(function(_super){
		function SimpleButton(upState,overState,downState,hitTestState){
			this._enabled=true;
			SimpleButton.__super.call(this);
			this.addEventListener(/*iflash.events.MouseEvent.MOUSE_OUT*/"mouseOut",__bind(this,this._onmouseOut_));
			this.addEventListener(/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver",__bind(this,this._onmouseOver_));
			this.addEventListener(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",__bind(this,this._onmouseDown_));
			this.addEventListener(/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp",__bind(this,this._onmouseUp_));
			this.mouseChildren=false;
		}

		__class(SimpleButton,'iflash.display.SimpleButton',false,_super);
		var __proto=SimpleButton.prototype;
		__proto._onmouseOut_=function(e){this.gotoAndStop(1);}
		__proto.switchState=function(state){this.gotoAndStop(state);}
		__proto._onmouseUp_=function(e){this.gotoAndStop(1);}
		__proto._onmouseDown_=function(e){this.gotoAndStop(3);}
		__proto._onmouseOver_=function(e){this.gotoAndStop(2);}
		__proto.lyclone=function(){
			var movie=new SimpleButton();
			movie._animData_=this._animData_.lyclone();
			movie.runner=this.runner;
			movie.__id__=this.__id__;
			movie._interval_=this._interval_;
			movie.width=this.width;
			movie.height=this.height;
			movie._type_|=0x10;
			movie.gotoAndStop(1);
			return movie;
		}

		__getset(0,__proto,'trackAsMenu',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'useHandCursor',LAYAFNFALSE/*function(){return false}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'downState',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'enabled',function(){return this._enabled;},function(param1){
			this._enabled=param1;
		});

		__getset(0,__proto,'upState',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'overState',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		__getset(0,__proto,'hitTestState',LAYAFNNULL/*function(){return null}*/,LAYAFNVOID/*function(param1){}*/);
		return SimpleButton;
	})(MovieClip)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/swf/classs/mc.as
	//class iflash.display.swf.classs.MC extends iflash.display.MovieClip
	var MC2=(function(_super){
		function MC(){
			MC.__super.call(this);
			var movieClip=this["__data__"];
			this._animData_=movieClip._animData_.lyclone();
			this.runner=movieClip.runner;
			this._interval_=movieClip._interval_;
			this._type_|=0x10;
			this.__id__=movieClip.__id__;
			this.gotoAndPlay(1);
		}

		__class(MC,'iflash.display.swf.classs.MC',false,_super,'MC2');
		return MC;
	})(MovieClip)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash/display/swf/classs/sb.as
	//class iflash.display.swf.classs.SB extends iflash.display.SimpleButton
	var SB=(function(_super){
		function SB(upState,overState,downState,hitTestState){
			SB.__super.call(this);
			var movieClip=this["__data__"];
			this._animData_=movieClip._animData_.lyclone();
			this.runner=movieClip.runner;
			this.runner=movieClip.runner;
			this._interval_=movieClip._interval_;
			this._type_|=0x10;
			this.__id__=movieClip.__id__;
			this.gotoAndStop(1);
		}

		__class(SB,'iflash.display.swf.classs.SB',false,_super);
		return SB;
	})(SimpleButton)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/jsonparse.jas
	//class JSONParse
	var JSONParse=(function(){
		function JSONParse(){
			/*__JS__ */if(LAYABOX.__JSON__)return;
			/*__JS__ */LAYABOX.__JSON__=window.JSON;
			/*__JS__ */window.JSON=JSONParse;
		}

		__class(JSONParse,'JSONParse',true);
		JSONParse.parse=function(val){
			var ret=null;
			try {
				return /*__JS__ */LAYABOX.__JSON__.parse(val);
			}
			catch(ex){
				try {
					/*__JS__ */eval('ret='+val);
					return ret;
				}
				catch(e){
					throw new Error("Could not parse JSON: "+e.message);
					return null;
				}
			}
			return null;
		}

		JSONParse.stringify=function(obj){
			return /*__JS__ */LAYABOX.__JSON__.stringify(obj);
		}

		return JSONParse;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/qname.jas
	//class QName
	var QName=(function(){
		function QName(uri,localName){
			this._uri=null;
			this._localName=null;
			this._uri=uri;
			this._localName=localName
		}

		__class(QName,'QName',false);
		var __proto=QName.prototype;
		__proto.toString=function(){
			return (this.uri==null ? "*" :this.uri)+"::"+this.localName;
		}

		__getset(0,__proto,'uri',function(){
			if(this._uri==null)
				return null;
			else if(this._uri=="")
			return "";
			else if((typeof this._uri=='string'))
			return this._uri;
			return this._uri+"";
		});

		__getset(0,__proto,'localName',function(){
			if(this._localName==null)
				return null;
			else if(this._localName=="")
			return "";
			else if((typeof this._localName=='string'))
			return this._localName;
			return this._localName+"";
		});

		return QName;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/uint.jas
	//class uint
	var uint=(function(){
		function uint(value,offset){
			(value===void 0)&& (value=0);
			(offset===void 0)&& (offset=0);
			if(!value)return 0;
			if(Laya.__typeof(value,iflash.utils.BigInteger)){
				if (value.compareTo(uint._CIRCLE)>=0 && value.compareTo(uint.ZERO)< 0)
					return value.add(uint.CIRCLE);
				else if (value.compareTo(uint._CIRCLE)< 0){
					return uint(value.mod(uint.CIRCLE));
				}
				else if (value.compareTo(4294967295)> 0){
					value=value.mod(uint.CIRCLE);
				}
				return value;
			}
			else{
				value=Laya.__parseInt(value);
				if(value>=-4294967295-1&&value<0)
					return value+4294967295+1+offset;
				else if(value<-4294967295-1)
				return uint(value%(4294967295+1))+offset
				else if(value>4294967295)
				value=value%(4294967295+1)+offset;
				return value;
			}
		}

		__class(uint,'uint',false);
		var __proto=uint.prototype;
		__proto.toString=function(radix){
			(radix===void 0)&& (radix=10);
			return Number(this).toString(radix);
		}

		__proto.valueOf=function(){
			return this;
		}

		__proto.toExponential=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toExponential(p);
		}

		__proto.toPrecision=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toPrecision(p);
		}

		__proto.toFixed=function(p){
			(p===void 0)&& (p=0);
			return Number(this).toFixed(p);
		}

		uint.MAX_VALUE=4294967295;
		uint.MAX_UINT=4294967295;
		uint.length=1;
		__static(uint,
		['_MAX_UINT',function(){return this._MAX_UINT=new iflash.utils.BigInteger("-4294967295");},'ZERO',function(){return this.ZERO=new iflash.utils.BigInteger("0");},'CIRCLE',function(){return this.CIRCLE=new iflash.utils.BigInteger("4294967296");},'_CIRCLE',function(){return this._CIRCLE=new iflash.utils.BigInteger("-4294967296");}
		]);
		return uint;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/mx/utils/stringutil.as
	//class mx.utils.StringUtil
	var StringUtil=(function(){
		function StringUtil(){};
		__class(StringUtil,'mx.utils.StringUtil',true);
		StringUtil.trim=function(str){
			if (str==null){
				return '';
			};
			var startIndex=0;
			while (StringUtil.isWhitespace(str.charAt(startIndex))){
				++startIndex;
			};
			var endIndex=str.length-1;
			while (StringUtil.isWhitespace(str.charAt(endIndex))){
				--endIndex;
			}
			if (endIndex >=startIndex){
				return str.slice(startIndex,endIndex+1);
			}
			else{
				return "";
			}
		}

		StringUtil.trimArrayElements=function(value,delimiter){
			if (value !="" && value !=null){
				var items=value.split(delimiter);
				var len=items.length;
				for (var i=0;i < len;i++){
					items[i]=mx.utils.StringUtil.trim(items[i]);
				}
				if (len > 0){
					value=items.join(delimiter);
				}
			}
			return value;
		}

		StringUtil.isWhitespace=function(character){
			switch (character){
				case " " :
				case "\t" :
				case "\r" :
				case "\n" :
				case "\f" :
					return true;
				default :
					return false;
				}
		}

		StringUtil.substitute=function(str,__rest){
			var rest=[];for(var i=1,sz=arguments.length;i<sz;i++)rest.push(arguments[i]);
			if (str==null){
				return '';
			};
			var len=rest.length;
			var args;
			if (len==1 && ((rest[0])instanceof Array)){
				args=rest [0];
				len=args.length;
			}
			else{
				args=rest;
			}
			for (var i=0;i < len;i++){
				str=str.replace(new RegExp("\\{"+i+"\\}","g"),args[i]);
			}
			return str;
		}

		return StringUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/box2dseparator/b2separator.as
	//class Box2D.Box2DSeparator.b2Separator
	var b2Separator=(function(){
		function b2Separator(){}
		__class(b2Separator,'Box2D.Box2DSeparator.b2Separator',true);
		var __proto=b2Separator.prototype;
		__proto.Separate=function(body,fixtureDef,verticesVec,scale){
			(scale===void 0)&& (scale=30);
			var i=0,n=verticesVec.length,j=0,m=0;
			var vec=[],figsVec;
			var polyShape;
			for(i=0;i<n;i++)vec.push(new b2Vec2(verticesVec[i].x*scale,verticesVec[i].y*scale));
			figsVec=this.calcShapes(vec);
			n=figsVec.length;
			for(i=0;i<n;i++){
				verticesVec=[];
				vec=figsVec[i];
				m=vec.length;
				for(j=0;j<m;j++)verticesVec.push(new b2Vec2(vec[j].x/scale,vec[j].y/scale));
				polyShape=new b2PolygonShape();
				polyShape.SetAsVector(verticesVec);
				fixtureDef.shape=polyShape;
				body.CreateFixture(fixtureDef);
			}
		}

		__proto.Validate=function(verticesVec){
			var i=0,n=verticesVec.length,j=0,j2=0,i2=0,i3=0,d=NaN,ret=0;
			var fl=false,fl2=false;
			for(i=0;i<n;i++){
				i2=(i<n-1?i+1:0);
				i3=(i>0?i-1:n-1);
				fl=false;
				for(j=0;j<n;j++){
					if(j!=i&&j!=i2){
						if(!fl){
							d=this.det(verticesVec[i].x,verticesVec[i].y,verticesVec[i2].x,verticesVec[i2].y,verticesVec[j].x,verticesVec[j].y);
							if(d>0)fl=true;
						}
						if(j!=i3){
							j2=(j<n-1?j+1:0);
							if(this.hitSegment(verticesVec[i].x,verticesVec[i].y,verticesVec[i2].x,verticesVec[i2].y,verticesVec[j].x,verticesVec[j].y,verticesVec[j2].x,verticesVec[j2].y))
								ret=1;
						}
					}
				}
				if(!fl)fl2=true;
			}
			if(fl2){
				if(ret==1)ret=3;
				else ret=2;
			}
			return ret;
		}

		__proto.calcShapes=function(verticesVec){
			var vec;
			var i=0,n=0,j=0;
			var d=NaN,t=NaN,dx=NaN,dy=NaN,minLen=NaN;
			var i1=0,i2=0,i3=0,p1,p2,p3;
			var j1=0,j2=0,v1,v2,k=0,h=0;
			var vec1,vec2;
			var v,hitV;
			var isConvex=false;
			var figsVec=[],queue=[];
			queue.push(verticesVec);
			while(queue.length){
				vec=queue[0];
				n=vec.length;
				isConvex=true;
				for(i=0;i<n;i++){
					i1=i;
					i2=(i<n-1?i+1:i+1-n);
					i3=(i<n-2?i+2:i+2-n);
					p1=vec[i1];
					p2=vec[i2];
					p3=vec[i3];
					d=this.det(p1.x,p1.y,p2.x,p2.y,p3.x,p3.y);
					if(d<0){
						isConvex=false;
						minLen=Number.MAX_VALUE;
						for(j=0;j<n;j++){
							if(j!=i1&&j!=i2){
								j1=j;
								j2=(j<n-1?j+1:0);
								v1=vec[j1];
								v2=vec[j2];
								v=this.hitRay(p1.x,p1.y,p2.x,p2.y,v1.x,v1.y,v2.x,v2.y);
								if(v){
									dx=p2.x-v.x;
									dy=p2.y-v.y;
									t=dx*dx+dy*dy;
									if(t<minLen){
										h=j1;
										k=j2;
										hitV=v;
										minLen=t;
									}
								}
							}
						}
						if(minLen==Number.MAX_VALUE)this.err();
						vec1=[];
						vec2=[];
						j1=h;
						j2=k;
						v1=vec[j1];
						v2=vec[j2];
						if(!this.pointsMatch(hitV.x,hitV.y,v2.x,v2.y))vec1.push(hitV);
						if(!this.pointsMatch(hitV.x,hitV.y,v1.x,v1.y))vec2.push(hitV);
						h=-1;
						k=i1;
						while(true){
							if(k!=j2)vec1.push(vec[k]);
							else{
								if(h<0||h>=n)this.err();
								if(!this.isOnSegment(v2.x,v2.y,vec[h].x,vec[h].y,p1.x,p1.y))vec1.push(vec[k]);
								break ;
							}
							h=k;
							if(k-1<0)k=n-1;
							else k--;
						}
						vec1=vec1.reverse();
						h=-1;
						k=i2;
						while(true){
							if(k!=j1)vec2.push(vec[k]);
							else{
								if(h<0||h>=n)this.err();
								if(k==j1&&!this.isOnSegment(v1.x,v1.y,vec[h].x,vec[h].y,p2.x,p2.y))vec2.push(vec[k]);
								break ;
							}
							h=k;
							if(k+1>n-1)k=0;
							else k++;
						}
						queue.push(vec1,vec2);
						queue.shift();
						break ;
					}
				}
				if(isConvex)figsVec.push(queue.shift());
			}
			return figsVec;
		}

		__proto.hitRay=function(x1,y1,x2,y2,x3,y3,x4,y4){
			var t1=x3-x1,t2=y3-y1,t3=x2-x1,t4=y2-y1,
			t5=x4-x3,t6=y4-y3,t7=t4*t5-t3*t6,a=NaN;
			a=(t5*t2-t6*t1)/t7;
			var px=x1+a*t3,py=y1+a*t4;
			var b1=this.isOnSegment(x2,y2,x1,y1,px,py);
			var b2=this.isOnSegment(px,py,x3,y3,x4,y4);
			if(b1&&b2)return new b2Vec2(px,py);
			return null;
		}

		__proto.hitSegment=function(x1,y1,x2,y2,x3,y3,x4,y4){
			var t1=x3-x1,t2=y3-y1,t3=x2-x1,t4=y2-y1,
			t5=x4-x3,t6=y4-y3,t7=t4*t5-t3*t6,a=NaN;
			a=(t5*t2-t6*t1)/t7;
			var px=x1+a*t3,py=y1+a*t4;
			var b1=this.isOnSegment(px,py,x1,y1,x2,y2);
			var b2=this.isOnSegment(px,py,x3,y3,x4,y4);
			if(b1&&b2)return new b2Vec2(px,py);
			return null;
		}

		__proto.isOnSegment=function(px,py,x1,y1,x2,y2){
			var b1=((x1+0.1>=px&&px>=x2-0.1)||(x1-0.1<=px&&px<=x2+0.1));
			var b2=((y1+0.1>=py&&py>=y2-0.1)||(y1-0.1<=py&&py<=y2+0.1));
			return (b1&&b2&&this.isOnLine(px,py,x1,y1,x2,y2));
		}

		__proto.pointsMatch=function(x1,y1,x2,y2){
			var dx=(x2>=x1?x2-x1:x1-x2),dy=(y2>=y1?y2-y1:y1-y2);
			return (dx<0.1&&dy<0.1);
		}

		__proto.isOnLine=function(px,py,x1,y1,x2,y2){
			if(x2-x1>0.1||x1-x2>0.1){
				var a=(y2-y1)/(x2-x1),possibleY=a*(px-x1)+y1,diff=(possibleY>py?possibleY-py:py-possibleY);
				return (diff<0.1);
			}
			return (px-x1<0.1||x1-px<0.1);
		}

		__proto.det=function(x1,y1,x2,y2,x3,y3){
			return x1*y2+x2*y3+x3*y1-y1*x2-y2*x3-y3*x1;
		}

		__proto.err=function(){
			throw new Error("A problem has occurred. Use the Validate() method to see where the problem is.");
		}

		return b2Separator;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2aabb.as
	;
	//class Box2D.Collision.b2AABB
	var b2AABB=(function(){
		function b2AABB(){
			this.lowerBound=new b2Vec2();
			this.upperBound=new b2Vec2();
		}

		__class(b2AABB,'Box2D.Collision.b2AABB',false);
		var __proto=b2AABB.prototype;
		__proto.IsValid=function(){
			var dX=this.upperBound.x-this.lowerBound.x;
			var dY=this.upperBound.y-this.lowerBound.y;
			var valid=dX >=0.0 && dY >=0.0;
			valid=valid && this.lowerBound.IsValid()&& this.upperBound.IsValid();
			return valid;
		}

		__proto.GetCenter=function(){
			return new b2Vec2((this.lowerBound.x+this.upperBound.x)/ 2,
			(this.lowerBound.y+this.upperBound.y)/ 2);
		}

		__proto.GetExtents=function(){
			return new b2Vec2((this.upperBound.x-this.lowerBound.x)/ 2,
			(this.upperBound.y-this.lowerBound.y)/ 2);
		}

		__proto.Contains=function(aabb){
			var result=true;result=result&& this.lowerBound.x <=aabb.lowerBound.x;result=result&& this.lowerBound.y <=aabb.lowerBound.y;result=result&& aabb.upperBound.x <=this.upperBound.x;result=result&& aabb.upperBound.y <=this.upperBound.y;
			return result;
		}

		__proto.RayCast=function(output,input){
			var tmin=-Number.MAX_VALUE;
			var tmax=Number.MAX_VALUE;
			var pX=input.p1.x;
			var pY=input.p1.y;
			var dX=input.p2.x-input.p1.x;
			var dY=input.p2.y-input.p1.y;
			var absDX=Math.abs(dX);
			var absDY=Math.abs(dY);
			var normal=output.normal;
			var inv_d=NaN;
			var t1=NaN;
			var t2=NaN;
			var t3=NaN;
			var s=NaN;{
				if (absDX < Number.MIN_VALUE){
					if (pX < this.lowerBound.x || this.upperBound.x < pX)
						return false;
				}
				else{
					inv_d=1.0 / dX;
					t1=(this.lowerBound.x-pX)*inv_d;
					t2=(this.upperBound.x-pX)*inv_d;
					s=-1.0;
					if (t1 > t2){
						t3=t1;
						t1=t2;
						t2=t3;
						s=1.0;
					}
					if (t1 > tmin){
						normal.x=s;
						normal.y=0;
						tmin=t1;
					}
					tmax=Math.min(tmax,t2);
					if (tmin > tmax)
						return false;
				}
				}{
				if (absDY < Number.MIN_VALUE){
					if (pY < this.lowerBound.y || this.upperBound.y < pY)
						return false;
				}
				else{
					inv_d=1.0 / dY;
					t1=(this.lowerBound.y-pY)*inv_d;
					t2=(this.upperBound.y-pY)*inv_d;
					s=-1.0;
					if (t1 > t2){
						t3=t1;
						t1=t2;
						t2=t3;
						s=1.0;
					}
					if (t1 > tmin){
						normal.y=s;
						normal.x=0;
						tmin=t1;
					}
					tmax=Math.min(tmax,t2);
					if (tmin > tmax)
						return false;
				}
			}
			output.fraction=tmin;
			return true;
		}

		__proto.TestOverlap=function(other){
			var d1X=other.lowerBound.x-this.upperBound.x;
			var d1Y=other.lowerBound.y-this.upperBound.y;
			var d2X=this.lowerBound.x-other.upperBound.x;
			var d2Y=this.lowerBound.y-other.upperBound.y;
			if (d1X > 0.0 || d1Y > 0.0)
				return false;
			if (d2X > 0.0 || d2Y > 0.0)
				return false;
			return true;
		}

		__proto.Combine=function(aabb1,aabb2){
			this.lowerBound.x=Math.min(aabb1.lowerBound.x,aabb2.lowerBound.x);
			this.lowerBound.y=Math.min(aabb1.lowerBound.y,aabb2.lowerBound.y);
			this.upperBound.x=Math.max(aabb1.upperBound.x,aabb2.upperBound.x);
			this.upperBound.y=Math.max(aabb1.upperBound.y,aabb2.upperBound.y);
		}

		__proto.toString=function(ptm_ratio){
			(ptm_ratio===void 0)&& (ptm_ratio=1);
			return "lowerBound:"+this.lowerBound.toString(ptm_ratio)+" upperBound:"+this.upperBound.toString(ptm_ratio);
		}

		__proto.ToRect=function(ptm_ratio){
			(ptm_ratio===void 0)&& (ptm_ratio=1);
			var x=this.lowerBound.x*ptm_ratio;
			var y=this.lowerBound.y*ptm_ratio;
			var w=(this.upperBound.x-this.lowerBound.x)*ptm_ratio;
			var h=(this.upperBound.y-this.lowerBound.y)*ptm_ratio;
			return new Rectangle(x,y,w,h);
		}

		__proto.ContainsV=function(v){
			var result=true;result=result&&this.lowerBound.x<v.x;result=result&&this.lowerBound.y<v.y;result=result&&this.upperBound.x>v.x;result=result&&this.upperBound.y>v.y;
			return result;
		}

		__proto.Offset=function(tx,ty){
			this.lowerBound.x+=tx,this.lowerBound.y+=ty;
			this.upperBound.x+=tx,this.upperBound.y+=ty;
		}

		b2AABB.Combine=function(aabb1,aabb2){
			var aabb=new b2AABB();
			aabb.Combine(aabb1,aabb2);
			return aabb;
		}

		b2AABB.Make=function(lowerBound,upperBound){
			var aabb=new b2AABB();
			aabb.lowerBound.x=lowerBound.x;
			aabb.lowerBound.y=lowerBound.y;
			aabb.upperBound.x=upperBound.x;
			aabb.upperBound.y=upperBound.y;
			return aabb;
		}

		b2AABB.MakeWH=function(w,h,centerX,centerY){
			var aabb=new b2AABB();
			var wf=w*0.5;
			var hf=h*0.5;
			aabb.lowerBound.x=centerX-wf;
			aabb.lowerBound.y=centerY-hf;
			aabb.upperBound.x=centerX+wf;
			aabb.upperBound.y=centerY+hf;
			return aabb;
		}

		return b2AABB;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2bound.as
	//class Box2D.Collision.b2Bound
	var b2Bound=(function(){
		function b2Bound(){
			this.value=0;
			this.proxy=null;
			this.stabbingCount=0;
		}

		__class(b2Bound,'Box2D.Collision.b2Bound',true);
		var __proto=b2Bound.prototype;
		__proto.IsLower=function(){return (this.value & 1)==0;}
		__proto.IsUpper=function(){return (this.value & 1)==1;}
		__proto.Swap=function(b){
			var tempValue=this.value;
			var tempProxy=this.proxy;
			var tempStabbingCount=this.stabbingCount;
			this.value=b.value;
			this.proxy=b.proxy;
			this.stabbingCount=b.stabbingCount;
			b.value=tempValue;
			b.proxy=tempProxy;
			b.stabbingCount=tempStabbingCount;
		}

		return b2Bound;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2boundvalues.as
	//class Box2D.Collision.b2BoundValues
	var b2BoundValues=(function(){
		function b2BoundValues(){
			this.lowerValues=null;
			this.upperValues=null;
			this.lowerValues=[];
			this.lowerValues[0]=0.0;
			this.lowerValues[1]=0.0;
			this.upperValues=[];
			this.upperValues[0]=0.0;
			this.upperValues[1]=0.0;
		}

		__class(b2BoundValues,'Box2D.Collision.b2BoundValues',true);
		return b2BoundValues;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2broadphase.as
	;
	//class Box2D.Collision.b2BroadPhase
	var b2BroadPhase=(function(){
		function b2BroadPhase(worldAABB){
			this.m_freeProxy=null;
			this.m_bounds=null;
			this.m_queryResultCount=0;
			this.m_worldAABB=null;
			this.m_proxyCount=0;
			this.m_timeStamp=0;
			this.m_pairManager=new b2PairManager();
			this.m_proxyPool=[];
			this.m_querySortKeys=[];
			this.m_queryResults=[];
			this.m_quantizationFactor=new b2Vec2();
			var i=0;
			this.m_pairManager.Initialize(this);
			this.m_worldAABB=worldAABB;
			this.m_proxyCount=0;
			this.m_bounds=[];
			for (i=0;i < 2;i++){
				this.m_bounds[i]=[];
			};
			var dX=worldAABB.upperBound.x-worldAABB.lowerBound.x;;
			var dY=worldAABB.upperBound.y-worldAABB.lowerBound.y;
			this.m_quantizationFactor.x=/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff / dX;
			this.m_quantizationFactor.y=/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff / dY;
			this.m_timeStamp=1;
			this.m_queryResultCount=0;
		}

		__class(b2BroadPhase,'Box2D.Collision.b2BroadPhase',true);
		var __proto=b2BroadPhase.prototype;
		Laya.imps(__proto,{"Box2D.Collision.IBroadPhase":true})
		__proto.InRange=function(aabb){
			var dX=NaN;
			var dY=NaN;
			var d2X=NaN;
			var d2Y=NaN;
			dX=aabb.lowerBound.x;
			dY=aabb.lowerBound.y;
			dX-=this.m_worldAABB.upperBound.x;
			dY-=this.m_worldAABB.upperBound.y;
			d2X=this.m_worldAABB.lowerBound.x;
			d2Y=this.m_worldAABB.lowerBound.y;
			d2X-=aabb.upperBound.x;
			d2Y-=aabb.upperBound.y;
			dX=b2Math.Max(dX,d2X);
			dY=b2Math.Max(dY,d2Y);
			return b2Math.Max(dX,dY)< 0.0;
		}

		__proto.CreateProxy=function(aabb,userData){
			var index=0;
			var proxy;
			var i=0;
			var j=0;
			if (!this.m_freeProxy){
				this.m_freeProxy=this.m_proxyPool[this.m_proxyCount]=new b2Proxy();
				this.m_freeProxy.next=null;
				this.m_freeProxy.timeStamp=0;
				this.m_freeProxy.overlapCount=b2BroadPhase.b2_invalid;
				this.m_freeProxy.userData=null;
				for (i=0;i < 2;i++){
					j=this.m_proxyCount *2;
					this.m_bounds[i][j++]=new b2Bound();
					this.m_bounds[i][j]=new b2Bound();
				}
			}
			proxy=this.m_freeProxy;
			this.m_freeProxy=proxy.next;
			proxy.overlapCount=0;
			proxy.userData=userData;
			var boundCount=2 *this.m_proxyCount;
			var lowerValues=[];
			var upperValues=[];
			this.ComputeBounds(lowerValues,upperValues,aabb);
			for (var axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var lowerIndex=0;
				var upperIndex=0;
				var lowerIndexOut=[];
				lowerIndexOut.push(lowerIndex);
				var upperIndexOut=[];
				upperIndexOut.push(upperIndex);
				this.QueryAxis(lowerIndexOut,upperIndexOut,lowerValues[axis],upperValues[axis],bounds,boundCount,axis);
				lowerIndex=lowerIndexOut[0];
				upperIndex=upperIndexOut[0];
				bounds.splice(upperIndex,0,bounds[bounds.length-1]);
				bounds.length--;
				bounds.splice(lowerIndex,0,bounds[bounds.length-1]);
				bounds.length--;
				++upperIndex;
				var tBound1=bounds[lowerIndex];
				var tBound2=bounds[upperIndex];
				tBound1.value=lowerValues[axis];
				tBound1.proxy=proxy;
				tBound2.value=upperValues[axis];
				tBound2.proxy=proxy;
				var tBoundAS3=bounds[int(lowerIndex-1)];
				tBound1.stabbingCount=lowerIndex==0 ? 0 :tBoundAS3.stabbingCount;
				tBoundAS3=bounds[int(upperIndex-1)];
				tBound2.stabbingCount=tBoundAS3.stabbingCount;
				for (index=lowerIndex;index < upperIndex;++index){
					tBoundAS3=bounds[index];
					tBoundAS3.stabbingCount++;
				}
				for (index=lowerIndex;index < boundCount+2;++index){
					tBound1=bounds[index];
					var proxy2=tBound1.proxy;
					if (tBound1.IsLower()){
						proxy2.lowerBounds[axis]=index;
					}
					else{
						proxy2.upperBounds[axis]=index;
					}
				}
			}
			++this.m_proxyCount;
			for (i=0;i < this.m_queryResultCount;++i){
				this.m_pairManager.AddBufferedPair(proxy,this.m_queryResults[i]);
			}
			this.m_queryResultCount=0;
			this.IncrementTimeStamp();
			return proxy;
		}

		__proto.DestroyProxy=function(proxy_){
			var proxy=proxy_;
			var tBound1;
			var tBound2;
			var boundCount=2 *this.m_proxyCount;
			for (var axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var lowerIndex=proxy.lowerBounds[axis];
				var upperIndex=proxy.upperBounds[axis];
				tBound1=bounds[lowerIndex];
				var lowerValue=tBound1.value;
				tBound2=bounds[upperIndex];
				var upperValue=tBound2.value;
				bounds.splice(upperIndex,1);
				bounds.splice(lowerIndex,1);
				bounds.push(tBound1);
				bounds.push(tBound2);
				var tEnd=boundCount-2;
				for (var index=lowerIndex;index < tEnd;++index){
					tBound1=bounds[index];
					var proxy2=tBound1.proxy;
					if (tBound1.IsLower()){
						proxy2.lowerBounds[axis]=index;
					}
					else{
						proxy2.upperBounds[axis]=index;
					}
				}
				tEnd=upperIndex-1;
				for (var index2=lowerIndex;index2 < tEnd;++index2){
					tBound1=bounds[index2];
					tBound1.stabbingCount--;
				};
				var ignore=[];
				this.QueryAxis(ignore,ignore,lowerValue,upperValue,bounds,boundCount-2,axis);
			}
			for (var i=0;i < this.m_queryResultCount;++i){
				this.m_pairManager.RemoveBufferedPair(proxy,this.m_queryResults[i]);
			}
			this.m_queryResultCount=0;
			this.IncrementTimeStamp();
			proxy.userData=null;
			proxy.overlapCount=b2BroadPhase.b2_invalid;
			proxy.lowerBounds[0]=b2BroadPhase.b2_invalid;
			proxy.lowerBounds[1]=b2BroadPhase.b2_invalid;
			proxy.upperBounds[0]=b2BroadPhase.b2_invalid;
			proxy.upperBounds[1]=b2BroadPhase.b2_invalid;
			proxy.next=this.m_freeProxy;
			this.m_freeProxy=proxy;
			--this.m_proxyCount;
		}

		__proto.MoveProxy=function(proxy_,aabb,displacement){
			var proxy=proxy_;
			var as3arr;
			var as3int=0;
			var axis=0;
			var index=0;
			var bound;
			var prevBound;
			var nextBound;
			var nextProxyId=0;
			var nextProxy;
			if (proxy==null){
				return;
			}
			if (aabb.IsValid()==false){
				return;
			};
			var boundCount=2 *this.m_proxyCount;
			var newValues=new b2BoundValues();
			this.ComputeBounds(newValues.lowerValues,newValues.upperValues,aabb);
			var oldValues=new b2BoundValues();
			for (axis=0;axis < 2;++axis){
				bound=this.m_bounds[axis][proxy.lowerBounds[axis]];
				oldValues.lowerValues[axis]=bound.value;
				bound=this.m_bounds[axis][proxy.upperBounds[axis]];
				oldValues.upperValues[axis]=bound.value;
			}
			for (axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var lowerIndex=proxy.lowerBounds[axis];
				var upperIndex=proxy.upperBounds[axis];
				var lowerValue=newValues.lowerValues[axis];
				var upperValue=newValues.upperValues[axis];
				bound=bounds[lowerIndex];
				var deltaLower=lowerValue-bound.value;
				bound.value=lowerValue;
				bound=bounds[upperIndex];
				var deltaUpper=upperValue-bound.value;
				bound.value=upperValue;
				if (deltaLower < 0){
					index=lowerIndex;
					while (index > 0 && lowerValue < (bounds [int(index-1)]).value){
						bound=bounds[index];
						prevBound=bounds[int(index-1)];
						var prevProxy=prevBound.proxy;
						prevBound.stabbingCount++;
						if (prevBound.IsUpper()==true){
							if (this.TestOverlapBound(newValues,prevProxy)){
								this.m_pairManager.AddBufferedPair(proxy,prevProxy);
							}
							as3arr=prevProxy.upperBounds;
							as3int=as3arr[axis];
							as3int++;
							as3arr[axis]=as3int;
							bound.stabbingCount++;
						}
						else{
							as3arr=prevProxy.lowerBounds;
							as3int=as3arr[axis];
							as3int++;
							as3arr[axis]=as3int;
							bound.stabbingCount--;
						}
						as3arr=proxy.lowerBounds;
						as3int=as3arr[axis];
						as3int--;
						as3arr[axis]=as3int;
						bound.Swap(prevBound);
						--index;
					}
				}
				if (deltaUpper > 0){
					index=upperIndex;
					while (index < boundCount-1 && (bounds [int(index+1)]).value <=upperValue){
						bound=bounds[ index];
						nextBound=bounds[ int(index+1)];
						nextProxy=nextBound.proxy;
						nextBound.stabbingCount++;
						if (nextBound.IsLower()==true){
							if (this.TestOverlapBound(newValues,nextProxy)){
								this.m_pairManager.AddBufferedPair(proxy,nextProxy);
							}
							as3arr=nextProxy.lowerBounds;
							as3int=as3arr[axis];
							as3int--;
							as3arr[axis]=as3int;
							bound.stabbingCount++;
						}
						else{
							as3arr=nextProxy.upperBounds;
							as3int=as3arr[axis];
							as3int--;
							as3arr[axis]=as3int;
							bound.stabbingCount--;
						}
						as3arr=proxy.upperBounds;
						as3int=as3arr[axis];
						as3int++;
						as3arr[axis]=as3int;
						bound.Swap(nextBound);
						index++;
					}
				}
				if (deltaLower > 0){
					index=lowerIndex;
					while (index < boundCount-1 && (bounds [int(index+1)]).value <=lowerValue){
						bound=bounds[ index];
						nextBound=bounds[ int(index+1)];
						nextProxy=nextBound.proxy;
						nextBound.stabbingCount--;
						if (nextBound.IsUpper()){
							if (this.TestOverlapBound(oldValues,nextProxy)){
								this.m_pairManager.RemoveBufferedPair(proxy,nextProxy);
							}
							as3arr=nextProxy.upperBounds;
							as3int=as3arr[axis];
							as3int--;
							as3arr[axis]=as3int;
							bound.stabbingCount--;
						}
						else{
							as3arr=nextProxy.lowerBounds;
							as3int=as3arr[axis];
							as3int--;
							as3arr[axis]=as3int;
							bound.stabbingCount++;
						}
						as3arr=proxy.lowerBounds;
						as3int=as3arr[axis];
						as3int++;
						as3arr[axis]=as3int;
						bound.Swap(nextBound);
						index++;
					}
				}
				if (deltaUpper < 0){
					index=upperIndex;
					while (index > 0 && upperValue < (bounds [int(index-1)]).value){
						bound=bounds[index];
						prevBound=bounds[int(index-1)];
						prevProxy=prevBound.proxy;
						prevBound.stabbingCount--;
						if (prevBound.IsLower()==true){
							if (this.TestOverlapBound(oldValues,prevProxy)){
								this.m_pairManager.RemoveBufferedPair(proxy,prevProxy);
							}
							as3arr=prevProxy.lowerBounds;
							as3int=as3arr[axis];
							as3int++;
							as3arr[axis]=as3int;
							bound.stabbingCount--;
						}
						else{
							as3arr=prevProxy.upperBounds;
							as3int=as3arr[axis];
							as3int++;
							as3arr[axis]=as3int;
							bound.stabbingCount++;
						}
						as3arr=proxy.upperBounds;
						as3int=as3arr[axis];
						as3int--;
						as3arr[axis]=as3int;
						bound.Swap(prevBound);
						index--;
					}
				}
			}
		}

		__proto.UpdatePairs=function(callback){
			this.m_pairManager.Commit(callback);
		}

		__proto.TestOverlap=function(proxyA,proxyB){
			var proxyA_=proxyA;
			var proxyB_=proxyB;
			if (proxyA_.lowerBounds[0] > proxyB_.upperBounds[0])return false;
			if (proxyB_.lowerBounds[0] > proxyA_.upperBounds[0])return false;
			if (proxyA_.lowerBounds[1] > proxyB_.upperBounds[1])return false;
			if (proxyB_.lowerBounds[1] > proxyA_.upperBounds[1])return false;
			return true;
		}

		__proto.GetUserData=function(proxy){
			return (proxy).userData;
		}

		__proto.GetFatAABB=function(proxy_){
			var aabb=new b2AABB();
			var proxy=proxy_;
			aabb.lowerBound.x=this.m_worldAABB.lowerBound.x+this.m_bounds[0][proxy.lowerBounds[0]].value / this.m_quantizationFactor.x;
			aabb.lowerBound.y=this.m_worldAABB.lowerBound.y+this.m_bounds[1][proxy.lowerBounds[1]].value / this.m_quantizationFactor.y;
			aabb.upperBound.x=this.m_worldAABB.lowerBound.x+this.m_bounds[0][proxy.upperBounds[0]].value / this.m_quantizationFactor.x;
			aabb.upperBound.y=this.m_worldAABB.lowerBound.y+this.m_bounds[1][proxy.upperBounds[1]].value / this.m_quantizationFactor.y;
			return aabb;
		}

		__proto.GetProxyCount=function(){
			return this.m_proxyCount;
		}

		__proto.Query=function(callback,aabb){
			var lowerValues=[];
			var upperValues=[];
			this.ComputeBounds(lowerValues,upperValues,aabb);
			var lowerIndex=0;
			var upperIndex=0;
			var lowerIndexOut=[];
			lowerIndexOut.push(lowerIndex);
			var upperIndexOut=[];
			upperIndexOut.push(upperIndex);
			this.QueryAxis(lowerIndexOut,upperIndexOut,lowerValues[0],upperValues[0],this.m_bounds[0],2*this.m_proxyCount,0);
			this.QueryAxis(lowerIndexOut,upperIndexOut,lowerValues[1],upperValues[1],this.m_bounds[1],2*this.m_proxyCount,1);
			for (var i=0;i < this.m_queryResultCount;++i){
				var proxy=this.m_queryResults[i];
				if (!callback(proxy)){
					break ;
				}
			}
			this.m_queryResultCount=0;
			this.IncrementTimeStamp();
		}

		__proto.Validate=function(){
			var pair;
			var proxy1;
			var proxy2;
			var overlap=false;
			for (var axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var boundCount=2 *this.m_proxyCount;
				var stabbingCount=0;
				for (var i=0;i < boundCount;++i){
					var bound=bounds[i];
					if (bound.IsLower()==true){
						stabbingCount++;
					}
					else{
						stabbingCount--;
					}
				}
			}
		}

		__proto.Rebalance=function(iterations){}
		__proto.RayCast=function(callback,input){
			var subInput=new b2RayCastInput();
			subInput.p1.SetV(input.p1);
			subInput.p2.SetV(input.p2);
			subInput.maxFraction=input.maxFraction;
			var dx=(input.p2.x-input.p1.x)*this.m_quantizationFactor.x;
			var dy=(input.p2.y-input.p1.y)*this.m_quantizationFactor.y;
			var sx=dx<-Number.MIN_VALUE ?-1 :(dx>Number.MIN_VALUE ? 1 :0);
			var sy=dy<-Number.MIN_VALUE ?-1 :(dy>Number.MIN_VALUE ? 1 :0);
			var p1x=this.m_quantizationFactor.x *(input.p1.x-this.m_worldAABB.lowerBound.x);
			var p1y=this.m_quantizationFactor.y *(input.p1.y-this.m_worldAABB.lowerBound.y);
			var startValues=[];
			var startValues2=[];
			startValues[0]=uint(p1x)& (/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff-1);
			startValues[1]=uint(p1y)& (/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff-1);
			startValues2[0]=startValues[0]+1;
			startValues2[1]=startValues[1]+1;
			var startIndices=[];
			var xIndex=0;
			var yIndex=0;
			var proxy;
			var lowerIndex=0;
			var upperIndex=0;
			var lowerIndexOut=[];
			lowerIndexOut.push(lowerIndex);
			var upperIndexOut=[];
			upperIndexOut.push(upperIndex);
			this.QueryAxis(lowerIndexOut,upperIndexOut,startValues[0],startValues2[0],this.m_bounds[0],2*this.m_proxyCount,0);
			if(sx>=0)xIndex=upperIndexOut[0]-1;
			else xIndex=lowerIndexOut[0];
			this.QueryAxis(lowerIndexOut,upperIndexOut,startValues[1],startValues2[1],this.m_bounds[1],2*this.m_proxyCount,1);
			if(sy>=0)yIndex=upperIndexOut[0]-1;
			else yIndex=lowerIndexOut[0];
			for (var i=0;i < this.m_queryResultCount;i++){
				subInput.maxFraction=callback(this.m_queryResults[i],subInput);
			}
			for (;;){
				var xProgress=0;
				var yProgress=0;
				xIndex+=sx >=0?1:-1;
				if(xIndex<0||xIndex>=this.m_proxyCount*2)
					break ;
				if(sx!=0){
					xProgress=(this.m_bounds[0][xIndex].value-p1x)/ dx;
				}
				yIndex+=sy >=0?1:-1;
				if(yIndex<0||yIndex>=this.m_proxyCount*2)
					break ;
				if(sy!=0){
					yProgress=(this.m_bounds[1][yIndex].value-p1y)/ dy;
				}
				for (;;){
					if(sy==0||(sx!=0&&xProgress<yProgress)){
						if(xProgress>subInput.maxFraction)
							break ;
						if(sx>0?this.m_bounds[0][xIndex].IsLower():this.m_bounds[0][xIndex].IsUpper()){
							proxy=this.m_bounds[0][xIndex].proxy;
							if(sy>=0){
								if(proxy.lowerBounds[1]<=yIndex-1&&proxy.upperBounds[1]>=yIndex){
									subInput.maxFraction=callback(proxy,subInput);
								}
								}else{
								if(proxy.lowerBounds[1]<=yIndex&&proxy.upperBounds[1]>=yIndex+1){
									subInput.maxFraction=callback(proxy,subInput);
								}
							}
						}
						if(subInput.maxFraction==0)
							break ;
						if(sx>0){
							xIndex++;
							if(xIndex==this.m_proxyCount*2)
								break ;
							}else{
							xIndex--;
							if(xIndex<0)
								break ;
						}
						xProgress=(this.m_bounds[0][xIndex].value-p1x)/ dx;
						}else{
						if(yProgress>subInput.maxFraction)
							break ;
						if(sy>0?this.m_bounds[1][yIndex].IsLower():this.m_bounds[1][yIndex].IsUpper()){
							proxy=this.m_bounds[1][yIndex].proxy;
							if(sx>=0){
								if(proxy.lowerBounds[0]<=xIndex-1&&proxy.upperBounds[0]>=xIndex){
									subInput.maxFraction=callback(proxy,subInput);
								}
								}else{
								if(proxy.lowerBounds[0]<=xIndex&&proxy.upperBounds[0]>=xIndex+1){
									subInput.maxFraction=callback(proxy,subInput);
								}
							}
						}
						if(subInput.maxFraction==0)
							break ;
						if(sy>0){
							yIndex++;
							if(yIndex==this.m_proxyCount*2)
								break ;
							}else{
							yIndex--;
							if(yIndex<0)
								break ;
						}
						yProgress=(this.m_bounds[1][yIndex].value-p1y)/ dy;
					}
				}
				break ;
			}
			this.m_queryResultCount=0;
			this.IncrementTimeStamp();
			return;
		}

		__proto.ComputeBounds=function(lowerValues,upperValues,aabb){
			var minVertexX=aabb.lowerBound.x;
			var minVertexY=aabb.lowerBound.y;
			minVertexX=b2Math.Min(minVertexX,this.m_worldAABB.upperBound.x);
			minVertexY=b2Math.Min(minVertexY,this.m_worldAABB.upperBound.y);
			minVertexX=b2Math.Max(minVertexX,this.m_worldAABB.lowerBound.x);
			minVertexY=b2Math.Max(minVertexY,this.m_worldAABB.lowerBound.y);
			var maxVertexX=aabb.upperBound.x;
			var maxVertexY=aabb.upperBound.y;
			maxVertexX=b2Math.Min(maxVertexX,this.m_worldAABB.upperBound.x);
			maxVertexY=b2Math.Min(maxVertexY,this.m_worldAABB.upperBound.y);
			maxVertexX=b2Math.Max(maxVertexX,this.m_worldAABB.lowerBound.x);
			maxVertexY=b2Math.Max(maxVertexY,this.m_worldAABB.lowerBound.y);
			lowerValues[0]=uint(this.m_quantizationFactor.x *(minVertexX-this.m_worldAABB.lowerBound.x))& (/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff-1);
			upperValues[0]=(uint(this.m_quantizationFactor.x *(maxVertexX-this.m_worldAABB.lowerBound.x))& 0x0000ffff)| 1;
			lowerValues[1]=uint(this.m_quantizationFactor.y *(minVertexY-this.m_worldAABB.lowerBound.y))& (/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff-1);
			upperValues[1]=(uint(this.m_quantizationFactor.y *(maxVertexY-this.m_worldAABB.lowerBound.y))& 0x0000ffff)| 1;
		}

		__proto.TestOverlapValidate=function(p1,p2){
			for (var axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var bound1=bounds[p1.lowerBounds[axis]];
				var bound2=bounds[p2.upperBounds[axis]];
				if (bound1.value > bound2.value)
					return false;
				bound1=bounds[p1.upperBounds[axis]];
				bound2=bounds[p2.lowerBounds[axis]];
				if (bound1.value < bound2.value)
					return false;
			}
			return true;
		}

		__proto.TestOverlapBound=function(b,p){
			for (var axis=0;axis < 2;++axis){
				var bounds=this.m_bounds[axis];
				var bound=bounds[p.upperBounds[axis]];
				if (b.lowerValues[axis] > bound.value)
					return false;
				bound=bounds[p.lowerBounds[axis]];
				if (b.upperValues[axis] < bound.value)
					return false;
			}
			return true;
		}

		__proto.QueryAxis=function(lowerQueryOut,upperQueryOut,lowerValue,upperValue,bounds,boundCount,axis){
			var lowerQuery=b2BroadPhase.BinarySearch(bounds,boundCount,lowerValue);
			var upperQuery=b2BroadPhase.BinarySearch(bounds,boundCount,upperValue);
			var bound;
			for (var j=lowerQuery;j < upperQuery;++j){
				bound=bounds[j];
				if (bound.IsLower()){
					this.IncrementOverlapCount(bound.proxy);
				}
			}
			if (lowerQuery > 0){
				var i=lowerQuery-1;
				bound=bounds[i];
				var s=bound.stabbingCount;
				while (s){
					bound=bounds[i];
					if (bound.IsLower()){
						var proxy=bound.proxy;
						if (lowerQuery <=proxy.upperBounds[axis]){
							this.IncrementOverlapCount(bound.proxy);
							--s;
						}
					}
					--i;
				}
			}
			lowerQueryOut[0]=lowerQuery;
			upperQueryOut[0]=upperQuery;
		}

		__proto.IncrementOverlapCount=function(proxy){
			if (proxy.timeStamp < this.m_timeStamp){
				proxy.timeStamp=this.m_timeStamp;
				proxy.overlapCount=1;
			}
			else{
				proxy.overlapCount=2;
				this.m_queryResults[this.m_queryResultCount]=proxy;
				++this.m_queryResultCount;
			}
		}

		__proto.IncrementTimeStamp=function(){
			if (this.m_timeStamp==/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff){
				for (var i=0;i < this.m_proxyPool.length;++i){
					(this.m_proxyPool [i]).timeStamp=0;
				}
				this.m_timeStamp=1;
			}
			else{
				++this.m_timeStamp;
			}
		}

		b2BroadPhase.BinarySearch=function(bounds,count,value){
			var low=0;
			var high=count-1;
			while (low <=high){
				var mid=((low+high)/ 2);
				var bound=bounds[mid];
				if (bound.value > value){
					high=mid-1;
				}
				else if (bound.value < value){
					low=mid+1;
				}
				else{
					return uint(mid);
				}
			}
			return uint(low);
		}

		b2BroadPhase.s_validate=false;
		__static(b2BroadPhase,
		['b2_invalid',function(){return this.b2_invalid=/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff;},'b2_nullEdge',function(){return this.b2_nullEdge=/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff;}
		]);
		return b2BroadPhase;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2collision.as
	;
	//class Box2D.Collision.b2Collision
	var b2Collision=(function(){
		function b2Collision(){};
		__class(b2Collision,'Box2D.Collision.b2Collision',true);
		b2Collision.ClipSegmentToLine=function(vOut,vIn,normal,offset){
			var cv;
			var numOut=0;
			cv=vIn[0];
			var vIn0=cv.v;
			cv=vIn[1];
			var vIn1=cv.v;
			var distance0=normal.x *vIn0.x+normal.y *vIn0.y-offset;
			var distance1=normal.x *vIn1.x+normal.y *vIn1.y-offset;
			if (distance0 <=0.0)vOut[numOut++].Set(vIn[0]);
			if (distance1 <=0.0)vOut[numOut++].Set(vIn[1]);
			if (distance0 *distance1 < 0.0){
				var interp=distance0 / (distance0-distance1);
				cv=vOut[numOut];
				var tVec=cv.v;
				tVec.x=vIn0.x+interp *(vIn1.x-vIn0.x);
				tVec.y=vIn0.y+interp *(vIn1.y-vIn0.y);
				cv=vOut[numOut];
				var cv2;
				if (distance0 > 0.0){
					cv2=vIn[0];
					cv.id=cv2.id;
				}
				else{
					cv2=vIn[1];
					cv.id=cv2.id;
				}
				++numOut;
			}
			return numOut;
		}

		b2Collision.EdgeSeparation=function(poly1,xf1,edge1,poly2,xf2){
			var count1=poly1.m_vertexCount;
			var vertices1=poly1.m_vertices;
			var normals1=poly1.m_normals;
			var count2=poly2.m_vertexCount;
			var vertices2=poly2.m_vertices;
			var tMat;
			var tVec;
			tMat=xf1.R;
			tVec=normals1[edge1];
			var normal1WorldX=(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var normal1WorldY=(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tMat=xf2.R;
			var normal1X=(tMat.col1.x *normal1WorldX+tMat.col1.y *normal1WorldY);
			var normal1Y=(tMat.col2.x *normal1WorldX+tMat.col2.y *normal1WorldY);
			var index=0;
			var minDot=Number.MAX_VALUE;
			for (var i=0;i < count2;++i){
				tVec=vertices2[i];
				var dot=tVec.x *normal1X+tVec.y *normal1Y;
				if (dot < minDot){
					minDot=dot;
					index=i;
				}
			}
			tVec=vertices1[edge1];
			tMat=xf1.R;
			var v1X=xf1.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var v1Y=xf1.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tVec=vertices2[index];
			tMat=xf2.R;
			var v2X=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var v2Y=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			v2X-=v1X;
			v2Y-=v1Y;
			var separation=v2X *normal1WorldX+v2Y *normal1WorldY;
			return separation;
		}

		b2Collision.FindMaxSeparation=function(edgeIndex,poly1,xf1,poly2,xf2){
			var count1=poly1.m_vertexCount;
			var normals1=poly1.m_normals;
			var tVec;
			var tMat;
			tMat=xf2.R;
			tVec=poly2.m_centroid;
			var dX=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var dY=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tMat=xf1.R;
			tVec=poly1.m_centroid;
			dX-=xf1.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			dY-=xf1.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			var dLocal1X=(dX *xf1.R.col1.x+dY *xf1.R.col1.y);
			var dLocal1Y=(dX *xf1.R.col2.x+dY *xf1.R.col2.y);
			var edge=0;
			var maxDot=-Number.MAX_VALUE;
			for (var i=0;i < count1;++i){
				tVec=normals1[i];
				var dot=(tVec.x *dLocal1X+tVec.y *dLocal1Y);
				if (dot > maxDot){
					maxDot=dot;
					edge=i;
				}
			};
			var s=b2Collision.EdgeSeparation(poly1,xf1,edge,poly2,xf2);
			var prevEdge=edge-1 >=0 ? edge-1 :count1-1;
			var sPrev=b2Collision.EdgeSeparation(poly1,xf1,prevEdge,poly2,xf2);
			var nextEdge=edge+1 < count1 ? edge+1 :0;
			var sNext=b2Collision.EdgeSeparation(poly1,xf1,nextEdge,poly2,xf2);
			var bestEdge=0;
			var bestSeparation=NaN;
			var increment=0;
			if (sPrev > s && sPrev > sNext){
				increment=-1;
				bestEdge=prevEdge;
				bestSeparation=sPrev;
			}
			else if (sNext > s){
				increment=1;
				bestEdge=nextEdge;
				bestSeparation=sNext;
			}
			else{
				edgeIndex[0]=edge;
				return s;
			}
			while (true){
				if (increment==-1)
					edge=bestEdge-1 >=0 ? bestEdge-1 :count1-1;
				else
				edge=bestEdge+1 < count1 ? bestEdge+1 :0;
				s=b2Collision.EdgeSeparation(poly1,xf1,edge,poly2,xf2);
				if (s > bestSeparation){
					bestEdge=edge;
					bestSeparation=s;
				}
				else{
					break ;
				}
			}
			edgeIndex[0]=bestEdge;
			return bestSeparation;
		}

		b2Collision.FindIncidentEdge=function(c,poly1,xf1,edge1,poly2,xf2){
			var count1=poly1.m_vertexCount;
			var normals1=poly1.m_normals;
			var count2=poly2.m_vertexCount;
			var vertices2=poly2.m_vertices;
			var normals2=poly2.m_normals;
			var tMat;
			var tVec;
			tMat=xf1.R;
			tVec=normals1[edge1];
			var normal1X=(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var normal1Y=(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tMat=xf2.R;
			var tX=(tMat.col1.x *normal1X+tMat.col1.y *normal1Y);
			normal1Y=(tMat.col2.x *normal1X+tMat.col2.y *normal1Y);
			normal1X=tX;
			var index=0;
			var minDot=Number.MAX_VALUE;
			for (var i=0;i < count2;++i){
				tVec=normals2[i];
				var dot=(normal1X *tVec.x+normal1Y *tVec.y);
				if (dot < minDot){
					minDot=dot;
					index=i;
				}
			};
			var tClip;
			var i1=index;
			var i2=i1+1 < count2 ? i1+1 :0;
			tClip=c[0];
			tVec=vertices2[i1];
			tMat=xf2.R;
			tClip.v.x=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			tClip.v.y=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tClip.id.features.referenceEdge=edge1;
			tClip.id.features.incidentEdge=i1;
			tClip.id.features.incidentVertex=0;
			tClip=c[1];
			tVec=vertices2[i2];
			tMat=xf2.R;
			tClip.v.x=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			tClip.v.y=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tClip.id.features.referenceEdge=edge1;
			tClip.id.features.incidentEdge=i2;
			tClip.id.features.incidentVertex=1;
		}

		b2Collision.MakeClipPointVector=function(){
			var r=__newvec(2,null);
			r[0]=new ClipVertex();
			r[1]=new ClipVertex();
			return r;
		}

		b2Collision.CollidePolygons=function(manifold,polyA,xfA,polyB,xfB){
			var cv;
			manifold.m_pointCount=0;
			var totalRadius=polyA.m_radius+polyB.m_radius;
			var edgeA=0;
			b2Collision.s_edgeAO[0]=edgeA;
			var separationA=b2Collision.FindMaxSeparation(b2Collision.s_edgeAO,polyA,xfA,polyB,xfB);
			edgeA=b2Collision.s_edgeAO[0];
			if (separationA > totalRadius)
				return;
			var edgeB=0;
			b2Collision.s_edgeBO[0]=edgeB;
			var separationB=b2Collision.FindMaxSeparation(b2Collision.s_edgeBO,polyB,xfB,polyA,xfA);
			edgeB=b2Collision.s_edgeBO[0];
			if (separationB > totalRadius)
				return;
			var poly1;
			var poly2;
			var xf1;
			var xf2;
			var edge1=0;
			var flip=0;
			var k_relativeTol=0.98;
			var k_absoluteTol=0.001;
			var tMat;
			if (separationB > k_relativeTol *separationA+k_absoluteTol){
				poly1=polyB;
				poly2=polyA;
				xf1=xfB;
				xf2=xfA;
				edge1=edgeB;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceB*/0x0004;
				flip=1;
			}
			else{
				poly1=polyA;
				poly2=polyB;
				xf1=xfA;
				xf2=xfB;
				edge1=edgeA;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceA*/0x0002;
				flip=0;
			};
			var incidentEdge=b2Collision.s_incidentEdge;
			b2Collision.FindIncidentEdge(incidentEdge,poly1,xf1,edge1,poly2,xf2);
			var count1=poly1.m_vertexCount;
			var vertices1=poly1.m_vertices;
			var local_v11=vertices1[edge1];
			var local_v12;
			if (edge1+1 < count1){
				local_v12=vertices1[int(edge1+1)];
				}else {
				local_v12=vertices1[0];
			};
			var localTangent=b2Collision.s_localTangent;
			localTangent.Set(local_v12.x-local_v11.x,local_v12.y-local_v11.y);
			localTangent.Normalize();
			var localNormal=b2Collision.s_localNormal;
			localNormal.x=localTangent.y;
			localNormal.y=-localTangent.x;
			var planePoint=b2Collision.s_planePoint;
			planePoint.Set(0.5 *(local_v11.x+local_v12.x),0.5 *(local_v11.y+local_v12.y));
			var tangent=b2Collision.s_tangent;
			tMat=xf1.R;
			tangent.x=(tMat.col1.x *localTangent.x+tMat.col2.x *localTangent.y);
			tangent.y=(tMat.col1.y *localTangent.x+tMat.col2.y *localTangent.y);
			var tangent2=b2Collision.s_tangent2;
			tangent2.x=-tangent.x;
			tangent2.y=-tangent.y;
			var normal=b2Collision.s_normal;
			normal.x=tangent.y;
			normal.y=-tangent.x;
			var v11=b2Collision.s_v11;
			var v12=b2Collision.s_v12;
			v11.x=xf1.position.x+(tMat.col1.x *local_v11.x+tMat.col2.x *local_v11.y);
			v11.y=xf1.position.y+(tMat.col1.y *local_v11.x+tMat.col2.y *local_v11.y);
			v12.x=xf1.position.x+(tMat.col1.x *local_v12.x+tMat.col2.x *local_v12.y);
			v12.y=xf1.position.y+(tMat.col1.y *local_v12.x+tMat.col2.y *local_v12.y);
			var frontOffset=normal.x *v11.x+normal.y *v11.y;
			var sideOffset1=-tangent.x *v11.x-tangent.y *v11.y+totalRadius;
			var sideOffset2=tangent.x *v12.x+tangent.y *v12.y+totalRadius;
			var clipPoints1=b2Collision.s_clipPoints1;
			var clipPoints2=b2Collision.s_clipPoints2;
			var np=0;
			np=b2Collision.ClipSegmentToLine(clipPoints1,incidentEdge,tangent2,sideOffset1);
			if (np < 2)
				return;
			np=b2Collision.ClipSegmentToLine(clipPoints2,clipPoints1,tangent,sideOffset2);
			if (np < 2)
				return;
			manifold.m_localPlaneNormal.SetV(localNormal);
			manifold.m_localPoint.SetV(planePoint);
			var pointCount=0;
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;++i){
				cv=clipPoints2[i];
				var separation=normal.x *cv.v.x+normal.y *cv.v.y-frontOffset;
				if (separation <=totalRadius){
					var cp=manifold.m_points[ pointCount];
					tMat=xf2.R;
					var tX=cv.v.x-xf2.position.x;
					var tY=cv.v.y-xf2.position.y;
					cp.m_localPoint.x=(tX *tMat.col1.x+tY *tMat.col1.y);
					cp.m_localPoint.y=(tX *tMat.col2.x+tY *tMat.col2.y);
					cp.m_id.Set(cv.id);
					cp.m_id.features.flip=flip;
					++pointCount;
				}
			}
			manifold.m_pointCount=pointCount;
		}

		b2Collision.CollideCircles=function(manifold,circle1,xf1,circle2,xf2){
			manifold.m_pointCount=0;
			var tMat;
			var tVec;
			tMat=xf1.R;tVec=circle1.m_p;
			var p1X=xf1.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var p1Y=xf1.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			tMat=xf2.R;tVec=circle2.m_p;
			var p2X=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var p2Y=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			var dX=p2X-p1X;
			var dY=p2Y-p1Y;
			var distSqr=dX *dX+dY *dY;
			var radius=circle1.m_radius+circle2.m_radius;
			if (distSqr > radius *radius){
				return;
			}
			manifold.m_type=/*Box2D.Collision.b2Manifold.e_circles*/0x0001;
			manifold.m_localPoint.SetV(circle1.m_p);
			manifold.m_localPlaneNormal.SetZero();
			manifold.m_pointCount=1;
			manifold.m_points[0].m_localPoint.SetV(circle2.m_p);
			manifold.m_points[0].m_id.key=0;
		}

		b2Collision.CollidePolygonAndCircle=function(manifold,polygon,xf1,circle,xf2){
			manifold.m_pointCount=0;
			var tPoint;
			var dX=NaN;
			var dY=NaN;
			var positionX=NaN;
			var positionY=NaN;
			var tVec;
			var tMat;
			tMat=xf2.R;
			tVec=circle.m_p;
			var cX=xf2.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var cY=xf2.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			dX=cX-xf1.position.x;
			dY=cY-xf1.position.y;
			tMat=xf1.R;
			var cLocalX=(dX *tMat.col1.x+dY *tMat.col1.y);
			var cLocalY=(dX *tMat.col2.x+dY *tMat.col2.y);
			var dist=NaN;
			var normalIndex=0;
			var separation=-Number.MAX_VALUE;
			var radius=polygon.m_radius+circle.m_radius;
			var vertexCount=polygon.m_vertexCount;
			var vertices=polygon.m_vertices;
			var normals=polygon.m_normals;
			for (var i=0;i < vertexCount;++i){
				tVec=vertices[i];
				dX=cLocalX-tVec.x;
				dY=cLocalY-tVec.y;
				tVec=normals[i];
				var s=tVec.x *dX+tVec.y *dY;
				if (s > radius){
					return;
				}
				if (s > separation){
					separation=s;
					normalIndex=i;
				}
			};
			var vertIndex1=normalIndex;
			var vertIndex2=vertIndex1+1 < vertexCount?vertIndex1+1:0;
			var v1=vertices[vertIndex1];
			var v2=vertices[vertIndex2];
			if (separation < Number.MIN_VALUE){
				manifold.m_pointCount=1;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceA*/0x0002;
				manifold.m_localPlaneNormal.SetV(normals[normalIndex]);
				manifold.m_localPoint.x=0.5 *(v1.x+v2.x);
				manifold.m_localPoint.y=0.5 *(v1.y+v2.y);
				manifold.m_points[0].m_localPoint.SetV(circle.m_p);
				manifold.m_points[0].m_id.key=0;
				return;
			};
			var u1=(cLocalX-v1.x)*(v2.x-v1.x)+(cLocalY-v1.y)*(v2.y-v1.y);
			var u2=(cLocalX-v2.x)*(v1.x-v2.x)+(cLocalY-v2.y)*(v1.y-v2.y);
			if (u1 <=0.0){
				if ((cLocalX-v1.x)*(cLocalX-v1.x)+(cLocalY-v1.y)*(cLocalY-v1.y)> radius *radius)
					return;
				manifold.m_pointCount=1;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceA*/0x0002;
				manifold.m_localPlaneNormal.x=cLocalX-v1.x;
				manifold.m_localPlaneNormal.y=cLocalY-v1.y;
				manifold.m_localPlaneNormal.Normalize();
				manifold.m_localPoint.SetV(v1);
				manifold.m_points[0].m_localPoint.SetV(circle.m_p);
				manifold.m_points[0].m_id.key=0;
			}
			else if (u2 <=0){
				if ((cLocalX-v2.x)*(cLocalX-v2.x)+(cLocalY-v2.y)*(cLocalY-v2.y)> radius *radius)
					return;
				manifold.m_pointCount=1;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceA*/0x0002;
				manifold.m_localPlaneNormal.x=cLocalX-v2.x;
				manifold.m_localPlaneNormal.y=cLocalY-v2.y;
				manifold.m_localPlaneNormal.Normalize();
				manifold.m_localPoint.SetV(v2);
				manifold.m_points[0].m_localPoint.SetV(circle.m_p);
				manifold.m_points[0].m_id.key=0;
			}
			else{
				var faceCenterX=0.5 *(v1.x+v2.x);
				var faceCenterY=0.5 *(v1.y+v2.y);
				separation=(cLocalX-faceCenterX)*normals[vertIndex1].x+(cLocalY-faceCenterY)*normals[vertIndex1].y;
				if (separation > radius)
					return;
				manifold.m_pointCount=1;
				manifold.m_type=/*Box2D.Collision.b2Manifold.e_faceA*/0x0002;
				manifold.m_localPlaneNormal.x=normals[vertIndex1].x;
				manifold.m_localPlaneNormal.y=normals[vertIndex1].y;
				manifold.m_localPlaneNormal.Normalize();
				manifold.m_localPoint.Set(faceCenterX,faceCenterY);
				manifold.m_points[0].m_localPoint.SetV(circle.m_p);
				manifold.m_points[0].m_id.key=0;
			}
		}

		b2Collision.TestOverlap=function(a,b){
			var t1=b.lowerBound;
			var t2=a.upperBound;
			var d1X=t1.x-t2.x;
			var d1Y=t1.y-t2.y;
			t1=a.lowerBound;
			t2=b.upperBound;
			var d2X=t1.x-t2.x;
			var d2Y=t1.y-t2.y;
			if (d1X > 0.0 || d1Y > 0.0)
				return false;
			if (d2X > 0.0 || d2Y > 0.0)
				return false;
			return true;
		}

		b2Collision.b2_nullFeature=0x000000ff;
		__static(b2Collision,
		['s_incidentEdge',function(){return this.s_incidentEdge=b2Collision.MakeClipPointVector();},'s_clipPoints1',function(){return this.s_clipPoints1=b2Collision.MakeClipPointVector();},'s_clipPoints2',function(){return this.s_clipPoints2=b2Collision.MakeClipPointVector();},'s_edgeAO',function(){return this.s_edgeAO=__newvec(1,0);},'s_edgeBO',function(){return this.s_edgeBO=__newvec(1,0);},'s_localTangent',function(){return this.s_localTangent=new b2Vec2();},'s_localNormal',function(){return this.s_localNormal=new b2Vec2();},'s_planePoint',function(){return this.s_planePoint=new b2Vec2();},'s_normal',function(){return this.s_normal=new b2Vec2();},'s_tangent',function(){return this.s_tangent=new b2Vec2();},'s_tangent2',function(){return this.s_tangent2=new b2Vec2();},'s_v11',function(){return this.s_v11=new b2Vec2();},'s_v12',function(){return this.s_v12=new b2Vec2();},'b2CollidePolyTempVec',function(){return this.b2CollidePolyTempVec=new b2Vec2();}
		]);
		return b2Collision;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2contactid.as
	;
	//class Box2D.Collision.b2ContactID
	var b2ContactID=(function(){
		function b2ContactID(){
			this._key=0;
			this.features=new Features();
			this.features._m_id=this;
		}

		__class(b2ContactID,'Box2D.Collision.b2ContactID',true);
		var __proto=b2ContactID.prototype;
		__proto.Set=function(id){
			this.key=id._key;
		}

		__proto.Copy=function(){
			var id=new b2ContactID();
			id.key=this.key;
			return id;
		}

		__getset(0,__proto,'key',function(){
			return this._key;
			},function(value){
			this._key=value;
			this.features._referenceEdge=this._key & 0x000000ff;
			this.features._incidentEdge=((this._key & 0x0000ff00)>> 8)& 0x000000ff;
			this.features._incidentVertex=((this._key & 0x00ff0000)>> 16)& 0x000000ff;
			this.features._flip=((this._key & 0xff000000)>> 24)& 0x000000ff;
		});

		return b2ContactID;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2contactpoint.as
	;
	//class Box2D.Collision.b2ContactPoint
	var b2ContactPoint=(function(){
		function b2ContactPoint(){
			this.shape1=null;
			this.shape2=null;
			this.separation=NaN;
			this.friction=NaN;
			this.restitution=NaN;
			this.position=new b2Vec2();
			this.velocity=new b2Vec2();
			this.normal=new b2Vec2();
			this.id=new b2ContactID();
		}

		__class(b2ContactPoint,'Box2D.Collision.b2ContactPoint',true);
		return b2ContactPoint;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2distance.as
	;
	//class Box2D.Collision.b2Distance
	var b2Distance=(function(){
		function b2Distance(){};
		__class(b2Distance,'Box2D.Collision.b2Distance',true);
		b2Distance.Distance=function(output,cache,input){
			++b2Distance.b2_gjkCalls;
			var proxyA=input.proxyA;
			var proxyB=input.proxyB;
			var transformA=input.transformA;
			var transformB=input.transformB;
			var simplex=b2Distance.s_simplex;
			simplex.ReadCache(cache,proxyA,transformA,proxyB,transformB);
			var vertices=simplex.m_vertices;
			var k_maxIters=20;
			var saveA=b2Distance.s_saveA;
			var saveB=b2Distance.s_saveB;
			var saveCount=0;
			var closestPoint=simplex.GetClosestPoint();
			var distanceSqr1=closestPoint.LengthSquared();
			var distanceSqr2=distanceSqr1;
			var i=0;
			var p;
			var iter=0;
			while (iter < k_maxIters){
				saveCount=simplex.m_count;
				for (i=0;i < saveCount;i++){
					saveA[i]=vertices[i].indexA;
					saveB[i]=vertices[i].indexB;
				}
				switch(simplex.m_count){
					case 1:
						break ;
					case 2:
						simplex.Solve2();
						break ;
					case 3:
						simplex.Solve3();
						break ;
					default :
						b2Settings.b2Assert(false);
					}
				if (simplex.m_count==3){
					break ;
				}
				p=simplex.GetClosestPoint();
				distanceSqr2=p.LengthSquared();
				if (distanceSqr2 > distanceSqr1){
				}
				distanceSqr1=distanceSqr2;
				var d=simplex.GetSearchDirection();
				if (d.LengthSquared()< Number.MIN_VALUE *Number.MIN_VALUE){
					break ;
				};
				var vertex=vertices[simplex.m_count];
				vertex.indexA=proxyA.GetSupport(b2Math.MulTMV(transformA.R,d.GetNegative()));
				vertex.wA=b2Math.MulX(transformA,proxyA.GetVertex(vertex.indexA));
				vertex.indexB=proxyB.GetSupport(b2Math.MulTMV(transformB.R,d));
				vertex.wB=b2Math.MulX(transformB,proxyB.GetVertex(vertex.indexB));
				vertex.w=b2Math.SubtractVV(vertex.wB,vertex.wA);
				++iter;
				++b2Distance.b2_gjkIters;
				var duplicate=false;
				for (i=0;i < saveCount;i++){
					if (vertex.indexA==saveA[i] && vertex.indexB==saveB[i]){
						duplicate=true;
						break ;
					}
				}
				if (duplicate){
					break ;
				}
				++simplex.m_count;
			}
			b2Distance.b2_gjkMaxIters=b2Math.Max(b2Distance.b2_gjkMaxIters,iter);
			simplex.GetWitnessPoints(output.pointA,output.pointB);
			output.distance=b2Math.SubtractVV(output.pointA,output.pointB).Length();
			output.iterations=iter;
			simplex.WriteCache(cache);
			if (input.useRadii){
				var rA=proxyA.m_radius;
				var rB=proxyB.m_radius;
				if (output.distance > rA+rB && output.distance > Number.MIN_VALUE){
					output.distance-=rA+rB;
					var normal=b2Math.SubtractVV(output.pointB,output.pointA);
					normal.Normalize();
					output.pointA.x+=rA *normal.x;
					output.pointA.y+=rA *normal.y;
					output.pointB.x-=rB *normal.x;
					output.pointB.y-=rB *normal.y;
				}
				else{
					p=new b2Vec2();
					p.x=.5 *(output.pointA.x+output.pointB.x);
					p.y=.5 *(output.pointA.y+output.pointB.y);
					output.pointA.x=output.pointB.x=p.x;
					output.pointA.y=output.pointB.y=p.y;
					output.distance=0.0;
				}
			}
		}

		b2Distance.b2_gjkCalls=0;
		b2Distance.b2_gjkIters=0;
		b2Distance.b2_gjkMaxIters=0;
		__static(b2Distance,
		['s_simplex',function(){return this.s_simplex=new b2Simplex();},'s_saveA',function(){return this.s_saveA=__newvec(3,0);},'s_saveB',function(){return this.s_saveB=__newvec(3,0);}
		]);
		return b2Distance;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2distanceinput.as
	//class Box2D.Collision.b2DistanceInput
	var b2DistanceInput=(function(){
		function b2DistanceInput(){
			this.proxyA=null;
			this.proxyB=null;
			this.transformA=null;
			this.transformB=null;
			this.useRadii=false;
		}

		__class(b2DistanceInput,'Box2D.Collision.b2DistanceInput',true);
		return b2DistanceInput;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2distanceoutput.as
	//class Box2D.Collision.b2DistanceOutput
	var b2DistanceOutput=(function(){
		function b2DistanceOutput(){
			this.distance=NaN;
			this.iterations=0;
			this.pointA=new b2Vec2();
			this.pointB=new b2Vec2();
		}

		__class(b2DistanceOutput,'Box2D.Collision.b2DistanceOutput',true);
		return b2DistanceOutput;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2distanceproxy.as
	;
	//class Box2D.Collision.b2DistanceProxy
	var b2DistanceProxy=(function(){
		function b2DistanceProxy(){
			this.m_vertices=null;
			this.m_count=0;
			this.m_radius=NaN;
		}

		__class(b2DistanceProxy,'Box2D.Collision.b2DistanceProxy',true);
		var __proto=b2DistanceProxy.prototype;
		__proto.Set=function(shape){
			switch(shape.GetType()){
				case /*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0:{
						var circle=shape;
						this.m_vertices=__newvec(1,null);
						this.m_vertices[0]=circle.m_p;
						this.m_count=1;
						this.m_radius=circle.m_radius;
					}
					break ;
				case /*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1:{
						var polygon=shape;
						this.m_vertices=polygon.m_vertices;
						this.m_count=polygon.m_vertexCount;
						this.m_radius=polygon.m_radius;
					}
					break ;
				default :
					b2Settings.b2Assert(false);
				}
		}

		__proto.GetSupport=function(d){
			var bestIndex=0;
			var bestValue=this.m_vertices[0].x *d.x+this.m_vertices[0].y *d.y;
			for (var i=1;i < this.m_count;++i){
				var value=this.m_vertices[i].x *d.x+this.m_vertices[i].y *d.y;
				if (value > bestValue){
					bestIndex=i;
					bestValue=value;
				}
			}
			return bestIndex;
		}

		__proto.GetSupportVertex=function(d){
			var bestIndex=0;
			var bestValue=this.m_vertices[0].x *d.x+this.m_vertices[0].y *d.y;
			for (var i=1;i < this.m_count;++i){
				var value=this.m_vertices[i].x *d.x+this.m_vertices[i].y *d.y;
				if (value > bestValue){
					bestIndex=i;
					bestValue=value;
				}
			}
			return this.m_vertices[bestIndex];
		}

		__proto.GetVertexCount=function(){
			return this.m_count;
		}

		__proto.GetVertex=function(index){
			b2Settings.b2Assert(0 <=index && index < this.m_count);
			return this.m_vertices[index];
		}

		return b2DistanceProxy;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2dynamictree.as
	//class Box2D.Collision.b2DynamicTree
	var b2DynamicTree=(function(){
		function b2DynamicTree(){
			this.m_root=null;
			this.m_freeList=null;
			this.m_path=0;
			this.m_insertionCount=0;
			this.m_root=null;
			this.m_freeList=null;
			this.m_path=0;
			this.m_insertionCount=0;
		}

		__class(b2DynamicTree,'Box2D.Collision.b2DynamicTree',true);
		var __proto=b2DynamicTree.prototype;
		__proto.CreateProxy=function(aabb,userData){
			var node=this.AllocateNode();
			var extendX=/*Box2D.Common.b2Settings.b2_aabbExtension*/0.1;
			var extendY=/*Box2D.Common.b2Settings.b2_aabbExtension*/0.1;
			node.aabb.lowerBound.x=aabb.lowerBound.x-extendX;
			node.aabb.lowerBound.y=aabb.lowerBound.y-extendY;
			node.aabb.upperBound.x=aabb.upperBound.x+extendX;
			node.aabb.upperBound.y=aabb.upperBound.y+extendY;
			node.userData=userData;
			this.InsertLeaf(node);
			return node;
		}

		__proto.DestroyProxy=function(proxy){
			this.RemoveLeaf(proxy);
			this.FreeNode(proxy);
		}

		__proto.MoveProxy=function(proxy,aabb,displacement){
			b2Settings.b2Assert(proxy.IsLeaf());
			if (proxy.aabb.Contains(aabb)){
				return false;
			}
			this.RemoveLeaf(proxy);
			var extendX=/*Box2D.Common.b2Settings.b2_aabbExtension*/0.1+/*Box2D.Common.b2Settings.b2_aabbMultiplier*/2.0 *(displacement.x > 0?displacement.x:-displacement.x);
			var extendY=/*Box2D.Common.b2Settings.b2_aabbExtension*/0.1+/*Box2D.Common.b2Settings.b2_aabbMultiplier*/2.0 *(displacement.y > 0?displacement.y:-displacement.y);
			proxy.aabb.lowerBound.x=aabb.lowerBound.x-extendX;
			proxy.aabb.lowerBound.y=aabb.lowerBound.y-extendY;
			proxy.aabb.upperBound.x=aabb.upperBound.x+extendX;
			proxy.aabb.upperBound.y=aabb.upperBound.y+extendY;
			this.InsertLeaf(proxy);
			return true;
		}

		__proto.Rebalance=function(iterations){
			if (this.m_root==null)
				return;
			for (var i=0;i < iterations;i++){
				var node=this.m_root;
				var bit=0;
				while (node.IsLeaf()==false){
					node=(this.m_path >> bit)& 1 ? node.child2 :node.child1;
					bit=(bit+1)& 31;
				}
				++this.m_path;
				this.RemoveLeaf(node);
				this.InsertLeaf(node);
			}
		}

		__proto.GetFatAABB=function(proxy){
			return proxy.aabb;
		}

		__proto.GetUserData=function(proxy){
			return proxy.userData;
		}

		__proto.Query=function(callback,aabb){
			if (this.m_root==null)
				return;
			var stack=[];
			var count=0;
			stack[count++]=this.m_root;
			while (count > 0){
				var node=stack[--count];
				if (node.aabb.TestOverlap(aabb)){
					if (node.IsLeaf()){
						var proceed=callback(node);
						if (!proceed)
							return;
					}
					else{
						stack[count++]=node.child1;
						stack[count++]=node.child2;
					}
				}
			}
		}

		__proto.RayCast=function(callback,input){
			if (this.m_root==null)
				return;
			var p1=input.p1;
			var p2=input.p2;
			var r=b2Math.SubtractVV(p1,p2);
			r.Normalize();
			var v=b2Math.CrossFV(1.0,r);
			var abs_v=b2Math.AbsV(v);
			var maxFraction=input.maxFraction;
			var segmentAABB=new b2AABB();
			var tX=NaN;
			var tY=NaN;{
				tX=p1.x+maxFraction *(p2.x-p1.x);
				tY=p1.y+maxFraction *(p2.y-p1.y);
				segmentAABB.lowerBound.x=Math.min(p1.x,tX);
				segmentAABB.lowerBound.y=Math.min(p1.y,tY);
				segmentAABB.upperBound.x=Math.max(p1.x,tX);
				segmentAABB.upperBound.y=Math.max(p1.y,tY);
			};
			var stack=[];
			var count=0;
			stack[count++]=this.m_root;
			while (count > 0){
				var node=stack[--count];
				if (node.aabb.TestOverlap(segmentAABB)==false){
					continue ;
				};
				var c=node.aabb.GetCenter();
				var h=node.aabb.GetExtents();
				var separation=Math.abs(v.x *(p1.x-c.x)+v.y *(p1.y-c.y))
				-abs_v.x *h.x-abs_v.y *h.y;
				if (separation > 0.0)
					continue ;
				if (node.IsLeaf()){
					var subInput=new b2RayCastInput();
					subInput.p1=input.p1;
					subInput.p2=input.p2;
					subInput.maxFraction=maxFraction;
					var value=callback(subInput,node);
					if(value==0)return;
					if(value>0){
						maxFraction=value;
						tX=p1.x+maxFraction *(p2.x-p1.x);
						tY=p1.y+maxFraction *(p2.y-p1.y);
						segmentAABB.lowerBound.x=Math.min(p1.x,tX);
						segmentAABB.lowerBound.y=Math.min(p1.y,tY);
						segmentAABB.upperBound.x=Math.max(p1.x,tX);
						segmentAABB.upperBound.y=Math.max(p1.y,tY);
					}
				}
				else{
					stack[count++]=node.child1;
					stack[count++]=node.child2;
				}
			}
		}

		__proto.AllocateNode=function(){
			if (this.m_freeList){
				var node=this.m_freeList;
				this.m_freeList=node.parent;
				node.parent=null;
				node.child1=null;
				node.child2=null;
				return node;
			}
			return new b2DynamicTreeNode();
		}

		__proto.FreeNode=function(node){
			node.parent=this.m_freeList;
			this.m_freeList=node;
		}

		__proto.InsertLeaf=function(leaf){
			++this.m_insertionCount;
			if (this.m_root==null){
				this.m_root=leaf;
				this.m_root.parent=null;
				return;
			};
			var center=leaf.aabb.GetCenter();
			var sibling=this.m_root;
			if (sibling.IsLeaf()==false){
				do{
					var child1=sibling.child1;
					var child2=sibling.child2;
					var norm1=Math.abs((child1.aabb.lowerBound.x+child1.aabb.upperBound.x)/ 2-center.x)
					+Math.abs((child1.aabb.lowerBound.y+child1.aabb.upperBound.y)/ 2-center.y);
					var norm2=Math.abs((child2.aabb.lowerBound.x+child2.aabb.upperBound.x)/ 2-center.x)
					+Math.abs((child2.aabb.lowerBound.y+child2.aabb.upperBound.y)/ 2-center.y);
					if (norm1 < norm2){
						sibling=child1;
						}else {
						sibling=child2;
					}
				}
				while (sibling.IsLeaf()==false);
			};
			var node1=sibling.parent;
			var node2=this.AllocateNode();
			node2.parent=node1;
			node2.userData=null;
			node2.aabb.Combine(leaf.aabb,sibling.aabb);
			if (node1){
				if (sibling.parent.child1==sibling){
					node1.child1=node2;
				}
				else{
					node1.child2=node2;
				}
				node2.child1=sibling;
				node2.child2=leaf;
				sibling.parent=node2;
				leaf.parent=node2;
				do{
					if (node1.aabb.Contains(node2.aabb))
						break ;
					node1.aabb.Combine(node1.child1.aabb,node1.child2.aabb);
					node2=node1;
					node1=node1.parent;
				}
				while (node1);
			}
			else{
				node2.child1=sibling;
				node2.child2=leaf;
				sibling.parent=node2;
				leaf.parent=node2;
				this.m_root=node2;
			}
		}

		__proto.RemoveLeaf=function(leaf){
			if (leaf==this.m_root){
				this.m_root=null;
				return;
			};
			var node2=leaf.parent;
			var node1=node2.parent;
			var sibling;
			if (node2.child1==leaf){
				sibling=node2.child2;
			}
			else{
				sibling=node2.child1;
			}
			if (node1){
				if (node1.child1==node2){
					node1.child1=sibling;
				}
				else{
					node1.child2=sibling;
				}
				sibling.parent=node1;
				this.FreeNode(node2);
				while (node1){
					var oldAABB=node1.aabb;
					node1.aabb=b2AABB.Combine(node1.child1.aabb,node1.child2.aabb);
					if (oldAABB.Contains(node1.aabb))
						break ;
					node1=node1.parent;
				}
			}
			else{
				this.m_root=sibling;
				sibling.parent=null;
				this.FreeNode(node2);
			}
		}

		return b2DynamicTree;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2dynamictreebroadphase.as
	//class Box2D.Collision.b2DynamicTreeBroadPhase
	var b2DynamicTreeBroadPhase=(function(){
		function b2DynamicTreeBroadPhase(){
			this.m_proxyCount=0;
			this.m_pairCount=0;
			this.m_tree=new b2DynamicTree();
			this.m_moveBuffer=[];
			this.m_pairBuffer=[];
		}

		__class(b2DynamicTreeBroadPhase,'Box2D.Collision.b2DynamicTreeBroadPhase',true);
		var __proto=b2DynamicTreeBroadPhase.prototype;
		Laya.imps(__proto,{"Box2D.Collision.IBroadPhase":true})
		__proto.CreateProxy=function(aabb,userData){
			var proxy=this.m_tree.CreateProxy(aabb,userData);
			++this.m_proxyCount;
			this.BufferMove(proxy);
			return proxy;
		}

		__proto.DestroyProxy=function(proxy){
			this.UnBufferMove(proxy);
			--this.m_proxyCount;
			this.m_tree.DestroyProxy(proxy);
		}

		__proto.MoveProxy=function(proxy,aabb,displacement){
			var buffer=this.m_tree.MoveProxy(proxy,aabb,displacement);
			if (buffer){
				this.BufferMove(proxy);
			}
		}

		__proto.TestOverlap=function(proxyA,proxyB){
			var aabbA=this.m_tree.GetFatAABB(proxyA);
			var aabbB=this.m_tree.GetFatAABB(proxyB);
			return aabbA.TestOverlap(aabbB);
		}

		__proto.GetUserData=function(proxy){
			return this.m_tree.GetUserData(proxy);
		}

		__proto.GetFatAABB=function(proxy){
			return this.m_tree.GetFatAABB(proxy);
		}

		__proto.GetProxyCount=function(){
			return this.m_proxyCount;
		}

		__proto.UpdatePairs=function(callback){
			var _$this=this;
			this.m_pairCount=0;
			var queryProxy;
			/*for each*/for(var $each_queryProxy in this.m_moveBuffer){
				queryProxy=this.m_moveBuffer[$each_queryProxy];
				function QueryCallback (proxy){
					if (proxy==queryProxy)
						return true;
					if (_$this.m_pairCount==_$this.m_pairBuffer.length){
						_$this.m_pairBuffer[_$this.m_pairCount]=new b2DynamicTreePair();
					};
					var pair=_$this.m_pairBuffer[_$this.m_pairCount];
					pair.proxyA=proxy < queryProxy?proxy:queryProxy;
					pair.proxyB=proxy >=queryProxy?proxy:queryProxy;
					++_$this.m_pairCount;
					return true;
				};
				var fatAABB=this.m_tree.GetFatAABB(queryProxy);
				this.m_tree.Query(QueryCallback,fatAABB);
			}
			this.m_moveBuffer.length=0;
			for (var i=0;i < this.m_pairCount;){
				var primaryPair=this.m_pairBuffer[i];
				var userDataA=this.m_tree.GetUserData(primaryPair.proxyA);
				var userDataB=this.m_tree.GetUserData(primaryPair.proxyB);
				callback(userDataA,userDataB);
				++i;
				while (i < this.m_pairCount){
					var pair=this.m_pairBuffer[i];
					if (pair.proxyA !=primaryPair.proxyA || pair.proxyB !=primaryPair.proxyB){
						break ;
					}
					++i;
				}
			}
		}

		__proto.Query=function(callback,aabb){
			this.m_tree.Query(callback,aabb);
		}

		__proto.RayCast=function(callback,input){
			this.m_tree.RayCast(callback,input);
		}

		__proto.Validate=function(){}
		__proto.Rebalance=function(iterations){
			this.m_tree.Rebalance(iterations);
		}

		__proto.BufferMove=function(proxy){
			this.m_moveBuffer[this.m_moveBuffer.length]=proxy;
		}

		__proto.UnBufferMove=function(proxy){
			var i=this.m_moveBuffer.indexOf(proxy);
			this.m_moveBuffer.splice(i,1);
		}

		__proto.ComparePairs=function(pair1,pair2){
			return 0;
		}

		return b2DynamicTreeBroadPhase;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2dynamictreenode.as
	//class Box2D.Collision.b2DynamicTreeNode
	var b2DynamicTreeNode=(function(){
		function b2DynamicTreeNode(){
			this.userData=null;
			this.parent=null;
			this.child1=null;
			this.child2=null;
			this.aabb=new b2AABB();
		}

		__class(b2DynamicTreeNode,'Box2D.Collision.b2DynamicTreeNode',true);
		var __proto=b2DynamicTreeNode.prototype;
		__proto.IsLeaf=function(){
			return this.child1==null;
		}

		return b2DynamicTreeNode;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2dynamictreepair.as
	//class Box2D.Collision.b2DynamicTreePair
	var b2DynamicTreePair=(function(){
		function b2DynamicTreePair(){
			this.proxyA=null;
			this.proxyB=null;
		}

		__class(b2DynamicTreePair,'Box2D.Collision.b2DynamicTreePair',true);
		return b2DynamicTreePair;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2manifold.as
	;
	//class Box2D.Collision.b2Manifold
	var b2Manifold=(function(){
		function b2Manifold(){
			this.m_points=null;
			this.m_localPlaneNormal=null;
			this.m_localPoint=null;
			this.m_type=0;
			this.m_pointCount=0;
			this.m_points=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				this.m_points[i]=new b2ManifoldPoint();
			}
			this.m_localPlaneNormal=new b2Vec2();
			this.m_localPoint=new b2Vec2();
		}

		__class(b2Manifold,'Box2D.Collision.b2Manifold',true);
		var __proto=b2Manifold.prototype;
		__proto.Reset=function(){
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				(this.m_points [i]).Reset();
			}
			this.m_localPlaneNormal.SetZero();
			this.m_localPoint.SetZero();
			this.m_type=0;
			this.m_pointCount=0;
		}

		__proto.Set=function(m){
			this.m_pointCount=m.m_pointCount;
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				(this.m_points [i]).Set(m.m_points[i]);
			}
			this.m_localPlaneNormal.SetV(m.m_localPlaneNormal);
			this.m_localPoint.SetV(m.m_localPoint);
			this.m_type=m.m_type;
		}

		__proto.Copy=function(){
			var copy=new b2Manifold();
			copy.Set(this);
			return copy;
		}

		b2Manifold.e_circles=0x0001;
		b2Manifold.e_faceA=0x0002;
		b2Manifold.e_faceB=0x0004;
		return b2Manifold;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2manifoldpoint.as
	;
	//class Box2D.Collision.b2ManifoldPoint
	var b2ManifoldPoint=(function(){
		function b2ManifoldPoint(){
			this.m_normalImpulse=NaN;
			this.m_tangentImpulse=NaN;
			this.m_localPoint=new b2Vec2();
			this.m_id=new b2ContactID();
			this.Reset();
		}

		__class(b2ManifoldPoint,'Box2D.Collision.b2ManifoldPoint',true);
		var __proto=b2ManifoldPoint.prototype;
		__proto.Reset=function(){
			this.m_localPoint.SetZero();
			this.m_normalImpulse=0.0;
			this.m_tangentImpulse=0.0;
			this.m_id.key=0;
		}

		__proto.Set=function(m){
			this.m_localPoint.SetV(m.m_localPoint);
			this.m_normalImpulse=m.m_normalImpulse;
			this.m_tangentImpulse=m.m_tangentImpulse;
			this.m_id.Set(m.m_id);
		}

		return b2ManifoldPoint;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2obb.as
	;
	//class Box2D.Collision.b2OBB
	var b2OBB=(function(){
		function b2OBB(){
			this.R=new b2Mat22();
			this.center=new b2Vec2();
			this.extents=new b2Vec2();
		}

		__class(b2OBB,'Box2D.Collision.b2OBB',true);
		return b2OBB;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2pair.as
	;
	//class Box2D.Collision.b2Pair
	var b2Pair=(function(){
		function b2Pair(){
			this.userData=null;
			this.proxy1=null;
			this.proxy2=null;
			this.next=null;
			this.status=0;
		}

		__class(b2Pair,'Box2D.Collision.b2Pair',true);
		var __proto=b2Pair.prototype;
		__proto.SetBuffered=function(){this.status |=b2Pair.e_pairBuffered;}
		__proto.ClearBuffered=function(){this.status &=~b2Pair.e_pairBuffered;}
		__proto.IsBuffered=function(){return (this.status & b2Pair.e_pairBuffered)==b2Pair.e_pairBuffered;}
		__proto.SetRemoved=function(){this.status |=b2Pair.e_pairRemoved;}
		__proto.ClearRemoved=function(){this.status &=~b2Pair.e_pairRemoved;}
		__proto.IsRemoved=function(){return (this.status & b2Pair.e_pairRemoved)==b2Pair.e_pairRemoved;}
		__proto.SetFinal=function(){this.status |=b2Pair.e_pairFinal;}
		__proto.IsFinal=function(){return (this.status & b2Pair.e_pairFinal)==b2Pair.e_pairFinal;}
		b2Pair.e_pairBuffered=0x0001;
		b2Pair.e_pairRemoved=0x0002;
		b2Pair.e_pairFinal=0x0004;
		__static(b2Pair,
		['b2_nullProxy',function(){return this.b2_nullProxy=/*Box2D.Common.b2Settings.USHRT_MAX*/0x0000ffff;}
		]);
		return b2Pair;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2pairmanager.as
	;
	//class Box2D.Collision.b2PairManager
	var b2PairManager=(function(){
		function b2PairManager(){
			this.m_broadPhase=null;
			this.m_pairs=null;
			this.m_freePair=null;
			this.m_pairCount=0;
			this.m_pairBuffer=null;
			this.m_pairBufferCount=0;
			this.m_pairs=[];
			this.m_pairBuffer=[];
			this.m_pairCount=0;
			this.m_pairBufferCount=0;
			this.m_freePair=null;
		}

		__class(b2PairManager,'Box2D.Collision.b2PairManager',true);
		var __proto=b2PairManager.prototype;
		__proto.Initialize=function(broadPhase){
			this.m_broadPhase=broadPhase;
		}

		__proto.AddBufferedPair=function(proxy1,proxy2){
			var pair=this.AddPair(proxy1,proxy2);
			if (pair.IsBuffered()==false){
				pair.SetBuffered();
				this.m_pairBuffer[this.m_pairBufferCount]=pair;
				++this.m_pairBufferCount;
			}
			pair.ClearRemoved();
			if (b2BroadPhase.s_validate){
				this.ValidateBuffer();
			}
		}

		__proto.RemoveBufferedPair=function(proxy1,proxy2){
			var pair=this.Find(proxy1,proxy2);
			if (pair==null){
				return;
			}
			if (pair.IsBuffered()==false){
				pair.SetBuffered();
				this.m_pairBuffer[this.m_pairBufferCount]=pair;
				++this.m_pairBufferCount;
			}
			pair.SetRemoved();
			if (b2BroadPhase.s_validate){
				this.ValidateBuffer();
			}
		}

		__proto.Commit=function(callback){
			var i=0;
			var removeCount=0;
			for (i=0;i < this.m_pairBufferCount;++i){
				var pair=this.m_pairBuffer[i];
				pair.ClearBuffered();
				var proxy1=pair.proxy1;
				var proxy2=pair.proxy2;
				if (pair.IsRemoved()){
				}
				else{
					if (pair.IsFinal()==false){
						callback(proxy1.userData,proxy2.userData);
					}
				}
			}
			this.m_pairBufferCount=0;
			if (b2BroadPhase.s_validate){
				this.ValidateTable();
			}
		}

		__proto.AddPair=function(proxy1,proxy2){
			var pair=proxy1.pairs[proxy2];
			if (pair !=null)
				return pair;
			if (this.m_freePair==null){
				this.m_freePair=new b2Pair();
				this.m_pairs.push(this.m_freePair);
			}
			pair=this.m_freePair;
			this.m_freePair=pair.next;
			pair.proxy1=proxy1;
			pair.proxy2=proxy2;
			pair.status=0;
			pair.userData=null;
			pair.next=null;
			proxy1.pairs[proxy2]=pair;
			proxy2.pairs[proxy1]=pair;
			++this.m_pairCount;
			return pair;
		}

		__proto.RemovePair=function(proxy1,proxy2){
			var pair=proxy1.pairs[proxy2];
			if (pair==null){
				return null;
			};
			var userData=pair.userData;
			delete proxy1.pairs[proxy2];
			delete proxy2.pairs[proxy1];
			pair.next=this.m_freePair;
			pair.proxy1=null;
			pair.proxy2=null;
			pair.userData=null;
			pair.status=0;
			this.m_freePair=pair;
			--this.m_pairCount;
			return userData;
		}

		__proto.Find=function(proxy1,proxy2){
			return proxy1.pairs[proxy2];
		}

		__proto.ValidateBuffer=function(){}
		__proto.ValidateTable=function(){}
		return b2PairManager;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2point.as
	;
	//class Box2D.Collision.b2Point
	var b2Point=(function(){
		function b2Point(){
			this.p=new b2Vec2();
		}

		__class(b2Point,'Box2D.Collision.b2Point',true);
		var __proto=b2Point.prototype;
		__proto.Support=function(xf,vX,vY){
			return this.p;
		}

		__proto.GetFirstVertex=function(xf){
			return this.p;
		}

		return b2Point;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2proxy.as
	;
	//class Box2D.Collision.b2Proxy
	var b2Proxy=(function(){
		function b2Proxy(){
			this.overlapCount=0;
			this.timeStamp=0;
			this.next=null;
			this.userData=null;
			this.lowerBounds=__newvec(2,0);
			this.upperBounds=__newvec(2,0);
			this.pairs=new Dictionary();
		}

		__class(b2Proxy,'Box2D.Collision.b2Proxy',true);
		var __proto=b2Proxy.prototype;
		__proto.IsValid=function(){return this.overlapCount !=b2BroadPhase.b2_invalid;}
		return b2Proxy;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2raycastinput.as
	//class Box2D.Collision.b2RayCastInput
	var b2RayCastInput=(function(){
		function b2RayCastInput(p1,p2,maxFraction){
			this.maxFraction=NaN;
			this.p1=new b2Vec2();
			this.p2=new b2Vec2();
			(maxFraction===void 0)&& (maxFraction=1);
			if (p1)
				this.p1.SetV(p1);
			if (p2)
				this.p2.SetV(p2);
			this.maxFraction=maxFraction;
		}

		__class(b2RayCastInput,'Box2D.Collision.b2RayCastInput',true);
		return b2RayCastInput;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2raycastoutput.as
	//class Box2D.Collision.b2RayCastOutput
	var b2RayCastOutput=(function(){
		function b2RayCastOutput(){
			this.fraction=NaN;
			this.normal=new b2Vec2();
		}

		__class(b2RayCastOutput,'Box2D.Collision.b2RayCastOutput',true);
		return b2RayCastOutput;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2segment.as
	;
	//class Box2D.Collision.b2Segment
	var b2Segment=(function(){
		function b2Segment(){
			this.p1=new b2Vec2();
			this.p2=new b2Vec2();
		}

		__class(b2Segment,'Box2D.Collision.b2Segment',true);
		var __proto=b2Segment.prototype;
		__proto.TestSegment=function(lambda,normal,segment,maxLambda){
			var s=segment.p1;
			var rX=segment.p2.x-s.x;
			var rY=segment.p2.y-s.y;
			var dX=this.p2.x-this.p1.x;
			var dY=this.p2.y-this.p1.y;
			var nX=dY;
			var nY=-dX;
			var k_slop=100.0 *Number.MIN_VALUE;
			var denom=-(rX*nX+rY*nY);
			if (denom > k_slop){
				var bX=s.x-this.p1.x;
				var bY=s.y-this.p1.y;
				var a=(bX*nX+bY*nY);
				if (0.0 <=a && a <=maxLambda *denom){
					var mu2=-rX *bY+rY *bX;
					if (-k_slop *denom <=mu2 && mu2 <=denom *(1.0+k_slop)){
						a /=denom;
						var nLen=Math.sqrt(nX*nX+nY*nY);
						nX /=nLen;
						nY /=nLen;
						lambda[0]=a;
						normal.Set(nX,nY);
						return true;
					}
				}
			}
			return false;
		}

		__proto.Extend=function(aabb){
			this.ExtendForward(aabb);
			this.ExtendBackward(aabb);
		}

		__proto.ExtendForward=function(aabb){
			var dX=this.p2.x-this.p1.x;
			var dY=this.p2.y-this.p1.y;
			var lambda=Math.min(dX>0?(aabb.upperBound.x-this.p1.x)/dX:dX0?(aabb.lowerBound.x-this.p1.x)/dX:Number.POSITIVE_INFINITY,
			dY>0?(aabb.upperBound.y-this.p1.y)/dY:dY0?(aabb.lowerBound.y-this.p1.y)/dY:Number.POSITIVE_INFINITY);
			this.p2.x=this.p1.x+dX *lambda;
			this.p2.y=this.p1.y+dY *lambda;
		}

		__proto.ExtendBackward=function(aabb){
			var dX=-this.p2.x+this.p1.x;
			var dY=-this.p2.y+this.p1.y;
			var lambda=Math.min(dX>0?(aabb.upperBound.x-this.p2.x)/dX:dX0?(aabb.lowerBound.x-this.p2.x)/dX:Number.POSITIVE_INFINITY,
			dY>0?(aabb.upperBound.y-this.p2.y)/dY:dY0?(aabb.lowerBound.y-this.p2.y)/dY:Number.POSITIVE_INFINITY);
			this.p1.x=this.p2.x+dX *lambda;
			this.p1.y=this.p2.y+dY *lambda;
		}

		return b2Segment;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2separationfunction.as
	//class Box2D.Collision.b2SeparationFunction
	var b2SeparationFunction=(function(){
		function b2SeparationFunction(){
			this.m_proxyA=null;
			this.m_proxyB=null;
			this.m_type=0;
			this.m_localPoint=new b2Vec2();
			this.m_axis=new b2Vec2();
		}

		__class(b2SeparationFunction,'Box2D.Collision.b2SeparationFunction',true);
		var __proto=b2SeparationFunction.prototype;
		__proto.Initialize=function(cache,proxyA,transformA,proxyB,transformB){
			this.m_proxyA=proxyA;
			this.m_proxyB=proxyB;
			var count=cache.count;
			b2Settings.b2Assert(0 < count && count < 3);
			var localPointA;
			var localPointA1;
			var localPointA2;
			var localPointB;
			var localPointB1;
			var localPointB2;
			var pointAX=NaN;
			var pointAY=NaN;
			var pointBX=NaN;
			var pointBY=NaN;
			var normalX=NaN;
			var normalY=NaN;
			var tMat;
			var tVec;
			var s=NaN;
			var sgn=NaN;
			if (count==1){
				this.m_type=0x01;
				localPointA=this.m_proxyA.GetVertex(cache.indexA[0]);
				localPointB=this.m_proxyB.GetVertex(cache.indexB[0]);
				tVec=localPointA;
				tMat=transformA.R;
				pointAX=transformA.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y)
				pointAY=transformA.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y)
				tVec=localPointB;
				tMat=transformB.R;
				pointBX=transformB.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y)
				pointBY=transformB.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y)
				this.m_axis.x=pointBX-pointAX;
				this.m_axis.y=pointBY-pointAY;
				this.m_axis.Normalize();
			}
			else if (cache.indexB[0]==cache.indexB[1]){
				this.m_type=0x02;
				localPointA1=this.m_proxyA.GetVertex(cache.indexA[0]);
				localPointA2=this.m_proxyA.GetVertex(cache.indexA[1]);
				localPointB=this.m_proxyB.GetVertex(cache.indexB[0]);
				this.m_localPoint.x=0.5 *(localPointA1.x+localPointA2.x);
				this.m_localPoint.y=0.5 *(localPointA1.y+localPointA2.y);
				this.m_axis=b2Math.CrossVF(b2Math.SubtractVV(localPointA2,localPointA1),1.0);
				this.m_axis.Normalize();
				tVec=this.m_axis;
				tMat=transformA.R;
				normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
				normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
				tVec=this.m_localPoint;
				tMat=transformA.R;
				pointAX=transformA.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				pointAY=transformA.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				tVec=localPointB;
				tMat=transformB.R;
				pointBX=transformB.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				pointBY=transformB.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				s=(pointBX-pointAX)*normalX+(pointBY-pointAY)*normalY;
				if (s < 0.0){
					this.m_axis.NegativeSelf();
				}
			}
			else if (cache.indexA[0]==cache.indexA[0]){
				this.m_type=0x04;
				localPointB1=this.m_proxyB.GetVertex(cache.indexB[0]);
				localPointB2=this.m_proxyB.GetVertex(cache.indexB[1]);
				localPointA=this.m_proxyA.GetVertex(cache.indexA[0]);
				this.m_localPoint.x=0.5 *(localPointB1.x+localPointB2.x);
				this.m_localPoint.y=0.5 *(localPointB1.y+localPointB2.y);
				this.m_axis=b2Math.CrossVF(b2Math.SubtractVV(localPointB2,localPointB1),1.0);
				this.m_axis.Normalize();
				tVec=this.m_axis;
				tMat=transformB.R;
				normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
				normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
				tVec=this.m_localPoint;
				tMat=transformB.R;
				pointBX=transformB.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				pointBY=transformB.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				tVec=localPointA;
				tMat=transformA.R;
				pointAX=transformA.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				pointAY=transformA.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				s=(pointAX-pointBX)*normalX+(pointAY-pointBY)*normalY;
				if (s < 0.0){
					this.m_axis.NegativeSelf();
				}
			}
			else{
				localPointA1=this.m_proxyA.GetVertex(cache.indexA[0]);
				localPointA2=this.m_proxyA.GetVertex(cache.indexA[1]);
				localPointB1=this.m_proxyB.GetVertex(cache.indexB[0]);
				localPointB2=this.m_proxyB.GetVertex(cache.indexB[1]);
				var pA=b2Math.MulX(transformA,localPointA);
				var dA=b2Math.MulMV(transformA.R,b2Math.SubtractVV(localPointA2,localPointA1));
				var pB=b2Math.MulX(transformB,localPointB);
				var dB=b2Math.MulMV(transformB.R,b2Math.SubtractVV(localPointB2,localPointB1));
				var a=dA.x *dA.x+dA.y *dA.y;
				var e=dB.x *dB.x+dB.y *dB.y;
				var r=b2Math.SubtractVV(dB,dA);
				var c=dA.x *r.x+dA.y *r.y;
				var f=dB.x *r.x+dB.y *r.y;
				var b=dA.x *dB.x+dA.y *dB.y;
				var denom=a *e-b *b;
				s=0.0;
				if (denom !=0.0){
					s=b2Math.Clamp((b *f-c *e)/ denom,0.0,1.0);
				};
				var t=(b *s+f)/ e;
				if (t < 0.0){
					t=0.0;
					s=b2Math.Clamp((b-c)/ a,0.0,1.0);
				}
				localPointA=new b2Vec2();
				localPointA.x=localPointA1.x+s *(localPointA2.x-localPointA1.x);
				localPointA.y=localPointA1.y+s *(localPointA2.y-localPointA1.y);
				localPointB=new b2Vec2();
				localPointB.x=localPointB1.x+s *(localPointB2.x-localPointB1.x);
				localPointB.y=localPointB1.y+s *(localPointB2.y-localPointB1.y);
				if (s==0.0 || s==1.0){
					this.m_type=0x04;
					this.m_axis=b2Math.CrossVF(b2Math.SubtractVV(localPointB2,localPointB1),1.0);
					this.m_axis.Normalize();
					this.m_localPoint=localPointB;
					tVec=this.m_axis;
					tMat=transformB.R;
					normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
					normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
					tVec=this.m_localPoint;
					tMat=transformB.R;
					pointBX=transformB.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
					pointBY=transformB.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
					tVec=localPointA;
					tMat=transformA.R;
					pointAX=transformA.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
					pointAY=transformA.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
					sgn=(pointAX-pointBX)*normalX+(pointAY-pointBY)*normalY;
					if (s < 0.0){
						this.m_axis.NegativeSelf();
					}
				}
				else{
					this.m_type=0x02;
					this.m_axis=b2Math.CrossVF(b2Math.SubtractVV(localPointA2,localPointA1),1.0);
					this.m_localPoint=localPointA;
					tVec=this.m_axis;
					tMat=transformA.R;
					normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
					normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
					tVec=this.m_localPoint;
					tMat=transformA.R;
					pointAX=transformA.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
					pointAY=transformA.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
					tVec=localPointB;
					tMat=transformB.R;
					pointBX=transformB.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
					pointBY=transformB.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
					sgn=(pointBX-pointAX)*normalX+(pointBY-pointAY)*normalY;
					if (s < 0.0){
						this.m_axis.NegativeSelf();
					}
				}
			}
		}

		__proto.Evaluate=function(transformA,transformB){
			var axisA;
			var axisB;
			var localPointA;
			var localPointB;
			var pointA;
			var pointB;
			var seperation=NaN;
			var normal;
			switch(this.m_type){
				case 0x01:{
						axisA=b2Math.MulTMV(transformA.R,this.m_axis);
						axisB=b2Math.MulTMV(transformB.R,this.m_axis.GetNegative());
						localPointA=this.m_proxyA.GetSupportVertex(axisA);
						localPointB=this.m_proxyB.GetSupportVertex(axisB);
						pointA=b2Math.MulX(transformA,localPointA);
						pointB=b2Math.MulX(transformB,localPointB);
						seperation=(pointB.x-pointA.x)*this.m_axis.x+(pointB.y-pointA.y)*this.m_axis.y;
						return seperation;
					}
				case 0x02:{
						normal=b2Math.MulMV(transformA.R,this.m_axis);
						pointA=b2Math.MulX(transformA,this.m_localPoint);
						axisB=b2Math.MulTMV(transformB.R,normal.GetNegative());
						localPointB=this.m_proxyB.GetSupportVertex(axisB);
						pointB=b2Math.MulX(transformB,localPointB);
						seperation=(pointB.x-pointA.x)*normal.x+(pointB.y-pointA.y)*normal.y;
						return seperation;
					}
				case 0x04:{
						normal=b2Math.MulMV(transformB.R,this.m_axis);
						pointB=b2Math.MulX(transformB,this.m_localPoint);
						axisA=b2Math.MulTMV(transformA.R,normal.GetNegative());
						localPointA=this.m_proxyA.GetSupportVertex(axisA);
						pointA=b2Math.MulX(transformA,localPointA);
						seperation=(pointA.x-pointB.x)*normal.x+(pointA.y-pointB.y)*normal.y;
						return seperation;
					}
				default :
					b2Settings.b2Assert(false);
					return 0.0;
				}
		}

		b2SeparationFunction.e_points=0x01;
		b2SeparationFunction.e_faceA=0x02;
		b2SeparationFunction.e_faceB=0x04;
		return b2SeparationFunction;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2simplex.as
	//class Box2D.Collision.b2Simplex
	var b2Simplex=(function(){
		function b2Simplex(){
			this.m_count=0;
			this.m_v1=new b2SimplexVertex();
			this.m_v2=new b2SimplexVertex();
			this.m_v3=new b2SimplexVertex();
			this.m_vertices=__newvec(3,null);
			this.m_vertices[0]=this.m_v1;
			this.m_vertices[1]=this.m_v2;
			this.m_vertices[2]=this.m_v3;
		}

		__class(b2Simplex,'Box2D.Collision.b2Simplex',true);
		var __proto=b2Simplex.prototype;
		__proto.ReadCache=function(cache,proxyA,transformA,proxyB,transformB){
			b2Settings.b2Assert(0 <=cache.count && cache.count <=3);
			var wALocal;
			var wBLocal;
			this.m_count=cache.count;
			var vertices=this.m_vertices;
			for (var i=0;i < this.m_count;i++){
				var v=vertices[i];
				v.indexA=cache.indexA[i];
				v.indexB=cache.indexB[i];
				wALocal=proxyA.GetVertex(v.indexA);
				wBLocal=proxyB.GetVertex(v.indexB);
				v.wA=b2Math.MulX(transformA,wALocal);
				v.wB=b2Math.MulX(transformB,wBLocal);
				v.w=b2Math.SubtractVV(v.wB,v.wA);
				v.a=0;
			}
			if (this.m_count > 1){
				var metric1=cache.metric;
				var metric2=this.GetMetric();
				if (metric2 <.5 *metric1 || 2.0 *metric1 < metric2 || metric2 < Number.MIN_VALUE){
					this.m_count=0;
				}
			}
			if (this.m_count==0){
				v=vertices[0];
				v.indexA=0;
				v.indexB=0;
				wALocal=proxyA.GetVertex(0);
				wBLocal=proxyB.GetVertex(0);
				v.wA=b2Math.MulX(transformA,wALocal);
				v.wB=b2Math.MulX(transformB,wBLocal);
				v.w=b2Math.SubtractVV(v.wB,v.wA);
				this.m_count=1;
			}
		}

		__proto.WriteCache=function(cache){
			cache.metric=this.GetMetric();
			cache.count=uint(this.m_count);
			var vertices=this.m_vertices;
			for (var i=0;i < this.m_count;i++){
				cache.indexA[i]=uint(vertices[i].indexA);
				cache.indexB[i]=uint(vertices[i].indexB);
			}
		}

		__proto.GetSearchDirection=function(){
			switch(this.m_count){
				case 1:
					return this.m_v1.w.GetNegative();
				case 2:{
						var e12=b2Math.SubtractVV(this.m_v2.w,this.m_v1.w);
						var sgn=b2Math.CrossVV(e12,this.m_v1.w.GetNegative());
						if (sgn > 0.0){
							return b2Math.CrossFV(1.0,e12);
							}else {
							return b2Math.CrossVF(e12,1.0);
						}
					}
				default :
					b2Settings.b2Assert(false);
					return new b2Vec2();
				}
		}

		__proto.GetClosestPoint=function(){
			switch(this.m_count){
				case 0:
					b2Settings.b2Assert(false);
					return new b2Vec2();
				case 1:
					return this.m_v1.w;
				case 2:
					return new b2Vec2(
					this.m_v1.a *this.m_v1.w.x+this.m_v2.a *this.m_v2.w.x,
					this.m_v1.a *this.m_v1.w.y+this.m_v2.a *this.m_v2.w.y);
				default :
					b2Settings.b2Assert(false);
					return new b2Vec2();
				}
		}

		__proto.GetWitnessPoints=function(pA,pB){
			switch(this.m_count){
				case 0:
					b2Settings.b2Assert(false);
					break ;
				case 1:
					pA.SetV(this.m_v1.wA);
					pB.SetV(this.m_v1.wB);
					break ;
				case 2:
					pA.x=this.m_v1.a *this.m_v1.wA.x+this.m_v2.a *this.m_v2.wA.x;
					pA.y=this.m_v1.a *this.m_v1.wA.y+this.m_v2.a *this.m_v2.wA.y;
					pB.x=this.m_v1.a *this.m_v1.wB.x+this.m_v2.a *this.m_v2.wB.x;
					pB.y=this.m_v1.a *this.m_v1.wB.y+this.m_v2.a *this.m_v2.wB.y;
					break ;
				case 3:
					pB.x=pA.x=this.m_v1.a *this.m_v1.wA.x+this.m_v2.a *this.m_v2.wA.x+this.m_v3.a *this.m_v3.wA.x;
					pB.y=pA.y=this.m_v1.a *this.m_v1.wA.y+this.m_v2.a *this.m_v2.wA.y+this.m_v3.a *this.m_v3.wA.y;
					break ;
				default :
					b2Settings.b2Assert(false);
					break ;
				}
		}

		__proto.GetMetric=function(){
			switch (this.m_count){
				case 0:
					b2Settings.b2Assert(false);
					return 0.0;
				case 1:
					return 0.0;
				case 2:
					return b2Math.SubtractVV(this.m_v1.w,this.m_v2.w).Length();
				case 3:
					return b2Math.CrossVV(b2Math.SubtractVV(this.m_v2.w,this.m_v1.w),b2Math.SubtractVV(this.m_v3.w,this.m_v1.w));
				default :
					b2Settings.b2Assert(false);
					return 0.0;
				}
		}

		__proto.Solve2=function(){
			var w1=this.m_v1.w;
			var w2=this.m_v2.w;
			var e12=b2Math.SubtractVV(w2,w1);
			var d12_2=-(w1.x *e12.x+w1.y *e12.y);
			if (d12_2 <=0.0){
				this.m_v1.a=1.0;
				this.m_count=1;
				return;
			};
			var d12_1=(w2.x *e12.x+w2.y *e12.y);
			if (d12_1 <=0.0){
				this.m_v2.a=1.0;
				this.m_count=1;
				this.m_v1.Set(this.m_v2);
				return;
			};
			var inv_d12=1.0 / (d12_1+d12_2);
			this.m_v1.a=d12_1 *inv_d12;
			this.m_v2.a=d12_2 *inv_d12;
			this.m_count=2;
		}

		__proto.Solve3=function(){
			var w1=this.m_v1.w;
			var w2=this.m_v2.w;
			var w3=this.m_v3.w;
			var e12=b2Math.SubtractVV(w2,w1);
			var w1e12=b2Math.Dot(w1,e12);
			var w2e12=b2Math.Dot(w2,e12);
			var d12_1=w2e12;
			var d12_2=-w1e12;
			var e13=b2Math.SubtractVV(w3,w1);
			var w1e13=b2Math.Dot(w1,e13);
			var w3e13=b2Math.Dot(w3,e13);
			var d13_1=w3e13;
			var d13_2=-w1e13;
			var e23=b2Math.SubtractVV(w3,w2);
			var w2e23=b2Math.Dot(w2,e23);
			var w3e23=b2Math.Dot(w3,e23);
			var d23_1=w3e23;
			var d23_2=-w2e23;
			var n123=b2Math.CrossVV(e12,e13);
			var d123_1=n123 *b2Math.CrossVV(w2,w3);
			var d123_2=n123 *b2Math.CrossVV(w3,w1);
			var d123_3=n123 *b2Math.CrossVV(w1,w2);
			if (d12_2 <=0.0 && d13_2 <=0.0){
				this.m_v1.a=1.0;
				this.m_count=1;
				return;
			}
			if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <=0.0){
				var inv_d12=1.0 / (d12_1+d12_2);
				this.m_v1.a=d12_1 *inv_d12;
				this.m_v2.a=d12_2 *inv_d12;
				this.m_count=2;
				return;
			}
			if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <=0.0){
				var inv_d13=1.0 / (d13_1+d13_2);
				this.m_v1.a=d13_1 *inv_d13;
				this.m_v3.a=d13_2 *inv_d13;
				this.m_count=2;
				this.m_v2.Set(this.m_v3);
				return;
			}
			if (d12_1 <=0.0 && d23_2 <=0.0){
				this.m_v2.a=1.0;
				this.m_count=1;
				this.m_v1.Set(this.m_v2);
				return;
			}
			if (d13_1 <=0.0 && d23_1 <=0.0){
				this.m_v3.a=1.0;
				this.m_count=1;
				this.m_v1.Set(this.m_v3);
				return;
			}
			if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <=0.0){
				var inv_d23=1.0 / (d23_1+d23_2);
				this.m_v2.a=d23_1 *inv_d23;
				this.m_v3.a=d23_2 *inv_d23;
				this.m_count=2;
				this.m_v1.Set(this.m_v3);
				return;
			};
			var inv_d123=1.0 / (d123_1+d123_2+d123_3);
			this.m_v1.a=d123_1 *inv_d123;
			this.m_v2.a=d123_2 *inv_d123;
			this.m_v3.a=d123_3 *inv_d123;
			this.m_count=3;
		}

		return b2Simplex;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2simplexcache.as
	//class Box2D.Collision.b2SimplexCache
	var b2SimplexCache=(function(){
		function b2SimplexCache(){
			this.metric=NaN;
			this.count=0;
			this.indexA=__newvec(3,0);
			this.indexB=__newvec(3,0);
		}

		__class(b2SimplexCache,'Box2D.Collision.b2SimplexCache',true);
		return b2SimplexCache;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2simplexvertex.as
	//class Box2D.Collision.b2SimplexVertex
	var b2SimplexVertex=(function(){
		function b2SimplexVertex(){
			this.wA=null;
			this.wB=null;
			this.w=null;
			this.a=NaN;
			this.indexA=0;
			this.indexB=0;
		}

		__class(b2SimplexVertex,'Box2D.Collision.b2SimplexVertex',true);
		var __proto=b2SimplexVertex.prototype;
		__proto.Set=function(other){
			this.wA.SetV(other.wA);
			this.wB.SetV(other.wB);
			this.w.SetV(other.w);
			this.a=other.a;
			this.indexA=other.indexA;
			this.indexB=other.indexB;
		}

		return b2SimplexVertex;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2timeofimpact.as
	;
	//class Box2D.Collision.b2TimeOfImpact
	var b2TimeOfImpact=(function(){
		function b2TimeOfImpact(){};
		__class(b2TimeOfImpact,'Box2D.Collision.b2TimeOfImpact',true);
		b2TimeOfImpact.TimeOfImpact=function(input){
			++b2TimeOfImpact.b2_toiCalls;
			var proxyA=input.proxyA;
			var proxyB=input.proxyB;
			var sweepA=input.sweepA;
			var sweepB=input.sweepB;
			b2Settings.b2Assert(sweepA.t0==sweepB.t0);
			b2Settings.b2Assert(1.0-sweepA.t0 > Number.MIN_VALUE);
			var radius=proxyA.m_radius+proxyB.m_radius;
			var tolerance=input.tolerance;
			var alpha=0.0;
			var k_maxIterations=1000;
			var iter=0;
			var target=0.0;
			b2TimeOfImpact.s_cache.count=0;
			b2TimeOfImpact.s_distanceInput.useRadii=false;
			for (;;){
				sweepA.GetTransform(b2TimeOfImpact.s_xfA,alpha);
				sweepB.GetTransform(b2TimeOfImpact.s_xfB,alpha);
				b2TimeOfImpact.s_distanceInput.proxyA=proxyA;
				b2TimeOfImpact.s_distanceInput.proxyB=proxyB;
				b2TimeOfImpact.s_distanceInput.transformA=b2TimeOfImpact.s_xfA;
				b2TimeOfImpact.s_distanceInput.transformB=b2TimeOfImpact.s_xfB;
				b2Distance.Distance(b2TimeOfImpact.s_distanceOutput,b2TimeOfImpact.s_cache,b2TimeOfImpact.s_distanceInput);
				if (b2TimeOfImpact.s_distanceOutput.distance <=0.0){
					alpha=1.0;
					break ;
				}
				b2TimeOfImpact.s_fcn.Initialize(b2TimeOfImpact.s_cache,proxyA,b2TimeOfImpact.s_xfA,proxyB,b2TimeOfImpact.s_xfB);
				var separation=b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA,b2TimeOfImpact.s_xfB);
				if (separation <=0.0){
					alpha=1.0;
					break ;
				}
				if (iter==0){
					if (separation > radius){
						target=b2Math.Max(radius-tolerance,0.75 *radius);
					}
					else{
						target=b2Math.Max(separation-tolerance,0.02 *radius);
					}
				}
				if (separation-target < 0.5 *tolerance){
					if (iter==0){
						alpha=1.0;
						break ;
					}
					break ;
				};
				var newAlpha=alpha;{
					var x1=alpha;
					var x2=1.0;
					var f1=separation;
					sweepA.GetTransform(b2TimeOfImpact.s_xfA,x2);
					sweepB.GetTransform(b2TimeOfImpact.s_xfB,x2);
					var f2=b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA,b2TimeOfImpact.s_xfB);
					if (f2 >=target){
						alpha=1.0;
						break ;
					};
					var rootIterCount=0;
					for (;;){
						var x=NaN;
						if (rootIterCount & 1){
							x=x1+(target-f1)*(x2-x1)/ (f2-f1);
						}
						else{
							x=0.5 *(x1+x2);
						}
						sweepA.GetTransform(b2TimeOfImpact.s_xfA,x);
						sweepB.GetTransform(b2TimeOfImpact.s_xfB,x);
						var f=b2TimeOfImpact.s_fcn.Evaluate(b2TimeOfImpact.s_xfA,b2TimeOfImpact.s_xfB);
						if (b2Math.Abs(f-target)< 0.025 *tolerance){
							newAlpha=x;
							break ;
						}
						if (f > target){
							x1=x;
							f1=f;
						}
						else{
							x2=x;
							f2=f;
						}
						++rootIterCount;
						++b2TimeOfImpact.b2_toiRootIters;
						if (rootIterCount==50){
							break ;
						}
					}
					b2TimeOfImpact.b2_toiMaxRootIters=b2Math.Max(b2TimeOfImpact.b2_toiMaxRootIters,rootIterCount);
				}
				if (newAlpha < (1.0+100.0 *Number.MIN_VALUE)*alpha){
					break ;
				}
				alpha=newAlpha;
				iter++;
				++b2TimeOfImpact.b2_toiIters;
				if (iter==k_maxIterations){
					break ;
				}
			}
			b2TimeOfImpact.b2_toiMaxIters=b2Math.Max(b2TimeOfImpact.b2_toiMaxIters,iter);
			return alpha;
		}

		b2TimeOfImpact.b2_toiCalls=0;
		b2TimeOfImpact.b2_toiIters=0;
		b2TimeOfImpact.b2_toiMaxIters=0;
		b2TimeOfImpact.b2_toiRootIters=0;
		b2TimeOfImpact.b2_toiMaxRootIters=0;
		__static(b2TimeOfImpact,
		['s_cache',function(){return this.s_cache=new b2SimplexCache();},'s_distanceInput',function(){return this.s_distanceInput=new b2DistanceInput();},'s_xfA',function(){return this.s_xfA=new b2Transform();},'s_xfB',function(){return this.s_xfB=new b2Transform();},'s_fcn',function(){return this.s_fcn=new b2SeparationFunction();},'s_distanceOutput',function(){return this.s_distanceOutput=new b2DistanceOutput();}
		]);
		return b2TimeOfImpact;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2toiinput.as
	//class Box2D.Collision.b2TOIInput
	var b2TOIInput=(function(){
		function b2TOIInput(){
			this.tolerance=NaN;
			this.proxyA=new b2DistanceProxy();
			this.proxyB=new b2DistanceProxy();
			this.sweepA=new b2Sweep();
			this.sweepB=new b2Sweep();
		}

		__class(b2TOIInput,'Box2D.Collision.b2TOIInput',true);
		return b2TOIInput;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/b2worldmanifold.as
	;
	//class Box2D.Collision.b2WorldManifold
	var b2WorldManifold=(function(){
		function b2WorldManifold(){
			this.m_points=null;
			this.m_normal=new b2Vec2();
			this.m_points=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2)
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				this.m_points[i]=new b2Vec2();
			}
		}

		__class(b2WorldManifold,'Box2D.Collision.b2WorldManifold',true);
		var __proto=b2WorldManifold.prototype;
		__proto.Initialize=function(manifold,xfA,radiusA,xfB,radiusB){
			if (manifold.m_pointCount==0){
				return;
			};
			var i=0;
			var tVec;
			var tMat;
			var normalX=NaN;
			var normalY=NaN;
			var planePointX=NaN;
			var planePointY=NaN;
			var clipPointX=NaN;
			var clipPointY=NaN;
			switch(manifold.m_type){
				case /*Box2D.Collision.b2Manifold.e_circles*/0x0001:{
						tMat=xfA.R;
						tVec=manifold.m_localPoint;
						var pointAX=xfA.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						var pointAY=xfA.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						tMat=xfB.R;
						tVec=manifold.m_points[0].m_localPoint;
						var pointBX=xfB.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						var pointBY=xfB.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						var dX=pointBX-pointAX;
						var dY=pointBY-pointAY;
						var d2=dX *dX+dY *dY;
						if (d2 > Number.MIN_VALUE *Number.MIN_VALUE){
							var d=Math.sqrt(d2);
							this.m_normal.x=dX/d;
							this.m_normal.y=dY/d;
							}else {
							this.m_normal.x=1;
							this.m_normal.y=0;
						};
						var cAX=pointAX+radiusA *this.m_normal.x;
						var cAY=pointAY+radiusA *this.m_normal.y;
						var cBX=pointBX-radiusB *this.m_normal.x;
						var cBY=pointBY-radiusB *this.m_normal.y;
						this.m_points[0].x=0.5 *(cAX+cBX);
						this.m_points[0].y=0.5 *(cAY+cBY);
					}
					break ;
				case /*Box2D.Collision.b2Manifold.e_faceA*/0x0002:{
						tMat=xfA.R;
						tVec=manifold.m_localPlaneNormal;
						normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						tMat=xfA.R;
						tVec=manifold.m_localPoint;
						planePointX=xfA.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						planePointY=xfA.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						this.m_normal.x=normalX;
						this.m_normal.y=normalY;
						for (i=0;i < manifold.m_pointCount;i++){
							tMat=xfB.R;
							tVec=manifold.m_points[i].m_localPoint;
							clipPointX=xfB.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
							clipPointY=xfB.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
							this.m_points[i].x=clipPointX+0.5 *(radiusA-(clipPointX-planePointX)*normalX-(clipPointY-planePointY)*normalY-radiusB)*normalX;
							this.m_points[i].y=clipPointY+0.5 *(radiusA-(clipPointX-planePointX)*normalX-(clipPointY-planePointY)*normalY-radiusB)*normalY;
						}
					}
					break ;
				case /*Box2D.Collision.b2Manifold.e_faceB*/0x0004:{
						tMat=xfB.R;
						tVec=manifold.m_localPlaneNormal;
						normalX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						normalY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						tMat=xfB.R;
						tVec=manifold.m_localPoint;
						planePointX=xfB.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						planePointY=xfB.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						this.m_normal.x=-normalX;
						this.m_normal.y=-normalY;
						for (i=0;i < manifold.m_pointCount;i++){
							tMat=xfA.R;
							tVec=manifold.m_points[i].m_localPoint;
							clipPointX=xfA.position.x+tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
							clipPointY=xfA.position.y+tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
							this.m_points[i].x=clipPointX+0.5 *(radiusB-(clipPointX-planePointX)*normalX-(clipPointY-planePointY)*normalY-radiusA)*normalX;
							this.m_points[i].y=clipPointY+0.5 *(radiusB-(clipPointX-planePointX)*normalX-(clipPointY-planePointY)*normalY-radiusA)*normalY;
						}
					}
					break ;
				}
		}

		return b2WorldManifold;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/clipvertex.as
	;
	//class Box2D.Collision.ClipVertex
	var ClipVertex=(function(){
		function ClipVertex(){
			this.v=new b2Vec2();
			this.id=new b2ContactID();
		}

		__class(ClipVertex,'Box2D.Collision.ClipVertex',true);
		var __proto=ClipVertex.prototype;
		__proto.Set=function(other){
			this.v.SetV(other.v);
			this.id.Set(other.id);
		}

		return ClipVertex;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/features.as
	;
	//class Box2D.Collision.Features
	var Features=(function(){
		function Features(){
			this._referenceEdge=0;
			this._incidentEdge=0;
			this._incidentVertex=0;
			this._flip=0;
			this._m_id=null;
		}

		__class(Features,'Box2D.Collision.Features',true);
		var __proto=Features.prototype;
		__getset(0,__proto,'incidentVertex',function(){
			return this._incidentVertex;
			},function(value){
			this._incidentVertex=value;
			this._m_id._key=(this._m_id._key & 0xff00ffff)| ((this._incidentVertex << 16)& 0x00ff0000);
		});

		__getset(0,__proto,'referenceEdge',function(){
			return this._referenceEdge;
			},function(value){
			this._referenceEdge=value;
			this._m_id._key=(this._m_id._key & 0xffffff00)| (this._referenceEdge & 0x000000ff);
		});

		__getset(0,__proto,'incidentEdge',function(){
			return this._incidentEdge;
			},function(value){
			this._incidentEdge=value;
			this._m_id._key=(this._m_id._key & 0xffff00ff)| ((this._incidentEdge << 8)& 0x0000ff00);
		});

		__getset(0,__proto,'flip',function(){
			return this._flip;
			},function(value){
			this._flip=value;
			this._m_id._key=(this._m_id._key & 0x00ffffff)| ((this._flip << 24)& 0xff000000);
		});

		return Features;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2shape.as
	;
	//class Box2D.Collision.Shapes.b2Shape
	var b2Shape=(function(){
		function b2Shape(){
			this.m_type=0;
			this.m_radius=NaN;
			this.m_type=b2Shape.e_unknownShape;
			this.m_radius=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
		}

		__class(b2Shape,'Box2D.Collision.Shapes.b2Shape',true);
		var __proto=b2Shape.prototype;
		__proto.Copy=function(){
			return null;
		}

		__proto.Set=function(other){
			this.m_radius=other.m_radius;
		}

		__proto.GetType=function(){
			return this.m_type;
		}

		__proto.TestPoint=LAYAFNFALSE/*function(xf,p){return false}*/
		__proto.RayCast=function(output,input,transform){
			return false;
		}

		__proto.ComputeAABB=LAYAFNVOID/*function(aabb,xf){}*/
		__proto.ComputeMass=LAYAFNVOID/*function(massData,density){}*/
		__proto.ComputeSubmergedArea=LAYAFN0/*function(normal,offset,xf,c){return 0;}*/
		b2Shape.TestOverlap=function(shape1,transform1,shape2,transform2){
			var input=new b2DistanceInput();
			input.proxyA=new b2DistanceProxy();
			input.proxyA.Set(shape1);
			input.proxyB=new b2DistanceProxy();
			input.proxyB.Set(shape2);
			input.transformA=transform1;
			input.transformB=transform2;
			input.useRadii=true;
			var simplexCache=new b2SimplexCache();
			simplexCache.count=0;
			var output=new b2DistanceOutput();
			b2Distance.Distance(output,simplexCache,input);
			return output.distance < 10.0 *Number.MIN_VALUE;
		}

		b2Shape.e_edgeShape=2;
		b2Shape.e_hitCollide=1;
		b2Shape.e_missCollide=0;
		b2Shape.e_startsInsideCollide=-1;
		__static(b2Shape,
		['e_unknownShape',function(){return this.e_unknownShape=-1;},'e_circleShape',function(){return this.e_circleShape=0;},'e_polygonShape',function(){return this.e_polygonShape=1;},'e_shapeTypeCount',function(){return this.e_shapeTypeCount=3;}
		]);
		return b2Shape;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2edgechaindef.as
	;
	//class Box2D.Collision.Shapes.b2EdgeChainDef
	var b2EdgeChainDef=(function(){
		function b2EdgeChainDef(){
			this.vertices=null;
			this.vertexCount=0;
			this.isALoop=false;
			this.vertexCount=0;
			this.isALoop=true;
			this.vertices=[];
		}

		__class(b2EdgeChainDef,'Box2D.Collision.Shapes.b2EdgeChainDef',true);
		return b2EdgeChainDef;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2massdata.as
	;
	//class Box2D.Collision.Shapes.b2MassData
	var b2MassData=(function(){
		function b2MassData(){
			this.mass=0.0;
			this.I=0.0;
			this.center=new b2Vec2(0,0);
		}

		__class(b2MassData,'Box2D.Collision.Shapes.b2MassData',true);
		return b2MassData;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/b2color.as
	//class Box2D.Common.b2Color
	var b2Color=(function(){
		function b2Color(rr,gg,bb){
			this._r=0;
			this._g=0;
			this._b=0;
			this._r=uint(255 *b2Math.Clamp(rr,0.0,1.0));
			this._g=uint(255 *b2Math.Clamp(gg,0.0,1.0));
			this._b=uint(255 *b2Math.Clamp(bb,0.0,1.0));
		}

		__class(b2Color,'Box2D.Common.b2Color',true);
		var __proto=b2Color.prototype;
		__proto.Set=function(rr,gg,bb){
			this._r=uint(255 *b2Math.Clamp(rr,0.0,1.0));
			this._g=uint(255 *b2Math.Clamp(gg,0.0,1.0));
			this._b=uint(255 *b2Math.Clamp(bb,0.0,1.0));
		}

		__getset(0,__proto,'color',function(){
			return (this._r << 16)| (this._g << 8)| (this._b);
		});

		__getset(0,__proto,'r',null,function(rr){
			this._r=uint(255 *b2Math.Clamp(rr,0.0,1.0));
		});

		__getset(0,__proto,'g',null,function(gg){
			this._g=uint(255 *b2Math.Clamp(gg,0.0,1.0));
		});

		__getset(0,__proto,'b',null,function(bb){
			this._b=uint(255 *b2Math.Clamp(bb,0.0,1.0));
		});

		return b2Color;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/b2settings.as
	//class Box2D.Common.b2Settings
	var b2Settings=(function(){
		function b2Settings(){};
		__class(b2Settings,'Box2D.Common.b2Settings',true);
		b2Settings.b2MixFriction=function(friction1,friction2){
			return Math.sqrt(friction1 *friction2);
		}

		b2Settings.b2MixRestitution=function(restitution1,restitution2){
			return restitution1 > restitution2 ? restitution1 :restitution2;
		}

		b2Settings.b2Assert=function(a){
			if (!a){
				throw "Assertion Failed";
			}
		}

		b2Settings.VERSION="2.1alpha";
		b2Settings.USHRT_MAX=0x0000ffff;
		b2Settings.b2_maxManifoldPoints=2;
		b2Settings.b2_aabbExtension=0.1;
		b2Settings.b2_aabbMultiplier=2.0;
		b2Settings.b2_polygonRadius=(2.0 *0.005);
		b2Settings.b2_linearSlop=0.005;
		b2Settings.b2_toiSlop=(8.0 *0.005);
		b2Settings.b2_maxTOIContactsPerIsland=32;
		b2Settings.b2_maxTOIJointsPerIsland=32;
		b2Settings.b2_velocityThreshold=1.0;
		b2Settings.b2_maxLinearCorrection=0.2;
		b2Settings.b2_maxTranslation=2.0;
		b2Settings.b2_maxTranslationSquared=2.0 *2.0;
		b2Settings.b2_contactBaumgarte=0.2;
		b2Settings.b2_timeToSleep=0.5;
		b2Settings.b2_linearSleepTolerance=0.01;
		__static(b2Settings,
		['b2_pi',function(){return this.b2_pi=Math.PI;},'b2_angularSlop',function(){return this.b2_angularSlop=(2.0 / 180.0 *b2Settings.b2_pi);},'b2_maxAngularCorrection',function(){return this.b2_maxAngularCorrection=(8.0 / 180.0 *b2Settings.b2_pi);},'b2_maxRotation',function(){return this.b2_maxRotation=(0.5 *b2Settings.b2_pi);},'b2_maxRotationSquared',function(){return this.b2_maxRotationSquared=b2Settings.b2_maxRotation *b2Settings.b2_maxRotation;},'b2_angularSleepTolerance',function(){return this.b2_angularSleepTolerance=(2.0 / 180.0 *Box2D.Common.b2Settings.b2_pi);}
		]);
		return b2Settings;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2mat22.as
	//class Box2D.Common.Math.b2Mat22
	var b2Mat22=(function(){
		function b2Mat22(){
			this.col1=new b2Vec2();
			this.col2=new b2Vec2();
			this.col1.x=this.col2.y=1.0;
		}

		__class(b2Mat22,'Box2D.Common.Math.b2Mat22',true);
		var __proto=b2Mat22.prototype;
		__proto.Set=function(angle){
			var c=Math.cos(angle);
			var s=Math.sin(angle);
			this.col1.x=c;this.col2.x=-s;
			this.col1.y=s;this.col2.y=c;
		}

		__proto.SetVV=function(c1,c2){
			this.col1.SetV(c1);
			this.col2.SetV(c2);
		}

		__proto.Copy=function(){
			var mat=new b2Mat22();
			mat.SetM(this);
			return mat;
		}

		__proto.SetM=function(m){
			this.col1.SetV(m.col1);
			this.col2.SetV(m.col2);
		}

		__proto.AddM=function(m){
			this.col1.x+=m.col1.x;
			this.col1.y+=m.col1.y;
			this.col2.x+=m.col2.x;
			this.col2.y+=m.col2.y;
		}

		__proto.SetIdentity=function(){
			this.col1.x=1.0;this.col2.x=0.0;
			this.col1.y=0.0;this.col2.y=1.0;
		}

		__proto.SetZero=function(){
			this.col1.x=0.0;this.col2.x=0.0;
			this.col1.y=0.0;this.col2.y=0.0;
		}

		__proto.GetAngle=function(){
			return Math.atan2(this.col1.y,this.col1.x);
		}

		__proto.GetInverse=function(out){
			var a=this.col1.x;
			var b=this.col2.x;
			var c=this.col1.y;
			var d=this.col2.y;
			var det=a *d-b *c;
			if (det !=0.0){
				det=1.0 / det;
			}
			out.col1.x=det *d;out.col2.x=-det *b;
			out.col1.y=-det *c;out.col2.y=det *a;
			return out;
		}

		__proto.Solve=function(out,bX,bY){
			var a11=this.col1.x;
			var a12=this.col2.x;
			var a21=this.col1.y;
			var a22=this.col2.y;
			var det=a11 *a22-a12 *a21;
			if (det !=0.0){
				det=1.0 / det;
			}
			out.x=det *(a22 *bX-a12 *bY);
			out.y=det *(a11 *bY-a21 *bX);
			return out;
		}

		__proto.Abs=function(){
			this.col1.Abs();
			this.col2.Abs();
		}

		b2Mat22.FromAngle=function(angle){
			var mat=new b2Mat22();
			mat.Set(angle);
			return mat;
		}

		b2Mat22.FromVV=function(c1,c2){
			var mat=new b2Mat22();
			mat.SetVV(c1,c2);
			return mat;
		}

		return b2Mat22;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2mat33.as
	//class Box2D.Common.Math.b2Mat33
	var b2Mat33=(function(){
		function b2Mat33(c1,c2,c3){
			this.col1=new b2Vec3();
			this.col2=new b2Vec3();
			this.col3=new b2Vec3();
			if (!c1 && !c2 && !c3){
				this.col1.SetZero();
				this.col2.SetZero();
				this.col3.SetZero();
			}
			else{
				this.col1.SetV(c1);
				this.col2.SetV(c2);
				this.col3.SetV(c3);
			}
		}

		__class(b2Mat33,'Box2D.Common.Math.b2Mat33',true);
		var __proto=b2Mat33.prototype;
		__proto.SetVVV=function(c1,c2,c3){
			this.col1.SetV(c1);
			this.col2.SetV(c2);
			this.col3.SetV(c3);
		}

		__proto.Copy=function(){
			return new b2Mat33(this.col1,this.col2,this.col3);
		}

		__proto.SetM=function(m){
			this.col1.SetV(m.col1);
			this.col2.SetV(m.col2);
			this.col3.SetV(m.col3);
		}

		__proto.AddM=function(m){
			this.col1.x+=m.col1.x;
			this.col1.y+=m.col1.y;
			this.col1.z+=m.col1.z;
			this.col2.x+=m.col2.x;
			this.col2.y+=m.col2.y;
			this.col2.z+=m.col2.z;
			this.col3.x+=m.col3.x;
			this.col3.y+=m.col3.y;
			this.col3.z+=m.col3.z;
		}

		__proto.SetIdentity=function(){
			this.col1.x=1.0;this.col2.x=0.0;this.col3.x=0.0;
			this.col1.y=0.0;this.col2.y=1.0;this.col3.y=0.0;
			this.col1.z=0.0;this.col2.z=0.0;this.col3.z=1.0;
		}

		__proto.SetZero=function(){
			this.col1.x=0.0;this.col2.x=0.0;this.col3.x=0.0;
			this.col1.y=0.0;this.col2.y=0.0;this.col3.y=0.0;
			this.col1.z=0.0;this.col2.z=0.0;this.col3.z=0.0;
		}

		__proto.Solve22=function(out,bX,bY){
			var a11=this.col1.x;
			var a12=this.col2.x;
			var a21=this.col1.y;
			var a22=this.col2.y;
			var det=a11 *a22-a12 *a21;
			if (det !=0.0){
				det=1.0 / det;
			}
			out.x=det *(a22 *bX-a12 *bY);
			out.y=det *(a11 *bY-a21 *bX);
			return out;
		}

		__proto.Solve33=function(out,bX,bY,bZ){
			var a11=this.col1.x;
			var a21=this.col1.y;
			var a31=this.col1.z;
			var a12=this.col2.x;
			var a22=this.col2.y;
			var a32=this.col2.z;
			var a13=this.col3.x;
			var a23=this.col3.y;
			var a33=this.col3.z;
			var det=a11 *(a22 *a33-a32 *a23)+
			a21 *(a32 *a13-a12 *a33)+
			a31 *(a12 *a23-a22 *a13);
			if (det !=0.0){
				det=1.0 / det;
			}
			out.x=det *(bX *(a22 *a33-a32 *a23)+
			bY *(a32 *a13-a12 *a33)+
			bZ *(a12 *a23-a22 *a13));
			out.y=det *(a11 *(bY *a33-bZ *a23)+
			a21 *(bZ *a13-bX *a33)+
			a31 *(bX *a23-bY *a13));
			out.z=det *(a11 *(a22 *bZ-a32 *bY)+
			a21 *(a32 *bX-a12 *bZ)+
			a31 *(a12 *bY-a22 *bX));
			return out;
		}

		return b2Mat33;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2math.as
	//class Box2D.Common.Math.b2Math
	var b2Math=(function(){
		function b2Math(){};
		__class(b2Math,'Box2D.Common.Math.b2Math',true);
		b2Math.IsValid=function(x){
			return isFinite(x);
		}

		b2Math.Dot=function(a,b){
			return a.x *b.x+a.y *b.y;
		}

		b2Math.CrossVV=function(a,b){
			return a.x *b.y-a.y *b.x;
		}

		b2Math.CrossVF=function(a,s){
			var v=new b2Vec2(s *a.y,-s *a.x);
			return v;
		}

		b2Math.CrossFV=function(s,a){
			var v=new b2Vec2(-s *a.y,s *a.x);
			return v;
		}

		b2Math.MulMV=function(A,v){
			var u=new b2Vec2(A.col1.x *v.x+A.col2.x *v.y,A.col1.y *v.x+A.col2.y *v.y);
			return u;
		}

		b2Math.MulTMV=function(A,v){
			var u=new b2Vec2(b2Math.Dot(v,A.col1),b2Math.Dot(v,A.col2));
			return u;
		}

		b2Math.MulX=function(T,v){
			var a=b2Math.MulMV(T.R,v);
			a.x+=T.position.x;
			a.y+=T.position.y;
			return a;
		}

		b2Math.MulXT=function(T,v){
			var a=b2Math.SubtractVV(v,T.position);
			var tX=(a.x *T.R.col1.x+a.y *T.R.col1.y);
			a.y=(a.x *T.R.col2.x+a.y *T.R.col2.y);
			a.x=tX;
			return a;
		}

		b2Math.AddVV=function(a,b){
			var v=new b2Vec2(a.x+b.x,a.y+b.y);
			return v;
		}

		b2Math.SubtractVV=function(a,b){
			var v=new b2Vec2(a.x-b.x,a.y-b.y);
			return v;
		}

		b2Math.Distance=function(a,b){
			var cX=a.x-b.x;
			var cY=a.y-b.y;
			return Math.sqrt(cX*cX+cY*cY);
		}

		b2Math.DistanceSquared=function(a,b){
			var cX=a.x-b.x;
			var cY=a.y-b.y;
			return (cX*cX+cY*cY);
		}

		b2Math.MulFV=function(s,a){
			var v=new b2Vec2(s *a.x,s *a.y);
			return v;
		}

		b2Math.AddMM=function(A,B){
			var C=b2Mat22.FromVV(b2Math.AddVV(A.col1,B.col1),b2Math.AddVV(A.col2,B.col2));
			return C;
		}

		b2Math.MulMM=function(A,B){
			var C=b2Mat22.FromVV(b2Math.MulMV(A,B.col1),b2Math.MulMV(A,B.col2));
			return C;
		}

		b2Math.MulTMM=function(A,B){
			var c1=new b2Vec2(b2Math.Dot(A.col1,B.col1),b2Math.Dot(A.col2,B.col1));
			var c2=new b2Vec2(b2Math.Dot(A.col1,B.col2),b2Math.Dot(A.col2,B.col2));
			var C=b2Mat22.FromVV(c1,c2);
			return C;
		}

		b2Math.Abs=function(a){
			return a > 0.0 ? a :-a;
		}

		b2Math.AbsV=function(a){
			var b=new b2Vec2(b2Math.Abs(a.x),b2Math.Abs(a.y));
			return b;
		}

		b2Math.AbsM=function(A){
			var B=b2Mat22.FromVV(b2Math.AbsV(A.col1),b2Math.AbsV(A.col2));
			return B;
		}

		b2Math.Min=function(a,b){
			return a < b ? a :b;
		}

		b2Math.MinV=function(a,b){
			var c=new b2Vec2(b2Math.Min(a.x,b.x),b2Math.Min(a.y,b.y));
			return c;
		}

		b2Math.Max=function(a,b){
			return a > b ? a :b;
		}

		b2Math.MaxV=function(a,b){
			var c=new b2Vec2(b2Math.Max(a.x,b.x),b2Math.Max(a.y,b.y));
			return c;
		}

		b2Math.Clamp=function(a,low,high){
			return a < low ? low :a > high ? high :a;
		}

		b2Math.ClampV=function(a,low,high){
			return b2Math.MaxV(low,b2Math.MinV(a,high));
		}

		b2Math.Swap=function(a,b){
			var tmp=a[0];
			a[0]=b[0];
			b[0]=tmp;
		}

		b2Math.Random=function(){
			return Math.random()*2-1;
		}

		b2Math.RandomRange=function(lo,hi){
			var r=Math.random();
			r=(hi-lo)*r+lo;
			return r;
		}

		b2Math.NextPowerOfTwo=function(x){
			x |=(x >> 1)& 0x7FFFFFFF;
			x |=(x >> 2)& 0x3FFFFFFF;
			x |=(x >> 4)& 0x0FFFFFFF;
			x |=(x >> 8)& 0x00FFFFFF;
			x |=(x >> 16)& 0x0000FFFF;
			return x+1;
		}

		b2Math.IsPowerOfTwo=function(x){
			var result=x > 0 && (x & (x-1))==0;
			return result;
		}

		__static(b2Math,
		['b2Vec2_zero',function(){return this.b2Vec2_zero=new b2Vec2(0.0,0.0);},'b2Mat22_identity',function(){return this.b2Mat22_identity=b2Mat22.FromVV(new b2Vec2(1.0,0.0),new b2Vec2(0.0,1.0));},'b2Transform_identity',function(){return this.b2Transform_identity=new b2Transform(b2Math.b2Vec2_zero,b2Math.b2Mat22_identity);}
		]);
		return b2Math;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2sweep.as
	//class Box2D.Common.Math.b2Sweep
	var b2Sweep=(function(){
		function b2Sweep(){
			this.a0=NaN;
			this.a=NaN;
			this.t0=NaN;
			this.localCenter=new b2Vec2();
			this.c0=new b2Vec2;
			this.c=new b2Vec2();
		}

		__class(b2Sweep,'Box2D.Common.Math.b2Sweep',true);
		var __proto=b2Sweep.prototype;
		__proto.Set=function(other){
			this.localCenter.SetV(other.localCenter);
			this.c0.SetV(other.c0);
			this.c.SetV(other.c);
			this.a0=other.a0;
			this.a=other.a;
			this.t0=other.t0;
		}

		__proto.Copy=function(){
			var copy=new b2Sweep();
			copy.localCenter.SetV(this.localCenter);
			copy.c0.SetV(this.c0);
			copy.c.SetV(this.c);
			copy.a0=this.a0;
			copy.a=this.a;
			copy.t0=this.t0;
			return copy;
		}

		__proto.GetTransform=function(xf,alpha){
			xf.position.x=(1.0-alpha)*this.c0.x+alpha *this.c.x;
			xf.position.y=(1.0-alpha)*this.c0.y+alpha *this.c.y;
			var angle=(1.0-alpha)*this.a0+alpha *this.a;
			xf.R.Set(angle);
			var tMat=xf.R;
			xf.position.x-=(tMat.col1.x *this.localCenter.x+tMat.col2.x *this.localCenter.y);
			xf.position.y-=(tMat.col1.y *this.localCenter.x+tMat.col2.y *this.localCenter.y);
		}

		__proto.Advance=function(t){
			if (this.t0 < t && 1.0-this.t0 > Number.MIN_VALUE){
				var alpha=(t-this.t0)/ (1.0-this.t0);
				this.c0.x=(1.0-alpha)*this.c0.x+alpha *this.c.x;
				this.c0.y=(1.0-alpha)*this.c0.y+alpha *this.c.y;
				this.a0=(1.0-alpha)*this.a0+alpha *this.a;
				this.t0=t;
			}
		}

		return b2Sweep;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2transform.as
	//class Box2D.Common.Math.b2Transform
	var b2Transform=(function(){
		function b2Transform(pos,r){
			this.position=new b2Vec2;
			this.R=new b2Mat22();
			if (pos){
				this.position.SetV(pos);
				this.R.SetM(r);
			}
		}

		__class(b2Transform,'Box2D.Common.Math.b2Transform',true);
		var __proto=b2Transform.prototype;
		__proto.Initialize=function(pos,r){
			this.position.SetV(pos);
			this.R.SetM(r);
		}

		__proto.SetIdentity=function(){
			this.position.SetZero();
			this.R.SetIdentity();
		}

		__proto.Set=function(x){
			this.position.SetV(x.position);
			this.R.SetM(x.R);
		}

		__proto.GetAngle=function(){
			return Math.atan2(this.R.col1.y,this.R.col1.x);
		}

		return b2Transform;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2vec2.as
	//class Box2D.Common.Math.b2Vec2
	var b2Vec2=(function(){
		function b2Vec2(x_,y_){
			this.x=NaN;
			this.y=NaN;
			(x_===void 0)&& (x_=0);
			(y_===void 0)&& (y_=0);
			this.x=x_;this.y=y_;}
		__class(b2Vec2,'Box2D.Common.Math.b2Vec2',false);
		var __proto=b2Vec2.prototype;
		__proto.SetZero=function(){this.x=0.0;this.y=0.0;}
		__proto.Set=function(x_,y_){
			(x_===void 0)&& (x_=0);
			(y_===void 0)&& (y_=0);
			this.x=x_;this.y=y_;}
		__proto.SetV=function(v){this.x=v.x;this.y=v.y;}
		__proto.GetNegative=function(){return new b2Vec2(-this.x,-this.y);}
		__proto.NegativeSelf=function(){this.x=-this.x;this.y=-this.y;}
		__proto.ToPoint=function(){
			return new Point(this.x,this.y);
		}

		__proto.Copy=function(){
			return new b2Vec2(this.x,this.y);
		}

		__proto.Add=function(v){
			this.x+=v.x;this.y+=v.y;
		}

		__proto.Subtract=function(v){
			this.x-=v.x;this.y-=v.y;
		}

		__proto.Multiply=function(a){
			this.x *=a;this.y *=a;
		}

		__proto.MulM=function(A){
			var tX=this.x;
			this.x=A.col1.x *tX+A.col2.x *this.y;
			this.y=A.col1.y *tX+A.col2.y *this.y;
		}

		__proto.MulTM=function(A){
			var tX=b2Math.Dot(this,A.col1);
			this.y=b2Math.Dot(this,A.col2);
			this.x=tX;
		}

		__proto.CrossVF=function(s){
			var tX=this.x;
			this.x=s *this.y;
			this.y=-s *tX;
		}

		__proto.CrossFV=function(s){
			var tX=this.x;
			this.x=-s *this.y;
			this.y=s *tX;
		}

		__proto.MinV=function(b){
			this.x=this.x < b.x ? this.x :b.x;
			this.y=this.y < b.y ? this.y :b.y;
		}

		__proto.MaxV=function(b){
			this.x=this.x > b.x ? this.x :b.x;
			this.y=this.y > b.y ? this.y :b.y;
		}

		__proto.Abs=function(){
			if (this.x < 0)this.x=-this.x;
			if (this.y < 0)this.y=-this.y;
		}

		__proto.Length=function(){
			return Math.sqrt(this.x *this.x+this.y *this.y);
		}

		__proto.LengthSquared=function(){
			return (this.x *this.x+this.y *this.y);
		}

		__proto.Normalize=function(){
			var length=Math.sqrt(this.x *this.x+this.y *this.y);
			if (length < Number.MIN_VALUE){
				return 0.0;
			};
			var invLength=1.0 / length;
			this.x *=invLength;
			this.y *=invLength;
			return length;
		}

		__proto.IsValid=function(){
			return b2Math.IsValid(this.x)&& b2Math.IsValid(this.y);
		}

		__proto.toString=function(ptm_ratio){
			(ptm_ratio===void 0)&& (ptm_ratio=1);
			return "{x:"+this.x*ptm_ratio+",y:"+this.y*ptm_ratio+"}";
		}

		b2Vec2.Make=function(x_,y_){
			return new b2Vec2(x_,y_);
		}

		b2Vec2.MakeOnce=function(x_,y_){
			b2Vec2._onceV.x=x_;
			b2Vec2._onceV.y=y_;
			return b2Vec2._onceV;
		}

		b2Vec2.Distance=function(v1,v2){
			var dx=v1.x-v2.x;
			var dy=v1.y-v2.y;
			return Math.sqrt(dx*dx+dy*dy);
		}

		__static(b2Vec2,
		['_onceV',function(){return this._onceV=new b2Vec2();}
		]);
		return b2Vec2;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/common/math/b2vec3.as
	//class Box2D.Common.Math.b2Vec3
	var b2Vec3=(function(){
		function b2Vec3(x,y,z){
			this.x=NaN;
			this.y=NaN;
			this.z=NaN;
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(z===void 0)&& (z=0);
			this.x=x;
			this.y=y;
			this.z=z;
		}

		__class(b2Vec3,'Box2D.Common.Math.b2Vec3',true);
		var __proto=b2Vec3.prototype;
		__proto.SetZero=function(){
			this.x=this.y=this.z=0.0;
		}

		__proto.Set=function(x,y,z){
			this.x=x;
			this.y=y;
			this.z=z;
		}

		__proto.SetV=function(v){
			this.x=v.x;
			this.y=v.y;
			this.z=v.z;
		}

		__proto.GetNegative=function(){return new b2Vec3(-this.x,-this.y,-this.z);}
		__proto.NegativeSelf=function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;}
		__proto.Copy=function(){
			return new b2Vec3(this.x,this.y,this.z);
		}

		__proto.Add=function(v){
			this.x+=v.x;this.y+=v.y;this.z+=v.z;
		}

		__proto.Subtract=function(v){
			this.x-=v.x;this.y-=v.y;this.z-=v.z;
		}

		__proto.Multiply=function(a){
			this.x *=a;this.y *=a;this.z *=a;
		}

		return b2Vec3;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2body.as
	;
	//class Box2D.Dynamics.b2Body
	var b2Body=(function(){
		function b2Body(bd,world){
			this._preSolveCallback=null;
			this._contactBeginCallback=null;
			this._postSolveCallback=null;
			this._contactEndCallback=null;
			this.m_customGravity=null;
			this.m_isIgnoreFrictionX=false;
			this.m_isIgnoreFrictionY=false;
			this.m_allowBevelSlither=false;
			this.m_uphillZeroFriction=false;
			this.m_allowMovement=false;
			this.m_flags=0;
			this.m_type=0;
			this.m_islandIndex=0;
			this.m_angularVelocity=NaN;
			this.m_torque=NaN;
			this.m_world=null;
			this.m_prev=null;
			this.m_next=null;
			this.m_fixtureList=null;
			this.m_fixtureCount=0;
			this.m_controllerList=null;
			this.m_controllerCount=0;
			this.m_jointList=null;
			this.m_contactList=null;
			this.m_mass=NaN;
			this.m_invMass=NaN;
			this.m_I=NaN;
			this.m_invI=NaN;
			this.m_inertiaScale=NaN;
			this.m_linearDamping=NaN;
			this.m_angularDamping=NaN;
			this.m_sleepTime=NaN;
			this.m_userData=null;
			this.m_xf=new b2Transform();
			this.m_sweep=new b2Sweep();
			this.m_linearVelocity=new b2Vec2();
			this.m_force=new b2Vec2();
			this.m_flags=0;
			if (bd.bullet){
				this.m_flags |=b2Body.e_bulletFlag;
			}
			if (bd.fixedRotation){
				this.m_flags |=b2Body.e_fixedRotationFlag;
			}
			if (bd.allowSleep){
				this.m_flags |=b2Body.e_allowSleepFlag;
			}
			if (bd.awake){
				this.m_flags |=b2Body.e_awakeFlag;
			}
			if (bd.active){
				this.m_flags |=b2Body.e_activeFlag;
			}
			this.m_world=world;
			this.m_xf.position.SetV(bd.position);
			this.m_xf.R.Set(bd.angle);
			this.m_sweep.localCenter.SetZero();
			this.m_sweep.t0=1.0;
			this.m_sweep.a0=this.m_sweep.a=bd.angle;
			var tMat=this.m_xf.R;
			var tVec=this.m_sweep.localCenter;
			this.m_sweep.c.x=(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			this.m_sweep.c.y=(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			this.m_sweep.c.x+=this.m_xf.position.x;
			this.m_sweep.c.y+=this.m_xf.position.y;
			this.m_sweep.c0.SetV(this.m_sweep.c);
			this.m_jointList=null;
			this.m_controllerList=null;
			this.m_contactList=null;
			this.m_controllerCount=0;
			this.m_prev=null;
			this.m_next=null;
			this.m_linearVelocity.SetV(bd.linearVelocity);
			this.m_angularVelocity=bd.angularVelocity;
			this.m_linearDamping=bd.linearDamping;
			this.m_angularDamping=bd.angularDamping;
			this.m_force.Set(0.0,0.0);
			this.m_torque=0.0;
			this.m_sleepTime=0.0;
			this.m_type=bd.type;
			if (this.m_type==b2Body.b2_dynamicBody){
				this.m_mass=1.0;
				this.m_invMass=1.0;
			}
			else{
				this.m_mass=0.0;
				this.m_invMass=0.0;
			}
			this.m_I=0.0;
			this.m_invI=0.0;
			this.m_inertiaScale=bd.inertiaScale;
			this.m_userData=bd.userData;
			this.m_fixtureList=null;
			this.m_fixtureCount=0;
			this.m_isIgnoreFrictionX=bd.isIgnoreFrictionX;
			this.m_isIgnoreFrictionY=bd.isIgnoreFrictionY;
			this.m_allowBevelSlither=bd.allowBevelSlither;
			this.m_allowMovement=bd.allowMovement;
		}

		__class(b2Body,'Box2D.Dynamics.b2Body',true);
		var __proto=b2Body.prototype;
		__proto.connectEdges=function(s1,s2,angle1){
			var angle2=Math.atan2(s2.GetDirectionVector().y,s2.GetDirectionVector().x);
			var coreOffset=Math.tan((angle2-angle1)*0.5);
			var core=b2Math.MulFV(coreOffset,s2.GetDirectionVector());
			core=b2Math.SubtractVV(core,s2.GetNormalVector());
			core=b2Math.MulFV(b2Settings.b2_toiSlop,core);
			core=b2Math.AddVV(core,s2.GetVertex1());
			var cornerDir=b2Math.AddVV(s1.GetDirectionVector(),s2.GetDirectionVector());
			cornerDir.Normalize();
			var convex=b2Math.Dot(s1.GetDirectionVector(),s2.GetNormalVector())> 0.0;
			s1.SetNextEdge(s2,core,cornerDir,convex);
			s2.SetPrevEdge(s1,core,cornerDir,convex);
			return angle2;
		}

		__proto.CreateFixture=function(def){
			if (this.m_world.IsLocked()==true){
				return null;
			};
			var fixture=new b2Fixture();
			fixture.Create(this,this.m_xf,def);
			if (this.m_flags & b2Body.e_activeFlag){
				var broadPhase=this.m_world.m_contactManager.m_broadPhase;
				fixture.CreateProxy(broadPhase,this.m_xf);
			}
			fixture.m_next=this.m_fixtureList;
			this.m_fixtureList=fixture;
			++this.m_fixtureCount;
			fixture.m_body=this;
			if (fixture.m_density > 0.0){
				this.ResetMassData();
			}
			this.m_world.m_flags |=/*Box2D.Dynamics.b2World.e_newFixture*/0x0001;
			return fixture;
		}

		__proto.CreateFixture2=function(shape,density){
			(density===void 0)&& (density=0.0);
			var def=new b2FixtureDef();
			def.shape=shape;
			def.density=density;
			return this.CreateFixture(def);
		}

		__proto.DestroyFixture=function(fixture){
			if (this.m_world.IsLocked()==true){
				return;
			};
			var node=this.m_fixtureList;
			var ppF=null;
			var found=false;
			while (node !=null){
				if (node==fixture){
					if (ppF)
						ppF.m_next=fixture.m_next;
					else
					this.m_fixtureList=fixture.m_next;
					found=true;
					break ;
				}
				ppF=node;
				node=node.m_next;
			};
			var edge=this.m_contactList;
			while (edge){
				var c=edge.contact;
				edge=edge.next;
				var fixtureA=c.GetFixtureA();
				var fixtureB=c.GetFixtureB();
				if (fixture==fixtureA || fixture==fixtureB){
					this.m_world.m_contactManager.Destroy(c);
				}
			}
			if (this.m_flags & b2Body.e_activeFlag){
				var broadPhase=this.m_world.m_contactManager.m_broadPhase;
				fixture.DestroyProxy(broadPhase);
			}
			else{
			}
			fixture.Destroy();
			fixture.m_body=null;
			fixture.m_next=null;
			--this.m_fixtureCount;
			this.ResetMassData();
		}

		__proto.SetPositionAndAngle=function(position,angle){
			var f;
			if (this.m_world.IsLocked()==true){
				return;
			}
			this.m_xf.R.Set(angle);
			this.m_xf.position.SetV(position);
			var tMat=this.m_xf.R;
			var tVec=this.m_sweep.localCenter;
			this.m_sweep.c.x=(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			this.m_sweep.c.y=(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			this.m_sweep.c.x+=this.m_xf.position.x;
			this.m_sweep.c.y+=this.m_xf.position.y;
			this.m_sweep.c0.SetV(this.m_sweep.c);
			this.m_sweep.a0=this.m_sweep.a=angle;
			var broadPhase=this.m_world.m_contactManager.m_broadPhase;
			for (f=this.m_fixtureList;f;f=f.m_next){
				f.Synchronize(broadPhase,this.m_xf,this.m_xf);
			}
			this.m_world.m_contactManager.FindNewContacts();
		}

		__proto.SetTransform=function(xf){
			this.SetPositionAndAngle(xf.position,xf.GetAngle());
		}

		__proto.GetTransform=function(){
			return this.m_xf;
		}

		__proto.GetPosition=function(){
			return this.m_xf.position;
		}

		__proto.SetPosition=function(position){
			this.SetPositionAndAngle(position,this.GetAngle());
		}

		__proto.GetAngle=function(){
			return this.m_sweep.a;
		}

		__proto.SetAngle=function(angle){
			this.SetPositionAndAngle(this.GetPosition(),angle);
		}

		__proto.GetWorldCenter=function(){
			return this.m_sweep.c;
		}

		__proto.GetLocalCenter=function(){
			return this.m_sweep.localCenter;
		}

		__proto.SetLinearVelocity=function(v){
			if (this.m_type==b2Body.b2_staticBody){
				return;
			}
			this.m_linearVelocity.SetV(v);
		}

		__proto.GetLinearVelocity=function(){
			return this.m_linearVelocity;
		}

		__proto.SetAngularVelocity=function(omega){
			if (this.m_type==b2Body.b2_staticBody){
				return;
			}
			this.m_angularVelocity=omega;
		}

		__proto.GetAngularVelocity=function(){
			return this.m_angularVelocity;
		}

		__proto.GetDefinition=function(){
			var bd=new b2BodyDef();
			bd.type=this.GetType();
			bd.allowSleep=(this.m_flags & b2Body.e_allowSleepFlag)==b2Body.e_allowSleepFlag;
			bd.angle=this.GetAngle();
			bd.angularDamping=this.m_angularDamping;
			bd.angularVelocity=this.m_angularVelocity;
			bd.fixedRotation=(this.m_flags & b2Body.e_fixedRotationFlag)==b2Body.e_fixedRotationFlag;
			bd.bullet=(this.m_flags & b2Body.e_bulletFlag)==b2Body.e_bulletFlag;
			bd.awake=(this.m_flags & b2Body.e_awakeFlag)==b2Body.e_awakeFlag;
			bd.linearDamping=this.m_linearDamping;
			bd.linearVelocity.SetV(this.GetLinearVelocity());
			bd.position=this.GetPosition();
			bd.userData=this.GetUserData();
			return bd;
		}

		__proto.ApplyForce=function(force,point){
			if (this.m_type !=b2Body.b2_dynamicBody){
				return;
			}
			if (this.IsAwake()==false){
				this.SetAwake(true);
			}
			this.m_force.x+=force.x;
			this.m_force.y+=force.y;
			this.m_torque+=((point.x-this.m_sweep.c.x)*force.y-(point.y-this.m_sweep.c.y)*force.x);
		}

		__proto.ApplyTorque=function(torque){
			if (this.m_type !=b2Body.b2_dynamicBody){
				return;
			}
			if (this.IsAwake()==false){
				this.SetAwake(true);
			}
			this.m_torque+=torque;
		}

		__proto.ApplyImpulse=function(impulse,point){
			if (this.m_type !=b2Body.b2_dynamicBody){
				return;
			}
			if (this.IsAwake()==false){
				this.SetAwake(true);
			}
			this.m_linearVelocity.x+=this.m_invMass *impulse.x;
			this.m_linearVelocity.y+=this.m_invMass *impulse.y;
			this.m_angularVelocity+=this.m_invI *((point.x-this.m_sweep.c.x)*impulse.y-(point.y-this.m_sweep.c.y)*impulse.x);
		}

		__proto.Split=function(callback){
			var linearVelocity=this.GetLinearVelocity().Copy();
			var angularVelocity=this.GetAngularVelocity();
			var center=this.GetWorldCenter();
			var body1=this;
			var body2=this.m_world.CreateBody(this.GetDefinition());
			var prev;
			for (var f=body1.m_fixtureList;f;){
				if (callback(f)){
					var next=f.m_next;
					if (prev){
						prev.m_next=next;
						}else {
						body1.m_fixtureList=next;
					}
					body1.m_fixtureCount--;
					f.m_next=body2.m_fixtureList;
					body2.m_fixtureList=f;
					body2.m_fixtureCount++;
					f.m_body=body2;
					f=next;
					}else {
					prev=f;
					f=f.m_next
				}
			}
			body1.ResetMassData();
			body2.ResetMassData();
			var center1=body1.GetWorldCenter();
			var center2=body2.GetWorldCenter();
			var velocity1=b2Math.AddVV(linearVelocity,
			b2Math.CrossFV(angularVelocity,
			b2Math.SubtractVV(center1,center)));
			var velocity2=b2Math.AddVV(linearVelocity,
			b2Math.CrossFV(angularVelocity,
			b2Math.SubtractVV(center2,center)));
			body1.SetLinearVelocity(velocity1);
			body2.SetLinearVelocity(velocity2);
			body1.SetAngularVelocity(angularVelocity);
			body2.SetAngularVelocity(angularVelocity);
			body1.SynchronizeFixtures();
			body2.SynchronizeFixtures();
			return body2;
		}

		__proto.Merge=function(other){
			var f;
			for (f=other.m_fixtureList;f;){
				var next=f.m_next;
				other.m_fixtureCount--;
				f.m_next=this.m_fixtureList;
				this.m_fixtureList=f;
				this.m_fixtureCount++;
				f.m_body=body2;
				f=next;
			}
			body1.m_fixtureCount=0;
			var body1=this;
			var body2=other;
			var center1=body1.GetWorldCenter();
			var center2=body2.GetWorldCenter();
			var velocity1=body1.GetLinearVelocity().Copy();
			var velocity2=body2.GetLinearVelocity().Copy();
			var angular1=body1.GetAngularVelocity();
			var angular=body2.GetAngularVelocity();
			body1.ResetMassData();
			this.SynchronizeFixtures();
		}

		__proto.GetMass=function(){
			return this.m_mass;
		}

		__proto.GetInertia=function(){
			return this.m_I;
		}

		__proto.GetMassData=function(data){
			data.mass=this.m_mass;
			data.I=this.m_I;
			data.center.SetV(this.m_sweep.localCenter);
		}

		__proto.SetMassData=function(massData){
			b2Settings.b2Assert(this.m_world.IsLocked()==false);
			if (this.m_world.IsLocked()==true){
				return;
			}
			if (this.m_type !=b2Body.b2_dynamicBody){
				return;
			}
			this.m_invMass=0.0;
			this.m_I=0.0;
			this.m_invI=0.0;
			this.m_mass=massData.mass;
			if (this.m_mass <=0.0){
				this.m_mass=1.0;
			}
			this.m_invMass=1.0 / this.m_mass;
			if (massData.I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag)==0){
				this.m_I=massData.I-this.m_mass *(massData.center.x *massData.center.x+massData.center.y *massData.center.y);
				this.m_invI=1.0 / this.m_I;
			};
			var oldCenter=this.m_sweep.c.Copy();
			this.m_sweep.localCenter.SetV(massData.center);
			this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf,this.m_sweep.localCenter));
			this.m_sweep.c.SetV(this.m_sweep.c0);
			this.m_linearVelocity.x+=this.m_angularVelocity *-(this.m_sweep.c.y-oldCenter.y);
			this.m_linearVelocity.y+=this.m_angularVelocity *+(this.m_sweep.c.x-oldCenter.x);
		}

		__proto.ResetMassData=function(){
			this.m_mass=0.0;
			this.m_invMass=0.0;
			this.m_I=0.0;
			this.m_invI=0.0;
			this.m_sweep.localCenter.SetZero();
			if (this.m_type==b2Body.b2_staticBody || this.m_type==b2Body.b2_kinematicBody){
				return;
			};
			var center=b2Vec2.Make(0,0);
			for (var f=this.m_fixtureList;f;f=f.m_next){
				if (f.m_density==0.0){
					continue ;
				};
				var massData=f.GetMassData();
				this.m_mass+=massData.mass;
				center.x+=massData.center.x *massData.mass;
				center.y+=massData.center.y *massData.mass;
				this.m_I+=massData.I;
			}
			if (this.m_mass > 0.0){
				this.m_invMass=1.0 / this.m_mass;
				center.x *=this.m_invMass;
				center.y *=this.m_invMass;
			}
			else{
				this.m_mass=1.0;
				this.m_invMass=1.0;
			}
			if (this.m_I > 0.0 && (this.m_flags & b2Body.e_fixedRotationFlag)==0){
				this.m_I-=this.m_mass *(center.x *center.x+center.y *center.y);
				this.m_I *=this.m_inertiaScale;
				b2Settings.b2Assert(this.m_I > 0);
				this.m_invI=1.0 / this.m_I;
				}else {
				this.m_I=0.0;
				this.m_invI=0.0;
			};
			var oldCenter=this.m_sweep.c.Copy();
			this.m_sweep.localCenter.SetV(center);
			this.m_sweep.c0.SetV(b2Math.MulX(this.m_xf,this.m_sweep.localCenter));
			this.m_sweep.c.SetV(this.m_sweep.c0);
			this.m_linearVelocity.x+=this.m_angularVelocity *-(this.m_sweep.c.y-oldCenter.y);
			this.m_linearVelocity.y+=this.m_angularVelocity *+(this.m_sweep.c.x-oldCenter.x);
		}

		__proto.GetWorldPoint=function(localPoint){
			var A=this.m_xf.R;
			var u=new b2Vec2(A.col1.x *localPoint.x+A.col2.x *localPoint.y,
			A.col1.y *localPoint.x+A.col2.y *localPoint.y);
			u.x+=this.m_xf.position.x;
			u.y+=this.m_xf.position.y;
			return u;
		}

		__proto.GetWorldVector=function(localVector){
			return b2Math.MulMV(this.m_xf.R,localVector);
		}

		__proto.GetLocalPoint=function(worldPoint){
			return b2Math.MulXT(this.m_xf,worldPoint);
		}

		__proto.GetLocalVector=function(worldVector){
			return b2Math.MulTMV(this.m_xf.R,worldVector);
		}

		__proto.GetLinearVelocityFromWorldPoint=function(worldPoint){
			return new b2Vec2(this.m_linearVelocity.x-this.m_angularVelocity *(worldPoint.y-this.m_sweep.c.y),
			this.m_linearVelocity.y+this.m_angularVelocity *(worldPoint.x-this.m_sweep.c.x));
		}

		__proto.GetLinearVelocityFromLocalPoint=function(localPoint){
			var A=this.m_xf.R;
			var worldPoint=new b2Vec2(A.col1.x *localPoint.x+A.col2.x *localPoint.y,
			A.col1.y *localPoint.x+A.col2.y *localPoint.y);
			worldPoint.x+=this.m_xf.position.x;
			worldPoint.y+=this.m_xf.position.y;
			return new b2Vec2(this.m_linearVelocity.x-this.m_angularVelocity *(worldPoint.y-this.m_sweep.c.y),
			this.m_linearVelocity.y+this.m_angularVelocity *(worldPoint.x-this.m_sweep.c.x));
		}

		__proto.GetLinearDamping=function(){
			return this.m_linearDamping;
		}

		__proto.SetLinearDamping=function(linearDamping){
			this.m_linearDamping=linearDamping;
		}

		__proto.GetAngularDamping=function(){
			return this.m_angularDamping;
		}

		__proto.SetAngularDamping=function(angularDamping){
			this.m_angularDamping=angularDamping;
		}

		__proto.SetType=function(type){
			if (this.m_type==type){
				return;
			}
			this.m_type=type;
			this.ResetMassData();
			if (this.m_type==b2Body.b2_staticBody){
				this.m_linearVelocity.SetZero();
				this.m_angularVelocity=0.0;
			}
			this.SetAwake(true);
			this.m_force.SetZero();
			this.m_torque=0.0;
			for (var ce=this.m_contactList;ce;ce=ce.next){
				ce.contact.FlagForFiltering();
			}
		}

		__proto.GetType=function(){
			return this.m_type;
		}

		__proto.SetBullet=function(flag){
			if (flag){
				this.m_flags |=b2Body.e_bulletFlag;
			}
			else{
				this.m_flags &=~b2Body.e_bulletFlag;
			}
		}

		__proto.IsBullet=function(){
			return (this.m_flags & b2Body.e_bulletFlag)==b2Body.e_bulletFlag;
		}

		__proto.SetSleepingAllowed=function(flag){
			if (flag){
				this.m_flags |=b2Body.e_allowSleepFlag;
			}
			else{
				this.m_flags &=~b2Body.e_allowSleepFlag;
				this.SetAwake(true);
			}
		}

		__proto.SetAwake=function(flag){
			if (flag){
				this.m_flags |=b2Body.e_awakeFlag;
				this.m_sleepTime=0.0;
			}
			else{
				this.m_flags &=~b2Body.e_awakeFlag;
				this.m_sleepTime=0.0;
				this.m_linearVelocity.SetZero();
				this.m_angularVelocity=0.0;
				this.m_force.SetZero();
				this.m_torque=0.0;
			}
		}

		__proto.IsAwake=function(){
			return (this.m_flags & b2Body.e_awakeFlag)==b2Body.e_awakeFlag;
		}

		__proto.SetFixedRotation=function(fixed){
			if(fixed){
				this.m_flags |=b2Body.e_fixedRotationFlag;
			}
			else{
				this.m_flags &=~b2Body.e_fixedRotationFlag;
			}
			this.ResetMassData();
		}

		__proto.IsFixedRotation=function(){
			return (this.m_flags & b2Body.e_fixedRotationFlag)==b2Body.e_fixedRotationFlag;
		}

		__proto.SetActive=function(flag){
			if (flag==this.IsActive()){
				return;
			};
			var broadPhase;
			var f;
			if (flag){
				this.m_flags |=b2Body.e_activeFlag;
				broadPhase=this.m_world.m_contactManager.m_broadPhase;
				for (f=this.m_fixtureList;f;f=f.m_next){
					f.CreateProxy(broadPhase,this.m_xf);
				}
			}
			else{
				this.m_flags &=~b2Body.e_activeFlag;
				broadPhase=this.m_world.m_contactManager.m_broadPhase;
				for (f=this.m_fixtureList;f;f=f.m_next){
					f.DestroyProxy(broadPhase);
				};
				var ce=this.m_contactList;
				while (ce){
					var ce0=ce;
					ce=ce.next;
					this.m_world.m_contactManager.Destroy(ce0.contact);
				}
				this.m_contactList=null;
			}
		}

		__proto.IsActive=function(){
			return (this.m_flags & b2Body.e_activeFlag)==b2Body.e_activeFlag;
		}

		__proto.IsSleepingAllowed=function(){
			return(this.m_flags & b2Body.e_allowSleepFlag)==b2Body.e_allowSleepFlag;
		}

		__proto.GetFixtureList=function(){
			return this.m_fixtureList;
		}

		__proto.GetJointList=function(){
			return this.m_jointList;
		}

		__proto.GetControllerList=function(){
			return this.m_controllerList;
		}

		__proto.GetContactList=function(){
			return this.m_contactList;
		}

		__proto.GetNext=function(){
			return this.m_next;
		}

		__proto.GetUserData=function(){
			return this.m_userData;
		}

		__proto.SetUserData=function(data){
			this.m_userData=data;
		}

		__proto.GetWorld=function(){
			return this.m_world;
		}

		__proto.SynchronizeFixtures=function(){
			var xf1=b2Body.s_xf1;
			xf1.R.Set(this.m_sweep.a0);
			var tMat=xf1.R;
			var tVec=this.m_sweep.localCenter;
			xf1.position.x=this.m_sweep.c0.x-(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			xf1.position.y=this.m_sweep.c0.y-(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			var f;
			var broadPhase=this.m_world.m_contactManager.m_broadPhase;
			for (f=this.m_fixtureList;f;f=f.m_next){
				f.Synchronize(broadPhase,xf1,this.m_xf);
			}
		}

		__proto.SynchronizeTransform=function(){
			this.m_xf.R.Set(this.m_sweep.a);
			var tMat=this.m_xf.R;
			var tVec=this.m_sweep.localCenter;
			this.m_xf.position.x=this.m_sweep.c.x-(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			this.m_xf.position.y=this.m_sweep.c.y-(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
		}

		__proto.ShouldCollide=function(other){
			if (this.m_type !=b2Body.b2_dynamicBody && other.m_type !=b2Body.b2_dynamicBody){
				return false;
			}
			for (var jn=this.m_jointList;jn;jn=jn.next){
				if (jn.other==other)
					if (jn.joint.m_collideConnected==false){
					return false;
				}
			}
			return true;
		}

		__proto.Advance=function(t){
			this.m_sweep.Advance(t);
			this.m_sweep.c.SetV(this.m_sweep.c0);
			this.m_sweep.a=this.m_sweep.a0;
			this.SynchronizeTransform();
		}

		__proto.SetPreSolveCallback=function(value){this._preSolveCallback=value;}
		__proto.RunPreSolveCallback=function(contact,oldManifold){this._preSolveCallback && this._preSolveCallback(contact,oldManifold);}
		__proto.SetContactBeginCallback=function(value){this._contactBeginCallback=value;}
		__proto.RunContactBeginCallback=function(contact){this._contactBeginCallback && this._contactBeginCallback(contact);}
		__proto.SetPostSolveCallback=function(value){this._postSolveCallback=value;}
		__proto.RunPostSolveCallback=function(contact,impulse){this._postSolveCallback && this._postSolveCallback(contact,impulse)}
		__proto.SetContactEndCallback=function(value){this._contactEndCallback=value;}
		__proto.RunContactEndCallback=function(contact){this._contactEndCallback && this._contactEndCallback(contact);}
		__proto.GetAABB=function(){
			var aabb;
			var fixture=this.m_fixtureList;
			for(fixture;fixture;fixture=fixture.GetNext()){
				if(!aabb)aabb=fixture.GetAABB();
				else aabb=b2AABB.Combine(aabb,fixture.GetAABB());
			}
			return aabb;
		}

		__proto.SetSensor=function(sensor){
			var fixture=this.m_fixtureList;
			for(fixture;fixture;fixture=fixture.GetNext()){
				fixture.SetSensor(sensor);
			}
		}

		__proto.SetCustomGravity=function(v2){this.m_customGravity=v2;}
		__proto.GetCustomGravity=function(){return this.m_customGravity;}
		__proto.SetIsIgnoreFrictionX=function(value){this.m_isIgnoreFrictionX=value;}
		__proto.IsIgnoreFrictionX=function(){return this.m_isIgnoreFrictionX;}
		__proto.SetIsIgnoreFrictionY=function(value){this.m_isIgnoreFrictionY=value;}
		__proto.IsIgnoreFrictionY=function(){return this.m_isIgnoreFrictionY;}
		__proto.SetAllowBevelSlither=function(value){this.m_allowBevelSlither=value;}
		__proto.GetAllowBevelSlither=function(){return this.m_allowBevelSlither;}
		__proto.SetUphillZeroFriction=function(value){this.m_uphillZeroFriction=value;}
		__proto.GetUphillZeroFriction=function(){return this.m_uphillZeroFriction;}
		__proto.SetAllowMovement=function(value){this.m_allowMovement=value;}
		__proto.GetAllowMovement=function(){return this.m_allowMovement;}
		b2Body.e_islandFlag=0x0001;
		b2Body.e_awakeFlag=0x0002;
		b2Body.e_allowSleepFlag=0x0004;
		b2Body.e_bulletFlag=0x0008;
		b2Body.e_fixedRotationFlag=0x0010;
		b2Body.e_activeFlag=0x0020;
		b2Body.b2_staticBody=0;
		b2Body.b2_kinematicBody=1;
		b2Body.b2_dynamicBody=2;
		__static(b2Body,
		['s_xf1',function(){return this.s_xf1=new b2Transform();}
		]);
		return b2Body;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2bodydef.as
	;
	//class Box2D.Dynamics.b2BodyDef
	var b2BodyDef=(function(){
		function b2BodyDef(){
			this.isIgnoreFrictionX=false;
			this.isIgnoreFrictionY=false;
			this.allowBevelSlither=false;
			this.allowMovement=false;
			this.type=0;
			this.angle=NaN;
			this.angularVelocity=NaN;
			this.linearDamping=NaN;
			this.angularDamping=NaN;
			this.allowSleep=false;
			this.awake=false;
			this.fixedRotation=false;
			this.bullet=false;
			this.active=false;
			this.userData=null;
			this.inertiaScale=NaN;
			this.position=new b2Vec2();
			this.linearVelocity=new b2Vec2();
			this.userData={};
			this.position.Set(0.0,0.0);
			this.angle=0.0;
			this.linearVelocity.Set(0,0);
			this.angularVelocity=0.0;
			this.linearDamping=0.0;
			this.angularDamping=0.0;
			this.allowSleep=true;
			this.awake=true;
			this.fixedRotation=false;
			this.bullet=false;
			this.type=b2Body.b2_staticBody;
			this.active=true;
			this.inertiaScale=1.0;
			this.isIgnoreFrictionX=false;
			this.isIgnoreFrictionY=false;
			this.allowBevelSlither=true;
			this.allowMovement=true;
		}

		__class(b2BodyDef,'Box2D.Dynamics.b2BodyDef',true);
		return b2BodyDef;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2contactfilter.as
	;
	//class Box2D.Dynamics.b2ContactFilter
	var b2ContactFilter=(function(){
		function b2ContactFilter(){};
		__class(b2ContactFilter,'Box2D.Dynamics.b2ContactFilter',true);
		var __proto=b2ContactFilter.prototype;
		__proto.ShouldCollide=function(fixtureA,fixtureB){
			var filter1=fixtureA.GetFilterData();
			var filter2=fixtureB.GetFilterData();
			if (filter1.groupIndex==filter2.groupIndex && filter1.groupIndex !=0){
				return filter1.groupIndex > 0;
			};
			var collide=(filter1.maskBits & filter2.categoryBits)!=0 && (filter1.categoryBits & filter2.maskBits)!=0;
			return collide;
		}

		__proto.RayCollide=function(userData,fixture){
			if(!userData)
				return true;
			return this.ShouldCollide(userData,fixture);
		}

		__static(b2ContactFilter,
		['b2_defaultFilter',function(){return this.b2_defaultFilter=new b2ContactFilter();}
		]);
		return b2ContactFilter;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2contactimpulse.as
	//class Box2D.Dynamics.b2ContactImpulse
	var b2ContactImpulse=(function(){
		function b2ContactImpulse(){
			this.normalImpulses=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
			this.tangentImpulses=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
		}

		__class(b2ContactImpulse,'Box2D.Dynamics.b2ContactImpulse',true);
		return b2ContactImpulse;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2contactlistener.as
	;
	//class Box2D.Dynamics.b2ContactListener
	var b2ContactListener=(function(){
		function b2ContactListener(){};
		__class(b2ContactListener,'Box2D.Dynamics.b2ContactListener',true);
		var __proto=b2ContactListener.prototype;
		__proto.BeginContact=LAYAFNVOID/*function(contact){}*/
		__proto.EndContact=LAYAFNVOID/*function(contact){}*/
		__proto.PreSolve=LAYAFNVOID/*function(contact,oldManifold){}*/
		__proto.PostSolve=LAYAFNVOID/*function(contact,impulse){}*/
		__static(b2ContactListener,
		['b2_defaultListener',function(){return this.b2_defaultListener=new b2ContactListener();}
		]);
		b2ContactListener.__init$=function(){
			/*namespace*/;
		}

		return b2ContactListener;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2contactmanager.as
	;
	//class Box2D.Dynamics.b2ContactManager
	var b2ContactManager=(function(){
		function b2ContactManager(){
			this.m_world=null;
			this.m_broadPhase=null;
			this.m_contactList=null;
			this.m_contactCount=0;
			this.m_contactFilter=null;
			this.m_contactListener=null;
			this.m_contactFactory=null;
			this.m_allocator=null;
			this.m_world=null;
			this.m_contactCount=0;
			this.m_contactFilter=b2ContactFilter.b2_defaultFilter;
			this.m_contactListener=b2ContactListener.b2_defaultListener;
			this.m_contactFactory=new b2ContactFactory(this.m_allocator);
			this.m_broadPhase=new b2DynamicTreeBroadPhase();
		}

		__class(b2ContactManager,'Box2D.Dynamics.b2ContactManager',true);
		var __proto=b2ContactManager.prototype;
		__proto.AddPair=function(proxyUserDataA,proxyUserDataB){
			var fixtureA=proxyUserDataA;
			var fixtureB=proxyUserDataB;
			var bodyA=fixtureA.GetBody();
			var bodyB=fixtureB.GetBody();
			if (bodyA==bodyB)
				return;
			var edge=bodyB.GetContactList();
			while (edge){
				if (edge.other==bodyA){
					var fA=edge.contact.GetFixtureA();
					var fB=edge.contact.GetFixtureB();
					if (fA==fixtureA && fB==fixtureB)
						return;
					if (fA==fixtureB && fB==fixtureA)
						return;
				}
				edge=edge.next;
			}
			if (bodyB.ShouldCollide(bodyA)==false){
				return;
			}
			if (this.m_contactFilter.ShouldCollide(fixtureA,fixtureB)==false){
				return;
			};
			var c=this.m_contactFactory.Create(fixtureA,fixtureB);
			fixtureA=c.GetFixtureA();
			fixtureB=c.GetFixtureB();
			bodyA=fixtureA.m_body;
			bodyB=fixtureB.m_body;
			c.m_prev=null;
			c.m_next=this.m_world.m_contactList;
			if (this.m_world.m_contactList !=null){
				this.m_world.m_contactList.m_prev=c;
			}
			this.m_world.m_contactList=c;
			c.m_nodeA.contact=c;
			c.m_nodeA.other=bodyB;
			c.m_nodeA.prev=null;
			c.m_nodeA.next=bodyA.m_contactList;
			if (bodyA.m_contactList !=null){
				bodyA.m_contactList.prev=c.m_nodeA;
			}
			bodyA.m_contactList=c.m_nodeA;
			c.m_nodeB.contact=c;
			c.m_nodeB.other=bodyA;
			c.m_nodeB.prev=null;
			c.m_nodeB.next=bodyB.m_contactList;
			if (bodyB.m_contactList !=null){
				bodyB.m_contactList.prev=c.m_nodeB;
			}
			bodyB.m_contactList=c.m_nodeB;
			++this.m_world.m_contactCount;
			return;
		}

		__proto.FindNewContacts=function(){
			this.m_broadPhase.UpdatePairs(__bind(this,this.AddPair));
		}

		__proto.Destroy=function(c){
			var fixtureA=c.GetFixtureA();
			var fixtureB=c.GetFixtureB();
			var bodyA=fixtureA.GetBody();
			var bodyB=fixtureB.GetBody();
			if (c.IsTouching()){
				this.m_contactListener.EndContact(c);
			}
			if (c.m_prev){
				c.m_prev.m_next=c.m_next;
			}
			if (c.m_next){
				c.m_next.m_prev=c.m_prev;
			}
			if (c==this.m_world.m_contactList){
				this.m_world.m_contactList=c.m_next;
			}
			if (c.m_nodeA.prev){
				c.m_nodeA.prev.next=c.m_nodeA.next;
			}
			if (c.m_nodeA.next){
				c.m_nodeA.next.prev=c.m_nodeA.prev;
			}
			if (c.m_nodeA==bodyA.m_contactList){
				bodyA.m_contactList=c.m_nodeA.next;
			}
			if (c.m_nodeB.prev){
				c.m_nodeB.prev.next=c.m_nodeB.next;
			}
			if (c.m_nodeB.next){
				c.m_nodeB.next.prev=c.m_nodeB.prev;
			}
			if (c.m_nodeB==bodyB.m_contactList){
				bodyB.m_contactList=c.m_nodeB.next;
			}
			this.m_contactFactory.Destroy(c);
			--this.m_contactCount;
		}

		__proto.Collide=function(){
			var c=this.m_world.m_contactList;
			while (c){
				var fixtureA=c.GetFixtureA();
				var fixtureB=c.GetFixtureB();
				var bodyA=fixtureA.GetBody();
				var bodyB=fixtureB.GetBody();
				if (bodyA.IsAwake()==false && bodyB.IsAwake()==false){
					c=c.GetNext();
					continue ;
				}
				if (c.m_flags & b2Contact.e_filterFlag){
					if (bodyB.ShouldCollide(bodyA)==false){
						var cNuke=c;
						c=cNuke.GetNext();
						this.Destroy(cNuke);
						continue ;
					}
					if (this.m_contactFilter.ShouldCollide(fixtureA,fixtureB)==false){
						cNuke=c;
						c=cNuke.GetNext();
						this.Destroy(cNuke);
						continue ;
					}
					c.m_flags &=~b2Contact.e_filterFlag;
				};
				var proxyA=fixtureA.m_proxy;
				var proxyB=fixtureB.m_proxy;
				var overlap=this.m_broadPhase.TestOverlap(proxyA,proxyB);
				if (overlap==false){
					cNuke=c;
					c=cNuke.GetNext();
					this.Destroy(cNuke);
					continue ;
				}
				c.Update(this.m_contactListener);
				c=c.GetNext();
			}
		}

		__static(b2ContactManager,
		['s_evalCP',function(){return this.s_evalCP=new b2ContactPoint();}
		]);
		return b2ContactManager;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2debugdraw.as
	;
	//class Box2D.Dynamics.b2DebugDraw
	var b2DebugDraw=(function(){
		function b2DebugDraw(){
			this.m_drawFlags=0;
			this.m_sprite=null;
			this.m_drawScale=1.0;
			this.m_lineThickness=1.0;
			this.m_alpha=1.0;
			this.m_fillAlpha=1.0;
			this.m_xformScale=1.0;
			this.m_drawFlags=0;
		}

		__class(b2DebugDraw,'Box2D.Dynamics.b2DebugDraw',true);
		var __proto=b2DebugDraw.prototype;
		__proto.SetFlags=function(flags){
			this.m_drawFlags=flags;
		}

		__proto.GetFlags=function(){
			return this.m_drawFlags;
		}

		__proto.AppendFlags=function(flags){
			this.m_drawFlags |=flags;
		}

		__proto.ClearFlags=function(flags){
			this.m_drawFlags &=~flags;
		}

		__proto.SetSprite=function(sprite){
			this.m_sprite=sprite;
		}

		__proto.GetSprite=function(){
			return this.m_sprite;
		}

		__proto.SetDrawScale=function(drawScale){
			this.m_drawScale=drawScale;
		}

		__proto.GetDrawScale=function(){
			return this.m_drawScale;
		}

		__proto.SetLineThickness=function(lineThickness){
			this.m_lineThickness=lineThickness;
		}

		__proto.GetLineThickness=function(){
			return this.m_lineThickness;
		}

		__proto.SetAlpha=function(alpha){
			this.m_alpha=alpha;
		}

		__proto.GetAlpha=function(){
			return this.m_alpha;
		}

		__proto.SetFillAlpha=function(alpha){
			this.m_fillAlpha=alpha;
		}

		__proto.GetFillAlpha=function(){
			return this.m_fillAlpha;
		}

		__proto.SetXFormScale=function(xformScale){
			this.m_xformScale=xformScale;
		}

		__proto.GetXFormScale=function(){
			return this.m_xformScale;
		}

		__proto.DrawPolygon=function(vertices,vertexCount,color){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,color.color,this.m_alpha);
			this.m_sprite.graphics.moveTo(vertices[0].x *this.m_drawScale,vertices[0].y *this.m_drawScale);
			for (var i=1;i < vertexCount;i++){
				this.m_sprite.graphics.lineTo(vertices[i].x *this.m_drawScale,vertices[i].y *this.m_drawScale);
			}
			this.m_sprite.graphics.lineTo(vertices[0].x *this.m_drawScale,vertices[0].y *this.m_drawScale);
		}

		__proto.DrawSolidPolygon=function(vertices,vertexCount,color){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,color.color,this.m_alpha);
			this.m_sprite.graphics.moveTo(vertices[0].x *this.m_drawScale,vertices[0].y *this.m_drawScale);
			this.m_sprite.graphics.beginFill(color.color,this.m_fillAlpha);
			for (var i=1;i < vertexCount;i++){
				this.m_sprite.graphics.lineTo(vertices[i].x *this.m_drawScale,vertices[i].y *this.m_drawScale);
			}
			this.m_sprite.graphics.lineTo(vertices[0].x *this.m_drawScale,vertices[0].y *this.m_drawScale);
			this.m_sprite.graphics.endFill();
		}

		__proto.DrawCircle=function(center,radius,color){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,color.color,this.m_alpha);
			this.m_sprite.graphics.drawCircle(center.x *this.m_drawScale,center.y *this.m_drawScale,radius *this.m_drawScale);
		}

		__proto.DrawSolidCircle=function(center,radius,axis,color){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,color.color,this.m_alpha);
			this.m_sprite.graphics.moveTo(0,0);
			this.m_sprite.graphics.beginFill(color.color,this.m_fillAlpha);
			this.m_sprite.graphics.drawCircle(center.x *this.m_drawScale,center.y *this.m_drawScale,radius *this.m_drawScale);
			this.m_sprite.graphics.endFill();
			this.m_sprite.graphics.moveTo(center.x *this.m_drawScale,center.y *this.m_drawScale);
			this.m_sprite.graphics.lineTo((center.x+axis.x*radius)*this.m_drawScale,(center.y+axis.y*radius)*this.m_drawScale);
		}

		__proto.DrawSegment=function(p1,p2,color){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,color.color,this.m_alpha);
			this.m_sprite.graphics.moveTo(p1.x *this.m_drawScale,p1.y *this.m_drawScale);
			this.m_sprite.graphics.lineTo(p2.x *this.m_drawScale,p2.y *this.m_drawScale);
		}

		__proto.DrawTransform=function(xf){
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,0xff0000,this.m_alpha);
			this.m_sprite.graphics.moveTo(xf.position.x *this.m_drawScale,xf.position.y *this.m_drawScale);
			this.m_sprite.graphics.lineTo((xf.position.x+this.m_xformScale*xf.R.col1.x)*this.m_drawScale,(xf.position.y+this.m_xformScale*xf.R.col1.y)*this.m_drawScale);
			this.m_sprite.graphics.lineStyle(this.m_lineThickness,0x00ff00,this.m_alpha);
			this.m_sprite.graphics.moveTo(xf.position.x *this.m_drawScale,xf.position.y *this.m_drawScale);
			this.m_sprite.graphics.lineTo((xf.position.x+this.m_xformScale*xf.R.col2.x)*this.m_drawScale,(xf.position.y+this.m_xformScale*xf.R.col2.y)*this.m_drawScale);
		}

		b2DebugDraw.e_shapeBit=0x0001;
		b2DebugDraw.e_jointBit=0x0002;
		b2DebugDraw.e_aabbBit=0x0004;
		b2DebugDraw.e_pairBit=0x0008;
		b2DebugDraw.e_centerOfMassBit=0x0010;
		b2DebugDraw.e_controllerBit=0x0020;
		return b2DebugDraw;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2destructionlistener.as
	;
	//class Box2D.Dynamics.b2DestructionListener
	var b2DestructionListener=(function(){
		function b2DestructionListener(){};
		__class(b2DestructionListener,'Box2D.Dynamics.b2DestructionListener',true);
		var __proto=b2DestructionListener.prototype;
		__proto.SayGoodbyeJoint=LAYAFNVOID/*function(joint){}*/
		__proto.SayGoodbyeFixture=LAYAFNVOID/*function(fixture){}*/
		return b2DestructionListener;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2filterdata.as
	;
	//class Box2D.Dynamics.b2FilterData
	var b2FilterData=(function(){
		function b2FilterData(){
			this.categoryBits=0x0001;
			this.maskBits=0xFFFF;
			this.groupIndex=0;
		}

		__class(b2FilterData,'Box2D.Dynamics.b2FilterData',true);
		var __proto=b2FilterData.prototype;
		__proto.Copy=function(){
			var copy=new b2FilterData();
			copy.categoryBits=this.categoryBits;
			copy.maskBits=this.maskBits;
			copy.groupIndex=this.groupIndex;
			return copy;
		}

		return b2FilterData;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2fixture.as
	;
	//class Box2D.Dynamics.b2Fixture
	var b2Fixture=(function(){
		function b2Fixture(){
			this.m_massData=null;
			this.m_aabb=null;
			this.m_density=NaN;
			this.m_next=null;
			this.m_body=null;
			this.m_shape=null;
			this.m_friction=NaN;
			this.m_restitution=NaN;
			this.m_proxy=null;
			this.m_isSensor=false;
			this.m_userData=null;
			this.m_filter=new b2FilterData();
			this.m_aabb=new b2AABB();
			this.m_userData=null;
			this.m_body=null;
			this.m_next=null;
			this.m_shape=null;
			this.m_density=0.0;
			this.m_friction=0.0;
			this.m_restitution=0.0;
		}

		__class(b2Fixture,'Box2D.Dynamics.b2Fixture',true);
		var __proto=b2Fixture.prototype;
		__proto.GetType=function(){
			return this.m_shape.GetType();
		}

		__proto.GetShape=function(){
			return this.m_shape;
		}

		__proto.SetSensor=function(sensor){
			if (this.m_isSensor==sensor)
				return;
			this.m_isSensor=sensor;
			if (this.m_body==null)
				return;
			var edge=this.m_body.GetContactList();
			while (edge){
				var contact=edge.contact;
				var fixtureA=contact.GetFixtureA();
				var fixtureB=contact.GetFixtureB();
				if (fixtureA==this || fixtureB==this)
					contact.SetSensor(fixtureA.IsSensor()|| fixtureB.IsSensor());
				edge=edge.next;
			}
		}

		__proto.IsSensor=function(){
			return this.m_isSensor;
		}

		__proto.SetFilterData=function(filter){
			this.m_filter=filter.Copy();
			if (this.m_body)
				return;
			var edge=this.m_body.GetContactList();
			while (edge){
				var contact=edge.contact;
				var fixtureA=contact.GetFixtureA();
				var fixtureB=contact.GetFixtureB();
				if (fixtureA==this || fixtureB==this)
					contact.FlagForFiltering();
				edge=edge.next;
			}
		}

		__proto.GetFilterData=function(){
			return this.m_filter.Copy();
		}

		__proto.GetBody=function(){
			return this.m_body;
		}

		__proto.GetNext=function(){
			return this.m_next;
		}

		__proto.GetUserData=function(){
			return this.m_userData;
		}

		__proto.SetUserData=function(data){
			this.m_userData=data;
		}

		__proto.TestPoint=function(p){
			return this.m_shape.TestPoint(this.m_body.GetTransform(),p);
		}

		__proto.RayCast=function(output,input){
			return this.m_shape.RayCast(output,input,this.m_body.GetTransform());
		}

		__proto.GetMassData=function(massData){
			if (massData==null){
				massData=new b2MassData();
			}
			this.m_shape.ComputeMass(massData,this.m_density);
			return massData;
		}

		__proto.SetDensity=function(density){
			this.m_density=density;
		}

		__proto.GetDensity=function(){
			return this.m_density;
		}

		__proto.GetFriction=function(){
			return this.m_friction;
		}

		__proto.SetFriction=function(friction){
			this.m_friction=friction;
		}

		__proto.GetRestitution=function(){
			return this.m_restitution;
		}

		__proto.SetRestitution=function(restitution){
			this.m_restitution=restitution;
		}

		__proto.GetAABB=function(){
			return this.m_aabb;
		}

		__proto.Create=function(body,xf,def){
			this.m_userData=def.userData;
			this.m_friction=def.friction;
			this.m_restitution=def.restitution;
			this.m_body=body;
			this.m_next=null;
			this.m_filter=def.filter.Copy();
			this.m_isSensor=def.isSensor;
			this.m_shape=def.shape.Copy();
			this.m_density=def.density;
		}

		__proto.Destroy=function(){
			this.m_shape=null;
		}

		__proto.CreateProxy=function(broadPhase,xf){
			this.m_shape.ComputeAABB(this.m_aabb,xf);
			this.m_proxy=broadPhase.CreateProxy(this.m_aabb,this);
		}

		__proto.DestroyProxy=function(broadPhase){
			if (this.m_proxy==null){
				return;
			}
			broadPhase.DestroyProxy(this.m_proxy);
			this.m_proxy=null;
		}

		__proto.Synchronize=function(broadPhase,transform1,transform2){
			if (!this.m_proxy)
				return;
			var aabb1=new b2AABB();
			var aabb2=new b2AABB();
			this.m_shape.ComputeAABB(aabb1,transform1);
			this.m_shape.ComputeAABB(aabb2,transform2);
			this.m_aabb.Combine(aabb1,aabb2);
			var displacement=b2Math.SubtractVV(transform2.position,transform1.position);
			broadPhase.MoveProxy(this.m_proxy,this.m_aabb,displacement);
		}

		return b2Fixture;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2fixturedef.as
	;
	//class Box2D.Dynamics.b2FixtureDef
	var b2FixtureDef=(function(){
		function b2FixtureDef(){
			this.shape=null;
			this.userData=null;
			this.friction=NaN;
			this.restitution=NaN;
			this.density=NaN;
			this.isSensor=false;
			this.filter=new b2FilterData();
			this.shape=null;
			this.userData=null;
			this.friction=0.2;
			this.restitution=0.0;
			this.density=1.0;
			this.filter.categoryBits=0x0001;
			this.filter.maskBits=0xFFFF;
			this.filter.groupIndex=0;
			this.isSensor=false;
		}

		__class(b2FixtureDef,'Box2D.Dynamics.b2FixtureDef',true);
		return b2FixtureDef;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2island.as
	;
	//class Box2D.Dynamics.b2Island
	var b2Island=(function(){
		function b2Island(){
			this.m_allocator=null;
			this.m_listener=null;
			this.m_contactSolver=null;
			this.m_bodies=null;
			this.m_contacts=null;
			this.m_joints=null;
			this.m_bodyCount=0;
			this.m_jointCount=0;
			this.m_contactCount=0;
			this.m_bodyCapacity=0;
			this.m_contactCapacity=0;
			this.m_jointCapacity=0;
			this.m_bodies=[];
			this.m_contacts=[];
			this.m_joints=[];
		}

		__class(b2Island,'Box2D.Dynamics.b2Island',true);
		var __proto=b2Island.prototype;
		__proto.Initialize=function(bodyCapacity,contactCapacity,jointCapacity,allocator,listener,contactSolver){
			var i=0;
			this.m_bodyCapacity=bodyCapacity;
			this.m_contactCapacity=contactCapacity;
			this.m_jointCapacity=jointCapacity;
			this.m_bodyCount=0;
			this.m_contactCount=0;
			this.m_jointCount=0;
			this.m_allocator=allocator;
			this.m_listener=listener;
			this.m_contactSolver=contactSolver;
			for (i=this.m_bodies.length;i < bodyCapacity;i++)
			this.m_bodies[i]=null;
			for (i=this.m_contacts.length;i < contactCapacity;i++)
			this.m_contacts[i]=null;
			for (i=this.m_joints.length;i < jointCapacity;i++)
			this.m_joints[i]=null;
		}

		__proto.Clear=function(){
			this.m_bodyCount=0;
			this.m_contactCount=0;
			this.m_jointCount=0;
		}

		__proto.Solve=function(step,gravity,allowSleep){
			var i=0;
			var j=0;
			var b;
			var joint;
			for (i=0;i < this.m_bodyCount;++i){
				b=this.m_bodies[i];
				if (b.GetType()!=b2Body.b2_dynamicBody)
					continue ;
				var l_gravity=b.m_customGravity?b.m_customGravity:gravity;
				b.m_linearVelocity.x+=step.dt *(l_gravity.x+b.m_invMass *b.m_force.x);
				b.m_linearVelocity.y+=step.dt *(l_gravity.y+b.m_invMass *b.m_force.y);
				b.m_angularVelocity+=step.dt *b.m_invI *b.m_torque;
				b.m_linearVelocity.Multiply(b2Math.Clamp(1.0-step.dt *b.m_linearDamping,0.0,1.0));
				b.m_angularVelocity *=b2Math.Clamp(1.0-step.dt *b.m_angularDamping,0.0,1.0);
			}
			this.m_contactSolver.Initialize(step,this.m_contacts,this.m_contactCount,this.m_allocator);
			var contactSolver=this.m_contactSolver;
			contactSolver.InitVelocityConstraints(step);
			for (i=0;i < this.m_jointCount;++i){
				joint=this.m_joints[i];
				joint.InitVelocityConstraints(step);
			}
			for (i=0;i < step.velocityIterations;++i){
				for (j=0;j < this.m_jointCount;++j){
					joint=this.m_joints[j];
					joint.SolveVelocityConstraints(step);
				}
				contactSolver.SolveVelocityConstraints();
			}
			for (i=0;i < this.m_jointCount;++i){
				joint=this.m_joints[i];
				joint.FinalizeVelocityConstraints();
			}
			contactSolver.FinalizeVelocityConstraints();
			for (i=0;i < this.m_bodyCount;++i){
				b=this.m_bodies[i];
				if (b.GetType()==b2Body.b2_staticBody)
					continue ;
				var translationX=step.dt *b.m_linearVelocity.x;
				var translationY=step.dt *b.m_linearVelocity.y;
				if ((translationX*translationX+translationY*translationY)> b2Settings.b2_maxTranslationSquared){
					b.m_linearVelocity.Normalize();
					b.m_linearVelocity.x *=/*Box2D.Common.b2Settings.b2_maxTranslation*/2.0 *step.inv_dt;
					b.m_linearVelocity.y *=/*Box2D.Common.b2Settings.b2_maxTranslation*/2.0 *step.inv_dt;
				};
				var rotation=step.dt *b.m_angularVelocity;
				if (rotation *rotation > b2Settings.b2_maxRotationSquared){
					if (b.m_angularVelocity < 0.0){
						b.m_angularVelocity=-b2Settings.b2_maxRotation *step.inv_dt;
					}
					else{
						b.m_angularVelocity=b2Settings.b2_maxRotation *step.inv_dt;
					}
				}
				b.m_sweep.c0.SetV(b.m_sweep.c);
				b.m_sweep.a0=b.m_sweep.a;
				if(b.m_allowMovement){
					b.m_sweep.c.x+=step.dt *b.m_linearVelocity.x;
					b.m_sweep.c.y+=step.dt *b.m_linearVelocity.y;
				}
				b.m_sweep.a+=step.dt *b.m_angularVelocity;
				b.SynchronizeTransform();
			}
			for (i=0;i < step.positionIterations;++i){
				var contactsOkay=contactSolver.SolvePositionConstraints(/*Box2D.Common.b2Settings.b2_contactBaumgarte*/0.2);
				var jointsOkay=true;
				for (j=0;j < this.m_jointCount;++j){
					joint=this.m_joints[j];
					var jointOkay=joint.SolvePositionConstraints(/*Box2D.Common.b2Settings.b2_contactBaumgarte*/0.2);
					jointsOkay=jointsOkay && jointOkay;
				}
				if (contactsOkay && jointsOkay){
					break ;
				}
			}
			this.Report(contactSolver.m_constraints);
			if (allowSleep){
				var minSleepTime=Number.MAX_VALUE;
				var linTolSqr=/*Box2D.Common.b2Settings.b2_linearSleepTolerance*/0.01 */*Box2D.Common.b2Settings.b2_linearSleepTolerance*/0.01;
				var angTolSqr=b2Settings.b2_angularSleepTolerance *b2Settings.b2_angularSleepTolerance;
				for (i=0;i < this.m_bodyCount;++i){
					b=this.m_bodies[i];
					if (b.GetType()==b2Body.b2_staticBody){
						continue ;
					}
					if ((b.m_flags & b2Body.e_allowSleepFlag)==0){
						b.m_sleepTime=0.0;
						minSleepTime=0.0;
					}
					if ((b.m_flags & b2Body.e_allowSleepFlag)==0 ||
						b.m_angularVelocity *b.m_angularVelocity > angTolSqr ||
					b2Math.Dot(b.m_linearVelocity,b.m_linearVelocity)> linTolSqr){
						b.m_sleepTime=0.0;
						minSleepTime=0.0;
					}
					else{
						b.m_sleepTime+=step.dt;
						minSleepTime=b2Math.Min(minSleepTime,b.m_sleepTime);
					}
				}
				if (minSleepTime >=/*Box2D.Common.b2Settings.b2_timeToSleep*/0.5){
					for (i=0;i < this.m_bodyCount;++i){
						b=this.m_bodies[i];
						b.SetAwake(false);
					}
				}
			}
		}

		__proto.SolveTOI=function(subStep){
			var i=0;
			var j=0;
			this.m_contactSolver.Initialize(subStep,this.m_contacts,this.m_contactCount,this.m_allocator);
			var contactSolver=this.m_contactSolver;
			for (i=0;i < this.m_jointCount;++i){
				this.m_joints[i].InitVelocityConstraints(subStep);
			}
			for (i=0;i < subStep.velocityIterations;++i){
				contactSolver.SolveVelocityConstraints();
				for (j=0;j < this.m_jointCount;++j){
					this.m_joints[j].SolveVelocityConstraints(subStep);
				}
			}
			for (i=0;i < this.m_bodyCount;++i){
				var b=this.m_bodies[i];
				if (b.GetType()==b2Body.b2_staticBody)
					continue ;
				var translationX=subStep.dt *b.m_linearVelocity.x;
				var translationY=subStep.dt *b.m_linearVelocity.y;
				if ((translationX*translationX+translationY*translationY)> b2Settings.b2_maxTranslationSquared){
					b.m_linearVelocity.Normalize();
					b.m_linearVelocity.x *=/*Box2D.Common.b2Settings.b2_maxTranslation*/2.0 *subStep.inv_dt;
					b.m_linearVelocity.y *=/*Box2D.Common.b2Settings.b2_maxTranslation*/2.0 *subStep.inv_dt;
				};
				var rotation=subStep.dt *b.m_angularVelocity;
				if (rotation *rotation > b2Settings.b2_maxRotationSquared){
					if (b.m_angularVelocity < 0.0){
						b.m_angularVelocity=-b2Settings.b2_maxRotation *subStep.inv_dt;
					}
					else{
						b.m_angularVelocity=b2Settings.b2_maxRotation *subStep.inv_dt;
					}
				}
				b.m_sweep.c0.SetV(b.m_sweep.c);
				b.m_sweep.a0=b.m_sweep.a;
				b.m_sweep.c.x+=subStep.dt *b.m_linearVelocity.x;
				b.m_sweep.c.y+=subStep.dt *b.m_linearVelocity.y;
				b.m_sweep.a+=subStep.dt *b.m_angularVelocity;
				b.SynchronizeTransform();
			};
			var k_toiBaumgarte=0.75;
			for (i=0;i < subStep.positionIterations;++i){
				var contactsOkay=contactSolver.SolvePositionConstraints(k_toiBaumgarte);
				var jointsOkay=true;
				for (j=0;j < this.m_jointCount;++j){
					var jointOkay=this.m_joints[j].SolvePositionConstraints(/*Box2D.Common.b2Settings.b2_contactBaumgarte*/0.2);
					jointsOkay=jointsOkay && jointOkay;
				}
				if (contactsOkay && jointsOkay){
					break ;
				}
			}
			this.Report(contactSolver.m_constraints);
		}

		__proto.Report=function(constraints){
			if (this.m_listener==null){
				return;
			}
			for (var i=0;i < this.m_contactCount;++i){
				var c=this.m_contacts[i];
				var cc=constraints[ i];
				for (var j=0;j < cc.pointCount;++j){
					b2Island.s_impulse.normalImpulses[j]=cc.points[j].normalImpulse;
					b2Island.s_impulse.tangentImpulses[j]=cc.points[j].tangentImpulse;
				}
				this.m_listener.PostSolve(c,b2Island.s_impulse);
			}
		}

		__proto.AddBody=function(body){
			body.m_islandIndex=this.m_bodyCount;
			this.m_bodies[this.m_bodyCount++]=body;
		}

		__proto.AddContact=function(contact){
			this.m_contacts[this.m_contactCount++]=contact;
		}

		__proto.AddJoint=function(joint){
			this.m_joints[this.m_jointCount++]=joint;
		}

		__static(b2Island,
		['s_impulse',function(){return this.s_impulse=new b2ContactImpulse();}
		]);
		return b2Island;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2timestep.as
	//class Box2D.Dynamics.b2TimeStep
	var b2TimeStep=(function(){
		function b2TimeStep(){
			this.dt=NaN;
			this.inv_dt=NaN;
			this.dtRatio=NaN;
			this.velocityIterations=0;
			this.positionIterations=0;
			this.warmStarting=false;
		}

		__class(b2TimeStep,'Box2D.Dynamics.b2TimeStep',true);
		var __proto=b2TimeStep.prototype;
		__proto.Set=function(step){
			this.dt=step.dt;
			this.inv_dt=step.inv_dt;
			this.positionIterations=step.positionIterations;
			this.velocityIterations=step.velocityIterations;
			this.warmStarting=step.warmStarting;
		}

		return b2TimeStep;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/b2world.as
	;
	//class Box2D.Dynamics.b2World
	var b2World=(function(){
		function b2World(gravity,doSleep){
			this.m_flags=0;
			this.m_bodyList=null;
			this.m_jointList=null;
			this.m_contactList=null;
			this.m_bodyCount=0;
			this.m_contactCount=0;
			this.m_jointCount=0;
			this.m_controllerList=null;
			this.m_controllerCount=0;
			this.m_gravity=null;
			this.m_allowSleep=false;
			this.m_groundBody=null;
			this.m_destructionListener=null;
			this.m_debugDraw=null;
			this.m_inv_dt0=NaN;
			this.s_stack=[];
			this.m_contactManager=new b2ContactManager();
			this.m_contactSolver=new b2ContactSolver();
			this.m_island=new b2Island();
			this.m_destructionListener=null;
			this.m_debugDraw=null;
			this.m_bodyList=null;
			this.m_contactList=null;
			this.m_jointList=null;
			this.m_controllerList=null;
			this.m_bodyCount=0;
			this.m_contactCount=0;
			this.m_jointCount=0;
			this.m_controllerCount=0;
			b2World.m_warmStarting=true;
			b2World.m_continuousPhysics=true;
			this.m_allowSleep=doSleep;
			this.m_gravity=gravity;
			this.m_inv_dt0=0.0;
			this.m_contactManager.m_world=this;
			var bd=new b2BodyDef();
			this.m_groundBody=this.CreateBody(bd);
		}

		__class(b2World,'Box2D.Dynamics.b2World',true);
		var __proto=b2World.prototype;
		__proto.SetDestructionListener=function(listener){
			this.m_destructionListener=listener;
		}

		__proto.SetContactFilter=function(filter){
			this.m_contactManager.m_contactFilter=filter;
		}

		__proto.SetContactListener=function(listener){
			this.m_contactManager.m_contactListener=listener;
		}

		__proto.SetDebugDraw=function(debugDraw){
			this.m_debugDraw=debugDraw;
		}

		__proto.SetBroadPhase=function(broadPhase){
			var oldBroadPhase=this.m_contactManager.m_broadPhase;
			this.m_contactManager.m_broadPhase=broadPhase;
			for (var b=this.m_bodyList;b;b=b.m_next){
				for (var f=b.m_fixtureList;f;f=f.m_next){
					f.m_proxy=broadPhase.CreateProxy(oldBroadPhase.GetFatAABB(f.m_proxy),f);
				}
			}
		}

		__proto.Validate=function(){
			this.m_contactManager.m_broadPhase.Validate();
		}

		__proto.GetProxyCount=function(){
			return this.m_contactManager.m_broadPhase.GetProxyCount();
		}

		__proto.CreateBody=function(def){
			if (this.IsLocked()==true){
				return null;
			};
			var b=new b2Body(def,this);
			b.m_prev=null;
			b.m_next=this.m_bodyList;
			if (this.m_bodyList){
				this.m_bodyList.m_prev=b;
			}
			this.m_bodyList=b;
			++this.m_bodyCount;
			return b;
		}

		__proto.DestroyBody=function(b){
			if(b==null)return;
			if (this.IsLocked()==true){
				return;
			};
			var jn=b.m_jointList;
			while (jn){
				var jn0=jn;
				jn=jn.next;
				if (this.m_destructionListener){
					this.m_destructionListener.SayGoodbyeJoint(jn0.joint);
				}
				this.DestroyJoint(jn0.joint);
			};
			var coe=b.m_controllerList;
			while (coe){
				var coe0=coe;
				coe=coe.nextController;
				coe0.controller.RemoveBody(b);
			};
			var ce=b.m_contactList;
			while (ce){
				var ce0=ce;
				ce=ce.next;
				this.m_contactManager.Destroy(ce0.contact);
			}
			b.m_contactList=null;
			var f=b.m_fixtureList;
			while (f){
				var f0=f;
				f=f.m_next;
				if (this.m_destructionListener){
					this.m_destructionListener.SayGoodbyeFixture(f0);
				}
				f0.DestroyProxy(this.m_contactManager.m_broadPhase);
				f0.Destroy();
			}
			b.m_fixtureList=null;
			b.m_fixtureCount=0;
			if (b.m_prev){
				b.m_prev.m_next=b.m_next;
			}
			if (b.m_next){
				b.m_next.m_prev=b.m_prev;
			}
			if (b==this.m_bodyList){
				this.m_bodyList=b.m_next;
			}
			--this.m_bodyCount;
		}

		__proto.CreateJoint=function(def){
			var j=b2Joint.Create(def,null);
			j.m_prev=null;
			j.m_next=this.m_jointList;
			if (this.m_jointList){
				this.m_jointList.m_prev=j;
			}
			this.m_jointList=j;
			++this.m_jointCount;
			j.m_edgeA.joint=j;
			j.m_edgeA.other=j.m_bodyB;
			j.m_edgeA.prev=null;
			j.m_edgeA.next=j.m_bodyA.m_jointList;
			if (j.m_bodyA.m_jointList)j.m_bodyA.m_jointList.prev=j.m_edgeA;
			j.m_bodyA.m_jointList=j.m_edgeA;
			j.m_edgeB.joint=j;
			j.m_edgeB.other=j.m_bodyA;
			j.m_edgeB.prev=null;
			j.m_edgeB.next=j.m_bodyB.m_jointList;
			if (j.m_bodyB.m_jointList)j.m_bodyB.m_jointList.prev=j.m_edgeB;
			j.m_bodyB.m_jointList=j.m_edgeB;
			var bodyA=def.bodyA;
			var bodyB=def.bodyB;
			if (def.collideConnected==false){
				var edge=bodyB.GetContactList();
				while (edge){
					if (edge.other==bodyA){
						edge.contact.FlagForFiltering();
					}
					edge=edge.next;
				}
			}
			return j;
		}

		__proto.DestroyJoint=function(j){
			var collideConnected=j.m_collideConnected;
			if (j.m_prev){
				j.m_prev.m_next=j.m_next;
			}
			if (j.m_next){
				j.m_next.m_prev=j.m_prev;
			}
			if (j==this.m_jointList){
				this.m_jointList=j.m_next;
			};
			var bodyA=j.m_bodyA;
			var bodyB=j.m_bodyB;
			bodyA.SetAwake(true);
			bodyB.SetAwake(true);
			if (j.m_edgeA.prev){
				j.m_edgeA.prev.next=j.m_edgeA.next;
			}
			if (j.m_edgeA.next){
				j.m_edgeA.next.prev=j.m_edgeA.prev;
			}
			if (j.m_edgeA==bodyA.m_jointList){
				bodyA.m_jointList=j.m_edgeA.next;
			}
			j.m_edgeA.prev=null;
			j.m_edgeA.next=null;
			if (j.m_edgeB.prev){
				j.m_edgeB.prev.next=j.m_edgeB.next;
			}
			if (j.m_edgeB.next){
				j.m_edgeB.next.prev=j.m_edgeB.prev;
			}
			if (j.m_edgeB==bodyB.m_jointList){
				bodyB.m_jointList=j.m_edgeB.next;
			}
			j.m_edgeB.prev=null;
			j.m_edgeB.next=null;
			b2Joint.Destroy(j,null);
			--this.m_jointCount;
			if (collideConnected==false){
				var edge=bodyB.GetContactList();
				while (edge){
					if (edge.other==bodyA){
						edge.contact.FlagForFiltering();
					}
					edge=edge.next;
				}
			}
		}

		__proto.AddController=function(c){
			c.m_next=this.m_controllerList;
			c.m_prev=null;
			this.m_controllerList=c;
			c.m_world=this;
			this.m_controllerCount++;
			return c;
		}

		__proto.RemoveController=function(c){
			if (c.m_prev)
				c.m_prev.m_next=c.m_next;
			if (c.m_next)
				c.m_next.m_prev=c.m_prev;
			if (this.m_controllerList==c)
				this.m_controllerList=c.m_next;
			this.m_controllerCount--;
		}

		__proto.CreateController=function(controller){
			if (controller.m_world !=this)
				throw new Error("Controller can only be a member of one world");
			controller.m_next=this.m_controllerList;
			controller.m_prev=null;
			if (this.m_controllerList)
				this.m_controllerList.m_prev=controller;
			this.m_controllerList=controller;
			++this.m_controllerCount;
			controller.m_world=this;
			return controller;
		}

		__proto.DestroyController=function(controller){
			controller.Clear();
			if (controller.m_next)
				controller.m_next.m_prev=controller.m_prev;
			if (controller.m_prev)
				controller.m_prev.m_next=controller.m_next;
			if (controller==this.m_controllerList)
				this.m_controllerList=controller.m_next;
			--this.m_controllerCount;
		}

		__proto.SetWarmStarting=function(flag){b2World.m_warmStarting=flag;}
		__proto.SetContinuousPhysics=function(flag){b2World.m_continuousPhysics=flag;}
		__proto.GetBodyCount=function(){
			return this.m_bodyCount;
		}

		__proto.GetJointCount=function(){
			return this.m_jointCount;
		}

		__proto.GetContactCount=function(){
			return this.m_contactCount;
		}

		__proto.SetGravity=function(gravity){
			this.m_gravity=gravity;
		}

		__proto.GetGravity=function(){
			return this.m_gravity;
		}

		__proto.GetGroundBody=function(){
			return this.m_groundBody;
		}

		__proto.Step=function(dt,velocityIterations,positionIterations){
			if (this.m_flags & 0x0001){
				this.m_contactManager.FindNewContacts();
				this.m_flags &=~0x0001;
			}
			this.m_flags |=0x0002;
			var step=b2World.s_timestep2;
			step.dt=dt;
			step.velocityIterations=velocityIterations;
			step.positionIterations=positionIterations;
			if (dt > 0.0){
				step.inv_dt=1.0 / dt;
			}
			else{
				step.inv_dt=0.0;
			}
			step.dtRatio=this.m_inv_dt0 *dt;
			step.warmStarting=b2World.m_warmStarting;
			this.m_contactManager.Collide();
			if (step.dt > 0.0){
				this.Solve(step);
			}
			if (b2World.m_continuousPhysics && step.dt > 0.0){
				this.SolveTOI(step);
			}
			if (step.dt > 0.0){
				this.m_inv_dt0=step.inv_dt;
			}
			this.m_flags &=~0x0002;
		}

		__proto.ClearForces=function(){
			for (var body=this.m_bodyList;body;body=body.m_next){
				body.m_force.SetZero();
				body.m_torque=0.0;
			}
		}

		__proto.DrawDebugData=function(){
			if (this.m_debugDraw==null){
				return;
			}
			this.m_debugDraw.m_sprite.graphics.clear();
			var flags=this.m_debugDraw.GetFlags();
			var i=0;
			var b;
			var f;
			var s;
			var j;
			var bp;
			var invQ=new b2Vec2;
			var x1=new b2Vec2;
			var x2=new b2Vec2;
			var xf;
			var b1=new b2AABB();
			var b2=new b2AABB();
			var vs=[new b2Vec2(),new b2Vec2(),new b2Vec2(),new b2Vec2()];
			var color=new b2Color(0,0,0);
			if (flags & b2DebugDraw.e_shapeBit){
				for (b=this.m_bodyList;b;b=b.m_next){
					xf=b.m_xf;
					for (f=b.GetFixtureList();f;f=f.m_next){
						s=f.GetShape();
						if (b.IsActive()==false){
							color.Set(0.5,0.5,0.3);
							this.DrawShape(s,xf,color);
						}
						else if (b.GetType()==b2Body.b2_staticBody){
							color.Set(0.5,0.9,0.5);
							this.DrawShape(s,xf,color);
						}
						else if (b.GetType()==b2Body.b2_kinematicBody){
							color.Set(0.5,0.5,0.9);
							this.DrawShape(s,xf,color);
						}
						else if (b.IsAwake()==false){
							color.Set(0.6,0.6,0.6);
							this.DrawShape(s,xf,color);
						}
						else{
							color.Set(0.9,0.7,0.7);
							this.DrawShape(s,xf,color);
						}
					}
				}
			}
			if (flags & b2DebugDraw.e_jointBit){
				for (j=this.m_jointList;j;j=j.m_next){
					this.DrawJoint(j);
				}
			}
			if (flags & b2DebugDraw.e_controllerBit){
				for (var c=this.m_controllerList;c;c=c.m_next){
					c.Draw(this.m_debugDraw);
				}
			}
			if (flags & b2DebugDraw.e_pairBit){
				color.Set(0.3,0.9,0.9);
				for (var contact=this.m_contactList;contact;contact=contact.GetNext()){
					var fixtureA=contact.GetFixtureA();
					var fixtureB=contact.GetFixtureB();
					var cA=fixtureA.GetAABB().GetCenter();
					var cB=fixtureB.GetAABB().GetCenter();
					this.m_debugDraw.DrawSegment(cA,cB,color);
				}
			}
			if (flags & b2DebugDraw.e_aabbBit){
				bp=this.m_contactManager.m_broadPhase;
				vs=[new b2Vec2(),new b2Vec2(),new b2Vec2(),new b2Vec2()];
				for (b=this.m_bodyList;b;b=b.GetNext()){
					if (b.IsActive()==false){
						continue ;
					}
					for (f=b.GetFixtureList();f;f=f.GetNext()){
						var aabb=bp.GetFatAABB(f.m_proxy);
						vs[0].Set(aabb.lowerBound.x,aabb.lowerBound.y);
						vs[1].Set(aabb.upperBound.x,aabb.lowerBound.y);
						vs[2].Set(aabb.upperBound.x,aabb.upperBound.y);
						vs[3].Set(aabb.lowerBound.x,aabb.upperBound.y);
						this.m_debugDraw.DrawPolygon(vs,4,color);
					}
				}
			}
			if (flags & b2DebugDraw.e_centerOfMassBit){
				for (b=this.m_bodyList;b;b=b.m_next){
					xf=b2World.s_xf;
					xf.R=b.m_xf.R;
					xf.position=b.GetWorldCenter();
					this.m_debugDraw.DrawTransform(xf);
				}
			}
		}

		__proto.QueryAABB=function(callback,aabb){
			var broadPhase=this.m_contactManager.m_broadPhase;
			function WorldQueryWrapper (proxy){
				return callback(broadPhase.GetUserData(proxy));
			}
			broadPhase.Query(WorldQueryWrapper,aabb);
		}

		__proto.QueryShape=function(callback,shape,transform){
			if (transform==null){
				transform=new b2Transform();
				transform.SetIdentity();
			};
			var broadPhase=this.m_contactManager.m_broadPhase;
			function WorldQueryWrapper (proxy){
				var fixture=broadPhase.GetUserData(proxy)
				if(b2Shape.TestOverlap(shape,transform,fixture.GetShape(),fixture.GetBody().GetTransform()))
					return callback(fixture);
				return true;
			};
			var aabb=new b2AABB();
			shape.ComputeAABB(aabb,transform);
			broadPhase.Query(WorldQueryWrapper,aabb);
		}

		__proto.QueryPoint=function(callback,p){
			var broadPhase=this.m_contactManager.m_broadPhase;
			function WorldQueryWrapper (proxy){
				var fixture=broadPhase.GetUserData(proxy)
				if(fixture.TestPoint(p))
					return callback(fixture);
				return true;
			};
			var aabb=new b2AABB();
			aabb.lowerBound.Set(p.x-/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,p.y-/*Box2D.Common.b2Settings.b2_linearSlop*/0.005);
			aabb.upperBound.Set(p.x+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,p.y+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005);
			broadPhase.Query(WorldQueryWrapper,aabb);
		}

		__proto.RayCast=function(callback,point1,point2){
			var broadPhase=this.m_contactManager.m_broadPhase;
			var output=new b2RayCastOutput;
			function RayCastWrapper (input,proxy){
				var userData=broadPhase.GetUserData(proxy);
				var fixture=userData;
				var hit=fixture.RayCast(output,input);
				if (hit){
					var fraction=output.fraction;
					var point=new b2Vec2(
					(1.0-fraction)*point1.x+fraction *point2.x,
					(1.0-fraction)*point1.y+fraction *point2.y);
					return callback(fixture,point,output.normal,fraction);
				}
				return input.maxFraction;
			};
			var input=new b2RayCastInput(point1,point2);
			broadPhase.RayCast(RayCastWrapper,input);
		}

		__proto.RayCastOne=function(point1,point2){
			var result;
			function RayCastOneWrapper (fixture,point,normal,fraction){
				result=fixture;
				return fraction;
			}
			this.RayCast(RayCastOneWrapper,point1,point2);
			return result;
		}

		__proto.RayCastAll=function(point1,point2){
			var result=[];
			function RayCastAllWrapper (fixture,point,normal,fraction){
				result[result.length]=fixture;
				return 1;
			}
			this.RayCast(RayCastAllWrapper,point1,point2);
			return result;
		}

		__proto.GetBodyList=function(){
			return this.m_bodyList;
		}

		__proto.GetJointList=function(){
			return this.m_jointList;
		}

		__proto.GetContactList=function(){
			return this.m_contactList;
		}

		__proto.IsLocked=function(){
			return (this.m_flags & 0x0002)> 0;
		}

		__proto.Solve=function(step){
			var b;
			for(var controller=this.m_controllerList;controller;controller=controller.m_next){
				controller.Step(step);
			};
			var island=this.m_island;
			island.Initialize(this.m_bodyCount,this.m_contactCount,this.m_jointCount,null,this.m_contactManager.m_contactListener,this.m_contactSolver);
			for (b=this.m_bodyList;b;b=b.m_next){
				b.m_flags &=~b2Body.e_islandFlag;
			}
			for (var c=this.m_contactList;c;c=c.m_next){
				c.m_flags &=~b2Contact.e_islandFlag;
			}
			for (var j=this.m_jointList;j;j=j.m_next){
				j.m_islandFlag=false;
			};
			var stackSize=this.m_bodyCount;
			var stack=this.s_stack;
			for (var seed=this.m_bodyList;seed;seed=seed.m_next){
				if (seed.m_flags & b2Body.e_islandFlag){
					continue ;
				}
				if (seed.IsAwake()==false || seed.IsActive()==false){
					continue ;
				}
				if (seed.GetType()==b2Body.b2_staticBody){
					continue ;
				}
				island.Clear();
				var stackCount=0;
				stack[stackCount++]=seed;
				seed.m_flags |=b2Body.e_islandFlag;
				while (stackCount > 0){
					b=stack[--stackCount];
					island.AddBody(b);
					if (b.IsAwake()==false){
						b.SetAwake(true);
					}
					if (b.GetType()==b2Body.b2_staticBody){
						continue ;
					};
					var other;
					for (var ce=b.m_contactList;ce;ce=ce.next){
						if (ce.contact.m_flags & b2Contact.e_islandFlag){
							continue ;
						}
						if (ce.contact.IsSensor()==true ||
							ce.contact.IsEnabled()==false ||
						ce.contact.IsTouching()==false){
							continue ;
						}
						island.AddContact(ce.contact);
						ce.contact.m_flags |=b2Contact.e_islandFlag;
						other=ce.other;
						if (other.m_flags & b2Body.e_islandFlag){
							continue ;
						}
						stack[stackCount++]=other;
						other.m_flags |=b2Body.e_islandFlag;
					}
					for (var jn=b.m_jointList;jn;jn=jn.next){
						if (jn.joint.m_islandFlag==true){
							continue ;
						}
						other=jn.other;
						if (other.IsActive()==false){
							continue ;
						}
						island.AddJoint(jn.joint);
						jn.joint.m_islandFlag=true;
						if (other.m_flags & b2Body.e_islandFlag){
							continue ;
						}
						stack[stackCount++]=other;
						other.m_flags |=b2Body.e_islandFlag;
					}
				}
				island.Solve(step,this.m_gravity,this.m_allowSleep);
				for (var i=0;i < island.m_bodyCount;++i){
					b=island.m_bodies[i];
					if (b.GetType()==b2Body.b2_staticBody){
						b.m_flags &=~b2Body.e_islandFlag;
					}
				}
			}
			for (i=0;i < stack.length;++i){
				if (!stack[i])break ;
				stack[i]=null;
			}
			for (b=this.m_bodyList;b;b=b.m_next){
				if (b.IsAwake()==false || b.IsActive()==false){
					continue ;
				}
				if (b.GetType()==b2Body.b2_staticBody){
					continue ;
				}
				b.SynchronizeFixtures();
			}
			this.m_contactManager.FindNewContacts();
		}

		__proto.SolveTOI=function(step){
			var b;
			var fA;
			var fB;
			var bA;
			var bB;
			var cEdge;
			var j;
			var island=this.m_island;
			island.Initialize(this.m_bodyCount,/*Box2D.Common.b2Settings.b2_maxTOIContactsPerIsland*/32,/*Box2D.Common.b2Settings.b2_maxTOIJointsPerIsland*/32,null,this.m_contactManager.m_contactListener,this.m_contactSolver);
			var queue=b2World.s_queue;
			for (b=this.m_bodyList;b;b=b.m_next){
				b.m_flags &=~b2Body.e_islandFlag;
				b.m_sweep.t0=0.0;
			};
			var c;
			for (c=this.m_contactList;c;c=c.m_next){
				c.m_flags &=~(b2Contact.e_toiFlag | b2Contact.e_islandFlag);
			}
			for (j=this.m_jointList;j;j=j.m_next){
				j.m_islandFlag=false;
			}
			for (;;){
				var minContact=null;
				var minTOI=1.0;
				for (c=this.m_contactList;c;c=c.m_next){
					if (c.IsSensor()==true ||
						c.IsEnabled()==false ||
					c.IsContinuous()==false){
						continue ;
					};
					var toi=1.0;
					if (c.m_flags & b2Contact.e_toiFlag){
						toi=c.m_toi;
					}
					else{
						fA=c.m_fixtureA;
						fB=c.m_fixtureB;
						bA=fA.m_body;
						bB=fB.m_body;
						if ((bA.GetType()!=b2Body.b2_dynamicBody || bA.IsAwake()==false)&&
							(bB.GetType()!=b2Body.b2_dynamicBody || bB.IsAwake()==false)){
							continue ;
						};
						var t0=bA.m_sweep.t0;
						if (bA.m_sweep.t0 < bB.m_sweep.t0){
							t0=bB.m_sweep.t0;
							bA.m_sweep.Advance(t0);
						}
						else if (bB.m_sweep.t0 < bA.m_sweep.t0){
							t0=bA.m_sweep.t0;
							bB.m_sweep.Advance(t0);
						}
						toi=c.ComputeTOI(bA.m_sweep,bB.m_sweep);
						b2Settings.b2Assert(0.0 <=toi && toi <=1.0);
						if (toi > 0.0 && toi < 1.0){
							toi=(1.0-toi)*t0+toi;
							if (toi > 1)toi=1;
						}
						c.m_toi=toi;
						c.m_flags |=b2Contact.e_toiFlag;
					}
					if (Number.MIN_VALUE < toi && toi < minTOI){
						minContact=c;
						minTOI=toi;
					}
				}
				if (minContact==null || 1.0-100.0 *Number.MIN_VALUE < minTOI){
					break ;
				}
				fA=minContact.m_fixtureA;
				fB=minContact.m_fixtureB;
				bA=fA.m_body;
				bB=fB.m_body;
				b2World.s_backupA.Set(bA.m_sweep);
				b2World.s_backupB.Set(bB.m_sweep);
				bA.Advance(minTOI);
				bB.Advance(minTOI);
				minContact.Update(this.m_contactManager.m_contactListener);
				minContact.m_flags &=~b2Contact.e_toiFlag;
				if (minContact.IsSensor()==true ||
					minContact.IsEnabled()==false){
					bA.m_sweep.Set(b2World.s_backupA);
					bB.m_sweep.Set(b2World.s_backupB);
					bA.SynchronizeTransform();
					bB.SynchronizeTransform();
					continue ;
				}
				if (minContact.IsTouching()==false){
					continue ;
				};
				var seed=bA;
				if (seed.GetType()!=b2Body.b2_dynamicBody){
					seed=bB;
				}
				island.Clear();
				var queueStart=0;
				var queueSize=0;
				queue[queueStart+queueSize++]=seed;
				seed.m_flags |=b2Body.e_islandFlag;
				while (queueSize > 0){
					b=queue[queueStart++];
					--queueSize;
					island.AddBody(b);
					if (b.IsAwake()==false){
						b.SetAwake(true);
					}
					if (b.GetType()!=b2Body.b2_dynamicBody){
						continue ;
					}
					for (cEdge=b.m_contactList;cEdge;cEdge=cEdge.next){
						if (island.m_contactCount==island.m_contactCapacity){
							break ;
						}
						if (cEdge.contact.m_flags & b2Contact.e_islandFlag){
							continue ;
						}
						if (cEdge.contact.IsSensor()==true ||
							cEdge.contact.IsEnabled()==false ||
						cEdge.contact.IsTouching()==false){
							continue ;
						}
						island.AddContact(cEdge.contact);
						cEdge.contact.m_flags |=b2Contact.e_islandFlag;
						var other=cEdge.other;
						if (other.m_flags & b2Body.e_islandFlag){
							continue ;
						}
						if (other.GetType()!=b2Body.b2_staticBody){
							other.Advance(minTOI);
							other.SetAwake(true);
						}
						queue[queueStart+queueSize]=other;
						++queueSize;
						other.m_flags |=b2Body.e_islandFlag;
					}
					for (var jEdge=b.m_jointList;jEdge;jEdge=jEdge.next){
						if (island.m_jointCount==island.m_jointCapacity)
							continue ;
						if (jEdge.joint.m_islandFlag==true)
							continue ;
						other=jEdge.other;
						if (other.IsActive()==false){
							continue ;
						}
						island.AddJoint(jEdge.joint);
						jEdge.joint.m_islandFlag=true;
						if (other.m_flags & b2Body.e_islandFlag)
							continue ;
						if (other.GetType()!=b2Body.b2_staticBody){
							other.Advance(minTOI);
							other.SetAwake(true);
						}
						queue[queueStart+queueSize]=other;
						++queueSize;
						other.m_flags |=b2Body.e_islandFlag;
					}
				};
				var subStep=b2World.s_timestep;
				subStep.warmStarting=false;
				subStep.dt=(1.0-minTOI)*step.dt;
				subStep.inv_dt=1.0 / subStep.dt;
				subStep.dtRatio=0.0;
				subStep.velocityIterations=step.velocityIterations;
				subStep.positionIterations=step.positionIterations;
				island.SolveTOI(subStep);
				var i=0;
				for (i=0;i < island.m_bodyCount;++i){
					b=island.m_bodies[i];
					b.m_flags &=~b2Body.e_islandFlag;
					if (b.IsAwake()==false){
						continue ;
					}
					if (b.GetType()!=b2Body.b2_dynamicBody){
						continue ;
					}
					b.SynchronizeFixtures();
					for (cEdge=b.m_contactList;cEdge;cEdge=cEdge.next){
						cEdge.contact.m_flags &=~b2Contact.e_toiFlag;
					}
				}
				for (i=0;i < island.m_contactCount;++i){
					c=island.m_contacts[i];
					c.m_flags &=~(b2Contact.e_toiFlag | b2Contact.e_islandFlag);
				}
				for (i=0;i < island.m_jointCount;++i){
					j=island.m_joints[i];
					j.m_islandFlag=false;
				}
				this.m_contactManager.FindNewContacts();
			}
		}

		__proto.DrawJoint=function(joint){
			var b1=joint.GetBodyA();
			var b2=joint.GetBodyB();
			var xf1=b1.m_xf;
			var xf2=b2.m_xf;
			var x1=xf1.position;
			var x2=xf2.position;
			var p1=joint.GetAnchorA();
			var p2=joint.GetAnchorB();
			var color=b2World.s_jointColor;
			switch (joint.m_type){
				case /*Box2D.Dynamics.Joints.b2Joint.e_distanceJoint*/3:
					this.m_debugDraw.DrawSegment(p1,p2,color);
					break ;
				case /*Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint*/4:{
						var pulley=(joint);
						var s1=pulley.GetGroundAnchorA();
						var s2=pulley.GetGroundAnchorB();
						this.m_debugDraw.DrawSegment(s1,p1,color);
						this.m_debugDraw.DrawSegment(s2,p2,color);
						this.m_debugDraw.DrawSegment(s1,s2,color);
					}
					break ;
				case /*Box2D.Dynamics.Joints.b2Joint.e_mouseJoint*/5:
					this.m_debugDraw.DrawSegment(p1,p2,color);
					break ;
				default :
					if (b1 !=this.m_groundBody)
						this.m_debugDraw.DrawSegment(x1,p1,color);
					this.m_debugDraw.DrawSegment(p1,p2,color);
					if (b2 !=this.m_groundBody)
						this.m_debugDraw.DrawSegment(x2,p2,color);
				}
		}

		__proto.DrawShape=function(shape,xf,color){
			switch (shape.m_type){
				case /*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0:{
						var circle=(shape);
						var center=b2Math.MulX(xf,circle.m_p);
						var radius=circle.m_radius;
						var axis=xf.R.col1;
						this.m_debugDraw.DrawSolidCircle(center,radius,axis,color);
					}
					break ;
				case /*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1:{
						var i=0;
						var poly=(shape);
						var vertexCount=poly.GetVertexCount();
						var localVertices=poly.GetVertices();
						var vertices=__newvec(vertexCount);
						for (i=0;i < vertexCount;++i){
							vertices[i]=b2Math.MulX(xf,localVertices[i]);
						}
						this.m_debugDraw.DrawSolidPolygon(vertices,vertexCount,color);
					}
					break ;
				case /*Box2D.Collision.Shapes.b2Shape.e_edgeShape*/2:{
						var edge=shape;
						this.m_debugDraw.DrawSegment(b2Math.MulX(xf,edge.GetVertex1()),b2Math.MulX(xf,edge.GetVertex2()),color);
					}
					break ;
				}
		}

		b2World.s_queue=[];
		b2World.m_warmStarting=false;
		b2World.m_continuousPhysics=false;
		b2World.e_newFixture=0x0001;
		b2World.e_locked=0x0002;
		__static(b2World,
		['s_timestep2',function(){return this.s_timestep2=new b2TimeStep();},'s_xf',function(){return this.s_xf=new b2Transform();},'s_backupA',function(){return this.s_backupA=new b2Sweep();},'s_backupB',function(){return this.s_backupB=new b2Sweep();},'s_timestep',function(){return this.s_timestep=new b2TimeStep();},'s_jointColor',function(){return this.s_jointColor=new b2Color(0.5,0.8,0.8);}
		]);
		return b2World;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contact.as
	;
	//class Box2D.Dynamics.Contacts.b2Contact
	var b2Contact=(function(){
		function b2Contact(){
			this.m_flags=0;
			this.m_prev=null;
			this.m_next=null;
			this.m_fixtureA=null;
			this.m_fixtureB=null;
			this.m_toi=NaN;
			this.m_nodeA=new b2ContactEdge();
			this.m_nodeB=new b2ContactEdge();
			this.m_manifold=new b2Manifold();
			this.m_oldManifold=new b2Manifold();
		}

		__class(b2Contact,'Box2D.Dynamics.Contacts.b2Contact',true);
		var __proto=b2Contact.prototype;
		__proto.GetManifold=function(){
			return this.m_manifold;
		}

		__proto.GetWorldManifold=function(worldManifold){
			var bodyA=this.m_fixtureA.GetBody();
			var bodyB=this.m_fixtureB.GetBody();
			var shapeA=this.m_fixtureA.GetShape();
			var shapeB=this.m_fixtureB.GetShape();
			worldManifold.Initialize(this.m_manifold,bodyA.GetTransform(),shapeA.m_radius,bodyB.GetTransform(),shapeB.m_radius);
		}

		__proto.IsTouching=function(){
			return (this.m_flags & b2Contact.e_touchingFlag)==b2Contact.e_touchingFlag;
		}

		__proto.IsContinuous=function(){
			return (this.m_flags & b2Contact.e_continuousFlag)==b2Contact.e_continuousFlag;
		}

		__proto.SetSensor=function(sensor){
			if (sensor){
				this.m_flags |=b2Contact.e_sensorFlag;
			}
			else{
				this.m_flags &=~b2Contact.e_sensorFlag;
			}
		}

		__proto.IsSensor=function(){
			return (this.m_flags & b2Contact.e_sensorFlag)==b2Contact.e_sensorFlag;
		}

		__proto.SetEnabled=function(flag){
			if (flag){
				this.m_flags |=b2Contact.e_enabledFlag;
			}
			else{
				this.m_flags &=~b2Contact.e_enabledFlag;
			}
		}

		__proto.IsEnabled=function(){
			return (this.m_flags & b2Contact.e_enabledFlag)==b2Contact.e_enabledFlag;
		}

		__proto.GetNext=function(){
			return this.m_next;
		}

		__proto.GetFixtureA=function(){
			return this.m_fixtureA;
		}

		__proto.GetFixtureB=function(){
			return this.m_fixtureB;
		}

		__proto.FlagForFiltering=function(){
			this.m_flags |=b2Contact.e_filterFlag;
		}

		__proto.Reset=function(fixtureA,fixtureB){
			this.m_flags=b2Contact.e_enabledFlag;
			if (!fixtureA || !fixtureB){
				this.m_fixtureA=null;
				this.m_fixtureB=null;
				return;
			}
			if (fixtureA.IsSensor()|| fixtureB.IsSensor()){
				this.m_flags |=b2Contact.e_sensorFlag;
			};
			var bodyA=fixtureA.GetBody();
			var bodyB=fixtureB.GetBody();
			if (bodyA.GetType()!=b2Body.b2_dynamicBody || bodyA.IsBullet()|| bodyB.GetType()!=b2Body.b2_dynamicBody || bodyB.IsBullet()){
				this.m_flags |=b2Contact.e_continuousFlag;
			}
			this.m_fixtureA=fixtureA;
			this.m_fixtureB=fixtureB;
			this.m_manifold.m_pointCount=0;
			this.m_prev=null;
			this.m_next=null;
			this.m_nodeA.contact=null;
			this.m_nodeA.prev=null;
			this.m_nodeA.next=null;
			this.m_nodeA.other=null;
			this.m_nodeB.contact=null;
			this.m_nodeB.prev=null;
			this.m_nodeB.next=null;
			this.m_nodeB.other=null;
		}

		__proto.Update=function(listener){
			var tManifold=this.m_oldManifold;
			this.m_oldManifold=this.m_manifold;
			this.m_manifold=tManifold;
			this.m_flags |=b2Contact.e_enabledFlag;
			var touching=false;
			var wasTouching=(this.m_flags & b2Contact.e_touchingFlag)==b2Contact.e_touchingFlag;
			var bodyA=this.m_fixtureA.m_body;
			var bodyB=this.m_fixtureB.m_body;
			var aabbOverlap=this.m_fixtureA.m_aabb.TestOverlap(this.m_fixtureB.m_aabb);
			if (this.m_flags & b2Contact.e_sensorFlag){
				if (aabbOverlap){
					var shapeA=this.m_fixtureA.GetShape();
					var shapeB=this.m_fixtureB.GetShape();
					var xfA=bodyA.GetTransform();
					var xfB=bodyB.GetTransform();
					touching=b2Shape.TestOverlap(shapeA,xfA,shapeB,xfB);
				}
				this.m_manifold.m_pointCount=0;
			}
			else{
				if (bodyA.GetType()!=b2Body.b2_dynamicBody || bodyA.IsBullet()|| bodyB.GetType()!=b2Body.b2_dynamicBody || bodyB.IsBullet()){
					this.m_flags |=b2Contact.e_continuousFlag;
				}
				else{
					this.m_flags &=~b2Contact.e_continuousFlag;
				}
				if (aabbOverlap){
					this.Evaluate();
					touching=this.m_manifold.m_pointCount > 0;
					for (var i=0;i < this.m_manifold.m_pointCount;++i){
						var mp2=this.m_manifold.m_points[i];
						mp2.m_normalImpulse=0.0;
						mp2.m_tangentImpulse=0.0;
						var id2=mp2.m_id;
						for (var j=0;j < this.m_oldManifold.m_pointCount;++j){
							var mp1=this.m_oldManifold.m_points[j];
							if (mp1.m_id.key==id2.key){
								mp2.m_normalImpulse=mp1.m_normalImpulse;
								mp2.m_tangentImpulse=mp1.m_tangentImpulse;
								break ;
							}
						}
					}
				}
				else{
					this.m_manifold.m_pointCount=0;
				}
				if (touching !=wasTouching){
					bodyA.SetAwake(true);
					bodyB.SetAwake(true);
				}
			}
			if (touching){
				this.m_flags |=b2Contact.e_touchingFlag;
			}
			else{
				this.m_flags &=~b2Contact.e_touchingFlag;
			}
			if (wasTouching==false && touching==true){
				listener.BeginContact(this);
			}
			if (wasTouching==true && touching==false){
				listener.EndContact(this);
			}
			if ((this.m_flags & b2Contact.e_sensorFlag)==0){
				listener.PreSolve(this,this.m_oldManifold);
			}
		}

		__proto.Evaluate=LAYAFNVOID/*function(){}*/
		__proto.ComputeTOI=function(sweepA,sweepB){
			b2Contact.s_input.proxyA.Set(this.m_fixtureA.GetShape());
			b2Contact.s_input.proxyB.Set(this.m_fixtureB.GetShape());
			b2Contact.s_input.sweepA=sweepA;
			b2Contact.s_input.sweepB=sweepB;
			b2Contact.s_input.tolerance=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
			return b2TimeOfImpact.TimeOfImpact(b2Contact.s_input);
		}

		b2Contact.e_sensorFlag=0x0001;
		b2Contact.e_continuousFlag=0x0002;
		b2Contact.e_islandFlag=0x0004;
		b2Contact.e_toiFlag=0x0008;
		b2Contact.e_touchingFlag=0x0010;
		b2Contact.e_enabledFlag=0x0020;
		b2Contact.e_filterFlag=0x0040;
		__static(b2Contact,
		['s_input',function(){return this.s_input=new b2TOIInput();}
		]);
		return b2Contact;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactconstraint.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactConstraint
	var b2ContactConstraint=(function(){
		function b2ContactConstraint(){
			this.points=null;
			this.bodyA=null;
			this.bodyB=null;
			this.type=0;
			this.radius=NaN;
			this.friction=NaN;
			this.restitution=NaN;
			this.pointCount=0;
			this.manifold=null;
			this.localPlaneNormal=new b2Vec2();
			this.localPoint=new b2Vec2();
			this.normal=new b2Vec2();
			this.normalMass=new b2Mat22();
			this.K=new b2Mat22();
			this.points=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				this.points[i]=new b2ContactConstraintPoint();
			}
		}

		__class(b2ContactConstraint,'Box2D.Dynamics.Contacts.b2ContactConstraint',true);
		return b2ContactConstraint;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactconstraintpoint.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactConstraintPoint
	var b2ContactConstraintPoint=(function(){
		function b2ContactConstraintPoint(){
			this.normalImpulse=NaN;
			this.tangentImpulse=NaN;
			this.normalMass=NaN;
			this.tangentMass=NaN;
			this.equalizedMass=NaN;
			this.velocityBias=NaN;
			this.localPoint=new b2Vec2();
			this.rA=new b2Vec2();
			this.rB=new b2Vec2();
		}

		__class(b2ContactConstraintPoint,'Box2D.Dynamics.Contacts.b2ContactConstraintPoint',true);
		return b2ContactConstraintPoint;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactedge.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactEdge
	var b2ContactEdge=(function(){
		function b2ContactEdge(){
			this.other=null;
			this.contact=null;
			this.prev=null;
			this.next=null;
		}

		__class(b2ContactEdge,'Box2D.Dynamics.Contacts.b2ContactEdge',true);
		return b2ContactEdge;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactfactory.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactFactory
	var b2ContactFactory=(function(){
		function b2ContactFactory(allocator){
			this.m_registers=null;
			this.m_allocator=null;
			this.m_allocator=allocator;
			this.InitializeRegisters();
		}

		__class(b2ContactFactory,'Box2D.Dynamics.Contacts.b2ContactFactory',true);
		var __proto=b2ContactFactory.prototype;
		__proto.AddType=function(createFcn,destroyFcn,type1,type2){
			this.m_registers[type1][type2].createFcn=createFcn;
			this.m_registers[type1][type2].destroyFcn=destroyFcn;
			this.m_registers[type1][type2].primary=true;
			if (type1 !=type2){
				this.m_registers[type2][type1].createFcn=createFcn;
				this.m_registers[type2][type1].destroyFcn=destroyFcn;
				this.m_registers[type2][type1].primary=false;
			}
		}

		__proto.InitializeRegisters=function(){
			this.m_registers=__newvec(/*Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount*/3);
			for (var i=0;i < /*Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount*/3;i++){
				this.m_registers[i]=__newvec(/*Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount*/3);
				for (var j=0;j < /*Box2D.Collision.Shapes.b2Shape.e_shapeTypeCount*/3;j++){
					this.m_registers[i][j]=new b2ContactRegister();
				}
			}
			this.AddType(b2CircleContact.Create,b2CircleContact.Destroy,/*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0,/*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0);
			this.AddType(b2PolyAndCircleContact.Create,b2PolyAndCircleContact.Destroy,/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1,/*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0);
			this.AddType(b2PolygonContact.Create,b2PolygonContact.Destroy,/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1,/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1);
			this.AddType(b2EdgeAndCircleContact.Create,b2EdgeAndCircleContact.Destroy,/*Box2D.Collision.Shapes.b2Shape.e_edgeShape*/2,/*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0);
			this.AddType(b2PolyAndEdgeContact.Create,b2PolyAndEdgeContact.Destroy,/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1,/*Box2D.Collision.Shapes.b2Shape.e_edgeShape*/2);
		}

		__proto.Create=function(fixtureA,fixtureB){
			var type1=fixtureA.GetType();
			var type2=fixtureB.GetType();
			var reg=this.m_registers[type1][type2];
			var c;
			if (reg.pool){
				c=reg.pool;
				reg.pool=c.m_next;
				reg.poolCount--;
				c.Reset(fixtureA,fixtureB);
				return c;
			};
			var createFcn=reg.createFcn;
			if (createFcn !=null){
				if (reg.primary){
					c=createFcn(this.m_allocator);
					c.Reset(fixtureA,fixtureB);
					return c;
				}
				else{
					c=createFcn(this.m_allocator);
					c.Reset(fixtureB,fixtureA);
					return c;
				}
			}
			else{
				return null;
			}
		}

		__proto.Destroy=function(contact){
			if (contact.m_manifold.m_pointCount > 0){
				contact.m_fixtureA.m_body.SetAwake(true);
				contact.m_fixtureB.m_body.SetAwake(true);
			};
			var type1=contact.m_fixtureA.GetType();
			var type2=contact.m_fixtureB.GetType();
			var reg=this.m_registers[type1][type2];
			if (true){
				reg.poolCount++;
				contact.m_next=reg.pool;
				reg.pool=contact;
			};
			var destroyFcn=reg.destroyFcn;
			destroyFcn(contact,this.m_allocator);
		}

		return b2ContactFactory;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactregister.as
	//class Box2D.Dynamics.Contacts.b2ContactRegister
	var b2ContactRegister=(function(){
		function b2ContactRegister(){
			this.createFcn=null;
			this.destroyFcn=null;
			this.primary=false;
			this.pool=null;
			this.poolCount=0;
		}

		__class(b2ContactRegister,'Box2D.Dynamics.Contacts.b2ContactRegister',true);
		return b2ContactRegister;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactresult.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactResult
	var b2ContactResult=(function(){
		function b2ContactResult(){
			this.shape1=null;
			this.shape2=null;
			this.normalImpulse=NaN;
			this.tangentImpulse=NaN;
			this.position=new b2Vec2();
			this.normal=new b2Vec2();
			this.id=new b2ContactID();
		}

		__class(b2ContactResult,'Box2D.Dynamics.Contacts.b2ContactResult',true);
		return b2ContactResult;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2contactsolver.as
	;
	//class Box2D.Dynamics.Contacts.b2ContactSolver
	var b2ContactSolver=(function(){
		function b2ContactSolver(){
			this.m_allocator=null;
			this.m_constraintCount=0;
			this.m_step=new b2TimeStep();
			this.m_constraints=[];
		}

		__class(b2ContactSolver,'Box2D.Dynamics.Contacts.b2ContactSolver',true);
		var __proto=b2ContactSolver.prototype;
		__proto.Initialize=function(step,contacts,contactCount,allocator){
			var contact;
			this.m_step.Set(step)
			this.m_allocator=allocator;
			var i=0;
			var tVec;
			var tMat;
			this.m_constraintCount=contactCount;
			while (this.m_constraints.length < this.m_constraintCount){
				this.m_constraints[this.m_constraints.length]=new b2ContactConstraint();
			}
			for (i=0;i < contactCount;++i){
				contact=contacts[i];
				var fixtureA=contact.m_fixtureA;
				var fixtureB=contact.m_fixtureB;
				var shapeA=fixtureA.m_shape;
				var shapeB=fixtureB.m_shape;
				var radiusA=shapeA.m_radius;
				var radiusB=shapeB.m_radius;
				var bodyA=fixtureA.m_body;
				var bodyB=fixtureB.m_body;
				var manifold=contact.GetManifold();
				var friction=b2Settings.b2MixFriction(fixtureA.GetFriction(),fixtureB.GetFriction());;
				var restitution=b2Settings.b2MixRestitution(fixtureA.GetRestitution(),fixtureB.GetRestitution());
				var vAX=bodyA.m_linearVelocity.x;
				var vAY=bodyA.m_linearVelocity.y;
				var vBX=bodyB.m_linearVelocity.x;
				var vBY=bodyB.m_linearVelocity.y;
				var wA=bodyA.m_angularVelocity;
				var wB=bodyB.m_angularVelocity;
				b2Settings.b2Assert(manifold.m_pointCount > 0);
				b2ContactSolver.s_worldManifold.Initialize(manifold,bodyA.m_xf,radiusA,bodyB.m_xf,radiusB);
				var normalX=b2ContactSolver.s_worldManifold.m_normal.x;
				var normalY=b2ContactSolver.s_worldManifold.m_normal.y;
				var cc=this.m_constraints[ i];
				cc.bodyA=bodyA;
				cc.bodyB=bodyB;
				cc.manifold=manifold;
				cc.normal.x=normalX;
				cc.normal.y=normalY;
				cc.pointCount=manifold.m_pointCount;
				cc.friction=friction;
				var bevel=10;
				var planeAngle=NaN;
				var vx=0;
				if(!bodyA.m_allowBevelSlither||bodyA.m_uphillZeroFriction){
					planeAngle=Math.atan2(normalY,normalX)*57.3+90;
					vx=int(bodyA.m_linearVelocity.x);
					if(planeAngle<0)planeAngle+=360;
					if((planeAngle>bevel&&planeAngle<90-bevel)|| (planeAngle>180+bevel&&planeAngle<270-bevel)){
						if(!bodyA.m_allowBevelSlither){
							if(vx>=0)cc.friction=1;
						}
						if(bodyA.m_uphillZeroFriction){
							if(vx<0)cc.friction=0;
						}
						}else if((planeAngle>90&&planeAngle<180-bevel)|| (planeAngle>270+bevel&&planeAngle<360-bevel)){
						if(!bodyA.m_allowBevelSlither){
							if(vx<=0)cc.friction=1;
						}
						if(bodyA.m_uphillZeroFriction){
							if(vx>0)cc.friction=0;
						}
					}
					}else if(!bodyB.m_allowBevelSlither||bodyB.m_uphillZeroFriction){
					planeAngle=Math.atan2(-normalY,-normalX)*57.3+90;
					vx=int(bodyB.m_linearVelocity.x);
					if(planeAngle<0)planeAngle+=360;
					if((planeAngle>bevel&&planeAngle<90-bevel)|| (planeAngle>180+bevel&&planeAngle<270-bevel)){
						if(!bodyB.m_allowBevelSlither){
							if(vx>=0)cc.friction=1;
						}
						if(bodyB.m_uphillZeroFriction){
							if(vx<0)cc.friction=0;
						}
						}else if((planeAngle>90&&planeAngle<180-bevel)|| (planeAngle>270+bevel&&planeAngle<360-bevel)){
						if(!bodyB.m_allowBevelSlither){
							if(vx<=0)cc.friction=1;
						}
						if(bodyB.m_uphillZeroFriction){
							if(vx>0)cc.friction=0;
						}
					}
				}
				if(bodyA.m_isIgnoreFrictionX || bodyB.m_isIgnoreFrictionX){
					if(Math.abs(normalY)>0.9)cc.friction=0;
					}else if(bodyA.m_isIgnoreFrictionY || bodyB.m_isIgnoreFrictionY){
					if(Math.abs(normalX)>0.9)cc.friction=0;
				}
				cc.restitution=restitution;
				cc.localPlaneNormal.x=manifold.m_localPlaneNormal.x;
				cc.localPlaneNormal.y=manifold.m_localPlaneNormal.y;
				cc.localPoint.x=manifold.m_localPoint.x;
				cc.localPoint.y=manifold.m_localPoint.y;
				cc.radius=radiusA+radiusB;
				cc.type=manifold.m_type;
				for (var k=0;k < cc.pointCount;++k){
					var cp=manifold.m_points[ k];
					var ccp=cc.points[ k];
					ccp.normalImpulse=cp.m_normalImpulse;
					ccp.tangentImpulse=cp.m_tangentImpulse;
					ccp.localPoint.SetV(cp.m_localPoint);
					var rAX=ccp.rA.x=b2ContactSolver.s_worldManifold.m_points[k].x-bodyA.m_sweep.c.x;
					var rAY=ccp.rA.y=b2ContactSolver.s_worldManifold.m_points[k].y-bodyA.m_sweep.c.y;
					var rBX=ccp.rB.x=b2ContactSolver.s_worldManifold.m_points[k].x-bodyB.m_sweep.c.x;
					var rBY=ccp.rB.y=b2ContactSolver.s_worldManifold.m_points[k].y-bodyB.m_sweep.c.y;
					var rnA=rAX *normalY-rAY *normalX;
					var rnB=rBX *normalY-rBY *normalX;
					rnA *=rnA;
					rnB *=rnB;
					var kNormal=bodyA.m_invMass+bodyB.m_invMass+bodyA.m_invI *rnA+bodyB.m_invI *rnB;
					ccp.normalMass=1.0 / kNormal;
					var kEqualized=bodyA.m_mass *bodyA.m_invMass+bodyB.m_mass *bodyB.m_invMass;
					kEqualized+=bodyA.m_mass *bodyA.m_invI *rnA+bodyB.m_mass *bodyB.m_invI *rnB;
					ccp.equalizedMass=1.0 / kEqualized;
					var tangentX=normalY;
					var tangentY=-normalX;
					var rtA=rAX*tangentY-rAY*tangentX;
					var rtB=rBX*tangentY-rBY*tangentX;
					rtA *=rtA;
					rtB *=rtB;
					var kTangent=bodyA.m_invMass+bodyB.m_invMass+bodyA.m_invI *rtA+bodyB.m_invI *rtB;
					ccp.tangentMass=1.0 / kTangent;
					ccp.velocityBias=0.0;
					var tX=vBX+(-wB*rBY)-vAX-(-wA*rAY);
					var tY=vBY+(wB*rBX)-vAY-(wA*rAX);
					var vRel=cc.normal.x*tX+cc.normal.y*tY;
					if (vRel <-/*Box2D.Common.b2Settings.b2_velocityThreshold*/1.0){
						ccp.velocityBias+=-cc.restitution *vRel;
					}
				}
				if (cc.pointCount==2){
					var ccp1=cc.points[0];
					var ccp2=cc.points[1];
					var invMassA=bodyA.m_invMass;
					var invIA=bodyA.m_invI;
					var invMassB=bodyB.m_invMass;
					var invIB=bodyB.m_invI;
					var rn1A=ccp1.rA.x *normalY-ccp1.rA.y *normalX;
					var rn1B=ccp1.rB.x *normalY-ccp1.rB.y *normalX;
					var rn2A=ccp2.rA.x *normalY-ccp2.rA.y *normalX;
					var rn2B=ccp2.rB.x *normalY-ccp2.rB.y *normalX;
					var k11=invMassA+invMassB+invIA *rn1A *rn1A+invIB *rn1B *rn1B;
					var k22=invMassA+invMassB+invIA *rn2A *rn2A+invIB *rn2B *rn2B;
					var k12=invMassA+invMassB+invIA *rn1A *rn2A+invIB *rn1B *rn2B;
					var k_maxConditionNumber=100.0;
					if (k11 *k11 < k_maxConditionNumber *(k11 *k22-k12 *k12)){
						cc.K.col1.Set(k11,k12);
						cc.K.col2.Set(k12,k22);
						cc.K.GetInverse(cc.normalMass);
					}
					else{
						cc.pointCount=1;
					}
				}
			}
		}

		__proto.InitVelocityConstraints=function(step){
			var tVec;
			var tVec2;
			var tMat;
			for (var i=0;i < this.m_constraintCount;++i){
				var c=this.m_constraints[ i];
				var bodyA=c.bodyA;
				var bodyB=c.bodyB;
				var invMassA=bodyA.m_invMass;
				var invIA=bodyA.m_invI;
				var invMassB=bodyB.m_invMass;
				var invIB=bodyB.m_invI;
				var normalX=c.normal.x;
				var normalY=c.normal.y;
				var tangentX=normalY;
				var tangentY=-normalX;
				var tX=NaN;
				var j=0;
				var tCount=0;
				if (step.warmStarting){
					tCount=c.pointCount;
					for (j=0;j < tCount;++j){
						var ccp=c.points[ j];
						ccp.normalImpulse *=step.dtRatio;
						ccp.tangentImpulse *=step.dtRatio;
						var PX=ccp.normalImpulse *normalX+ccp.tangentImpulse *tangentX;
						var PY=ccp.normalImpulse *normalY+ccp.tangentImpulse *tangentY;
						bodyA.m_angularVelocity-=invIA *(ccp.rA.x *PY-ccp.rA.y *PX);
						bodyA.m_linearVelocity.x-=invMassA *PX;
						bodyA.m_linearVelocity.y-=invMassA *PY;
						bodyB.m_angularVelocity+=invIB *(ccp.rB.x *PY-ccp.rB.y *PX);
						bodyB.m_linearVelocity.x+=invMassB *PX;
						bodyB.m_linearVelocity.y+=invMassB *PY;
						if(!bodyA.m_allowMovement){
							bodyA.m_linearVelocity.x=0;
							bodyA.m_linearVelocity.y=0;
						}
						if(!bodyB.m_allowMovement){
							bodyB.m_linearVelocity.x=0;
							bodyB.m_linearVelocity.y=0;
						}
					}
				}
				else{
					tCount=c.pointCount;
					for (j=0;j < tCount;++j){
						var ccp2=c.points[ j];
						ccp2.normalImpulse=0.0;
						ccp2.tangentImpulse=0.0;
					}
				}
			}
		}

		__proto.SolveVelocityConstraints=function(){
			var j=0;
			var ccp;
			var rAX=NaN;
			var rAY=NaN;
			var rBX=NaN;
			var rBY=NaN;
			var dvX=NaN;
			var dvY=NaN;
			var vn=NaN;
			var vt=NaN;
			var lambda=NaN;
			var maxFriction=NaN;
			var newImpulse=NaN;
			var PX=NaN;
			var PY=NaN;
			var dX=NaN;
			var dY=NaN;
			var P1X=NaN;
			var P1Y=NaN;
			var P2X=NaN;
			var P2Y=NaN;
			var tMat;
			var tVec;
			for (var i=0;i < this.m_constraintCount;++i){
				var c=this.m_constraints[ i];
				var bodyA=c.bodyA;
				var bodyB=c.bodyB;
				var wA=bodyA.m_angularVelocity;
				var wB=bodyB.m_angularVelocity;
				var vA=bodyA.m_linearVelocity;
				var vB=bodyB.m_linearVelocity;
				var invMassA=bodyA.m_invMass;
				var invIA=bodyA.m_invI;
				var invMassB=bodyB.m_invMass;
				var invIB=bodyB.m_invI;
				var normalX=c.normal.x;
				var normalY=c.normal.y;
				var tangentX=normalY;
				var tangentY=-normalX;
				var friction=c.friction;
				var tX=NaN;
				for (j=0;j < c.pointCount;j++){
					ccp=c.points[j];
					dvX=vB.x-wB *ccp.rB.y-vA.x+wA *ccp.rA.y;
					dvY=vB.y+wB *ccp.rB.x-vA.y-wA *ccp.rA.x;
					vt=dvX *tangentX+dvY *tangentY;
					lambda=ccp.tangentMass *-vt;
					maxFriction=friction *ccp.normalImpulse;
					newImpulse=b2Math.Clamp(ccp.tangentImpulse+lambda,-maxFriction,maxFriction);
					lambda=newImpulse-ccp.tangentImpulse;
					PX=lambda *tangentX;
					PY=lambda *tangentY;
					vA.x-=invMassA *PX;
					vA.y-=invMassA *PY;
					wA-=invIA *(ccp.rA.x *PY-ccp.rA.y *PX);
					vB.x+=invMassB *PX;
					vB.y+=invMassB *PY;
					wB+=invIB *(ccp.rB.x *PY-ccp.rB.y *PX);
					ccp.tangentImpulse=newImpulse;
				};
				var tCount=c.pointCount;
				if (c.pointCount==1){
					ccp=c.points[ 0];
					dvX=vB.x+(-wB *ccp.rB.y)-vA.x-(-wA *ccp.rA.y);
					dvY=vB.y+(wB *ccp.rB.x)-vA.y-(wA *ccp.rA.x);
					vn=dvX *normalX+dvY *normalY;
					lambda=-ccp.normalMass *(vn-ccp.velocityBias);
					newImpulse=ccp.normalImpulse+lambda;
					newImpulse=newImpulse > 0 ? newImpulse :0.0;
					lambda=newImpulse-ccp.normalImpulse;
					PX=lambda *normalX;
					PY=lambda *normalY;
					vA.x-=invMassA *PX;
					vA.y-=invMassA *PY;
					wA-=invIA *(ccp.rA.x *PY-ccp.rA.y *PX);
					vB.x+=invMassB *PX;
					vB.y+=invMassB *PY;
					wB+=invIB *(ccp.rB.x *PY-ccp.rB.y *PX);
					ccp.normalImpulse=newImpulse;
				}
				else{
					var cp1=c.points[ 0];
					var cp2=c.points[ 1];
					var aX=cp1.normalImpulse;
					var aY=cp2.normalImpulse;
					var dv1X=vB.x-wB *cp1.rB.y-vA.x+wA *cp1.rA.y;
					var dv1Y=vB.y+wB *cp1.rB.x-vA.y-wA *cp1.rA.x;
					var dv2X=vB.x-wB *cp2.rB.y-vA.x+wA *cp2.rA.y;
					var dv2Y=vB.y+wB *cp2.rB.x-vA.y-wA *cp2.rA.x;
					var vn1=dv1X *normalX+dv1Y *normalY;
					var vn2=dv2X *normalX+dv2Y *normalY;
					var bX=vn1-cp1.velocityBias;
					var bY=vn2-cp2.velocityBias;
					tMat=c.K;
					bX-=tMat.col1.x *aX+tMat.col2.x *aY;
					bY-=tMat.col1.y *aX+tMat.col2.y *aY;
					var k_errorTol=0.001;
					for (;;){
						tMat=c.normalMass;
						var xX=-(tMat.col1.x *bX+tMat.col2.x *bY);
						var xY=-(tMat.col1.y *bX+tMat.col2.y *bY);
						if (xX >=0.0 && xY >=0.0){
							dX=xX-aX;
							dY=xY-aY;
							P1X=dX *normalX;
							P1Y=dX *normalY;
							P2X=dY *normalX;
							P2Y=dY *normalY;
							vA.x-=invMassA *(P1X+P2X);
							vA.y-=invMassA *(P1Y+P2Y);
							wA-=invIA *(cp1.rA.x *P1Y-cp1.rA.y *P1X+cp2.rA.x *P2Y-cp2.rA.y *P2X);
							vB.x+=invMassB *(P1X+P2X);
							vB.y+=invMassB *(P1Y+P2Y);
							wB+=invIB *(cp1.rB.x *P1Y-cp1.rB.y *P1X+cp2.rB.x *P2Y-cp2.rB.y *P2X);
							cp1.normalImpulse=xX;
							cp2.normalImpulse=xY;
							break ;
						}
						xX=-cp1.normalMass *bX;
						xY=0.0;
						vn1=0.0;
						vn2=c.K.col1.y *xX+bY;
						if (xX >=0.0 && vn2 >=0.0){
							dX=xX-aX;
							dY=xY-aY;
							P1X=dX *normalX;
							P1Y=dX *normalY;
							P2X=dY *normalX;
							P2Y=dY *normalY;
							vA.x-=invMassA *(P1X+P2X);
							vA.y-=invMassA *(P1Y+P2Y);
							wA-=invIA *(cp1.rA.x *P1Y-cp1.rA.y *P1X+cp2.rA.x *P2Y-cp2.rA.y *P2X);
							vB.x+=invMassB *(P1X+P2X);
							vB.y+=invMassB *(P1Y+P2Y);
							wB+=invIB *(cp1.rB.x *P1Y-cp1.rB.y *P1X+cp2.rB.x *P2Y-cp2.rB.y *P2X);
							cp1.normalImpulse=xX;
							cp2.normalImpulse=xY;
							break ;
						}
						xX=0.0;
						xY=-cp2.normalMass *bY;
						vn1=c.K.col2.x *xY+bX;
						vn2=0.0;
						if (xY >=0.0 && vn1 >=0.0){
							dX=xX-aX;
							dY=xY-aY;
							P1X=dX *normalX;
							P1Y=dX *normalY;
							P2X=dY *normalX;
							P2Y=dY *normalY;
							vA.x-=invMassA *(P1X+P2X);
							vA.y-=invMassA *(P1Y+P2Y);
							wA-=invIA *(cp1.rA.x *P1Y-cp1.rA.y *P1X+cp2.rA.x *P2Y-cp2.rA.y *P2X);
							vB.x+=invMassB *(P1X+P2X);
							vB.y+=invMassB *(P1Y+P2Y);
							wB+=invIB *(cp1.rB.x *P1Y-cp1.rB.y *P1X+cp2.rB.x *P2Y-cp2.rB.y *P2X);
							cp1.normalImpulse=xX;
							cp2.normalImpulse=xY;
							break ;
						}
						xX=0.0;
						xY=0.0;
						vn1=bX;
						vn2=bY;
						if (vn1 >=0.0 && vn2 >=0.0){
							dX=xX-aX;
							dY=xY-aY;
							P1X=dX *normalX;
							P1Y=dX *normalY;
							P2X=dY *normalX;
							P2Y=dY *normalY;
							vA.x-=invMassA *(P1X+P2X);
							vA.y-=invMassA *(P1Y+P2Y);
							wA-=invIA *(cp1.rA.x *P1Y-cp1.rA.y *P1X+cp2.rA.x *P2Y-cp2.rA.y *P2X);
							vB.x+=invMassB *(P1X+P2X);
							vB.y+=invMassB *(P1Y+P2Y);
							wB+=invIB *(cp1.rB.x *P1Y-cp1.rB.y *P1X+cp2.rB.x *P2Y-cp2.rB.y *P2X);
							cp1.normalImpulse=xX;
							cp2.normalImpulse=xY;
							break ;
						}
						break ;
					}
				}
				bodyA.m_angularVelocity=wA;
				bodyB.m_angularVelocity=wB;
				if(!bodyA.m_allowMovement){
					bodyA.m_linearVelocity.x=0;
					bodyA.m_linearVelocity.y=0;
				}
				if(!bodyB.m_allowMovement){
					bodyB.m_linearVelocity.x=0;
					bodyB.m_linearVelocity.y=0;
				}
			}
		}

		__proto.FinalizeVelocityConstraints=function(){
			for (var i=0;i < this.m_constraintCount;++i){
				var c=this.m_constraints[ i];
				var m=c.manifold;
				for (var j=0;j < c.pointCount;++j){
					var point1=m.m_points[j];
					var point2=c.points[j];
					point1.m_normalImpulse=point2.normalImpulse;
					point1.m_tangentImpulse=point2.tangentImpulse;
				}
			}
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var minSeparation=0.0;
			for (var i=0;i < this.m_constraintCount;i++){
				var c=this.m_constraints[i];
				var bodyA=c.bodyA;
				var bodyB=c.bodyB;
				var invMassA=bodyA.m_mass *bodyA.m_invMass;
				var invIA=bodyA.m_mass *bodyA.m_invI;
				var invMassB=bodyB.m_mass *bodyB.m_invMass;
				var invIB=bodyB.m_mass *bodyB.m_invI;
				b2ContactSolver.s_psm.Initialize(c);
				var normal=b2ContactSolver.s_psm.m_normal;
				for (var j=0;j < c.pointCount;j++){
					var ccp=c.points[j];
					var point=b2ContactSolver.s_psm.m_points[j];
					var separation=b2ContactSolver.s_psm.m_separations[j];
					var rAX=point.x-bodyA.m_sweep.c.x;
					var rAY=point.y-bodyA.m_sweep.c.y;
					var rBX=point.x-bodyB.m_sweep.c.x;
					var rBY=point.y-bodyB.m_sweep.c.y;
					minSeparation=minSeparation < separation?minSeparation:separation;
					var C=b2Math.Clamp(baumgarte *(separation+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005),-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
					var impulse=-ccp.equalizedMass *C;
					var PX=impulse *normal.x;
					var PY=impulse *normal.y;
					if(bodyA.m_allowMovement){
						bodyA.m_sweep.c.x-=invMassA *PX;
						bodyA.m_sweep.c.y-=invMassA *PY;
					}
					bodyA.m_sweep.a-=invIA *(rAX *PY-rAY *PX);
					bodyA.SynchronizeTransform();
					if(bodyB.m_allowMovement){
						bodyB.m_sweep.c.x+=invMassB *PX;
						bodyB.m_sweep.c.y+=invMassB *PY;
					}
					bodyB.m_sweep.a+=invIB *(rBX *PY-rBY *PX);
					bodyB.SynchronizeTransform();
				}
			}
			return minSeparation >-1.5 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
		}

		__static(b2ContactSolver,
		['s_worldManifold',function(){return this.s_worldManifold=new b2WorldManifold();},'s_psm',function(){return this.s_psm=new b2PositionSolverManifold();}
		]);
		return b2ContactSolver;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2positionsolvermanifold.as
	;
	//class Box2D.Dynamics.Contacts.b2PositionSolverManifold
	var b2PositionSolverManifold=(function(){
		function b2PositionSolverManifold(){
			this.m_normal=null;
			this.m_points=null;
			this.m_separations=null;
			this.m_normal=new b2Vec2();
			this.m_separations=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
			this.m_points=__newvec(/*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2);
			for (var i=0;i < /*Box2D.Common.b2Settings.b2_maxManifoldPoints*/2;i++){
				this.m_points[i]=new b2Vec2();
			}
		}

		__class(b2PositionSolverManifold,'Box2D.Dynamics.Contacts.b2PositionSolverManifold',true);
		var __proto=b2PositionSolverManifold.prototype;
		__proto.Initialize=function(cc){
			b2Settings.b2Assert(cc.pointCount > 0);
			var i=0;
			var clipPointX=NaN;
			var clipPointY=NaN;
			var tMat;
			var tVec;
			var planePointX=NaN;
			var planePointY=NaN;
			switch(cc.type){
				case /*Box2D.Collision.b2Manifold.e_circles*/0x0001:{
						tMat=cc.bodyA.m_xf.R;
						tVec=cc.localPoint;
						var pointAX=cc.bodyA.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
						var pointAY=cc.bodyA.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
						tMat=cc.bodyB.m_xf.R;
						tVec=cc.points[0].localPoint;
						var pointBX=cc.bodyB.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
						var pointBY=cc.bodyB.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
						var dX=pointBX-pointAX;
						var dY=pointBY-pointAY;
						var d2=dX *dX+dY *dY;
						if (d2 > Number.MIN_VALUE*Number.MIN_VALUE){
							var d=Math.sqrt(d2);
							this.m_normal.x=dX/d;
							this.m_normal.y=dY/d;
						}
						else{
							this.m_normal.x=1.0;
							this.m_normal.y=0.0;
						}
						this.m_points[0].x=0.5 *(pointAX+pointBX);
						this.m_points[0].y=0.5 *(pointAY+pointBY);
						this.m_separations[0]=dX *this.m_normal.x+dY *this.m_normal.y-cc.radius;
					}
					break ;
				case /*Box2D.Collision.b2Manifold.e_faceA*/0x0002:{
						tMat=cc.bodyA.m_xf.R;
						tVec=cc.localPlaneNormal;
						this.m_normal.x=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						this.m_normal.y=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						tMat=cc.bodyA.m_xf.R;
						tVec=cc.localPoint;
						planePointX=cc.bodyA.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
						planePointY=cc.bodyA.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
						tMat=cc.bodyB.m_xf.R;
						for (i=0;i < cc.pointCount;++i){
							tVec=cc.points[i].localPoint;
							clipPointX=cc.bodyB.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
							clipPointY=cc.bodyB.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
							this.m_separations[i]=(clipPointX-planePointX)*this.m_normal.x+(clipPointY-planePointY)*this.m_normal.y-cc.radius;
							this.m_points[i].x=clipPointX;
							this.m_points[i].y=clipPointY;
						}
					}
					break ;
				case /*Box2D.Collision.b2Manifold.e_faceB*/0x0004:{
						tMat=cc.bodyB.m_xf.R;
						tVec=cc.localPlaneNormal;
						this.m_normal.x=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
						this.m_normal.y=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
						tMat=cc.bodyB.m_xf.R;
						tVec=cc.localPoint;
						planePointX=cc.bodyB.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
						planePointY=cc.bodyB.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
						tMat=cc.bodyA.m_xf.R;
						for (i=0;i < cc.pointCount;++i){
							tVec=cc.points[i].localPoint;
							clipPointX=cc.bodyA.m_xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
							clipPointY=cc.bodyA.m_xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
							this.m_separations[i]=(clipPointX-planePointX)*this.m_normal.x+(clipPointY-planePointY)*this.m_normal.y-cc.radius;
							this.m_points[i].Set(clipPointX,clipPointY);
						}
						this.m_normal.x *=-1;
						this.m_normal.y *=-1;
					}
					break ;
				}
		}

		__static(b2PositionSolverManifold,
		['circlePointA',function(){return this.circlePointA=new b2Vec2();},'circlePointB',function(){return this.circlePointB=new b2Vec2();}
		]);
		return b2PositionSolverManifold;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2controller.as
	;
	//class Box2D.Dynamics.Controllers.b2Controller
	var b2Controller=(function(){
		function b2Controller(){
			this.m_next=null;
			this.m_prev=null;
			this.m_bodyList=null;
			this.m_bodyCount=0;
			this.m_world=null;
		}

		__class(b2Controller,'Box2D.Dynamics.Controllers.b2Controller',true);
		var __proto=b2Controller.prototype;
		__proto.Step=LAYAFNVOID/*function(step){}*/
		__proto.Draw=LAYAFNVOID/*function(debugDraw){}*/
		__proto.AddBody=function(body){
			var edge=new b2ControllerEdge();
			edge.controller=this;
			edge.body=body;
			edge.nextBody=this.m_bodyList;
			edge.prevBody=null;
			this.m_bodyList=edge;
			if (edge.nextBody)
				edge.nextBody.prevBody=edge;
			this.m_bodyCount++;
			edge.nextController=body.m_controllerList;
			edge.prevController=null;
			body.m_controllerList=edge;
			if (edge.nextController)
				edge.nextController.prevController=edge;
			body.m_controllerCount++;
		}

		__proto.RemoveBody=function(body){
			var edge=body.m_controllerList;
			while (edge && edge.controller !=this)
			edge=edge.nextController;
			if (edge.prevBody)
				edge.prevBody.nextBody=edge.nextBody;
			if (edge.nextBody)
				edge.nextBody.prevBody=edge.prevBody;
			if (edge.nextController)
				edge.nextController.prevController=edge.prevController;
			if (edge.prevController)
				edge.prevController.nextController=edge.nextController;
			if (this.m_bodyList==edge)
				this.m_bodyList=edge.nextBody;
			if (body.m_controllerList==edge)
				body.m_controllerList=edge.nextController;
			body.m_controllerCount--;
			this.m_bodyCount--;
		}

		__proto.Clear=function(){
			while (this.m_bodyList)
			this.RemoveBody(this.m_bodyList.body);
		}

		__proto.GetNext=function(){return this.m_next;}
		__proto.GetWorld=function(){return this.m_world;}
		__proto.GetBodyList=function(){
			return this.m_bodyList;
		}

		return b2Controller;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2controlleredge.as
	//class Box2D.Dynamics.Controllers.b2ControllerEdge
	var b2ControllerEdge=(function(){
		function b2ControllerEdge(){
			this.controller=null;
			this.body=null;
			this.prevBody=null;
			this.nextBody=null;
			this.prevController=null;
			this.nextController=null;
		}

		__class(b2ControllerEdge,'Box2D.Dynamics.Controllers.b2ControllerEdge',true);
		return b2ControllerEdge;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2joint.as
	;
	//class Box2D.Dynamics.Joints.b2Joint
	var b2Joint=(function(){
		function b2Joint(def){
			this.m_type=0;
			this.m_prev=null;
			this.m_next=null;
			this.m_bodyA=null;
			this.m_bodyB=null;
			this.m_islandFlag=false;
			this.m_collideConnected=false;
			this.m_userData=null;
			this.m_invMassA=NaN;
			this.m_invMassB=NaN;
			this.m_invIA=NaN;
			this.m_invIB=NaN;
			this.m_edgeA=new b2JointEdge();
			this.m_edgeB=new b2JointEdge();
			this.m_localCenterA=new b2Vec2();
			this.m_localCenterB=new b2Vec2();
			b2Settings.b2Assert(def.bodyA !=def.bodyB);
			this.m_type=def.type;
			this.m_prev=null;
			this.m_next=null;
			this.m_bodyA=def.bodyA;
			this.m_bodyB=def.bodyB;
			this.m_collideConnected=def.collideConnected;
			this.m_islandFlag=false;
			this.m_userData=def.userData;
		}

		__class(b2Joint,'Box2D.Dynamics.Joints.b2Joint',true);
		var __proto=b2Joint.prototype;
		__proto.GetType=function(){
			return this.m_type;
		}

		__proto.GetAnchorA=LAYAFNNULL/*function(){return null}*/
		__proto.GetAnchorB=LAYAFNNULL/*function(){return null}*/
		__proto.GetReactionForce=LAYAFNNULL/*function(inv_dt){return null}*/
		__proto.GetReactionTorque=function(inv_dt){return 0.0}
		__proto.GetBodyA=function(){
			return this.m_bodyA;
		}

		__proto.GetBodyB=function(){
			return this.m_bodyB;
		}

		__proto.GetNext=function(){
			return this.m_next;
		}

		__proto.GetUserData=function(){
			return this.m_userData;
		}

		__proto.SetUserData=function(data){
			this.m_userData=data;
		}

		__proto.IsActive=function(){
			return this.m_bodyA.IsActive()&& this.m_bodyB.IsActive();
		}

		__proto.InitVelocityConstraints=LAYAFNVOID/*function(step){}*/
		__proto.SolveVelocityConstraints=LAYAFNVOID/*function(step){}*/
		__proto.FinalizeVelocityConstraints=LAYAFNVOID/*function(){}*/
		__proto.SolvePositionConstraints=LAYAFNFALSE/*function(baumgarte){return false }*/
		b2Joint.Create=function(def,allocator){
			var joint=null;
			switch (def.type){
				case 3:{
						joint=new b2DistanceJoint(def);
					}
					break ;
				case 5:{
						joint=new b2MouseJoint(def);
					}
					break ;
				case 2:{
						joint=new b2PrismaticJoint(def);
					}
					break ;
				case 1:{
						joint=new b2RevoluteJoint(def);
					}
					break ;
				case 4:{
						joint=new b2PulleyJoint(def);
					}
					break ;
				case 6:{
						joint=new b2GearJoint(def);
					}
					break ;
				case 7:{
						joint=new b2LineJoint(def);
					}
					break ;
				case 8:{
						joint=new b2WeldJoint(def);
					}
					break ;
				case 9:{
						joint=new b2FrictionJoint(def);
					}
					break ;
				default :
					break ;
				}
			return joint;
		}

		b2Joint.Destroy=function(joint,allocator){}
		b2Joint.e_unknownJoint=0;
		b2Joint.e_revoluteJoint=1;
		b2Joint.e_prismaticJoint=2;
		b2Joint.e_distanceJoint=3;
		b2Joint.e_pulleyJoint=4;
		b2Joint.e_mouseJoint=5;
		b2Joint.e_gearJoint=6;
		b2Joint.e_lineJoint=7;
		b2Joint.e_weldJoint=8;
		b2Joint.e_frictionJoint=9;
		b2Joint.e_inactiveLimit=0;
		b2Joint.e_atLowerLimit=1;
		b2Joint.e_atUpperLimit=2;
		b2Joint.e_equalLimits=3;
		return b2Joint;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2jointdef.as
	;
	//class Box2D.Dynamics.Joints.b2JointDef
	var b2JointDef=(function(){
		function b2JointDef(){
			this.type=0;
			this.userData=null;
			this.bodyA=null;
			this.bodyB=null;
			this.collideConnected=false;
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_unknownJoint*/0;
			this.userData=null;
			this.bodyA=null;
			this.bodyB=null;
			this.collideConnected=false;
		}

		__class(b2JointDef,'Box2D.Dynamics.Joints.b2JointDef',true);
		return b2JointDef;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2jacobian.as
	;
	//class Box2D.Dynamics.Joints.b2Jacobian
	var b2Jacobian=(function(){
		function b2Jacobian(){
			this.angularA=NaN;
			this.angularB=NaN;
			this.linearA=new b2Vec2();
			this.linearB=new b2Vec2();
		}

		__class(b2Jacobian,'Box2D.Dynamics.Joints.b2Jacobian',true);
		var __proto=b2Jacobian.prototype;
		__proto.SetZero=function(){
			this.linearA.SetZero();this.angularA=0.0;
			this.linearB.SetZero();this.angularB=0.0;
		}

		__proto.Set=function(x1,a1,x2,a2){
			this.linearA.SetV(x1);this.angularA=a1;
			this.linearB.SetV(x2);this.angularB=a2;
		}

		__proto.Compute=function(x1,a1,x2,a2){
			return (this.linearA.x*x1.x+this.linearA.y*x1.y)+this.angularA *a1+(this.linearB.x*x2.x+this.linearB.y*x2.y)+this.angularB *a2;
		}

		return b2Jacobian;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2jointedge.as
	;
	//class Box2D.Dynamics.Joints.b2JointEdge
	var b2JointEdge=(function(){
		function b2JointEdge(){
			this.other=null;
			this.joint=null;
			this.prev=null;
			this.next=null;
		}

		__class(b2JointEdge,'Box2D.Dynamics.Joints.b2JointEdge',true);
		return b2JointEdge;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/com/adobe/utils/agalminiassembler.as
	//class com.adobe.utils.AGALMiniAssembler
	var AGALMiniAssembler=(function(){
		function AGALMiniAssembler(debugging){
			this._agalcode=null;
			this._error="";
			this.debugEnabled=false;
			this.verbose=false;
			(debugging===void 0)&& (debugging=false);
			this.debugEnabled=debugging;
			if (!AGALMiniAssembler.initialized)
				AGALMiniAssembler.init();
		}

		__class(AGALMiniAssembler,'com.adobe.utils.AGALMiniAssembler',true);
		var __proto=AGALMiniAssembler.prototype;
		__proto.assemble2=function(ctx3d,version,vertexsrc,fragmentsrc){
			var agalvertex=this.assemble ("vertex",vertexsrc,version);
			var agalfragment=this.assemble ("fragment",fragmentsrc,version);
			var prog=ctx3d.createProgram();
			prog.upload(agalvertex,agalfragment);
			return prog;
		}

		__proto.assemble=function(mode,source,version,ignorelimits){
			(version===void 0)&& (version=1);
			(ignorelimits===void 0)&& (ignorelimits=false);
			var start=iflash.utils.getTimer();
			this._agalcode=new ByteArray();
			this._error="";
			var isFrag=false;
			if (mode=="fragment")
				isFrag=true;
			else if (mode !="vertex")
			this._error='ERROR: mode needs to be "'+"fragment"+'" or "'+"vertex"+'" but is "'+mode+'".';
			this.agalcode.endian=/*iflash.utils.Endian.LITTLE_ENDIAN*/"littleEndian";
			this.agalcode.writeByte(0xa0);
			this.agalcode.writeUnsignedInt(version);
			this.agalcode.writeByte(0xa1);
			this.agalcode.writeByte(isFrag ? 1 :0);
			this.initregmap(version,ignorelimits);
			var lines=source.replace(/[\f\n\r\v]+/g,"\n").split("\n");
			var nest=0;
			var nops=0;
			var i=0;
			var lng=lines.length;
			for (i=0;i < lng && this._error=="";i++){
				var line=new String(lines[i]);
				line=line.replace(/^\s+|\s+$/g,"");
				var startcomment=line.search("//");
				if (startcomment !=-1)
					line=line.slice(0,startcomment);
				var optsi=line.search(/<.*>/g );
				var opts;
				if (optsi !=-1){
					opts=line.slice(optsi).match(/([\w\.\-\+]+)/gi );
					line=line.slice(0,optsi);
				};
				var opCode=line.match(/^\w{3}/ig );
				if (!opCode){
					if (line.length >=3)
						console.log("warning: bad line "+i+": "+lines[i]);
					continue ;
				};
				var opFound=AGALMiniAssembler.OPMAP[opCode[0]];
				if (this.debugEnabled)
					console.log(opFound);
				if (opFound==null){
					if (line.length >=3)
						console.log("warning: bad line "+i+": "+lines[i]);
					continue ;
				}
				line=line.slice(line.search(opFound.name)+opFound.name.length);
				if ((opFound.flags & 0x100)&& version<2){
					this._error="error: opcode requires version 2.";
					break ;
				}
				if ((opFound.flags & 0x40)&& isFrag){
					this._error="error: opcode is only allowed in vertex programs.";
					break ;
				}
				if ((opFound.flags & 0x20)&& !isFrag){
					this._error="error: opcode is only allowed in fragment programs.";
					break ;
				}
				if (this.verbose)
					console.log("emit opcode="+opFound);
				this.agalcode.writeUnsignedInt(opFound.emitCode);
				nops++;
				if (nops > 2048){
					this._error="error: too many opcodes. maximum is "+2048+".";
					break ;
				};
				var regs;
				regs=line.match(/vc\[([vof][acostdip]?)(\d*)?(\.[xyzw](\+\d{1,3})?)?\](\.[xyzw]{1,4})?|([vof][acostdip]?)(\d*)?(\.[xyzw]{1,4})?/gi );
				if (!regs || regs.length !=opFound.numRegister){
					this._error="error: wrong number of operands. found "+regs.length+" but expected "+opFound.numRegister+".";
					break ;
				};
				var badreg=false;
				var pad=64+64+32;
				var regLength=regs.length;
				for (var j=0;j < regLength;j++){
					var isRelative=false;
					var relreg=regs[ j].match(/\[.*\]/ig );
					if (relreg && relreg.length > 0){
						regs[ j]=regs[ j].replace(relreg[ 0],"0");
						if (this.verbose)
							console.log("IS REL");
						isRelative=true;
					};
					var res=regs[j].match(/^\b[A-Za-z]{1,2}/ig );
					if (!res){
						this._error="error: could not parse operand "+j+" ("+regs[j]+").";
						badreg=true;
						break ;
					};
					var regFound=AGALMiniAssembler.REGMAP[res[ 0]];
					if (this.debugEnabled)
						console.log(regFound);
					if (regFound==null){
						this._error="error: could not find register name for operand "+j+" ("+regs[j]+").";
						badreg=true;
						break ;
					}
					if (isFrag){
						if (!(regFound.flags & 0x20)){
							this._error="error: register operand "+j+" ("+regs[j]+") only allowed in vertex programs.";
							badreg=true;
							break ;
						}
						if (isRelative){
							this._error="error: register operand "+j+" ("+regs[j]+") relative adressing not allowed in fragment programs.";
							badreg=true;
							break ;
						}
					}
					else{
						if (!(regFound.flags & 0x40)){
							this._error="error: register operand "+j+" ("+regs[j]+") only allowed in fragment programs.";
							badreg=true;
							break ;
						}
					}
					regs[j]=regs[j].slice(regs[j].search(regFound.name)+regFound.name.length);
					var idxmatch=isRelative ? relreg[0].match(/\d+/ ):regs[j].match(/\d+/ );
					var regidx=0;
					if (idxmatch)
						regidx=uint(idxmatch[0]);
					if (regFound.range < regidx){
						this._error="error: register operand "+j+" ("+regs[j]+") index exceeds limit of "+(regFound.range+1)+".";
						badreg=true;
						break ;
					};
					var regmask=0;
					var maskmatch=regs[j].match(/(\.[xyzw]{1,4})/ );
					var isDest=(j==0 && !(opFound.flags & 0x80));
					var isSampler=(j==2 && (opFound.flags & 0x8));
					var reltype=0;
					var relsel=0;
					var reloffset=0;
					if (isDest && isRelative){
						this._error="error: relative can not be destination";
						badreg=true;
						break ;
					}
					if (maskmatch){
						regmask=0;
						var cv=0;
						var maskLength=maskmatch[0].length;
						for (var k=1;k < maskLength;k++){
							cv=maskmatch[0].charCodeAt(k)-"x".charCodeAt(0);
							if (cv > 2)
								cv=3;
							if (isDest)
								regmask |=1 << cv;
							else
							regmask |=cv << ((k-1)<< 1);
						}
						if (!isDest)
							for (;k <=4;k++)
						regmask |=cv << ((k-1)<< 1);
					}
					else{
						regmask=isDest ? 0xf :0xe4;
					}
					if (isRelative){
						var relname=relreg[0].match(/[A-Za-z]{1,2}/ig );
						var regFoundRel=AGALMiniAssembler.REGMAP[relname[0]];
						if (regFoundRel==null){
							this._error="error: bad index register";
							badreg=true;
							break ;
						}
						reltype=regFoundRel.emitCode;
						var selmatch=relreg[0].match(/(\.[xyzw]{1,1})/ );
						if (selmatch.length==0){
							this._error="error: bad index register select";
							badreg=true;
							break ;
						}
						relsel=selmatch[0].charCodeAt(1)-"x".charCodeAt(0);
						if (relsel > 2)
							relsel=3;
						var relofs=relreg[0].match(/\+\d{1,3}/ig );
						if (relofs.length > 0)
							reloffset=relofs[0];
						if (reloffset < 0 || reloffset > 255){
							this._error="error: index offset "+reloffset+" out of bounds. [0..255]";
							badreg=true;
							break ;
						}
						if (this.verbose)
							console.log("RELATIVE: type="+reltype+"=="+relname[0]+" sel="+relsel+"=="+selmatch[0]+" idx="+regidx+" offset="+reloffset);
					}
					if (this.verbose)
						console.log("  emit argcode="+regFound+"["+regidx+"]["+regmask+"]");
					if (isDest){
						this.agalcode.writeShort(regidx);
						this.agalcode.writeByte(regmask);
						this.agalcode.writeByte(regFound.emitCode);
						pad-=32;
						}else{
						if (isSampler){
							if (this.verbose)
								console.log("  emit sampler");
							var samplerbits=5;
							var optsLength=opts==null ? 0 :opts.length;
							var bias=0;
							for (k=0;k<optsLength;k++){
								if (this.verbose)
									console.log("    opt: "+opts[k]);
								var optfound=AGALMiniAssembler.SAMPLEMAP[opts[k]];
								if (optfound==null){
									bias=Number(opts[k]);
									if (this.verbose)
										console.log("    bias: "+bias);
								}
								else{
									if (optfound.flag !=16)
										samplerbits &=~(0xf << optfound.flag);
									samplerbits |=uint(optfound.mask)<< uint(optfound.flag);
								}
							}
							this.agalcode.writeShort(regidx);
							this.agalcode.writeByte(int(bias*8.0));
							this.agalcode.writeByte(0);
							this.agalcode.writeUnsignedInt(samplerbits);
							if (this.verbose)
								console.log("    bits: "+(samplerbits-5));
							pad-=64;
						}
						else{
							if (j==0){
								this.agalcode.writeUnsignedInt(0);
								pad-=32;
							}
							this.agalcode.writeShort(regidx);
							this.agalcode.writeByte(reloffset);
							this.agalcode.writeByte(regmask);
							this.agalcode.writeByte(regFound.emitCode);
							this.agalcode.writeByte(reltype);
							this.agalcode.writeShort(isRelative ? (relsel | (1 << 15)):0);
							pad-=64;
						}
					}
				}
				for (j=0;j < pad;j+=8)
				this.agalcode.writeByte(0);
				if (badreg)
					break ;
			}
			if (this._error !=""){
				this._error+="\n  at line "+i+" "+lines[i];
				this.agalcode.length=0;
				console.log(this._error);
			}
			if (this.debugEnabled){
				var dbgLine="generated bytecode:";
				var agalLength=this.agalcode.length;
				for (var index=0;index < agalLength;index++){
					if (!(index % 16))
						dbgLine+="\n";
					if (!(index % 4))
						dbgLine+=" ";
					var byteStr=this.agalcode[ index].toString(16);
					if (byteStr.length < 2)
						byteStr="0"+byteStr;
					dbgLine+=byteStr;
				}
				console.log(dbgLine);
			}
			if (this.verbose)
				console.log("AGALMiniAssembler.assemble time: "+((iflash.utils.getTimer()-start)/ 1000)+"s");
			return this.agalcode;
		}

		__proto.initregmap=function(version,ignorelimits){
			AGALMiniAssembler.REGMAP[ "va"]=new Register1("va","vertex attribute",0x0,ignorelimits?1024:((version==1||version==2)?7:15),0x40 | 0x2);
			AGALMiniAssembler.REGMAP[ "vc"]=new Register1("vc","vertex constant",0x1,ignorelimits?1024:(version==1?127:249),0x40 | 0x2);
			AGALMiniAssembler.REGMAP[ "vt"]=new Register1("vt","vertex temporary",0x2,ignorelimits?1024:(version==1?7:25),0x40 | 0x1 | 0x2);
			AGALMiniAssembler.REGMAP[ "vo"]=new Register1("vo","vertex output",0x3,ignorelimits?1024:0,0x40 | 0x1);
			AGALMiniAssembler.REGMAP[ "vi"]=new Register1("vi","varying",0x4,ignorelimits?1024:(version==1?7:9),0x40 | 0x20 | 0x2 | 0x1);
			AGALMiniAssembler.REGMAP[ "fc"]=new Register1("fc","fragment constant",0x1,ignorelimits?1024:(version==1?27:((version==2)?63:199)),0x20 | 0x2);
			AGALMiniAssembler.REGMAP[ "ft"]=new Register1("ft","fragment temporary",0x2,ignorelimits?1024:(version==1?7:25),0x20 | 0x1 | 0x2);
			AGALMiniAssembler.REGMAP[ "fs"]=new Register1("fs","texture sampler",0x5,ignorelimits?1024:7,0x20 | 0x2);
			AGALMiniAssembler.REGMAP[ "fo"]=new Register1("fo","fragment output",0x3,ignorelimits?1024:(version==1?0:3),0x20 | 0x1);
			AGALMiniAssembler.REGMAP[ "fd"]=new Register1("fd","fragment depth output",0x6,ignorelimits?1024:(version==1?-1:0),0x20 | 0x1);
			AGALMiniAssembler.REGMAP[ "op"]=AGALMiniAssembler.REGMAP[ "vo"];
			AGALMiniAssembler.REGMAP[ "i"]=AGALMiniAssembler.REGMAP[ "vi"];
			AGALMiniAssembler.REGMAP[ "v"]=AGALMiniAssembler.REGMAP[ "vi"];
			AGALMiniAssembler.REGMAP[ "oc"]=AGALMiniAssembler.REGMAP[ "fo"];
			AGALMiniAssembler.REGMAP[ "od"]=AGALMiniAssembler.REGMAP[ "fd"];
			AGALMiniAssembler.REGMAP[ "fi"]=AGALMiniAssembler.REGMAP[ "vi"];
		}

		__getset(0,__proto,'error',function(){return this._error;});
		__getset(0,__proto,'agalcode',function(){return this._agalcode;});
		AGALMiniAssembler.init=function(){
			AGALMiniAssembler.initialized=true;
			AGALMiniAssembler.OPMAP[ "mov"]=new OpCode("mov",2,0x00,0);
			AGALMiniAssembler.OPMAP[ "add"]=new OpCode("add",3,0x01,0);
			AGALMiniAssembler.OPMAP[ "sub"]=new OpCode("sub",3,0x02,0);
			AGALMiniAssembler.OPMAP[ "mul"]=new OpCode("mul",3,0x03,0);
			AGALMiniAssembler.OPMAP[ "div"]=new OpCode("div",3,0x04,0);
			AGALMiniAssembler.OPMAP[ "rcp"]=new OpCode("rcp",2,0x05,0);
			AGALMiniAssembler.OPMAP[ "min"]=new OpCode("min",3,0x06,0);
			AGALMiniAssembler.OPMAP[ "max"]=new OpCode("max",3,0x07,0);
			AGALMiniAssembler.OPMAP[ "frc"]=new OpCode("frc",2,0x08,0);
			AGALMiniAssembler.OPMAP[ "sqt"]=new OpCode("sqt",2,0x09,0);
			AGALMiniAssembler.OPMAP[ "rsq"]=new OpCode("rsq",2,0x0a,0);
			AGALMiniAssembler.OPMAP[ "pow"]=new OpCode("pow",3,0x0b,0);
			AGALMiniAssembler.OPMAP[ "log"]=new OpCode("log",2,0x0c,0);
			AGALMiniAssembler.OPMAP[ "exp"]=new OpCode("exp",2,0x0d,0);
			AGALMiniAssembler.OPMAP[ "nrm"]=new OpCode("nrm",2,0x0e,0);
			AGALMiniAssembler.OPMAP[ "sin"]=new OpCode("sin",2,0x0f,0);
			AGALMiniAssembler.OPMAP[ "cos"]=new OpCode("cos",2,0x10,0);
			AGALMiniAssembler.OPMAP[ "crs"]=new OpCode("crs",3,0x11,0);
			AGALMiniAssembler.OPMAP[ "dp3"]=new OpCode("dp3",3,0x12,0);
			AGALMiniAssembler.OPMAP[ "dp4"]=new OpCode("dp4",3,0x13,0);
			AGALMiniAssembler.OPMAP[ "abs"]=new OpCode("abs",2,0x14,0);
			AGALMiniAssembler.OPMAP[ "neg"]=new OpCode("neg",2,0x15,0);
			AGALMiniAssembler.OPMAP[ "sat"]=new OpCode("sat",2,0x16,0);
			AGALMiniAssembler.OPMAP[ "m33"]=new OpCode("m33",3,0x17,0x10);
			AGALMiniAssembler.OPMAP[ "m44"]=new OpCode("m44",3,0x18,0x10);
			AGALMiniAssembler.OPMAP[ "m34"]=new OpCode("m34",3,0x19,0x10);
			AGALMiniAssembler.OPMAP[ "ddx"]=new OpCode("ddx",2,0x1a,0x100 | 0x20);
			AGALMiniAssembler.OPMAP[ "ddy"]=new OpCode("ddy",2,0x1b,0x100 | 0x20);
			AGALMiniAssembler.OPMAP[ "ife"]=new OpCode("ife",2,0x1c,0x80 | 0x100 | 0x200 | 0x1);
			AGALMiniAssembler.OPMAP[ "ine"]=new OpCode("ine",2,0x1d,0x80 | 0x100 | 0x200 | 0x1);
			AGALMiniAssembler.OPMAP[ "ifg"]=new OpCode("ifg",2,0x1e,0x80 | 0x100 | 0x200 | 0x1);
			AGALMiniAssembler.OPMAP[ "ifl"]=new OpCode("ifl",2,0x1f,0x80 | 0x100 | 0x200 | 0x1);
			AGALMiniAssembler.OPMAP[ "els"]=new OpCode("els",0,0x20,0x80 | 0x100 | 0x200 | 0x400 | 0x1);
			AGALMiniAssembler.OPMAP[ "eif"]=new OpCode("eif",0,0x21,0x80 | 0x100 | 0x400 | 0x1);
			AGALMiniAssembler.OPMAP[ "kil"]=new OpCode("kil",1,0x27,0x80 | 0x20);
			AGALMiniAssembler.OPMAP[ "tex"]=new OpCode("tex",3,0x28,0x20 | 0x8);
			AGALMiniAssembler.OPMAP[ "sge"]=new OpCode("sge",3,0x29,0);
			AGALMiniAssembler.OPMAP[ "slt"]=new OpCode("slt",3,0x2a,0);
			AGALMiniAssembler.OPMAP[ "sgn"]=new OpCode("sgn",2,0x2b,0);
			AGALMiniAssembler.OPMAP[ "seq"]=new OpCode("seq",3,0x2c,0);
			AGALMiniAssembler.OPMAP[ "sne"]=new OpCode("sne",3,0x2d,0);
			AGALMiniAssembler.SAMPLEMAP[ "rgba"]=new Sampler("rgba",8,0);
			AGALMiniAssembler.SAMPLEMAP[ "dxt1"]=new Sampler("dxt1",8,1);
			AGALMiniAssembler.SAMPLEMAP[ "dxt5"]=new Sampler("dxt5",8,2);
			AGALMiniAssembler.SAMPLEMAP[ "video"]=new Sampler("video",8,3);
			AGALMiniAssembler.SAMPLEMAP[ "2d"]=new Sampler("2d",12,0);
			AGALMiniAssembler.SAMPLEMAP[ "3d"]=new Sampler("3d",12,2);
			AGALMiniAssembler.SAMPLEMAP[ "cube"]=new Sampler("cube",12,1);
			AGALMiniAssembler.SAMPLEMAP[ "mipnearest"]=new Sampler("mipnearest",24,1);
			AGALMiniAssembler.SAMPLEMAP[ "miplinear"]=new Sampler("miplinear",24,2);
			AGALMiniAssembler.SAMPLEMAP[ "mipnone"]=new Sampler("mipnone",24,0);
			AGALMiniAssembler.SAMPLEMAP[ "nomip"]=new Sampler("nomip",24,0);
			AGALMiniAssembler.SAMPLEMAP[ "nearest"]=new Sampler("nearest",28,0);
			AGALMiniAssembler.SAMPLEMAP[ "linear"]=new Sampler("linear",28,1);
			AGALMiniAssembler.SAMPLEMAP[ "anisotropic2x"]=new Sampler("anisotropic2x",28,2);
			AGALMiniAssembler.SAMPLEMAP[ "anisotropic4x"]=new Sampler("anisotropic4x",28,3);
			AGALMiniAssembler.SAMPLEMAP[ "anisotropic8x"]=new Sampler("anisotropic8x",28,4);
			AGALMiniAssembler.SAMPLEMAP[ "anisotropic16x"]=new Sampler("anisotropic16x",28,5);
			AGALMiniAssembler.SAMPLEMAP[ "centroid"]=new Sampler("centroid",16,1 << 0);
			AGALMiniAssembler.SAMPLEMAP[ "single"]=new Sampler("single",16,1 << 1);
			AGALMiniAssembler.SAMPLEMAP[ "ignoresampler"]=new Sampler("ignoresampler",16,1 << 2);
			AGALMiniAssembler.SAMPLEMAP[ "repeat"]=new Sampler("repeat",20,1);
			AGALMiniAssembler.SAMPLEMAP[ "wrap"]=new Sampler("wrap",20,1);
			AGALMiniAssembler.SAMPLEMAP[ "clamp"]=new Sampler("clamp",20,0);
			AGALMiniAssembler.SAMPLEMAP[ "clamp_u_repeat_v"]=new Sampler("clamp_u_repeat_v",20,2);
			AGALMiniAssembler.SAMPLEMAP[ "repeat_u_clamp_v"]=new Sampler("repeat_u_clamp_v",20,3);
		}

		AGALMiniAssembler.initialized=false;
		AGALMiniAssembler.MAX_NESTING=4;
		AGALMiniAssembler.MAX_OPCODES=2048;
		AGALMiniAssembler.FRAGMENT="fragment";
		AGALMiniAssembler.VERTEX="vertex";
		AGALMiniAssembler.SAMPLER_TYPE_SHIFT=8;
		AGALMiniAssembler.SAMPLER_DIM_SHIFT=12;
		AGALMiniAssembler.SAMPLER_SPECIAL_SHIFT=16;
		AGALMiniAssembler.SAMPLER_REPEAT_SHIFT=20;
		AGALMiniAssembler.SAMPLER_MIPMAP_SHIFT=24;
		AGALMiniAssembler.SAMPLER_FILTER_SHIFT=28;
		AGALMiniAssembler.REG_WRITE=0x1;
		AGALMiniAssembler.REG_READ=0x2;
		AGALMiniAssembler.REG_FRAG=0x20;
		AGALMiniAssembler.REG_VERT=0x40;
		AGALMiniAssembler.OP_SCALAR=0x1;
		AGALMiniAssembler.OP_SPECIAL_TEX=0x8;
		AGALMiniAssembler.OP_SPECIAL_MATRIX=0x10;
		AGALMiniAssembler.OP_FRAG_ONLY=0x20;
		AGALMiniAssembler.OP_VERT_ONLY=0x40;
		AGALMiniAssembler.OP_NO_DEST=0x80;
		AGALMiniAssembler.OP_VERSION2=0x100;
		AGALMiniAssembler.OP_INCNEST=0x200;
		AGALMiniAssembler.OP_DECNEST=0x400;
		AGALMiniAssembler.MOV="mov";
		AGALMiniAssembler.ADD="add";
		AGALMiniAssembler.SUB="sub";
		AGALMiniAssembler.MUL="mul";
		AGALMiniAssembler.DIV="div";
		AGALMiniAssembler.RCP="rcp";
		AGALMiniAssembler.MIN="min";
		AGALMiniAssembler.MAX="max";
		AGALMiniAssembler.FRC="frc";
		AGALMiniAssembler.SQT="sqt";
		AGALMiniAssembler.RSQ="rsq";
		AGALMiniAssembler.POW="pow";
		AGALMiniAssembler.LOG="log";
		AGALMiniAssembler.EXP="exp";
		AGALMiniAssembler.NRM="nrm";
		AGALMiniAssembler.SIN="sin";
		AGALMiniAssembler.COS="cos";
		AGALMiniAssembler.CRS="crs";
		AGALMiniAssembler.DP3="dp3";
		AGALMiniAssembler.DP4="dp4";
		AGALMiniAssembler.ABS="abs";
		AGALMiniAssembler.NEG="neg";
		AGALMiniAssembler.SAT="sat";
		AGALMiniAssembler.M33="m33";
		AGALMiniAssembler.M44="m44";
		AGALMiniAssembler.M34="m34";
		AGALMiniAssembler.DDX="ddx";
		AGALMiniAssembler.DDY="ddy";
		AGALMiniAssembler.IFE="ife";
		AGALMiniAssembler.INE="ine";
		AGALMiniAssembler.IFG="ifg";
		AGALMiniAssembler.IFL="ifl";
		AGALMiniAssembler.ELS="els";
		AGALMiniAssembler.EIF="eif";
		AGALMiniAssembler.TED="ted";
		AGALMiniAssembler.KIL="kil";
		AGALMiniAssembler.TEX="tex";
		AGALMiniAssembler.SGE="sge";
		AGALMiniAssembler.SLT="slt";
		AGALMiniAssembler.SGN="sgn";
		AGALMiniAssembler.SEQ="seq";
		AGALMiniAssembler.SNE="sne";
		AGALMiniAssembler.VA="va";
		AGALMiniAssembler.VC="vc";
		AGALMiniAssembler.VT="vt";
		AGALMiniAssembler.VO="vo";
		AGALMiniAssembler.VI="vi";
		AGALMiniAssembler.FC="fc";
		AGALMiniAssembler.FT="ft";
		AGALMiniAssembler.FS="fs";
		AGALMiniAssembler.FO="fo";
		AGALMiniAssembler.FD="fd";
		AGALMiniAssembler.D2="2d";
		AGALMiniAssembler.D3="3d";
		AGALMiniAssembler.CUBE="cube";
		AGALMiniAssembler.MIPNEAREST="mipnearest";
		AGALMiniAssembler.MIPLINEAR="miplinear";
		AGALMiniAssembler.MIPNONE="mipnone";
		AGALMiniAssembler.NOMIP="nomip";
		AGALMiniAssembler.NEAREST="nearest";
		AGALMiniAssembler.LINEAR="linear";
		AGALMiniAssembler.ANISOTROPIC2X="anisotropic2x";
		AGALMiniAssembler.ANISOTROPIC4X="anisotropic4x";
		AGALMiniAssembler.ANISOTROPIC8X="anisotropic8x";
		AGALMiniAssembler.ANISOTROPIC16X="anisotropic16x";
		AGALMiniAssembler.CENTROID="centroid";
		AGALMiniAssembler.SINGLE="single";
		AGALMiniAssembler.IGNORESAMPLER="ignoresampler";
		AGALMiniAssembler.REPEAT="repeat";
		AGALMiniAssembler.WRAP="wrap";
		AGALMiniAssembler.CLAMP="clamp";
		AGALMiniAssembler.REPEAT_U_CLAMP_V="repeat_u_clamp_v";
		AGALMiniAssembler.CLAMP_U_REPEAT_V="clamp_u_repeat_v";
		AGALMiniAssembler.RGBA="rgba";
		AGALMiniAssembler.DXT1="dxt1";
		AGALMiniAssembler.DXT5="dxt5";
		AGALMiniAssembler.VIDEO="video";
		__static(AGALMiniAssembler,
		['REGEXP_OUTER_SPACES',function(){return this.REGEXP_OUTER_SPACES=/^\s+|\s+$/g;},'OPMAP',function(){return this.OPMAP=new Object();},'REGMAP',function(){return this.REGMAP=new Object();},'SAMPLEMAP',function(){return this.SAMPLEMAP=new Object();}
		]);
		return AGALMiniAssembler;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/com/adobe/utils/opcode.as
	//class com.adobe.utils.OpCode
	var OpCode=(function(){
		function OpCode(name,numRegister,emitCode,flags){
			this._emitCode=0;
			this._flags=0;
			this._name=null;
			this._numRegister=0;
			this._name=name;
			this._numRegister=numRegister;
			this._emitCode=emitCode;
			this._flags=flags;
		}

		__class(OpCode,'com.adobe.utils.OpCode',false);
		var __proto=OpCode.prototype;
		__proto.toString=function(){
			return "[OpCode name=\""+this._name+"\", numRegister="+this._numRegister+", emitCode="+this._emitCode+", flags="+this._flags+"]";
		}

		__getset(0,__proto,'emitCode',function(){return this._emitCode;});
		__getset(0,__proto,'flags',function(){return this._flags;});
		__getset(0,__proto,'name',function(){return this._name;});
		__getset(0,__proto,'numRegister',function(){return this._numRegister;});
		return OpCode;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/com/adobe/utils/register.as
	//class com.adobe.utils.Register
	var Register1=(function(){
		function Register(name,longName,emitCode,range,flags){
			this._emitCode=0;
			this._name=null;
			this._longName=null;
			this._flags=0;
			this._range=0;
			this._name=name;
			this._longName=longName;
			this._emitCode=emitCode;
			this._range=range;
			this._flags=flags;
		}

		__class(Register,'com.adobe.utils.Register',false,null,'Register1');
		var __proto=Register.prototype;
		__proto.toString=function(){
			return "[Register name=\""+this._name+"\", longName=\""+this._longName+"\", emitCode="+this._emitCode+", range="+this._range+", flags="+this._flags+"]";
		}

		__getset(0,__proto,'emitCode',function(){return this._emitCode;});
		__getset(0,__proto,'flags',function(){return this._flags;});
		__getset(0,__proto,'longName',function(){return this._longName;});
		__getset(0,__proto,'name',function(){return this._name;});
		__getset(0,__proto,'range',function(){return this._range;});
		return Register;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/com/adobe/utils/sampler.as
	//class com.adobe.utils.Sampler
	var Sampler=(function(){
		function Sampler(name,flag,mask){
			this._flag=0;
			this._mask=0;
			this._name=null;
			this._name=name;
			this._flag=flag;
			this._mask=mask;
		}

		__class(Sampler,'com.adobe.utils.Sampler',false);
		var __proto=Sampler.prototype;
		__proto.toString=function(){
			return "[Sampler name=\""+this._name+"\", flag=\""+this._flag+"\", mask="+this.mask+"]";
		}

		__getset(0,__proto,'flag',function(){return this._flag;});
		__getset(0,__proto,'name',function(){return this._name;});
		__getset(0,__proto,'mask',function(){return this._mask;});
		return Sampler;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/eventdispatcher.as
	//class starling.events.EventDispatcher
	var EventDispatcher1=(function(){
		function EventDispatcher(){
			this.mEventListeners=null;
		}

		__class(EventDispatcher,'starling.events.EventDispatcher',true,null,'EventDispatcher1');
		var __proto=EventDispatcher.prototype;
		__proto.addEventListener=function(type,listener){
			if (this.mEventListeners==null)
				this.mEventListeners=new Object();
			var listeners=this.mEventListeners [type];
			if (listeners==null)
				this.mEventListeners[type]=/*new vector.<>*/[listener];
			else if (listeners.indexOf(listener)==-1)
			listeners[listeners.length]=listener;
		}

		__proto.removeEventListener=function(type,listener){
			if (this.mEventListeners){
				var listeners=this.mEventListeners [type];
				var numListeners=listeners ? listeners.length :0;
				if (numListeners > 0){
					var index=0;
					var restListeners=new Array(numListeners-1);
					for (var i=0;i<numListeners;++i){
						var otherListener=listeners[i];
						if (otherListener !=listener)restListeners[int(index++)]=otherListener;
					}
					this.mEventListeners[type]=restListeners;
				}
			}
		}

		__proto.removeEventListeners=function(type){
			if (type && this.mEventListeners){
				delete this.mEventListeners[type];
			}
			else
			this.mEventListeners=null;
		}

		__proto.dispatchEvent=function(event){
			var bubbles=event.bubbles;
			if (!bubbles && (this.mEventListeners==null || !(event.type in this.mEventListeners)))
				return;
			var previousTarget=event.target;
			event.setTarget(this);
			if (bubbles && (this instanceof starling.display.DisplayObject ))this.bubbleEvent(event);
			else this.invokeEvent(event);
			if (previousTarget)event.setTarget(previousTarget);
		}

		__proto.invokeEvent=function(event){
			var listeners=this.mEventListeners ? this.mEventListeners [event.type] :null;
			var numListeners=listeners==null ? 0 :listeners.length;
			if (numListeners){
				event.setCurrentTarget(this);
				for (var i=0;i<numListeners;++i){
					var listener=iflash.method.typeAs(listeners[i],Function);
					if (listener==null)continue ;
					var numArgs=listener.length;
					if (numArgs==0)listener();
					else if (numArgs==1)listener(event);
					else listener(event,event.data);
					if (event.stopsImmediatePropagation)
						return true;
				}
				return event.stopsPropagation;
			}
			else{
				return false;
			}
		}

		__proto.bubbleEvent=function(event){
			var chain;
			var element=this;
			var length=1;
			if (EventDispatcher.sBubbleChains.length > 0){chain=EventDispatcher.sBubbleChains.pop();chain[0]=element;}
				else chain=/*new vector.<>*/[element];
			while ((element=element.parent)!=null)
			chain[int(length++)]=element;
			for (var i=0;i<length;++i){
				var stopPropagation=chain[i].invokeEvent(event);
				if (stopPropagation)break ;
			}
			chain.length=0;
			EventDispatcher.sBubbleChains[EventDispatcher.sBubbleChains.length]=chain;
		}

		__proto.dispatchEventWith=function(type,bubbles,data){
			(bubbles===void 0)&& (bubbles=false);
			if (bubbles || this.hasEventListener(type)){
				var event=Event1.fromPool(type,bubbles,data);
				this.dispatchEvent(event);
				Event1.toPool(event);
			}
		}

		__proto.hasEventListener=function(type){
			var listeners=this.mEventListeners ? this.mEventListeners[type] :null;
			return listeners ? listeners.length !=0 :false;
		}

		EventDispatcher.sBubbleChains=[];
		return EventDispatcher;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/event.as
	//class starling.events.Event
	var Event1=(function(){
		function Event(type,bubbles,data){
			this.mTarget=null;
			this.mCurrentTarget=null;
			this.mType=null;
			this.mBubbles=false;
			this.mStopsPropagation=false;
			this.mStopsImmediatePropagation=false;
			this.mData=null;
			(bubbles===void 0)&& (bubbles=false);
			this.mType=type;
			this.mBubbles=bubbles;
			this.mData=data;
		}

		__class(Event,'starling.events.Event',false,null,'Event1');
		var __proto=Event.prototype;
		__proto.stopPropagation=function(){
			this.mStopsPropagation=true;
		}

		__proto.stopImmediatePropagation=function(){
			this.mStopsPropagation=this.mStopsImmediatePropagation=true;
		}

		__proto.toString=function(){
			return starling.utils.formatString("[{0} type=\"{1}\" bubbles={2}]",
			iflash.utils.getQualifiedClassName(this).split("::").pop(),this.mType,this.mBubbles);
				}
		__proto.setTarget=function(value){this.mTarget=value;}
		__proto.setCurrentTarget=function(value){this.mCurrentTarget=value;}
		__proto.setData=function(value){this.mData=value;}
		__proto.reset=function(type,bubbles,data){
			(bubbles===void 0)&& (bubbles=false);
			this.mType=type;
			this.mBubbles=bubbles;
			this.mData=data;
			this.mTarget=this.mCurrentTarget=null;
			this.mStopsPropagation=this.mStopsImmediatePropagation=false;
			return this;
		}

		__getset(0,__proto,'bubbles',function(){return this.mBubbles;});
		__getset(0,__proto,'target',function(){return this.mTarget;});
		__getset(0,__proto,'currentTarget',function(){return this.mCurrentTarget;});
		__getset(0,__proto,'stopsPropagation',function(){return this.mStopsPropagation;});
		__getset(0,__proto,'type',function(){return this.mType;});
		__getset(0,__proto,'data',function(){return this.mData;});
		__getset(0,__proto,'stopsImmediatePropagation',function(){return this.mStopsImmediatePropagation;});
		Event.fromPool=function(type,bubbles,data){
			(bubbles===void 0)&& (bubbles=false);
			if (Event.sEventPool.length)return Event.sEventPool.pop().reset(type,bubbles,data);
			else return new Event(type,bubbles,data);
		}

		Event.toPool=function(event){
			event.mData=event.mTarget=event.mCurrentTarget=null;
			Event.sEventPool[Event.sEventPool.length]=event;
		}

		Event.ADDED="added";
		Event.ADDED_TO_STAGE="addedToStage";
		Event.ENTER_FRAME="enterFrame";
		Event.REMOVED="removed";
		Event.REMOVED_FROM_STAGE="removedFromStage";
		Event.TRIGGERED="triggered";
		Event.FLATTEN="flatten";
		Event.RESIZE="resize";
		Event.COMPLETE="complete";
		Event.CONTEXT3D_CREATE="context3DCreate";
		Event.ROOT_CREATED="rootCreated";
		Event.REMOVE_FROM_JUGGLER="removeFromJuggler";
		Event.TEXTURES_RESTORED="texturesRestored";
		Event.IO_ERROR="ioError";
		Event.SECURITY_ERROR="securityError";
		Event.PARSE_ERROR="parseError";
		Event.FATAL_ERROR="fatalError";
		Event.CHANGE="change";
		Event.CANCEL="cancel";
		Event.SCROLL="scroll";
		Event.OPEN="open";
		Event.CLOSE="close";
		Event.SELECT="select";
		Event.READY="ready";
		__static(Event,
		['sEventPool',function(){return this.sEventPool=/*new vector.<>*/[];}
		]);
		return Event;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/gameobjectlistproxy.as
	;
	//class framework.GameObjectListProxy
	var GameObjectListProxy=(function(){
		function GameObjectListProxy(){
			this._gameObjectlist=null;
			this._gameObjectlist={};
		}

		__class(GameObjectListProxy,'framework.GameObjectListProxy',true);
		var __proto=GameObjectListProxy.prototype;
		__proto.addGameObject=function(key,gameObject){this._gameObjectlist[key]=this._gameObjectlist[key]||[];
			this._gameObjectlist[key].push(gameObject);
		}

		__proto.removeGameObject=function(key,gameObject){
			var list=this._gameObjectlist[key];
			list.splice(list.indexOf(gameObject),1);
			if(list.length==0)delete this._gameObjectlist[key];
		}

		__proto.getGameObjectList=function(key){
			return this._gameObjectlist[key];
		}

		__proto.getGameObjectListToArray=function(key){
			var list=this.getGameObjectList(key);
			var len=list.length;
			var arr=[];
			for (var i=0;i < len;i++)arr[i]=list[i];
			return arr;
		}

		return GameObjectListProxy;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/box2ddebug.as
	//class framework.system.Box2dDebug
	var Box2dDebug=(function(){
		function Box2dDebug(game,viewMan,global,ptm_ratio){
			this._game=null;
			this._debugDraw=null;
			this._parent=null;
			this._viewMan=null;
			this._world=null;
			this._global=null;
			this._game=game;
			this._viewMan=viewMan;
			this._global=global;
			this._parent=new Sprite();
			this._parent.name="napeDebugSprite";
			this._viewMan.gameLayer.addChild(this._parent);
			this._debugDraw=new b2DebugDraw();
			this._debugDraw.SetSprite(this._parent);
			this._debugDraw.SetDrawScale(ptm_ratio);
			this._debugDraw.SetFillAlpha(0);
			this._debugDraw.SetLineThickness(0.5);
			this._debugDraw.SetFlags(b2DebugDraw.e_shapeBit|b2DebugDraw.e_jointBit);
			this._global.addEventListener(FrameworkEvent.CHANGE_CURRENT_WORLD,__bind(this,this.changeCurrentWorldHandler));
		}

		__class(Box2dDebug,'framework.system.Box2dDebug',true);
		var __proto=Box2dDebug.prototype;
		__proto.changeCurrentWorldHandler=function(e){
			this.setWorld(this._global.curWorld);
		}

		__proto.reset=function(){
			this._viewMan.gameLayer.addChild(this._parent);
		}

		__proto.setWorld=function(world){
			this._world=world;
			this._world.SetDebugDraw(this._debugDraw);
		}

		__getset(0,__proto,'debugDraw',function(){return this._debugDraw;});
		return Box2dDebug;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/box2dmanager.as
	;
	//class framework.system.Box2dManager
	var Box2dManager=(function(){
		function Box2dManager(worldDisObj,game,useMouseJoint,gravity,deltaTime,ptm_ratio){
			this._deltaTime=NaN;
			this._ptm_ratio=NaN;
			this._world=null;
			this._worldDisObj=null;
			this._mj=null;
			this._game=null;
			this._gravity=null;
			this._deltaTime=deltaTime;
			this._ptm_ratio=ptm_ratio;
			this._worldDisObj=worldDisObj;
			this._gravity=gravity;
			this._game=game;
			this._world=new b2World(this._gravity,true);
			this._game.addUpdate(/*framework.UpdateType.FIXED*/1,__bind(this,this.step));
		}

		__class(Box2dManager,'framework.system.Box2dManager',true);
		var __proto=Box2dManager.prototype;
		__proto.reset=function(){
			if(this._mj){
				this._world.DestroyJoint(this._mj);
				this._mj=null;
			}
			this.clearWorld(this._world);
		}

		__proto.clearWorld=function(world){
			for(var j=world.GetJointList();j;j=j.GetNext())world.DestroyJoint(j);
			for(var b=world.GetBodyList();b;b=b.GetNext())world.DestroyBody(b);
		}

		__proto.step=function(){
			this._world.Step(1/this._deltaTime,10,10);
			this.clearIsDestroyBody();
			this._world.ClearForces();
			this._world.DrawDebugData();
		}

		__proto.clearIsDestroyBody=function(){
			var b=this._world.GetBodyList();
			var userData;
			for(b;b;b=b.GetNext()){
				userData=b.GetUserData();
				if(userData && userData.isDestroy)this._world.DestroyBody(b);
			}
		}

		__proto.getPosBody=function(x,y,world){
			var b;
			world.QueryPoint(function(fixture){
				b=fixture.GetBody();
				return false;
			},new b2Vec2(x/this._ptm_ratio,y/this._ptm_ratio));
			return b;
		}

		__proto.startDragBody=function(b,x,y){
			if (!b || b.GetType()!=b2Body.b2_dynamicBody)return;
			this._mj && this._world.DestroyJoint(this._mj);
			var jointDef=new b2MouseJointDef();
			jointDef.bodyA=this._world.GetGroundBody();
			jointDef.bodyB=b;
			jointDef.target.Set(x/this._ptm_ratio,y/this._ptm_ratio);
			jointDef.maxForce=1e6;
			this._mj=this._world.CreateJoint(jointDef);
		}

		__proto.stopDragBody=function(){
			this._mj && this._world.DestroyJoint(this._mj);
		}

		__proto.destroy=function(){
			if (this._game){
				this._game.removeUpdate(/*framework.UpdateType.FIXED*/1,__bind(this,this.step));
				this._game=null;
			}
			if (this._mj){
				this._world.DestroyJoint(this._mj);
				this._mj=null;
			}
			this._worldDisObj=null;
			this._world=null;
		}

		__getset(0,__proto,'world',function(){return this._world;});
		return Box2dManager;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/input.as
	//class framework.system.Input
	var Input=(function(){
		function Input(){
			this._lookup=null;
			this._map=null;
			this._total=256;
			this._lookup=new Object();
			this._map=new Array(this._total);
		}

		__class(Input,'framework.system.Input',true);
		var __proto=Input.prototype;
		__proto.update=function(){
			var i=0;
			while(i < this._total){
				var o=this._map[i++];
				if(o==null)continue ;
				if((o.last==-1)&& (o.current==-1))o.current=0;
				else if((o.last==2)&& (o.current==2))o.current=1;
				o.last=o.current;
			}
		}

		__proto.reset=function(){
			var i=0;
			while(i < this._total){
				var o=this._map[i++];
				if(o==null)continue ;
				this[o.name]=false;
				o.current=0;
				o.last=0;
			}
		}

		__proto.pressed=function(Key){return this[Key];}
		__proto.justPressed=function(Key){return this._map[this._lookup[Key]].current==2;}
		__proto.justReleased=function(Key){return this._map[this._lookup[Key]].current==-1;}
		__proto.record=function(){
			var data=null;
			var i=0;
			while(i < this._total){
				var o=this._map[i++];
				if((o==null)|| (o.current==0))
					continue ;
				if(data==null)
					data=[];
				data.push({code:i-1,value:o.current});
			}
			return data;
		}

		__proto.playback=function(Record){
			var i=0;
			var l=Record.length;
			var o;
			var o2;
			while(i < l){
				o=Record[i++];
				o2=this._map[o.code];
				o2.current=o.value;
				if(o.value > 0)
					this[o2.name]=true;
			}
		}

		__proto.getKeyCode=function(KeyName){
			return this._lookup[KeyName];
		}

		__proto.any=function(){
			var i=0;
			while(i < this._total){
				var o=this._map[i++];
				if((o !=null)&& (o.current > 0))
					return true;
			}
			return false;
		}

		__proto.addKey=function(KeyName,KeyCode){
			this._lookup[KeyName]=KeyCode;
			this._map[KeyCode]={name:KeyName,current:0,last:0 };
		}

		__proto.destroy=function(){
			this._lookup=null;
			this._map=null;
		}

		return Input;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/keyboardmanager.as
	;
	//class framework.system.KeyboardManager
	var KeyboardManager=(function(){
		function KeyboardManager(game){
			this._stage=null;
			this._keys=null;
			this._lastTime=0;
			this._release=false;
			this._game=null;
			this._longPressTimes=null;
			this._game=game;
			this._stage=this._game.global.nativeStage;
			this._keys=new SystemKeyboard();
			this._keys.bind(this._stage);
			this._stage.focus=this._stage;
			this._stage.addEventListener(/*iflash.events.Event.DEACTIVATE*/"deactivate",__bind(this,this.deActivateHandler));
			this._game.addUpdate(/*framework.UpdateType.FOREVER*/0,__bind(this,this.update));
		}

		__class(KeyboardManager,'framework.system.KeyboardManager',true);
		var __proto=KeyboardManager.prototype;
		__proto.deActivateHandler=function(e){this._keys.reset();}
		__proto.update=function(){this._keys.update();}
		__proto.p=function(key){return this._keys.pressed(key);}
		__proto.jP=function(key){return this._keys.justPressed(key);}
		__proto.jR=function(key){return this._keys.justReleased(key);}
		__proto.double=function(key){
			var doubleKey=false;
			if (this.jR(key)){
				this._release=true;
				}else if (this.jP(key)){
				if (this._lastTime-(this._lastTime=iflash.utils.getTimer())+300 > 0 && this._release){
					doubleKey=true;
				}
				this._release=false;
			}
			return doubleKey;
		}

		__proto.longPress=function(key,maxTime){
			(maxTime===void 0)&& (maxTime=300);
			this._longPressTimes=this._longPressTimes||{};
			if(!this._longPressTimes[key]){
				if(this.p(key))this._longPressTimes[key]=iflash.utils.getTimer();
				}else{
				if(this.p(key)){
					if(iflash.utils.getTimer()-this._longPressTimes[key]>=maxTime){
						delete this._longPressTimes[key];
						return true;
					}
					}else{
					delete this._longPressTimes[key];
				}
			}
			return false;
		}

		__proto.destroy=function(){
			this._stage.removeEventListener(/*iflash.events.Event.DEACTIVATE*/"deactivate",__bind(this,this.deActivateHandler));
			this._game.removeUpdate(/*framework.UpdateType.FOREVER*/0,__bind(this,this.update));
			if (this._keys){
				this._keys.unbind(this._stage);
				this._keys.destroy();
				this._keys=null;
			}
			this._longPressTimes=null;
			this._stage=null;
			this._game=null;
		}

		return KeyboardManager;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/layermanager.as
	//class framework.system.LayerManager
	var LayerManager=(function(){
		function LayerManager(main,nativeMain){
			this._uiLayer=null;
			this._shakeLayer=null;
			this._bgLayer=null;
			this._gameLayer=null;
			this._weatherLayer=null;
			this._items0Layer=null;
			this._items1Layer=null;
			this._items2Layer=null;
			this._items3Layer=null;
			this._items4Layer=null;
			this._effLayer=null;
			this._allLayerList=null;
			if (nativeMain.numChildren > 1)console.log("警告：主文档容器main存在子对象已执行覆盖~~!","this:"+this);
			this._shakeLayer=new Sprite1();
			this._shakeLayer.name="_shakeLayer";
			main.addChild(this._shakeLayer);
			this._uiLayer=new iflash.display.Sprite();
			this._uiLayer.name="_uiLayer";
			nativeMain.addChild(this._uiLayer);
			this._bgLayer=new Sprite1();
			this._gameLayer=new Sprite1();
			this._weatherLayer=new Sprite1();
			this._bgLayer.name="_bgLayer";
			this._gameLayer.name="_gameLayer";
			this._weatherLayer.name="_weatherLayer";
			this.initShakeLayer();
			this._items0Layer=new Sprite1();
			this._items1Layer=new Sprite1();
			this._items2Layer=new Sprite1();
			this._items3Layer=new Sprite1();
			this._items4Layer=new Sprite1();
			this._effLayer=new Sprite1();
			this._items0Layer.name="_items0Layer";
			this._items1Layer.name="_items1Layer";
			this._items2Layer.name="_items2Layer";
			this._items3Layer.name="_items3Layer";
			this._items4Layer.name="_items4Layer";
			this.initGameLayer();
			this._allLayerList=[this._shakeLayer,this._uiLayer,
			this._bgLayer,this._gameLayer,this._weatherLayer,
			this._items0Layer,this._items1Layer,this._items2Layer,this._items3Layer,this._items4Layer,this._effLayer];
		}

		__class(LayerManager,'framework.system.LayerManager',true);
		var __proto=LayerManager.prototype;
		__proto.reset=function(){
			this._shakeLayer.x=this._shakeLayer.y=0;
			this._gameLayer.x=this._gameLayer.y=0;
			this.clearContainer(this._effLayer);
			this.clearContainer(this._items4Layer);
			this.clearContainer(this._items3Layer);
			this.clearContainer(this._items2Layer);
			this.clearContainer(this._items1Layer);
			this.clearContainer(this._items0Layer);
			this.clearContainer(this._weatherLayer);
			this.clearContainer(this._gameLayer);
			this.clearContainer(this._bgLayer);
			this.clearContainer_native(this._uiLayer);
			this.clearContainer(this._shakeLayer);
		}

		__proto.initShakeLayer=function(){
			this._shakeLayer.addChild(this._bgLayer);
			this._shakeLayer.addChild(this._gameLayer);
			this._shakeLayer.addChild(this._weatherLayer);
		}

		__proto.initGameLayer=function(){
			this._gameLayer.addChild(this._items0Layer);
			this._gameLayer.addChild(this._items1Layer);
			this._gameLayer.addChild(this._items2Layer);
			this._gameLayer.addChild(this._items3Layer);
			this._gameLayer.addChild(this._items4Layer);
			this._gameLayer.addChild(this._effLayer);
		}

		__proto.clearContainer=function(c){
			var child;
			var i=c.numChildren;
			while (--i>=0){
				child=c.getChildAt(i);
				if (((child instanceof starling.display.Sprite ))&& this._allLayerList.indexOf(child)>-1)continue ;
				c.removeChild(child);
			}
		}

		__proto.clearContainer_native=function(c){
			var child;
			var i=c.numChildren;
			while (--i>=0){
				child=c.getChildAt(i);
				if (((child instanceof iflash.display.Sprite ))&& this._allLayerList.indexOf(child)>-1)continue ;
				c.removeChild(child);
			}
		}

		__getset(0,__proto,'uiLayer',function(){return this._uiLayer;});
		__getset(0,__proto,'weatherLayer',function(){return this._weatherLayer;});
		__getset(0,__proto,'bgLayer',function(){return this._bgLayer;});
		__getset(0,__proto,'gameLayer',function(){return this._gameLayer;});
		__getset(0,__proto,'items0Layer',function(){return this._items0Layer;});
		__getset(0,__proto,'items1Layer',function(){return this._items1Layer;});
		__getset(0,__proto,'items2Layer',function(){return this._items2Layer;});
		__getset(0,__proto,'items4Layer',function(){return this._items4Layer;});
		__getset(0,__proto,'items3Layer',function(){return this._items3Layer;});
		__getset(0,__proto,'effLayer',function(){return this._effLayer;});
		__getset(0,__proto,'shakeLayer',function(){return this._shakeLayer;});
		return LayerManager;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/localmanager.as
	//class framework.system.LocalManager
	var LocalManager=(function(){
		function LocalManager(){
			this._FILE_NAME="kingBookGameLocalFile";
			this._so=null;
			this._so=SharedObject.getLocal(this._FILE_NAME);
		}

		__class(LocalManager,'framework.system.LocalManager',true);
		var __proto=LocalManager.prototype;
		__proto.clear=function(){
			this._so.clear();
		}

		__proto.save=function(key,data){
			this._so.data[key]=data;
			this._so.flush();
		}

		__proto.get=function(key){
			return this._so.data[key];
		}

		return LocalManager;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/objectpool.as
	//class framework.system.ObjectPool
	var ObjectPool=(function(){
		var Single;
		function ObjectPool(single){
			this._dict=null;
			if (!single)throw new Error("只能通过ObjectPool.getInstance()方法返回实例");
			this._dict=new LayaDictionary();
		}

		__class(ObjectPool,'framework.system.ObjectPool',true);
		var __proto=ObjectPool.prototype;
		__proto.add=function(obj,key){
			if (key){
				if(!this.has(key))this._dict.set(key,obj);
				else this.error(key);
				}else {
				if(!this.has(obj))this._dict.set(key,obj);
				else this.error(obj);
			}
		}

		__proto.error=function(key){
			throw new Error(key+"已经存在对象池中!");
		}

		__proto.remove=function(key){
			if(this.has(key))this._dict.remove(key);
		}

		__proto.get=function(key){
			if (this.has(key))return this._dict.get(key);
			else return null;
		}

		__proto.has=function(key){
			return this._dict.keys.indexOf(key)>-1;
		}

		__proto.clear=function(){
			for (var k in this._dict)delete this._dict[k];
		}

		ObjectPool.getInstance=function(){
			return ObjectPool._instance=ObjectPool._instance|| new ObjectPool(new Single());
		}

		ObjectPool._instance=null
		ObjectPool.__init$=function(){
			//class Single
			Single=(function(){
				function Single(){};
				__class(Single,'',true);
				return Single;
			})()
		}

		return ObjectPool;
	})()


	;
	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/updateproxy.as
	;
	//class framework.UpdateProxy
	var UpdateProxy=(function(){
		function UpdateProxy(game){
			this._game=null;
			this._list=null;
			this._game=game;
			this._list=__newvec(4,null);
			this._list[ /*framework.UpdateType.FOREVER*/0]=[];
			this._list[ /*framework.UpdateType.FIXED*/1]=[];
			this._list[ /*framework.UpdateType.UPDATE*/2]=[];
			this._list[ /*framework.UpdateType.LATE*/3]=[];
		}

		__class(UpdateProxy,'framework.UpdateProxy',true);
		var __proto=UpdateProxy.prototype;
		__proto.add=function(updateType,func){
			this._list[updateType].unshift(func);
		}

		__proto.remove=function(updateType,func){
			var id=this._list[updateType].indexOf(func);
			if(id>-1)this._list[updateType].splice(id,1);
		}

		__proto.update=function(){
			this.foreach(this._list[ /*framework.UpdateType.FOREVER*/0]);
			if(this._game.pause)return;
			this.foreach(this._list[ /*framework.UpdateType.FIXED*/1]);
			this.foreach(this._list[ /*framework.UpdateType.UPDATE*/2]);
			this.foreach(this._list[ /*framework.UpdateType.LATE*/3]);
		}

		__proto.foreach=function(list){
			var i=list.length;
			while(--i>=0)list[i]();
		}

		return UpdateProxy;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/updatetype.as
	//class framework.UpdateType
	var UpdateType=(function(){
		function UpdateType(){
			;
		}

		__class(UpdateType,'framework.UpdateType',true);
		UpdateType.FOREVER=0;
		UpdateType.FIXED=1;
		UpdateType.UPDATE=2;
		UpdateType.LATE=3;
		return UpdateType;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/utils/buttoneffect.as
	//class framework.utils.ButtonEffect
	var ButtonEffect=(function(){
		function ButtonEffect(target,vars){
			this._target=null;
			this._vars=null;
			this._noteScaleX=NaN;
			this._noteScaleY=NaN;
			if (target==null)return;
			this._target=target;
			this._noteScaleX=this._target.scaleX;
			this._noteScaleY=this._target.scaleY;
			this._vars=vars;
			this.addOrRemoveEventListener();
			ButtonEffect._bfArr.push({target:this._target,bf:this });
		}

		__class(ButtonEffect,'framework.utils.ButtonEffect',true);
		var __proto=ButtonEffect.prototype;
		__proto.addOrRemoveEventListener=function(remove){
			(remove===void 0)&& (remove=false);
			var methodName=remove ? "removeEventListener" :"addEventListener";
			this._target[methodName](/*iflash.events.MouseEvent.ROLL_OVER*/"rollOver",this.rollOverHandler);
			this._target[methodName](/*iflash.events.MouseEvent.ROLL_OUT*/"rollOut",this.rollOutHandler);
		}

		__proto.rollOverHandler=function(e){
			if (e.target !=this._target){
				return;
			}
			if (this._vars["glow"]){
				this.addOrRemoveFilter(true);
			}
			if (this._vars["scale"]){
				var f=Number(this._vars.scale.f)? Number(this._vars.scale.f):0.2;
				this._target.scaleX=this._noteScaleX+f;
				this._target.scaleY=this._noteScaleY+f;
				var isSwapChildId=this._vars["isSwapChildId"] !=undefined?this._vars["isSwapChildId"]:true;
				if (this._target.parent && isSwapChildId){
					this._target.parent.setChildIndex(this._target,this._target.parent.numChildren-1);
				}
			}
		}

		__proto.rollOutHandler=function(e){
			if (e.target !=this._target){
				return;
			}
			if (this._vars["glow"]){
				this.addOrRemoveFilter(false);
			}
			if (this._vars["scale"]){
				this._target.scaleX=this._noteScaleX;
				this._target.scaleY=this._noteScaleY;
			}
		}

		__proto.addOrRemoveFilter=function(add){
			var color=uint(this._vars.glow.color)? uint(this._vars.glow.color):0x00FFFF;
		}

		__proto.destroy=function(){
			this._target.scaleX=this._noteScaleX;
			this._target.scaleY=this._noteScaleY;
			this._target && this.addOrRemoveEventListener(true);
			this._vars=null;
			this._target=null;
		}

		ButtonEffect.to=function(target,vars){
			return new ButtonEffect(target,vars);
		}

		ButtonEffect.killOf=function(disObj){
			var i=ButtonEffect._bfArr.length;
			while (--i >=0){
				var obj=ButtonEffect._bfArr[i];
				var target=obj.target;
				var bf=(obj.bf);
				if (target==disObj){
					bf.destroy();
					break ;
				}
			}
		}

		ButtonEffect.killAll=function(){
			var i=ButtonEffect._bfArr.length;
			while (--i >=0){
				var obj=ButtonEffect._bfArr[i];
				var bf=(obj.bf);
				bf.destroy();
				ButtonEffect._bfArr.splice(i,1);
			}
		}

		ButtonEffect._bfArr=[];
		return ButtonEffect;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/utils/funcutil.as
	//class framework.utils.FuncUtil
	var FuncUtil=(function(){
		function FuncUtil(){}
		__class(FuncUtil,'framework.utils.FuncUtil',true);
		FuncUtil.removeChild=function(obj){
			obj && obj.parent && obj.parent.removeChild(obj);
		}

		FuncUtil.getTransformWidth=function(obj){
			var recordMat=obj.transform.matrix;
			obj.transform.matrix=FuncUtil._standardMat;
			var w=obj.width;
			obj.transform.matrix=recordMat;
			w=w*obj.scaleX;
			return Math.abs(w);
		}

		FuncUtil.getTransformHeight=function(obj){
			var recordMat=obj.transform.matrix;
			obj.transform.matrix=FuncUtil._standardMat;
			var h=obj.height;
			obj.transform.matrix=recordMat;
			h=h*obj.scaleY;
			return Math.abs(h);
		}

		FuncUtil.getDisObjStandardWH=function(disObj){
			var mat=disObj.transform.matrix;
			disObj.transform.matrix=FuncUtil._standardMat;
			var w=disObj.width;
			var h=disObj.height;
			disObj.transform.matrix=mat;
			return new Point(w,h);
		}

		FuncUtil.addToList=function(obj,list){
			if (!obj)return;
			if (!list)throw new Error("list不能为 null");
			if (list.indexOf(obj)< 0)list.push(obj);
		}

		FuncUtil.removeFromList=function(obj,list){
			if (!obj)return;
			if (!list)return;
			var index=list.indexOf(obj);
			if (index >-1)list.splice(index,1);
		}

		FuncUtil.randomArr=function(arr){
			if (!arr)throw new Error("参数arr不能为null~~!");
			var sourceArr=arr.slice();
			var tmpArr=[];
			var i=sourceArr.length
			while (--i >=0)tmpArr=tmpArr.concat(sourceArr.splice(Math.random()*sourceArr.length >> 0,1));
			return tmpArr;
		}

		FuncUtil.stopMovie=function(o){
			if (!o)return;
			if ((o instanceof iflash.display.MovieClip ))(o).stop();
			var i=o.numChildren;
			while (--i >=0)FuncUtil.stopMovie(o.getChildAt(i));
		}

		FuncUtil.restMovie=function(o){
			if (!o)return;
			if ((o instanceof iflash.display.MovieClip ))(o).play();
			var i=o.numChildren;
			while (--i >=0)FuncUtil.restMovie(o.getChildAt(i));
		}

		FuncUtil.removeChildList=function(list){
			if (!list)return;
			var o;
			/*for each*/for(var $each_o in list){
				o=list[$each_o];
				FuncUtil.removeChild(o);}
		}

		FuncUtil.deepClone=function(obj){
			var byArr=new ByteArray();
			byArr.writeObject(obj);
			byArr.position=0;
			return byArr.readObject();
		}

		FuncUtil.globalXY=function(disObj,pt){
			if (!disObj)throw new Error("FuncUtil->globalXY() 参数disObj不能为null");
			if (!disObj.parent)throw new Error("FuncUtil->globalXY()传进的对象不在显示列表!");
			var cpt;
			if (pt)cpt=pt;
			else cpt=new Point(disObj.x,disObj.y);
			var gpt=disObj.localToGlobal(cpt);
			return gpt;
		}

		FuncUtil.localXY=function(disObj,targetCoordinateSpace){
			if (!disObj)throw new Error("FuncUtil->localXY() 参数disObj不能为null");
			if (!targetCoordinateSpace)throw new Error("FuncUtil->localXY() 参数container不能为null");
			var gpt=FuncUtil.globalXY(disObj,FuncUtil._pt);
			var lpt=targetCoordinateSpace.globalToLocal(gpt);
			return lpt;
		}

		FuncUtil.localXY_2=function(gpt,targetCoordinateSpace){
			var lpt=targetCoordinateSpace.globalToLocal(gpt);
			return lpt;
		}

		FuncUtil.rotate=function(obj,angle){
			if (!obj){
				console.log("warning: 参数obj为null!")
				return;
			};
			var x=obj.x;
			var y=obj.y;
			var mat=obj.transform.matrix;
			mat.tx=0;
			mat.ty=0;
			mat.rotate(angle *Math.PI / 180);
			mat.translate(x,y);
			obj.transform.matrix=mat;
		}

		FuncUtil.objInStage=function(disObj,stageW,stageH){
			(stageW===void 0)&& (stageW=640);
			(stageH===void 0)&& (stageH=480);
			if (!disObj)return false;
			if (!disObj.stage)return false;
			var rect1=disObj.getBounds(disObj.stage);FuncUtil._stageRect=FuncUtil._stageRect|| new Rectangle();
			FuncUtil._stageRect.width=stageW;
			FuncUtil._stageRect.height=stageH;
			if (rect1.intersects(FuncUtil._stageRect))return true;
			return false;
		}

		FuncUtil.stageContainsObj=function(disObj,stageW,stageH){
			(stageW===void 0)&& (stageW=640);
			(stageH===void 0)&& (stageH=480);
			if (!disObj)return false;
			if (!disObj.stage)return false;
			var rect1=disObj.getBounds(disObj.stage);FuncUtil._stageRect=FuncUtil._stageRect|| new Rectangle();
			FuncUtil._stageRect.width=stageW;
			FuncUtil._stageRect.height=stageH;
			if (FuncUtil._stageRect.containsRect(rect1))return true;
			return false;
		}

		FuncUtil.stageContainsRect=function(rect2,stageW,stageH){
			(stageW===void 0)&& (stageW=640);
			(stageH===void 0)&& (stageH=480);
			FuncUtil._stageRect=FuncUtil._stageRect|| new Rectangle();
			FuncUtil._stageRect.width=stageW;
			FuncUtil._stageRect.height=stageH;
			return FuncUtil._stageRect.containsRect(rect2)
		}

		FuncUtil.stageContainsPt=function(pt,stageW,stageH){
			(stageW===void 0)&& (stageW=640);
			(stageH===void 0)&& (stageH=480);
			FuncUtil._stageRect=FuncUtil._stageRect|| new Rectangle();
			FuncUtil._stageRect.width=stageW;
			FuncUtil._stageRect.height=stageH;
			return FuncUtil._stageRect.containsPoint(pt);
		}

		FuncUtil.getPlayMovieMsec=function(totalFrames,fps){
			(fps===void 0)&& (fps=30);
			return (1000 / fps)*totalFrames;
		}

		FuncUtil.getPlayMovieSecond=function(totalFrames,fps){
			(fps===void 0)&& (fps=30);
			return 1 / fps *totalFrames
		}

		FuncUtil.disposeBmdList=function(list){
			if (!list || !list.length)return;
			if (!((list instanceof Array))&& !((list instanceof Array)))return;
			var i=list.length;
			while (--i >=0)list[i] && list[i].dispose();
		}

		FuncUtil.addChildListToContainer=function(list,c){
			if (!list || !c)return;
			var o;
			/*for each*/for(var $each_o in list){
				o=list[$each_o];
				c.addChild(o);}
		}

		FuncUtil.foreach=function(arr,__params){
			var params=[];for(var i=1,sz=arguments.length;i<sz;i++)params.push(arguments[i]);
			var i=arr.length;
			while (--i >=0)
			(arr[i]==null)? arr.splice(i,1):arr[i].apply(null,params);
		}

		FuncUtil.duplicateDefObj=function(defObj){
			var name=iflash.utils.getQualifiedClassName(defObj);
			var _Class=iflash.utils.getDefinitionByName(name);
			var duplicateO=new _Class();
			if (duplicateO.transform && defObj.transform){
				duplicateO.transform=defObj.transform;
			}
			return duplicateO;
		}

		FuncUtil._stageRect=null
		__static(FuncUtil,
		['_standardMat',function(){return this._standardMat=new Matrix(1,0,0,1,0,0);},'_pt',function(){return this._pt=new Point(0,0);}
		]);
		return FuncUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/utils/libutil.as
	//class framework.utils.LibUtil
	var LibUtil=(function(){
		function LibUtil(){}
		__class(LibUtil,'framework.utils.LibUtil',true);
		LibUtil.getClass=function(defName){
			var c;
			var curDomain=ApplicationDomain.currentDomain;
			if (curDomain.hasDefinition(defName))
				c=curDomain.getDefinition(defName);
			else
			console.log("警告：无法获取类："+defName,"请确认类名正确，检查类所在的fla是否发布swf,swf是否正确嵌入");
			return c;
		}

		LibUtil.getDefObj=function(defName,addToPool){
			(addToPool===void 0)&& (addToPool=false);
			var pool=ObjectPool.getInstance();
			var obj;
			if(addToPool){
				if (pool.has(defName)){
					obj=pool.get(defName);
				}
				else {
					obj=LibUtil.getNewClass(defName);
					pool.add(obj,defName);
				}
				}else {
				obj=LibUtil.getNewClass(defName);
			}
			return obj;
		}

		LibUtil.getNewClass=function(defName){
			var __O=LibUtil.getClass(defName);
			var obj=__O ? new __O :null;
			return obj;
		}

		LibUtil.getDefMovie=function(defName,addToPool){
			(addToPool===void 0)&& (addToPool=false);
			return LibUtil.getDefObj(defName,addToPool);
		}

		LibUtil.getDefDisObj=function(defName,addToPool){
			(addToPool===void 0)&& (addToPool=false);
			return LibUtil.getDefObj(defName,addToPool);
		}

		LibUtil.getDefSprite=function(defName,addToPool){
			(addToPool===void 0)&& (addToPool=false);
			return LibUtil.getDefObj(defName,addToPool);
		}

		LibUtil.getDefBitmapData=function(defName,addToPool){
			(addToPool===void 0)&& (addToPool=false);
			return LibUtil.getDefObj(defName,addToPool);
		}

		return LibUtil;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/mapdata.as
	//class g.MapData
	var MapData=(function(){
		function MapData(){}
		__class(MapData,'g.MapData',true);
		MapData.initDatas=function(){
			MapData._datas=[];
			var i=MapData._levelOrderList.length;
			while(--i>=0)MapData._datas[i]={};
			MapData._datas[1].size={width:2000,height:600};
			MapData._datas[1].wallEff={name:"WallEff_mc",frame:1};
			MapData._datas[1].hit={name:"Hit_mc",frame:1};
			MapData._datas[1].objs={name:"_Objs01",frame:1};
			MapData._datas[1].wallFrontEff={name:"WallFrontEff_mc",frame:1};
			MapData._datas[1].wall={name:"Wall_mc",frame:1};
			MapData._datas[1].wallBehindEff={name:"WallBehindEff_mc",frame:1};
			MapData._datas[1].BgMiddle={name:"BgMiddle_mc",frame:1};
			MapData._datas[1].BgBottom={name:"BgBottom_mc",frame:1};
			MapData._datas[2].size={width:800,height:600};
			MapData._datas[2].wallEff={name:"WallEff_mc",frame:2};
			MapData._datas[2].hit={name:"Hit_mc",frame:2};
			MapData._datas[2].objs={name:"_Objs02",frame:1};
			MapData._datas[2].wallFrontEff={name:"WallFrontEff_mc",frame:2};
			MapData._datas[2].wall={name:"Wall_mc",frame:2};
			MapData._datas[2].wallBehindEff={name:"WallBehindEff_mc",frame:2};
			MapData._datas[2].BgMiddle={name:"BgMiddle_mc",frame:2};
			MapData._datas[2].BgBottom={name:"BgBottom_mc",frame:2};
			MapData._datas[3].size={width:800,height:600};
			MapData._datas[3].wallEff={name:"WallEff_mc",frame:3};
			MapData._datas[3].hit={name:"Hit_mc",frame:3};
			MapData._datas[3].objs={name:"_Objs03",frame:1};
			MapData._datas[3].wallFrontEff={name:"WallFrontEff_mc",frame:3};
			MapData._datas[3].wall={name:"Wall_mc",frame:3};
			MapData._datas[3].wallBehindEff={name:"WallBehindEff_mc",frame:3};
			MapData._datas[3].BgMiddle={name:"BgMiddle_mc",frame:3};
			MapData._datas[3].BgBottom={name:"BgBottom_mc",frame:3};
			MapData._datas[4].size={width:800,height:600};
			MapData._datas[4].wallEff={name:"WallEff_mc",frame:4};
			MapData._datas[4].hit={name:"Hit_mc",frame:4};
			MapData._datas[4].objs={name:"_Objs04",frame:1};
			MapData._datas[4].wallFrontEff={name:"WallFrontEff_mc",frame:4};
			MapData._datas[4].wall={name:"Wall_mc",frame:4};
			MapData._datas[4].wallBehindEff={name:"WallBehindEff_mc",frame:4};
			MapData._datas[4].BgMiddle={name:"BgMiddle_mc",frame:4};
			MapData._datas[4].BgBottom={name:"BgBottom_mc",frame:4};
			MapData._datas[5].size={width:800,height:600};
			MapData._datas[5].wallEff={name:"WallEff_mc",frame:5};
			MapData._datas[5].hit={name:"Hit_mc",frame:5};
			MapData._datas[5].objs={name:"_Objs05",frame:1};
			MapData._datas[5].wallFrontEff={name:"WallFrontEff_mc",frame:5};
			MapData._datas[5].wall={name:"Wall_mc",frame:5};
			MapData._datas[5].wallBehindEff={name:"WallBehindEff_mc",frame:5};
			MapData._datas[5].BgMiddle={name:"BgMiddle_mc",frame:5};
			MapData._datas[5].BgBottom={name:"BgBottom_mc",frame:5};
			MapData._datas[6].size={width:800,height:600};
			MapData._datas[6].wallEff={name:"WallEff_mc",frame:6};
			MapData._datas[6].hit={name:"Hit_mc",frame:6};
			MapData._datas[6].objs={name:"_Objs06",frame:1};
			MapData._datas[6].wallFrontEff={name:"WallFrontEff_mc",frame:6};
			MapData._datas[6].wall={name:"Wall_mc",frame:6};
			MapData._datas[6].wallBehindEff={name:"WallBehindEff_mc",frame:6};
			MapData._datas[6].BgMiddle={name:"BgMiddle_mc",frame:6};
			MapData._datas[6].BgBottom={name:"BgBottom_mc",frame:6};
			MapData._datas[7].size={width:800,height:600};
			MapData._datas[7].wallEff={name:"WallEff_mc",frame:7};
			MapData._datas[7].hit={name:"Hit_mc",frame:7};
			MapData._datas[7].objs={name:"_Objs07",frame:1};
			MapData._datas[7].wallFrontEff={name:"WallFrontEff_mc",frame:7};
			MapData._datas[7].wall={name:"Wall_mc",frame:7};
			MapData._datas[7].wallBehindEff={name:"WallBehindEff_mc",frame:7};
			MapData._datas[7].BgMiddle={name:"BgMiddle_mc",frame:7};
			MapData._datas[7].BgBottom={name:"BgBottom_mc",frame:7};
			MapData._datas[8].size={width:800,height:600};
			MapData._datas[8].wallEff={name:"WallEff_mc",frame:8};
			MapData._datas[8].hit={name:"Hit_mc",frame:8};
			MapData._datas[8].objs={name:"_Objs08",frame:1};
			MapData._datas[8].wallFrontEff={name:"WallFrontEff_mc",frame:8};
			MapData._datas[8].wall={name:"Wall_mc",frame:8};
			MapData._datas[8].wallBehindEff={name:"WallBehindEff_mc",frame:8};
			MapData._datas[8].BgMiddle={name:"BgMiddle_mc",frame:8};
			MapData._datas[8].BgBottom={name:"BgBottom_mc",frame:8};
			MapData._datas[9].size={width:800,height:600};
			MapData._datas[9].wallEff={name:"WallEff_mc",frame:9};
			MapData._datas[9].hit={name:"Hit_mc",frame:9};
			MapData._datas[9].objs={name:"_Objs09",frame:1};
			MapData._datas[9].wallFrontEff={name:"WallFrontEff_mc",frame:9};
			MapData._datas[9].wall={name:"Wall_mc",frame:9};
			MapData._datas[9].wallBehindEff={name:"WallBehindEff_mc",frame:9};
			MapData._datas[9].BgMiddle={name:"BgMiddle_mc",frame:9};
			MapData._datas[9].BgBottom={name:"BgBottom_mc",frame:9};
			MapData._datas[10].size={width:800,height:600};
			MapData._datas[10].wallEff={name:"WallEff_mc",frame:10};
			MapData._datas[10].hit={name:"Hit_mc",frame:10};
			MapData._datas[10].objs={name:"_Objs10",frame:1};
			MapData._datas[10].wallFrontEff={name:"WallFrontEff_mc",frame:10};
			MapData._datas[10].wall={name:"Wall_mc",frame:10};
			MapData._datas[10].wallBehindEff={name:"WallBehindEff_mc",frame:10};
			MapData._datas[10].BgMiddle={name:"BgMiddle_mc",frame:10};
			MapData._datas[10].BgBottom={name:"BgBottom_mc",frame:10};
			MapData._datas[11].size={width:800,height:600};
			MapData._datas[11].wallEff={name:"WallEff_mc",frame:11};
			MapData._datas[11].hit={name:"Hit_mc",frame:11};
			MapData._datas[11].objs={name:"_Objs11",frame:1};
			MapData._datas[11].wallFrontEff={name:"WallFrontEff_mc",frame:11};
			MapData._datas[11].wall={name:"Wall_mc",frame:11};
			MapData._datas[11].wallBehindEff={name:"WallBehindEff_mc",frame:11};
			MapData._datas[11].BgMiddle={name:"BgMiddle_mc",frame:11};
			MapData._datas[11].BgBottom={name:"BgBottom_mc",frame:11};
			MapData._datas[12].size={width:800,height:600};
			MapData._datas[12].wallEff={name:"WallEff_mc",frame:12};
			MapData._datas[12].hit={name:"Hit_mc",frame:12};
			MapData._datas[12].objs={name:"_Objs12",frame:1};
			MapData._datas[12].wallFrontEff={name:"WallFrontEff_mc",frame:12};
			MapData._datas[12].wall={name:"Wall_mc",frame:12};
			MapData._datas[12].wallBehindEff={name:"WallBehindEff_mc",frame:12};
			MapData._datas[12].BgMiddle={name:"BgMiddle_mc",frame:12};
			MapData._datas[12].BgBottom={name:"BgBottom_mc",frame:12};
			MapData._datas[13].size={width:800,height:600};
			MapData._datas[13].wallEff={name:"WallEff_mc",frame:13};
			MapData._datas[13].hit={name:"Hit_mc",frame:13};
			MapData._datas[13].objs={name:"_Objs13",frame:1};
			MapData._datas[13].wallFrontEff={name:"WallFrontEff_mc",frame:13};
			MapData._datas[13].wall={name:"Wall_mc",frame:13};
			MapData._datas[13].wallBehindEff={name:"WallBehindEff_mc",frame:13};
			MapData._datas[13].BgMiddle={name:"BgMiddle_mc",frame:13};
			MapData._datas[13].BgBottom={name:"BgBottom_mc",frame:13};
			MapData._datas[14].size={width:800,height:600};
			MapData._datas[14].wallEff={name:"WallEff_mc",frame:14};
			MapData._datas[14].hit={name:"Hit_mc",frame:14};
			MapData._datas[14].objs={name:"_Objs14",frame:1};
			MapData._datas[14].wallFrontEff={name:"WallFrontEff_mc",frame:14};
			MapData._datas[14].wall={name:"Wall_mc",frame:14};
			MapData._datas[14].wallBehindEff={name:"WallBehindEff_mc",frame:14};
			MapData._datas[14].BgMiddle={name:"BgMiddle_mc",frame:14};
			MapData._datas[14].BgBottom={name:"BgBottom_mc",frame:14};
			MapData._datas[15].size={width:800,height:600};
			MapData._datas[15].wallEff={name:"WallEff_mc",frame:15};
			MapData._datas[15].hit={name:"Hit_mc",frame:15};
			MapData._datas[15].objs={name:"_Objs15",frame:1};
			MapData._datas[15].wallFrontEff={name:"WallFrontEff_mc",frame:15};
			MapData._datas[15].wall={name:"Wall_mc",frame:15};
			MapData._datas[15].wallBehindEff={name:"WallBehindEff_mc",frame:15};
			MapData._datas[15].BgMiddle={name:"BgMiddle_mc",frame:15};
			MapData._datas[15].BgBottom={name:"BgBottom_mc",frame:15};
			MapData._datas[16].size={width:800,height:600};
			MapData._datas[16].wallEff={name:"WallEff_mc",frame:16};
			MapData._datas[16].hit={name:"Hit_mc",frame:16};
			MapData._datas[16].objs={name:"_Objs16",frame:1};
			MapData._datas[16].wallFrontEff={name:"WallFrontEff_mc",frame:16};
			MapData._datas[16].wall={name:"Wall_mc",frame:16};
			MapData._datas[16].wallBehindEff={name:"WallBehindEff_mc",frame:16};
			MapData._datas[16].BgMiddle={name:"BgMiddle_mc",frame:16};
			MapData._datas[16].BgBottom={name:"BgBottom_mc",frame:16};
			MapData._datas[17].size={width:800,height:600};
			MapData._datas[17].wallEff={name:"WallEff_mc",frame:17};
			MapData._datas[17].hit={name:"Hit_mc",frame:17};
			MapData._datas[17].objs={name:"_Objs17",frame:1};
			MapData._datas[17].wallFrontEff={name:"WallFrontEff_mc",frame:17};
			MapData._datas[17].wall={name:"Wall_mc",frame:17};
			MapData._datas[17].wallBehindEff={name:"WallBehindEff_mc",frame:17};
			MapData._datas[17].BgMiddle={name:"BgMiddle_mc",frame:17};
			MapData._datas[17].BgBottom={name:"BgBottom_mc",frame:17};
			MapData._datas[18].size={width:800,height:600};
			MapData._datas[18].wallEff={name:"WallEff_mc",frame:18};
			MapData._datas[18].hit={name:"Hit_mc",frame:18};
			MapData._datas[18].objs={name:"_Objs18",frame:1};
			MapData._datas[18].wallFrontEff={name:"WallFrontEff_mc",frame:18};
			MapData._datas[18].wall={name:"Wall_mc",frame:18};
			MapData._datas[18].wallBehindEff={name:"WallBehindEff_mc",frame:18};
			MapData._datas[18].BgMiddle={name:"BgMiddle_mc",frame:18};
			MapData._datas[18].BgBottom={name:"BgBottom_mc",frame:18};
			MapData._datas[19].size={width:800,height:600};
			MapData._datas[19].wallEff={name:"WallEff_mc",frame:19};
			MapData._datas[19].hit={name:"Hit_mc",frame:19};
			MapData._datas[19].objs={name:"_Objs19",frame:1};
			MapData._datas[19].wallFrontEff={name:"WallFrontEff_mc",frame:19};
			MapData._datas[19].wall={name:"Wall_mc",frame:19};
			MapData._datas[19].wallBehindEff={name:"WallBehindEff_mc",frame:19};
			MapData._datas[19].BgMiddle={name:"BgMiddle_mc",frame:19};
			MapData._datas[19].BgBottom={name:"BgBottom_mc",frame:19};
			MapData._datas[20].size={width:800,height:600};
			MapData._datas[20].wallEff={name:"WallEff_mc",frame:20};
			MapData._datas[20].hit={name:"Hit_mc",frame:20};
			MapData._datas[20].objs={name:"_Objs20",frame:1};
			MapData._datas[20].wallFrontEff={name:"WallFrontEff_mc",frame:20};
			MapData._datas[20].wall={name:"Wall_mc",frame:20};
			MapData._datas[20].wallBehindEff={name:"WallBehindEff_mc",frame:20};
			MapData._datas[20].BgMiddle={name:"BgMiddle_mc",frame:20};
			MapData._datas[20].BgBottom={name:"BgBottom_mc",frame:20};
		}

		MapData.getDataObj=function(gameLevel){
			if(MapData._datas==null)MapData.initDatas();
			var level=MapData._levelOrderList[gameLevel];
			return MapData._datas[level];
		}

		MapData.getBodiesXml=function(gameLevel){
			var level=MapData._levelOrderList[gameLevel];
			return Assets_h5.getInstance().getMapXML(level);
		}

		MapData._datas=null
		__static(MapData,
		['_levelOrderList',function(){return this._levelOrderList=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];}
		]);
		return MapData;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/mapmodel.as
	//class g.MapModel
	var MapModel=(function(){
		function MapModel(myGame){
			this.width=NaN;
			this.height=NaN;
			this.bodiesXml=null;
			this._myGame=null;
			this._myGame=myGame;
			var gameLevel=myGame.myGlobal.gameLevel;
			this.bodiesXml=MapData.getBodiesXml(gameLevel);
			var data=MapData.getDataObj(gameLevel);
			this.width=data.size.width;
			this.height=data.size.height;
			var objsMc=LibUtil.getDefMovie(data.objs.name,true);
			objsMc.gotoAndStop(gameLevel);
			var i=objsMc.numChildren;
			while (--i>=0){
				var childMc=objsMc.getChildAt(i);
				console.log(objsMc.getChildAt(i));
				if(childMc){}
					}
		}

		__class(MapModel,'g.MapModel',true);
		var __proto=MapModel.prototype;
		__proto.dispose=function(){}
		MapModel.create=function(myGame){
			var model=new MapModel(myGame);
			return model;
		}

		return MapModel;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/mydata.as
	//class g.MyData
	var MyData=(function(){
		function MyData(){}
		__class(MyData,'g.MyData',true);
		MyData.isPower=false;
		MyData.deltaTime=30;
		MyData.ptm_ratio=30;
		MyData.stageW=800;
		MyData.stageH=600;
		MyData.frameRate=30;
		MyData.maxLevel=15;
		MyData.box2dDebugVisible=true;
		MyData.useMouseJoint=true;
		MyData.fpsVisible=true;
		MyData.unlock=false;
		MyData.clearLocalData=false;
		MyData.closeSound=true;
		MyData.cancelStageMask=false;
		MyData.cancelFitScreen=false;
		MyData.linkHomePageFunc=null;
		MyData.isRunTimeGame=false;
		MyData.version="cn";
		__static(MyData,
		['gravity',function(){return this.gravity=new b2Vec2(0,50);}
		]);
		return MyData;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/g/uitween.as
	//class g.UITween
	var UITween=(function(){
		var Mosaic;
		function UITween(){}
		__class(UITween,'g.UITween',true);
		UITween.create=function(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h){
			(w===void 0)&& (w=800);
			(h===void 0)&& (h=600);
			switch (UITween._id){
				case-1:
					destroyFunc.apply(null,destroyFuncParams);
					newFunc.apply(null,newFuncParams);
					break ;
				case 0:
					UITween.createFade(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h);
					break ;
				case 1:
					UITween.createMosaic(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h);
					break ;
				default :
				}
		}

		UITween.createFade=function(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h){
			(w===void 0)&& (w=800);
			(h===void 0)&& (h=600);
			var bmp1=new Bitmap(UITween.getDisObjBmd(main,w,h));
			destroyFunc.apply(null,destroyFuncParams);
			newFunc.apply(null,newFuncParams);
			var bmp2=new Bitmap(UITween.getDisObjBmd(main,w,h));
			bmp2.alpha=0;
			var sp1=new Sprite();
			sp1.addChild(bmp1);
			var sp2=new Sprite();
			sp2.addChild(bmp2);
			main.addChild(sp1);
			main.addChild(sp2);
			var time=1;
		}

		UITween.createMosaic=function(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h){
			(w===void 0)&& (w=800);
			(h===void 0)&& (h=600);
			new Mosaic(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h);
		}

		UITween.getDisObjBmd=function(disObj,w,h,tx,ty){
			(w===void 0)&& (w=NaN);
			(h===void 0)&& (h=NaN);
			(tx===void 0)&& (tx=NaN);
			(ty===void 0)&& (ty=NaN);
			if(isNaN(w)||isNaN(h)){
				var r=disObj.getBounds(disObj);
				w=r.width,h=r.height;
			};
			var bmd=new BitmapData(w,h,true,0);
			var matrix=new Matrix();
			if(!isNaN(tx))matrix.tx=tx;else if(r)matrix.tx=-r.x;
			if(!isNaN(ty))matrix.ty=ty;else if(r)matrix.ty=-r.y;
			bmd.draw(disObj,matrix);
			return bmd;
		}

		UITween._id=-1;
		UITween.__init$=function(){
			//class Mosaic
			Mosaic=(function(){
				function Mosaic(main,destroyFunc,destroyFuncParams,newFunc,newFuncParams,w,h){
					this._bmd1=null;
					this._bmd2=null;
					this._bmp1=null;
					this._bmp2=null;
					this._main=null;
					this._max=10;
					this._count=1;
					this._sign=1;
					this._speed=1;
					this._count2=this._max;
					(w===void 0)&& (w=800);
					(h===void 0)&& (h=600);
					this._main=main;
					this._bmd1=Mosaic.getDisObjBmd(main,w,h);
					destroyFunc.apply(null,destroyFuncParams);
					newFunc.apply(null,newFuncParams);
					this._bmd2=Mosaic.getDisObjBmd(main,w,h);
					main.addEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.enterFrame));
				}
				__class(Mosaic,'',true);
				var __proto=Mosaic.prototype;
				__proto.enterFrame=function(e){
					this._count+=this._sign*this._speed;
					if(this._sign>0){
						if(this._bmp1){
							if(this._bmp1.bitmapData)this._bmp1.bitmapData.dispose();
							if(this._bmp1.parent)this._bmp1.parent.removeChild(this._bmp1);
						}
						if(this._count<this._max){
							this._bmp1=this.mosaic(this._bmd1,this._count*4,this._count);
							this._main.addChild(this._bmp1);
							}else{
							this._sign=-1;
						}
						}else{
						if(this._bmp2){
							if(this._bmp2.bitmapData)this._bmp2.bitmapData.dispose();
							if(this._bmp2.parent)this._bmp2.parent.removeChild(this._bmp2);
						}
						if(this._count>1){
							this._bmp2=this.mosaic(this._bmd2,this._count*4,this._count);
							this._main.addChild(this._bmp2);
							}else{
							this.dispose();
						}
					}
				}
				__proto.mosaic=function(sourceBmd,sizeX,sizeY){
					var scaleBmd=new BitmapData(sourceBmd.width/sizeX,sourceBmd.height/sizeY,false);
					var scaleMatrix=new Matrix();scaleMatrix.scale(1/sizeX,1/sizeY);
					scaleBmd.draw(sourceBmd,scaleMatrix);
					var bmp=new Bitmap(scaleBmd);
					bmp.width=sourceBmd.width;
					bmp.height=sourceBmd.height;
					return bmp;
				}
				__proto.dispose=function(){
					this._main.removeEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.enterFrame));
					this._bmd1.dispose();
					this._bmd2.dispose();
					if(this._bmp1){
						if(this._bmp1.bitmapData)this._bmp1.bitmapData.dispose();
						if(this._bmp1.parent)this._bmp1.parent.removeChild(this._bmp1);
						this._bmp1=null;
					}
					if(this._bmp2){
						if(this._bmp2.bitmapData)this._bmp2.bitmapData.dispose();
						if(this._bmp2.parent)this._bmp2.parent.removeChild(this._bmp2);
						this._bmp2=null;
					}
					this._bmd1=null;
					this._bmd2=null;
				}
				Mosaic.getDisObjBmd=function(disObj,w,h,tx,ty){
					(w===void 0)&& (w=NaN);
					(h===void 0)&& (h=NaN);
					(tx===void 0)&& (tx=NaN);
					(ty===void 0)&& (ty=NaN);
					if(isNaN(w)||isNaN(h)){
						var r=disObj.getBounds(disObj);
						w=r.width,h=r.height;
					};
					var bmd=new BitmapData(w,h,true,0);
					var matrix=new Matrix();
					if(!isNaN(tx))matrix.tx=tx;else if(r)matrix.tx=-r.x;
					if(!isNaN(ty))matrix.ty=ty;else if(r)matrix.ty=-r.y;
					bmd.draw(disObj,matrix);
					return bmd;
				}
				return Mosaic;
			})()
		}

		return UITween;
	})()


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/animation/juggler.as
	//class starling.animation.Juggler
	var Juggler=(function(){
		function Juggler(){
			this.mObjects=null;
			this.mElapsedTime=NaN;
			this.mElapsedTime=0;
			this.mObjects=/*new vector.<>*/[];
		}

		__class(Juggler,'starling.animation.Juggler',true);
		var __proto=Juggler.prototype;
		Laya.imps(__proto,{"starling.animation.IAnimatable":true})
		__proto.add=function(object){
			if (object && this.mObjects.indexOf(object)==-1){
				this.mObjects[this.mObjects.length]=object;
				var dispatcher=iflash.method.typeAs(object ,EventDispatcher1);
				if (dispatcher)dispatcher.addEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onRemove));
			}
		}

		__proto.contains=function(object){
			return this.mObjects.indexOf(object)!=-1;
		}

		__proto.remove=function(object){
			if (object==null)return;
			var dispatcher=iflash.method.typeAs(object ,EventDispatcher1);
			if (dispatcher)dispatcher.removeEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onRemove));
			var index=this.mObjects.indexOf(object);
			if (index !=-1)this.mObjects[index]=null;
		}

		__proto.removeTweens=function(target){
			if (target==null)return;
			for (var i=this.mObjects.length-1;i>=0;--i){
				var tween=iflash.method.typeAs(this.mObjects[i],Tween);
				if (tween && tween.target==target){
					tween.removeEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onRemove));
					this.mObjects[i]=null;
				}
			}
		}

		__proto.containsTweens=function(target){
			if (target==null)return false;
			for (var i=this.mObjects.length-1;i>=0;--i){
				var tween=iflash.method.typeAs(this.mObjects[i],Tween);
				if (tween && tween.target==target)return true;
			}
			return false;
		}

		__proto.purge=function(){
			for (var i=this.mObjects.length-1;i>=0;--i){
				var dispatcher=iflash.method.typeAs(this.mObjects[i],EventDispatcher1);
				if (dispatcher)dispatcher.removeEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onRemove));
				this.mObjects[i]=null;
			}
		}

		__proto.delayCall=function(call,delay,__args){
			var args=[];for(var i=2,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			if (call==null)return null;
			var delayedCall=DelayedCall.fromPool(call,delay,args);
			delayedCall.addEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onPooledDelayedCallComplete));
			this.add(delayedCall);
			return delayedCall;
		}

		__proto.repeatCall=function(call,interval,repeatCount,__args){
			var args=[];for(var i=3,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			(repeatCount===void 0)&& (repeatCount=0);
			if (call==null)return null;
			var delayedCall=DelayedCall.fromPool(call,interval,args);
			delayedCall.repeatCount=repeatCount;
			delayedCall.addEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onPooledDelayedCallComplete));
			this.add(delayedCall);
			return delayedCall;
		}

		__proto.onPooledDelayedCallComplete=function(event){
			DelayedCall.toPool(iflash.method.typeAs(event.target,DelayedCall));
		}

		__proto.tween=function(target,time,properties){
			if (target==null)throw new Error("target must not be null");
			var tween=Tween.fromPool(target,time);
			for (var property in properties){
				var value=properties[property];
				if (tween.hasOwnProperty(property))
					tween[property]=value;
				else if (target.hasOwnProperty(Tween.getPropertyName(property)))
				tween.animate(property,value);
				else
				throw new Error("Invalid property: "+property);
			}
			tween.addEventListener(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler",__bind(this,this.onPooledTweenComplete));
			this.add(tween);
			return tween;
		}

		__proto.onPooledTweenComplete=function(event){
			Tween.toPool(iflash.method.typeAs(event.target,Tween));
		}

		__proto.advanceTime=function(time){
			var numObjects=this.mObjects.length;
			var currentIndex=0;
			var i=0;
			this.mElapsedTime+=time;
			if (numObjects==0)return;
			for (i=0;i<numObjects;++i){
				var object=this.mObjects[i];
				if (object){
					if (currentIndex !=i){
						this.mObjects[currentIndex]=object;
						this.mObjects[i]=null;
					}
					object.advanceTime(time);
					++currentIndex;
				}
			}
			if (currentIndex !=i){
				numObjects=this.mObjects.length;
				while (i < numObjects)
				this.mObjects[int(currentIndex++)]=this.mObjects[int(i++)];
				this.mObjects.length=currentIndex;
			}
		}

		__proto.onRemove=function(event){
			var t_ani=iflash.method.typeAs(event.target,starling.animation.IAnimatable);
			this.remove(t_ani);
			var tween=iflash.method.typeAs(event.target,Tween);
			if (tween && tween.isComplete)
				this.add(tween.nextTween);
		}

		__getset(0,__proto,'elapsedTime',function(){return this.mElapsedTime;});
		__getset(0,__proto,'objects',function(){return this.mObjects;});
		return Juggler;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/animation/transitions.as
	//class starling.animation.Transitions
	var Transitions=(function(){
		function Transitions(){throw new AbstractClassError();}
		__class(Transitions,'starling.animation.Transitions',true);
		Transitions.getTransition=function(name){
			if (Transitions.sTransitions==null)Transitions.registerDefaults();
			return Transitions.sTransitions[name];
		}

		Transitions.register=function(name,func){
			if (Transitions.sTransitions==null)Transitions.registerDefaults();
			Transitions.sTransitions[name]=func;
		}

		Transitions.registerDefaults=function(){
			Transitions.sTransitions=new Object();
			Transitions.register("linear",Transitions.linear);
			Transitions.register("easeIn",Transitions.easeIn);
			Transitions.register("easeOut",Transitions.easeOut);
			Transitions.register("easeInOut",Transitions.easeInOut);
			Transitions.register("easeOutIn",Transitions.easeOutIn);
			Transitions.register("easeInBack",Transitions.easeInBack);
			Transitions.register("easeOutBack",Transitions.easeOutBack);
			Transitions.register("easeInOutBack",Transitions.easeInOutBack);
			Transitions.register("easeOutInBack",Transitions.easeOutInBack);
			Transitions.register("easeInElastic",Transitions.easeInElastic);
			Transitions.register("easeOutElastic",Transitions.easeOutElastic);
			Transitions.register("easeInOutElastic",Transitions.easeInOutElastic);
			Transitions.register("easeOutInElastic",Transitions.easeOutInElastic);
			Transitions.register("easeInBounce",Transitions.easeInBounce);
			Transitions.register("easeOutBounce",Transitions.easeOutBounce);
			Transitions.register("easeInOutBounce",Transitions.easeInOutBounce);
			Transitions.register("easeOutInBounce",Transitions.easeOutInBounce);
		}

		Transitions.linear=function(ratio){
			return ratio;
		}

		Transitions.easeIn=function(ratio){
			return ratio *ratio *ratio;
		}

		Transitions.easeOut=function(ratio){
			var invRatio=ratio-1.0;
			return invRatio *invRatio *invRatio+1;
		}

		Transitions.easeInOut=function(ratio){
			return Transitions.easeCombined(Transitions.easeIn,Transitions.easeOut,ratio);
		}

		Transitions.easeOutIn=function(ratio){
			return Transitions.easeCombined(Transitions.easeOut,Transitions.easeIn,ratio);
		}

		Transitions.easeInBack=function(ratio){
			var s=1.70158;
			return Math.pow(ratio,2)*((s+1.0)*ratio-s);
		}

		Transitions.easeOutBack=function(ratio){
			var invRatio=ratio-1.0;
			var s=1.70158;
			return Math.pow(invRatio,2)*((s+1.0)*invRatio+s)+1.0;
		}

		Transitions.easeInOutBack=function(ratio){
			return Transitions.easeCombined(Transitions.easeInBack,Transitions.easeOutBack,ratio);
		}

		Transitions.easeOutInBack=function(ratio){
			return Transitions.easeCombined(Transitions.easeOutBack,Transitions.easeInBack,ratio);
		}

		Transitions.easeInElastic=function(ratio){
			if (ratio==0 || ratio==1)return ratio;
			else{
				var p=0.3;
				var s=p/4.0;
				var invRatio=ratio-1;
				return-1.0 *Math.pow(2.0,10.0*invRatio)*Math.sin((invRatio-s)*(2.0*Math.PI)/p);
			}
		}

		Transitions.easeOutElastic=function(ratio){
			if (ratio==0 || ratio==1)return ratio;
			else{
				var p=0.3;
				var s=p/4.0;
				return Math.pow(2.0,-10.0*ratio)*Math.sin((ratio-s)*(2.0*Math.PI)/p)+1;
			}
		}

		Transitions.easeInOutElastic=function(ratio){
			return Transitions.easeCombined(Transitions.easeInElastic,Transitions.easeOutElastic,ratio);
		}

		Transitions.easeOutInElastic=function(ratio){
			return Transitions.easeCombined(Transitions.easeOutElastic,Transitions.easeInElastic,ratio);
		}

		Transitions.easeInBounce=function(ratio){
			return 1.0-Transitions.easeOutBounce(1.0-ratio);
		}

		Transitions.easeOutBounce=function(ratio){
			var s=7.5625;
			var p=2.75;
			var l=NaN;
			if (ratio < (1.0/p)){
				l=s *Math.pow(ratio,2);
			}
			else{
				if (ratio < (2.0/p)){
					ratio-=1.5/p;
					l=s *Math.pow(ratio,2)+0.75;
				}
				else{
					if (ratio < 2.5/p){
						ratio-=2.25/p;
						l=s *Math.pow(ratio,2)+0.9375;
					}
					else{
						ratio-=2.625/p;
						l=s *Math.pow(ratio,2)+0.984375;
					}
				}
			}
			return l;
		}

		Transitions.easeInOutBounce=function(ratio){
			return Transitions.easeCombined(Transitions.easeInBounce,Transitions.easeOutBounce,ratio);
		}

		Transitions.easeOutInBounce=function(ratio){
			return Transitions.easeCombined(Transitions.easeOutBounce,Transitions.easeInBounce,ratio);
		}

		Transitions.easeCombined=function(startFunc,endFunc,ratio){
			if (ratio < 0.5)return 0.5 *startFunc(ratio*2.0);
			else return 0.5 *endFunc((ratio-0.5)*2.0)+0.5;
		}

		Transitions.LINEAR="linear";
		Transitions.EASE_IN="easeIn";
		Transitions.EASE_OUT="easeOut";
		Transitions.EASE_IN_OUT="easeInOut";
		Transitions.EASE_OUT_IN="easeOutIn";
		Transitions.EASE_IN_BACK="easeInBack";
		Transitions.EASE_OUT_BACK="easeOutBack";
		Transitions.EASE_IN_OUT_BACK="easeInOutBack";
		Transitions.EASE_OUT_IN_BACK="easeOutInBack";
		Transitions.EASE_IN_ELASTIC="easeInElastic";
		Transitions.EASE_OUT_ELASTIC="easeOutElastic";
		Transitions.EASE_IN_OUT_ELASTIC="easeInOutElastic";
		Transitions.EASE_OUT_IN_ELASTIC="easeOutInElastic";
		Transitions.EASE_IN_BOUNCE="easeInBounce";
		Transitions.EASE_OUT_BOUNCE="easeOutBounce";
		Transitions.EASE_IN_OUT_BOUNCE="easeInOutBounce";
		Transitions.EASE_OUT_IN_BOUNCE="easeOutInBounce";
		Transitions.sTransitions=null
		return Transitions;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/core/rendersupport.as
	//class starling.core.RenderSupport
	var RenderSupport=(function(){
		function RenderSupport(){
			this.mProjectionMatrix=null;
			this.mModelViewMatrix=null;
			this.mMvpMatrix=null;
			this.mMatrixStack=null;
			this.mMatrixStackSize=0;
			this.mProjectionMatrix3D=null;
			this.mModelViewMatrix3D=null;
			this.mMvpMatrix3D=null;
			this.mMatrixStack3D=null;
			this.mMatrixStack3DSize=0;
			this.mDrawCount=0;
			this.mBlendMode=null;
			this.mRenderTarget=null;
			this.mClipRectStack=null;
			this.mClipRectStackSize=0;
			this.mQuadBatches=null;
			this.mCurrentQuadBatchID=0;
			this.mStencilReferenceValue=0;
			this.mMasks=/*new vector.<>*/[];
			this.mProjectionMatrix=new Matrix();
			this.mModelViewMatrix=new Matrix();
			this.mMvpMatrix=new Matrix();
			this.mMatrixStack=/*new vector.<>*/[];
			this.mMatrixStackSize=0;
			this.mProjectionMatrix3D=new Matrix3D();
			this.mModelViewMatrix3D=new Matrix3D();
			this.mMvpMatrix3D=new Matrix3D();
			this.mMatrixStack3D=/*new vector.<>*/[];
			this.mMatrixStack3DSize=0;
			this.mDrawCount=0;
			this.mRenderTarget=null;
			this.mBlendMode=/*starling.display.BlendMode.NORMAL*/"normal";
			this.mClipRectStack=/*new vector.<>*/[];
			this.mCurrentQuadBatchID=0;
			this.mQuadBatches=/*new vector.<>*/[this.createQuadBatch()];
			this.loadIdentity();
			this.setProjectionMatrix(0,0,400,300);
		}

		__class(RenderSupport,'starling.core.RenderSupport',true);
		var __proto=RenderSupport.prototype;
		__proto.dispose=function(){
			var quadBatch;
			/*for each*/for(var $each_quadBatch in this.mQuadBatches){
				quadBatch=this.mQuadBatches[$each_quadBatch];
				quadBatch.dispose();
				quadBatch=null;
			}
			if(this.mQuadBatches)
				this.mQuadBatches.length=0;
			RenderSupport.sMatrix3D=null;
			this.mQuadBatches=null;
			this.mClipRectStack=null;
			this.mMatrixStack3D=null;
			this.mMatrixStack=null;
		}

		__proto.setProjectionMatrix=function(x,y,width,height,stageWidth,stageHeight,cameraPos){
			(stageWidth===void 0)&& (stageWidth=0);
			(stageHeight===void 0)&& (stageHeight=0);
			if (stageWidth <=0)stageWidth=width;
			if (stageHeight <=0)stageHeight=height;
			if (cameraPos==null){
				cameraPos=RenderSupport.sPoint3D;
				cameraPos.setTo(
				stageWidth / 2,stageHeight / 2,
				stageWidth / Math.tan(0.5)*0.5);
			}
			this.mProjectionMatrix.setTo(2.0/width,0,0,-2.0/height,
			-(2*x+width)/ width,(2*y+height)/ height);
			var focalLength=Math.abs(cameraPos.z);
			var offsetX=cameraPos.x-stageWidth / 2;
			var offsetY=cameraPos.y-stageHeight / 2;
			var far=focalLength *20;
			var near=1;
			var scaleX=stageWidth / width;
			var scaleY=stageHeight / height;
			RenderSupport.sMatrixData[0]=2 *focalLength / stageWidth;
			RenderSupport.sMatrixData[5]=-2 *focalLength / stageHeight;
			RenderSupport.sMatrixData[10]=far / (far-near);
			RenderSupport.sMatrixData[14]=-far *near / (far-near);
			RenderSupport.sMatrixData[11]=1;
			RenderSupport.sMatrixData[0] *=scaleX;
			RenderSupport.sMatrixData[5] *=scaleY;
			RenderSupport.sMatrixData[8]=scaleX-1-2 *scaleX *(x-offsetX)/ stageWidth;
			RenderSupport.sMatrixData[9]=-scaleY+1+2 *scaleY *(y-offsetY)/ stageHeight;
			this.mProjectionMatrix3D.copyRawDataFrom(RenderSupport.sMatrixData);
			this.mProjectionMatrix3D.prependTranslation(
			-stageWidth /2.0-offsetX,
			-stageHeight/2.0-offsetY,
			focalLength);
			this.applyClipRect();
		}

		__proto.setOrthographicProjection=function(x,y,width,height){
			var stage=Starling.current.stage;
			RenderSupport.sClipRect.setTo(x,y,width,height);
			this.setProjectionMatrix(x,y,width,height,
			stage.stageWidth,stage.stageHeight,stage.cameraPosition);
		}

		__proto.loadIdentity=function(){
			this.mModelViewMatrix.identity();
			this.mModelViewMatrix3D.identity();
		}

		__proto.translateMatrix=function(dx,dy){
			MatrixUtil1.prependTranslation(this.mModelViewMatrix,dx,dy);
		}

		__proto.rotateMatrix=function(angle){
			MatrixUtil1.prependRotation(this.mModelViewMatrix,angle);
		}

		__proto.scaleMatrix=function(sx,sy){
			MatrixUtil1.prependScale(this.mModelViewMatrix,sx,sy);
		}

		__proto.prependMatrix=function(matrix){
			MatrixUtil1.prependMatrix(this.mModelViewMatrix,matrix);
		}

		__proto.transformMatrix=function(object){
			MatrixUtil1.prependMatrix(this.mModelViewMatrix,object.transformationMatrix);
		}

		__proto.pushMatrix=function(){
			if (this.mMatrixStack.length < this.mMatrixStackSize+1)
				this.mMatrixStack.push(new Matrix());
			this.mMatrixStack[int(this.mMatrixStackSize++)].copyFrom(this.mModelViewMatrix);
		}

		__proto.popMatrix=function(){
			this.mModelViewMatrix.copyFrom(this.mMatrixStack[int(--this.mMatrixStackSize)]);
		}

		__proto.resetMatrix=function(){
			this.mMatrixStackSize=0;
			this.mMatrixStack3DSize=0;
			this.loadIdentity();
		}

		__proto.transformMatrix3D=function(object){
			this.mModelViewMatrix3D.prepend(MatrixUtil1.convertTo3D(this.mModelViewMatrix,RenderSupport.sMatrix3D));
			this.mModelViewMatrix3D.prepend(object.transformationMatrix3D);
			this.mModelViewMatrix.identity();
		}

		__proto.pushMatrix3D=function(){
			if (this.mMatrixStack3D.length < this.mMatrixStack3DSize+1)
				this.mMatrixStack3D.push(new Matrix3D());
			this.mMatrixStack3D[int(this.mMatrixStack3DSize++)].copyFrom(this.mModelViewMatrix3D);
		}

		__proto.popMatrix3D=function(){
			this.mModelViewMatrix3D.copyFrom(this.mMatrixStack3D[int(--this.mMatrixStack3DSize)]);
		}

		__proto.applyBlendMode=function(premultipliedAlpha){
			RenderSupport.setBlendFactors(premultipliedAlpha,this.mBlendMode);
		}

		__proto.setRenderTarget=function(target,antiAliasing){
			(antiAliasing===void 0)&& (antiAliasing=0);
			this.mRenderTarget=target;
			if (target)
				Starling.context.setRenderToTexture(target.base,false,antiAliasing);
			else
			Starling.context.setRenderToBackBuffer();
			this.applyClipRect();
		}

		__proto.pushClipRect=function(rectangle){
			if (this.mClipRectStack.length < this.mClipRectStackSize+1)
				this.mClipRectStack.push(new Rectangle());
			this.mClipRectStack[this.mClipRectStackSize].copyFrom(rectangle);
			rectangle=this.mClipRectStack[this.mClipRectStackSize];
			if (this.mClipRectStackSize > 0)
				RectangleUtil.intersect(rectangle,this.mClipRectStack[this.mClipRectStackSize-1],
			rectangle);
			++this.mClipRectStackSize;
			this.applyClipRect();
			return rectangle;
		}

		__proto.popClipRect=function(){
			if (this.mClipRectStackSize > 0){
				--this.mClipRectStackSize;
				this.applyClipRect();
			}
		}

		__proto.applyClipRect=function(){
			this.finishQuadBatch();
			var context=Starling.context;
			if (context==null)return;
			if (this.mClipRectStackSize > 0){
				var width=0,height=0;
				var rect=this.mClipRectStack[this.mClipRectStackSize-1];
				if (this.mRenderTarget){
					width=this.mRenderTarget.root.nativeWidth;
					height=this.mRenderTarget.root.nativeHeight;
				}
				else{
					width=Starling.current.backBufferWidth;
					height=Starling.current.backBufferHeight;
				}
				MatrixUtil1.transformCoords(this.mProjectionMatrix,rect.x,rect.y,RenderSupport.sPoint);
				RenderSupport.sClipRect.x=(RenderSupport.sPoint.x *0.5+0.5)*width;
				RenderSupport.sClipRect.y=(0.5-RenderSupport.sPoint.y *0.5)*height;
				MatrixUtil1.transformCoords(this.mProjectionMatrix,rect.right,rect.bottom,RenderSupport.sPoint);
				RenderSupport.sClipRect.right=(RenderSupport.sPoint.x *0.5+0.5)*width;
				RenderSupport.sClipRect.bottom=(0.5-RenderSupport.sPoint.y *0.5)*height;
				RenderSupport.sBufferRect.setTo(0,0,width,height);
				RectangleUtil.intersect(RenderSupport.sClipRect,RenderSupport.sBufferRect,RenderSupport.sScissorRect);
				if (RenderSupport.sScissorRect.width < 1 || RenderSupport.sScissorRect.height < 1)
					RenderSupport.sScissorRect.setTo(0,0,1,1);
				context.setScissorRectangle(RenderSupport.sScissorRect);
			}
			else{
				context.setScissorRectangle(null);
			}
		}

		__proto.pushMask=function(mask){
			this.mMasks[this.mMasks.length]=mask;
			this.mStencilReferenceValue++;
			var context=Starling.context;
			if (context==null)return;
			this.finishQuadBatch();
			context.setStencilActions(/*iflash.display3D.Context3DTriangleFace.FRONT_AND_BACK*/"frontAndBack",
			/*iflash.display3D.Context3DCompareMode.EQUAL*/"equal",/*iflash.display3D.Context3DStencilAction.INCREMENT_SATURATE*/"increment_saturate");
			this.drawMask(mask);
			context.setStencilReferenceValue(this.mStencilReferenceValue);
			context.setStencilActions(/*iflash.display3D.Context3DTriangleFace.FRONT_AND_BACK*/"frontAndBack",
			/*iflash.display3D.Context3DCompareMode.EQUAL*/"equal",/*iflash.display3D.Context3DStencilAction.KEEP*/"keep");
		}

		__proto.popMask=function(){
			var mask=this.mMasks.pop();
			this.mStencilReferenceValue--;
			var context=Starling.context;
			if (context==null)return;
			this.finishQuadBatch();
			context.setStencilActions(/*iflash.display3D.Context3DTriangleFace.FRONT_AND_BACK*/"frontAndBack",
			/*iflash.display3D.Context3DCompareMode.EQUAL*/"equal",/*iflash.display3D.Context3DStencilAction.DECREMENT_SATURATE*/"decrement_saturate");
			this.drawMask(mask);
			context.setStencilReferenceValue(this.mStencilReferenceValue);
			context.setStencilActions(/*iflash.display3D.Context3DTriangleFace.FRONT_AND_BACK*/"frontAndBack",
			/*iflash.display3D.Context3DCompareMode.EQUAL*/"equal",/*iflash.display3D.Context3DStencilAction.KEEP*/"keep");
		}

		__proto.drawMask=function(mask){
			this.pushMatrix();
			var stage=mask.stage;
			if (stage)mask.getTransformationMatrix(stage,this.mModelViewMatrix);
			else this.transformMatrix(mask);
			mask.render(this,0.0);
			this.finishQuadBatch();
			this.popMatrix();
		}

		__proto.batchQuad=function(quad,parentAlpha,texture,smoothing){
			if (this.mQuadBatches[this.mCurrentQuadBatchID].isStateChange(quad.tinted,parentAlpha,texture,
				smoothing,this.mBlendMode)){
				this.finishQuadBatch();
			}
			this.mQuadBatches[this.mCurrentQuadBatchID].addQuad(quad,parentAlpha,texture,smoothing,
			this.mModelViewMatrix,this.mBlendMode);
		}

		__proto.batchQuadBatch=function(quadBatch,parentAlpha){
			if (this.mQuadBatches[this.mCurrentQuadBatchID].isStateChange(
				quadBatch.tinted,parentAlpha,quadBatch.texture,quadBatch.smoothing,this.mBlendMode)){
				this.finishQuadBatch();
			}
			this.mQuadBatches[this.mCurrentQuadBatchID].addQuadBatch(quadBatch,parentAlpha,
			this.mModelViewMatrix,this.mBlendMode);
		}

		__proto.finishQuadBatch=function(){
			var currentBatch=this.mQuadBatches[this.mCurrentQuadBatchID];
			if (currentBatch.numQuads !=0){
				if (this.mMatrixStack3DSize==0){
					currentBatch.renderCustom(this.mProjectionMatrix3D);
				}
				else{
					this.mMvpMatrix3D.copyFrom(this.mProjectionMatrix3D);
					this.mMvpMatrix3D.prepend(this.mModelViewMatrix3D);
					currentBatch.renderCustom(this.mMvpMatrix3D);
				}
				currentBatch.reset();
				++this.mCurrentQuadBatchID;
				++this.mDrawCount;
				if (this.mQuadBatches.length <=this.mCurrentQuadBatchID)
					this.mQuadBatches.push(this.createQuadBatch());
			}
		}

		__proto.nextFrame=function(){
			this.resetMatrix();
			this.trimQuadBatches();
			this.mMasks.length=0;
			this.mCurrentQuadBatchID=0;
			this.mBlendMode=/*starling.display.BlendMode.NORMAL*/"normal";
			this.mDrawCount=0;
		}

		__proto.trimQuadBatches=function(){
			var numUsedBatches=this.mCurrentQuadBatchID+1;
			var numTotalBatches=this.mQuadBatches.length;
			if (numTotalBatches >=16 && numTotalBatches > 2*numUsedBatches){
				var numToRemove=numTotalBatches-numUsedBatches;
				for (var i=0;i<numToRemove;++i)
				this.mQuadBatches.pop().dispose();
			}
		}

		__proto.createQuadBatch=function(){
			var profile=Starling.current.profile;
			var forceTinted=(profile !="baselineConstrained" && profile !="baseline");
			var quadBatch=new QuadBatch();
			quadBatch.forceTinted=forceTinted;
			return quadBatch;
		}

		__proto.clear=function(rgb,alpha){
			(rgb===void 0)&& (rgb=0);
			(alpha===void 0)&& (alpha=0.0);
			starling.core.RenderSupport.clear(rgb,alpha);
		}

		__proto.raiseDrawCount=function(value){
			(value===void 0)&& (value=1);
			this.mDrawCount+=value;}
		__getset(0,__proto,'mvpMatrix',function(){
			this.mMvpMatrix.copyFrom(this.mModelViewMatrix);
			this.mMvpMatrix.concat(this.mProjectionMatrix);
			return this.mMvpMatrix;
		});

		__getset(0,__proto,'modelViewMatrix',function(){return this.mModelViewMatrix;});
		__getset(0,__proto,'drawCount',function(){return this.mDrawCount;});
		__getset(0,__proto,'projectionMatrix',function(){return this.mProjectionMatrix;},function(value){
			this.mProjectionMatrix.copyFrom(value);
			this.applyClipRect();
		});

		__getset(0,__proto,'stencilReferenceValue',function(){return this.mStencilReferenceValue;},function(value){
			this.mStencilReferenceValue=value;
			if (Starling.current.contextValid)
				Starling.context.setStencilReferenceValue(value);
		});

		__getset(0,__proto,'mvpMatrix3D',function(){
			if (this.mMatrixStack3DSize==0){
				MatrixUtil1.convertTo3D(this.mvpMatrix,this.mMvpMatrix3D);
			}
			else{
				this.mMvpMatrix3D.copyFrom(this.mProjectionMatrix3D);
				this.mMvpMatrix3D.prepend(this.mModelViewMatrix3D);
				this.mMvpMatrix3D.prepend(MatrixUtil1.convertTo3D(this.mModelViewMatrix,RenderSupport.sMatrix3D));
			}
			return this.mMvpMatrix3D;
		});

		__getset(0,__proto,'projectionMatrix3D',function(){return this.mProjectionMatrix3D;},function(value){
			this.mProjectionMatrix3D.copyFrom(value);
		});

		__getset(0,__proto,'blendMode',function(){return this.mBlendMode;},function(value){
			if (value !=/*starling.display.BlendMode.AUTO*/"auto")this.mBlendMode=value;
		});

		__getset(0,__proto,'renderTarget',function(){return this.mRenderTarget;},function(target){
			this.setRenderTarget(target);
		});

		RenderSupport.transformMatrixForObject=function(matrix,object){
			MatrixUtil1.prependMatrix(matrix,object.transformationMatrix);
		}

		RenderSupport.setDefaultBlendFactors=function(premultipliedAlpha){
			RenderSupport.setBlendFactors(premultipliedAlpha);
		}

		RenderSupport.setBlendFactors=function(premultipliedAlpha,blendMode){
			(blendMode===void 0)&& (blendMode="normal");
			var blendFactors=BlendMode1.getBlendFactors(blendMode,premultipliedAlpha);
			Starling.context.setBlendFactors(blendFactors[0],blendFactors[1]);
		}

		RenderSupport.clear=function(rgb,alpha){
			(rgb===void 0)&& (rgb=0);
			(alpha===void 0)&& (alpha=0.0);
			Starling.context.clear(
			Color.getRed(rgb)/ 255.0,
			Color.getGreen(rgb)/ 255.0,
			Color.getBlue(rgb)/ 255.0,
			alpha);
		}

		RenderSupport.assembleAgal=function(vertexShader,fragmentShader,resultProgram){
			if (resultProgram==null){
				var context=Starling.context;
				if (context==null)throw new MissingContextError();
				resultProgram=context.createProgram();
			}
			resultProgram.upload(vertexShader,fragmentShader);
			return resultProgram;
		}

		RenderSupport.getTextureLookupFlags=function(format,mipMapping,repeat,smoothing){
			(repeat===void 0)&& (repeat=false);
			(smoothing===void 0)&& (smoothing="bilinear");
			var options=["2d",repeat ? "repeat" :"clamp"];
			if (format==/*iflash.display3D.Context3DTextureFormat.COMPRESSED*/"compressed")
				options.push("dxt1");
			else if (format=="compressedAlpha")
			options.push("dxt5");
			if (smoothing==/*starling.textures.TextureSmoothing.NONE*/"none")
				options.push("nearest",mipMapping ? "mipnearest" :"mipnone");
			else if (smoothing==/*starling.textures.TextureSmoothing.BILINEAR*/"bilinear")
			options.push("linear",mipMapping ? "mipnearest" :"mipnone");
			else
			options.push("linear",mipMapping ? "miplinear" :"mipnone");
			return "<"+options.join()+">";
		}

		__static(RenderSupport,
		['sPoint',function(){return this.sPoint=new Point();},'sPoint3D',function(){return this.sPoint3D=new Vector3D();},'sClipRect',function(){return this.sClipRect=new Rectangle();},'sBufferRect',function(){return this.sBufferRect=new Rectangle();},'sScissorRect',function(){return this.sScissorRect=new Rectangle();},'sMatrix3D',function(){return this.sMatrix3D=new Matrix3D();},'sMatrixData',function(){return this.sMatrixData=
			/*new vector.<>*/[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];}
		]);
		return RenderSupport;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/agal_shaderlist.as
	//class starling.display.AGAL_ShaderList
	var AGAL_ShaderList=(function(){
		function AGAL_ShaderList(){
			this.QB_NOT_TEX_VS=
			"m44 op, va0, vc1 \n"+
			"mul v0, va1, vc0 \n";
			this.QB_NOT_TEX_FS=
			"mov oc, v0 \n";
			this.QB_TEX_VS_TINTED=
			"m44 op, va0, vc1 \n"+
			"mul v0, va1, vc0 \n"+
			"mov v1, va2 \n";
			this.QB_TEX_VS_NOT_TINTED=
			"m44 op, va0, vc1 \n"+
			"mov v1, va2 \n";
			this.QB_TEX_FS_TINTED=
			"tex ft1, v1, fs0 <???> \n"+
			"mul oc, ft1, v0 \n";
			this.QB_TEX_FS_NOT_TINTED=
			"tex oc, v1, fs0 <???> \n";
			this.BF_FS=
			"tex ft0,  v0, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft5, ft0, fc0.xxxx \n"+
			"tex ft1,  v1, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft1, ft1, fc0.zzzz \n"+
			"add ft5, ft5, ft1 \n"+
			"tex ft2,  v2, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft2, ft2, fc0.yyyy \n"+
			"add ft5, ft5, ft2 \n"+
			"tex ft3,  v3, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft3, ft3, fc0.yyyy \n"+
			"add ft5, ft5, ft3 \n"+
			"tex ft4,  v4, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft4, ft4, fc0.zzzz \n"+
			"add  oc, ft5, ft4 \n";
			this.BF_FS_TINTED=
			"tex ft0,  v0, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft5, ft0, fc0.xxxx \n"+
			"tex ft1,  v1, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft1, ft1, fc0.zzzz \n"+
			"add ft5, ft5, ft1 \n"+
			"tex ft2,  v2, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft2, ft2, fc0.yyyy \n"+
			"add ft5, ft5, ft2 \n"+
			"tex ft3,  v3, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft3, ft3, fc0.yyyy \n"+
			"add ft5, ft5, ft3 \n"+
			"tex ft4,  v4, fs0 <2d, clamp, linear, mipnone> \n"+
			"mul ft4, ft4, fc0.zzzz \n"+
			"add ft5, ft5, ft4 \n"+
			"mul ft5.xyz, fc1.xyz, ft5.www \n"+
			"mul oc, ft5, fc1.wwww \n";
			this.BF_VS=
			"m44 op, va0, vc0 \n"+
			"mov v0, va1 \n"+
			"sub v1, va1, vc4.zwxx \n"+
			"sub v2, va1, vc4.xyxx \n"+
			"add v3, va1, vc4.xyxx \n"+
			"add v4, va1, vc4.zwxx \n";
			this.CLR_MAT_FLT_FS=
			"tex ft0, v0,  fs0 <2d, clamp, linear, mipnone>  \n"+
			"max ft0, ft0, fc5 \n"+
			"div ft0.xyz, ft0.xyz, ft0.www \n"+
			"m44 ft0, ft0, fc0 \n"+
			"add ft0, ft0, fc4 \n"+
			"mul ft0.xyz, ft0.xyz, ft0.www \n"+
			"mov oc, ft0 \n";
			this.DPM_MAP_FLT_FS=
			"tex ft0,  v1, fs1 {0} \n"+
			"sub ft1, ft0, fc0 \n"+
			"m44 ft2, ft1, fc1 \n"+
			"add ft3,  v0, ft2 \n"+
			"tex  oc, ft3, fs0 {1} \n";
			this.DPM_MAP_FLT_VS=
			"m44  op, va0, vc0 \n"+
			"mov  v0, va1 \n"+
			"mov  v1, va2 \n";
			this.FRA_FLT_STD_VS=
			"m44 op, va0, vc0 \n"+
			"mov v0, va1 \n";
			this.FRA_FLT_STD_FS=
			"tex oc, v0, fs0 <2d, clamp, linear, mipnone>";
		}

		__class(AGAL_ShaderList,'starling.display.AGAL_ShaderList',true);
		__getset(1,AGAL_ShaderList,'shader',function(){
			if (!AGAL_ShaderList._shader)
				AGAL_ShaderList._shader=new AGAL_ShaderList();
			return AGAL_ShaderList._shader
		});

		AGAL_ShaderList._shader=null;
		return AGAL_ShaderList;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/blendmode.as
	//class starling.display.BlendMode
	var BlendMode1=(function(){
		function BlendMode(){throw new AbstractClassError();}
		__class(BlendMode,'starling.display.BlendMode',true,null,'BlendMode1');
		BlendMode.getBlendFactors=function(mode,premultipliedAlpha){
			(premultipliedAlpha===void 0)&& (premultipliedAlpha=true);
			var modes=BlendMode.sBlendFactors[int(premultipliedAlpha)];
			if (mode in modes)return modes[mode];
			else throw new Error("Invalid blend mode");
		}

		BlendMode.register=function(name,sourceFactor,destFactor,premultipliedAlpha){
			(premultipliedAlpha===void 0)&& (premultipliedAlpha=true);
			var modes=BlendMode.sBlendFactors[int(premultipliedAlpha)];
			modes[name]=[sourceFactor,destFactor];
			var otherModes=BlendMode.sBlendFactors[int(!premultipliedAlpha)];
			if (!(name in otherModes))otherModes[name]=[sourceFactor,destFactor];
		}

		BlendMode.AUTO="auto";
		BlendMode.NONE="none";
		BlendMode.NORMAL="normal";
		BlendMode.ADD="add";
		BlendMode.MULTIPLY="multiply";
		BlendMode.SCREEN="screen";
		BlendMode.ERASE="erase";
		BlendMode.MASK="mask";
		BlendMode.BELOW="below";
		__static(BlendMode,
		['sBlendFactors',function(){return this.sBlendFactors=[{
				"none" :[ /*iflash.display3D.Context3DBlendFactor.ONE*/"one",/*iflash.display3D.Context3DBlendFactor.ZERO*/"zero"],
				"normal" :[ /*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"add" :[ /*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha",/*iflash.display3D.Context3DBlendFactor.DESTINATION_ALPHA*/"destinationAlpha"],
				"multiply" :[ /*iflash.display3D.Context3DBlendFactor.DESTINATION_COLOR*/"destinationColor",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"screen" :[ /*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha",/*iflash.display3D.Context3DBlendFactor.ONE*/"one"],
				"erase" :[ /*iflash.display3D.Context3DBlendFactor.ZERO*/"zero",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"mask" :[ /*iflash.display3D.Context3DBlendFactor.ZERO*/"zero",/*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha"],
				"below" :[ /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA*/"oneMinusDestinationAlpha",/*iflash.display3D.Context3DBlendFactor.DESTINATION_ALPHA*/"destinationAlpha"]
				},{
				"none" :[ /*iflash.display3D.Context3DBlendFactor.ONE*/"one",/*iflash.display3D.Context3DBlendFactor.ZERO*/"zero"],
				"normal" :[ /*iflash.display3D.Context3DBlendFactor.ONE*/"one",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"add" :[ /*iflash.display3D.Context3DBlendFactor.ONE*/"one",/*iflash.display3D.Context3DBlendFactor.ONE*/"one"],
				"multiply" :[ /*iflash.display3D.Context3DBlendFactor.DESTINATION_COLOR*/"destinationColor",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"screen" :[ /*iflash.display3D.Context3DBlendFactor.ONE*/"one",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR*/"oneMinusSourceColor"],
				"erase" :[ /*iflash.display3D.Context3DBlendFactor.ZERO*/"zero",/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"],
				"mask" :[ /*iflash.display3D.Context3DBlendFactor.ZERO*/"zero",/*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha"],
				"below" :[ /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA*/"oneMinusDestinationAlpha",/*iflash.display3D.Context3DBlendFactor.DESTINATION_ALPHA*/"destinationAlpha"]
		}];}

		]);
		return BlendMode;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/buttonstate.as
	//class starling.display.ButtonState
	var ButtonState=(function(){
		function ButtonState(){throw new AbstractClassError();}
		__class(ButtonState,'starling.display.ButtonState',true);
		ButtonState.UP="up";
		ButtonState.DOWN="down";
		ButtonState.OVER="over";
		ButtonState.DISABLED="disabled";
		return ButtonState;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/glsl_shaderlist.as
	//class starling.display.GLSL_ShaderList
	var GLSL_ShaderList=(function(){
		function GLSL_ShaderList(){
			this.QB_NOT_TEX_VS=
			"uniform   vec4 u_alpha;\n"+
			"uniform   mat4 u_mvpMatrix;\n"+
			"uniform   float u_flipY; \n"+
			"attribute vec4 a_position;\n"+
			"attribute vec4 a_color;\n"+
			"varying   vec4 v_color;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_Position = u_mvpMatrix * a_position;\n"+
			"   gl_Position.y *= u_flipY;\n"+
			"	v_color = a_color * u_alpha;\n"+
			"}\n";
			this.QB_NOT_TEX_FS=
			"precision mediump float;\n"+
			"varying   vec4    v_color;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_FragColor = v_color;\n"+
			"}\n";
			this.QB_TEX_VS_TINTED=
			"uniform   vec4 u_alpha;\n"+
			"uniform   mat4 u_mvpMatrix;\n"+
			"uniform   float u_flipY; \n"+
			"attribute vec4 a_position;\n"+
			"attribute vec4 a_color;\n"+
			"attribute vec2 a_texCoord;\n"+
			"varying   vec4 v_color;\n"+
			"varying   vec2 v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_Position = u_mvpMatrix * a_position;\n"+
			"   gl_Position.y *= u_flipY;\n"+
			"	v_color = a_color * u_alpha;\n"+
			"	v_texCoord = a_texCoord;\n"+
			"}\n";
			this.QB_TEX_VS_NOT_TINTED=
			"uniform   vec4 u_alpha;\n"+
			"uniform   mat4 u_mvpMatrix;\n"+
			"uniform   float u_flipY; \n"+
			"attribute vec4 a_position;\n"+
			"attribute vec4 a_color;\n"+
			"attribute vec2 a_texCoord;\n"+
			"varying   vec4 v_color;\n"+
			"varying   vec2 v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"    gl_Position = u_mvpMatrix * a_position;\n"+
			"    gl_Position.y *= u_flipY;\n"+
			"    v_texCoord = a_texCoord;\n"+
			"}\n";
			this.QB_TEX_FS_TINTED=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"varying   vec4      v_color;\n"+
			"varying   vec2      v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_FragColor = texture2D( u_tex_00, v_texCoord );\n"+
			"	gl_FragColor = gl_FragColor * v_color;\n"+
			"}\n";
			this.QB_TEX_FS_NOT_TINTED=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"varying   vec4      v_color;\n"+
			"varying   vec2      v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_FragColor = texture2D( u_tex_00, v_texCoord );\n"+
			"}\n";
			this.BF_FS=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"uniform   vec4      u_weight;\n"+
			"uniform   vec4      u_color;\n"+
			"varying   vec2      a_tex_00;\n"+
			"varying   vec2      a_tex_01;\n"+
			"varying   vec2      a_tex_02;\n"+
			"varying   vec2      a_tex_03;\n"+
			"varying   vec2      a_tex_04;\n"+
			"void main()\n"+
			"{\n"+
			"	vec4 color = texture2D( u_tex_00, a_tex_00 );\n"+
			"	color = color * u_weight.x;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_01 ) * u_weight.z;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_02 ) * u_weight.y;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_03 ) * u_weight.y;\n"+
			"	gl_FragColor = color + texture2D( u_tex_00, a_tex_04 ) * u_weight.z;\n"+
			"}\n";
			this.BF_FS_TINTED=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"uniform   vec4      u_weight;\n"+
			"uniform   vec4      u_color;\n"+
			"varying   vec2      a_tex_00;\n"+
			"varying   vec2      a_tex_01;\n"+
			"varying   vec2      a_tex_02;\n"+
			"varying   vec2      a_tex_03;\n"+
			"varying   vec2      a_tex_04;\n"+
			"void main()\n"+
			"{\n"+
			"	vec4 color = texture2D( u_tex_00, a_tex_00 );\n"+
			"	color = color * u_weight.x;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_01 ) * u_weight.z;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_02 ) * u_weight.y;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_03 ) * u_weight.y;\n"+
			"	color = color + texture2D( u_tex_00, a_tex_04 ) * u_weight.z;\n"+
			"	color.xyz = u_color.xyz * color.w;\n"+
			"	gl_FragColor = color * u_color.w;\n"+
			"}\n";
			this.BF_VS=
			"uniform   mat4 u_mvpMatrix;\n"+
			"uniform   vec4 u_kernel_offset;\n"+
			"uniform   float u_flipY; \n"+
			"attribute vec4 a_position;\n"+
			"attribute vec2 a_texCoord;\n"+
			"varying   vec2 a_tex_00;\n"+
			"varying   vec2 a_tex_01;\n"+
			"varying   vec2 a_tex_02;\n"+
			"varying   vec2 a_tex_03;\n"+
			"varying   vec2 a_tex_04;\n"+
			"void main()\n"+
			"{\n"+
			"   gl_Position = u_mvpMatrix * a_position;\n"+
			"   gl_Position.y *= u_flipY;\n"+
			"   a_tex_00 = a_texCoord;\n"+
			"	a_tex_01 = a_texCoord - u_kernel_offset.zw;\n"+
			"	a_tex_02 = a_texCoord - u_kernel_offset.xy;\n"+
			"	a_tex_03 = a_texCoord + u_kernel_offset.xy;\n"+
			"	a_tex_04 = a_texCoord + u_kernel_offset.zw;\n"+
			"}\n";
			this.CLR_MAT_FLT_FS=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"varying   vec2      a_tex_00;\n"+
			"uniform   mat4      u_color_matrix;\n"+
			"uniform   vec4      u_offset;\n"+
			"uniform   vec4      u_minimal_color;\n"+
			"void main()\n"+
			"{\n"+
			"   vec4 map_color = texture2D( u_tex_00, a_tex_00 );\n  "+
			"	map_color = max( map_color, u_minimal_color );\n"+
			"	map_color.xyz = map_color.xyz / map_color.w;\n"+
			"	map_color = u_color_matrix * map_color;\n"+
			"	map_color += u_offset;\n"+
			"   map_color.xyz = map_color.xyz * map_color.w;\n"+
			"	gl_FragColor= map_color;\n"+
			"}\n";
			this.DPM_MAP_FLT_VS=
			"uniform   mat4 u_mvpMatrix;\n"+
			"attribute vec4 a_position;\n"+
			"attribute vec2 a_texCoord_01;\n"+
			"attribute vec2 a_texCoord_02;\n"+
			"varying   vec2 a_tex_00;\n"+
			"varying   vec2 a_tex_01;\n"+
			"void main()\n"+
			"{\n"+
			"    gl_Position = u_mvpMatrix * a_position;\n"+
			"    a_tex_00 = a_texCoord_01;\n"+
			"    a_tex_01 = a_texCoord_02;\n"+
			"}\n";
			this.DPM_MAP_FLT_FS=
			"precision mediump   float;\n"+
			"uniform   sampler2D u_tex_00;\n"+
			"uniform   sampler2D u_tex_01;\n"+
			"varying   vec2      a_tex_00;\n"+
			"varying   vec2      a_tex_01;\n"+
			"uniform   vec4      u_one_half;\n"+
			"uniform   mat4      u_color_matrix;\n"+
			"void main()\n"+
			"{\n"+
			"   vec4 map_color = texture2D( u_tex_01, a_tex_01 );\n"+
			"	map_color = map_color - u_one_half;\n"+
			"	vec4 map_color_02 = u_color_matrix * map_color;\n"+
			"	vec2 newTex = a_tex_00.xy + map_color_02.xy;\n"+
			"   gl_FragColor = texture2D( u_tex_00, newTex );\n"+
			"}\n";
			this.FRA_FLT_STD_VS=
			"uniform   mat4 u_mvpMatrix;\n"+
			"attribute vec4 a_position;\n"+
			"attribute vec2 a_texCoord;\n"+
			"varying   vec2 a_tex_00;\n"+
			"void main()\n"+
			"{\n"+
			"    gl_Position = u_mvpMatrix * a_position;\n"+
			"    a_tex_00 = a_texCoord;\n"+
			"}\n";
			this.FRA_FLT_STD_FS=
			"precision mediump   float; \n"+
			"uniform   sampler2D u_tex_00;\n"+
			"varying   vec2      a_tex_00;\n"+
			"void main()\n"+
			"{\n"+
			"    gl_FragColor = texture2D( u_tex_00, a_tex_00 );\n"+
			"}\n";
		}

		__class(GLSL_ShaderList,'starling.display.GLSL_ShaderList',true);
		__getset(1,GLSL_ShaderList,'shader',function(){
			if (!GLSL_ShaderList._shader)
				GLSL_ShaderList._shader=new GLSL_ShaderList();
			return GLSL_ShaderList._shader
		});

		GLSL_ShaderList._shader=null;
		return GLSL_ShaderList;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/touch.as
	;
	//class starling.events.Touch
	var Touch1=(function(){
		function Touch(id){
			this.mID=0;
			this.mGlobalX=NaN;
			this.mGlobalY=NaN;
			this.mPreviousGlobalX=NaN;
			this.mPreviousGlobalY=NaN;
			this.mTapCount=0;
			this.mPhase=null;
			this.mTarget=null;
			this.mTimestamp=NaN;
			this.mPressure=NaN;
			this.mWidth=NaN;
			this.mHeight=NaN;
			this.mCancelled=false;
			this.mBubbleChain=null;
			this.mID=id;
			this.mTapCount=0;
			this.mPhase=/*starling.events.TouchPhase.HOVER*/"hover";
			this.mPressure=this.mWidth=this.mHeight=1.0;
			this.mBubbleChain=/*new vector.<>*/[];
		}

		__class(Touch,'starling.events.Touch',false,null,'Touch1');
		var __proto=Touch.prototype;
		__proto.getLocation=function(space,resultPoint){
			Touch.sHelperPoint.setTo(this.mGlobalX,this.mGlobalY);
			return space.globalToLocal(Touch.sHelperPoint,resultPoint);
		}

		__proto.getPreviousLocation=function(space,resultPoint){
			Touch.sHelperPoint.setTo(this.mPreviousGlobalX,this.mPreviousGlobalY);
			return space.globalToLocal(Touch.sHelperPoint,resultPoint);
		}

		__proto.getMovement=function(space,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			this.getLocation(space,resultPoint);
			var x=resultPoint.x;
			var y=resultPoint.y;
			this.getPreviousLocation(space,resultPoint);
			resultPoint.setTo(x-resultPoint.x,y-resultPoint.y);
			return resultPoint;
		}

		__proto.isTouching=function(target){
			return this.mBubbleChain.indexOf(target)!=-1;
		}

		__proto.toString=function(){
			return starling.utils.formatString("Touch {0}: globalX={1}, globalY={2}, phase={3}",
			this.mID,this.mGlobalX,this.mGlobalY,this.mPhase);
		}

		__proto.clone=function(){
			var clone=new Touch(this.mID);
			clone.mGlobalX=this.mGlobalX;
			clone.mGlobalY=this.mGlobalY;
			clone.mPreviousGlobalX=this.mPreviousGlobalX;
			clone.mPreviousGlobalY=this.mPreviousGlobalY;
			clone.mPhase=this.mPhase;
			clone.mTapCount=this.mTapCount;
			clone.mTimestamp=this.mTimestamp;
			clone.mPressure=this.mPressure;
			clone.mWidth=this.mWidth;
			clone.mHeight=this.mHeight;
			clone.mCancelled=this.mCancelled;
			clone.target=this.mTarget;
			return clone;
		}

		__proto.updateBubbleChain=function(){
			if (this.mTarget){
				var length=1;
				var element=this.mTarget;
				this.mBubbleChain.length=1;
				this.mBubbleChain[0]=element;
				while ((element=element.parent)!=null)
				this.mBubbleChain[int(length++)]=element;
			}
			else{
				this.mBubbleChain.length=0;
			}
		}

		__proto.dispatchEvent=function(event){
			if (this.mTarget)event.dispatch(this.mBubbleChain);
		}

		__getset(0,__proto,'id',function(){return this.mID;});
		__getset(0,__proto,'previousGlobalX',function(){return this.mPreviousGlobalX;});
		__getset(0,__proto,'previousGlobalY',function(){return this.mPreviousGlobalY;});
		__getset(0,__proto,'globalX',function(){return this.mGlobalX;},function(value){
			this.mPreviousGlobalX=this.mGlobalX !=this.mGlobalX ? value :this.mGlobalX;
			this.mGlobalX=value;
		});

		__getset(0,__proto,'globalY',function(){return this.mGlobalY;},function(value){
			this.mPreviousGlobalY=this.mGlobalY !=this.mGlobalY ? value :this.mGlobalY;
			this.mGlobalY=value;
		});

		__getset(0,__proto,'phase',function(){return this.mPhase;},function(value){this.mPhase=value;});
		__getset(0,__proto,'tapCount',function(){return this.mTapCount;},function(value){this.mTapCount=value;});
		__getset(0,__proto,'target',function(){return this.mTarget;},function(value){
			if (this.mTarget !=value){
				this.mTarget=value;
				this.updateBubbleChain();
			}
		});

		__getset(0,__proto,'timestamp',function(){return this.mTimestamp;},function(value){this.mTimestamp=value;});
		__getset(0,__proto,'pressure',function(){return this.mPressure;},function(value){this.mPressure=value;});
		__getset(0,__proto,'width',function(){return this.mWidth;},function(value){this.mWidth=value;});
		__getset(0,__proto,'height',function(){return this.mHeight;},function(value){this.mHeight=value;});
		__getset(0,__proto,'cancelled',function(){return this.mCancelled;},function(value){this.mCancelled=value;});
		__getset(0,__proto,'bubbleChain',function(){
			return this.mBubbleChain.concat();
		});

		__static(Touch,
		['sHelperPoint',function(){return this.sHelperPoint=new Point();}
		]);
		return Touch;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/touchphase.as
	//class starling.events.TouchPhase
	var TouchPhase1=(function(){
		function TouchPhase(){throw new AbstractClassError();}
		__class(TouchPhase,'starling.events.TouchPhase',true,null,'TouchPhase1');
		TouchPhase.HOVER="hover";
		TouchPhase.BEGAN="began";
		TouchPhase.MOVED="moved";
		TouchPhase.STATIONARY="stationary";
		TouchPhase.ENDED="ended";
		return TouchPhase;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/touchprocessor.as
	//class starling.events.TouchProcessor
	var TouchProcessor=(function(){
		function TouchProcessor(stage){
			this.mStage=null;
			this.mRoot=null;
			this.mElapsedTime=NaN;
			this.mTouchMarker=null;
			this.mLastTaps=null;
			this.mShiftDown=false;
			this.mCtrlDown=false;
			this.mMultitapTime=0.3;
			this.mMultitapDistance=25;
			this.mQueue=null;
			this.mCurrentTouches=null;
			this.sHoveringTouchData=/*new vector.<>*/[];
			this.mRoot=this.mStage=stage;
			this.mElapsedTime=0.0;
			this.mCurrentTouches=/*new vector.<>*/[];
			this.mQueue=/*new vector.<>*/[];
			this.mLastTaps=/*new vector.<>*/[];
			this.mStage.addEventListener(/*starling.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.onKey));
			this.mStage.addEventListener(/*starling.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.onKey));
			this.monitorInterruptions(true);
		}

		__class(TouchProcessor,'starling.events.TouchProcessor',true);
		var __proto=TouchProcessor.prototype;
		__proto.dispose=function(){
			this.sHoveringTouchData.length=0;
			this.monitorInterruptions(false);
			this.mStage.removeEventListener(/*starling.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.onKey));
			this.mStage.removeEventListener(/*starling.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.onKey));
			if (this.mTouchMarker)this.mTouchMarker.dispose();
		}

		__proto.advanceTime=function(passedTime){
			var i=0;
			var touch;
			this.mElapsedTime+=passedTime;
			TouchProcessor.sUpdatedTouches.length=0;
			if (this.mLastTaps.length > 0){
				for (i=this.mLastTaps.length-1;i>=0;--i)
				if (this.mElapsedTime-this.mLastTaps[i].timestamp > this.mMultitapTime)
					this.mLastTaps.splice(i,1);
			}
			while (this.mQueue.length > 0){
				var $each_touch;
				/*for each*/for($each_touch in this.mCurrentTouches){
					touch=this.mCurrentTouches[$each_touch];
					if (touch.phase==/*starling.events.TouchPhase.BEGAN*/"began" || touch.phase==/*starling.events.TouchPhase.MOVED*/"moved")
						touch.phase=/*starling.events.TouchPhase.STATIONARY*/"stationary";
				}
				while (this.mQueue.length > 0 &&
				!this.containsTouchWithID(TouchProcessor.sUpdatedTouches,this.mQueue[this.mQueue.length-1][0])){
					var touchArgs=this.mQueue.pop();
					touch=this.createOrUpdateTouch(
					touchArgs[0],touchArgs[1],touchArgs[2],touchArgs[3],
					touchArgs[4],touchArgs[5],touchArgs[6]);
					TouchProcessor.sUpdatedTouches[TouchProcessor.sUpdatedTouches.length]=touch;
				}
				this.processTouches(TouchProcessor.sUpdatedTouches,this.mShiftDown,this.mCtrlDown);
				for (i=this.mCurrentTouches.length-1;i>=0;--i)
				if (this.mCurrentTouches[i].phase==/*starling.events.TouchPhase.ENDED*/"ended")
					this.mCurrentTouches.splice(i,1);
				TouchProcessor.sUpdatedTouches.length=0;
			}
		}

		__proto.processTouches=function(touches,shiftDown,ctrlDown){
			this.sHoveringTouchData.length=0;
			var touchEvent=new TouchEvent1(/*starling.events.TouchEvent.TOUCH*/"touch",this.mCurrentTouches,shiftDown,ctrlDown);
			var touch;
			var $each_touch;
			/*for each*/for($each_touch in touches){
				touch=touches[$each_touch];
				if (touch.phase==/*starling.events.TouchPhase.HOVER*/"hover" && touch.target)
					this.sHoveringTouchData[this.sHoveringTouchData.length]={
					touch:touch,
					target:touch.target,
					bubbleChain:touch.bubbleChain
				};
				if (touch.phase==/*starling.events.TouchPhase.HOVER*/"hover" || touch.phase==/*starling.events.TouchPhase.BEGAN*/"began"){
					TouchProcessor.sHelperPoint.setTo(touch.globalX,touch.globalY);
					touch.target=this.mRoot.hitTest(TouchProcessor.sHelperPoint,true);
				}
			}
			var touchData;
			/*for each*/for(var $each_touchData in this.sHoveringTouchData){
				touchData=this.sHoveringTouchData[$each_touchData];
				if (touchData.touch.target !=touchData.target)
					touchEvent.dispatch(touchData.bubbleChain);
			}
			var $each_touch;
			/*for each*/for($each_touch in touches){
				touch=touches[$each_touch];
				touch.dispatchEvent(touchEvent);
			}
		}

		__proto.enqueue=function(touchID,phase,globalX,globalY,pressure,width,height){
			(pressure===void 0)&& (pressure=1.0);
			(width===void 0)&& (width=1.0);
			(height===void 0)&& (height=1.0);
			this.mQueue.unshift(arguments);
			if (this.mCtrlDown && this.simulateMultitouch && touchID==0){
				this.mTouchMarker.moveMarker(globalX,globalY,this.mShiftDown);
				this.mQueue.unshift([1,phase,this.mTouchMarker.mockX,this.mTouchMarker.mockY]);
			}
		}

		__proto.enqueueMouseLeftStage=function(){
			var mouse=this.getCurrentTouch(0);
			if (mouse==null || mouse.phase !=/*starling.events.TouchPhase.HOVER*/"hover")return;
			var offset=1;
			var exitX=mouse.globalX;
			var exitY=mouse.globalY;
			var distLeft=mouse.globalX;
			var distRight=this.mStage.stageWidth-distLeft;
			var distTop=mouse.globalY;
			var distBottom=this.mStage.stageHeight-distTop;
			var minDist=Math.min(distLeft,distRight,distTop,distBottom);
			if (minDist==distLeft)exitX=-offset;
			else if (minDist==distRight)exitX=this.mStage.stageWidth+offset;
			else if (minDist==distTop)exitY=-offset;
			else exitY=this.mStage.stageHeight+offset;
			this.enqueue(0,/*starling.events.TouchPhase.HOVER*/"hover",exitX,exitY);
		}

		__proto.cancelTouches=function(){
			if (this.mCurrentTouches.length > 0){
				var touch;
				/*for each*/for(var $each_touch in this.mCurrentTouches){
					touch=this.mCurrentTouches[$each_touch];
					if (touch.phase==/*starling.events.TouchPhase.BEGAN*/"began" || touch.phase==/*starling.events.TouchPhase.MOVED*/"moved" ||
						touch.phase==/*starling.events.TouchPhase.STATIONARY*/"stationary"){
						touch.phase=/*starling.events.TouchPhase.ENDED*/"ended";
						touch.cancelled=true;
					}
				}
				this.processTouches(this.mCurrentTouches,this.mShiftDown,this.mCtrlDown);
			}
			this.mCurrentTouches.length=0;
			this.mQueue.length=0;
		}

		__proto.createOrUpdateTouch=function(touchID,phase,globalX,globalY,pressure,width,height){
			(pressure===void 0)&& (pressure=1.0);
			(width===void 0)&& (width=1.0);
			(height===void 0)&& (height=1.0);
			var touch=this.getCurrentTouch(touchID);
			if (touch==null){
				touch=new Touch1(touchID);
				this.addCurrentTouch(touch);
			}
			touch.globalX=globalX;
			touch.globalY=globalY;
			touch.phase=phase;
			touch.timestamp=this.mElapsedTime;
			touch.pressure=pressure;
			touch.width=width;
			touch.height=height;
			if (phase==/*starling.events.TouchPhase.BEGAN*/"began")
				this.updateTapCount(touch);
			return touch;
		}

		__proto.updateTapCount=function(touch){
			var nearbyTap=null;
			var minSqDist=this.mMultitapDistance *this.mMultitapDistance;
			var tap;
			/*for each*/for(var $each_tap in this.mLastTaps){
				tap=this.mLastTaps[$each_tap];
				var sqDist=Math.pow(tap.globalX-touch.globalX,2)+
				Math.pow(tap.globalY-touch.globalY,2);
				if (sqDist <=minSqDist){
					nearbyTap=tap;
					break ;
				}
			}
			if (nearbyTap){
				touch.tapCount=nearbyTap.tapCount+1;
				this.mLastTaps.splice(this.mLastTaps.indexOf(nearbyTap),1);
			}
			else{
				touch.tapCount=1;
			}
			this.mLastTaps.push(touch.clone());
		}

		__proto.addCurrentTouch=function(touch){
			for (var i=this.mCurrentTouches.length-1;i>=0;--i)
			if (this.mCurrentTouches[i].id==touch.id)
				this.mCurrentTouches.splice(i,1);
			this.mCurrentTouches.push(touch);
		}

		__proto.getCurrentTouch=function(touchID){
			var touch;
			/*for each*/for(var $each_touch in this.mCurrentTouches){
				touch=this.mCurrentTouches[$each_touch];
				if (touch.id==touchID)return touch;
			}
			return null;
		}

		__proto.containsTouchWithID=function(touches,touchID){
			var touch;
			/*for each*/for(var $each_touch in touches){
				touch=touches[$each_touch];
				if (touch.id==touchID)return true;
			}
			return false;
		}

		__proto.onKey=function(event){
			if (event.keyCode==17 || event.keyCode==15){
				var wasCtrlDown=this.mCtrlDown;
				this.mCtrlDown=event.type==/*starling.events.KeyboardEvent.KEY_DOWN*/"keyDown";
				if (this.simulateMultitouch && wasCtrlDown !=this.mCtrlDown){
					this.mTouchMarker.visible=this.mCtrlDown;
					this.mTouchMarker.moveCenter(this.mStage.stageWidth/2,this.mStage.stageHeight/2);
					var mouseTouch=this.getCurrentTouch(0);
					var mockedTouch=this.getCurrentTouch(1);
					if (mouseTouch)
						this.mTouchMarker.moveMarker(mouseTouch.globalX,mouseTouch.globalY);
					if (wasCtrlDown && mockedTouch && mockedTouch.phase !=/*starling.events.TouchPhase.ENDED*/"ended"){
						this.mQueue.unshift([1,/*starling.events.TouchPhase.ENDED*/"ended",mockedTouch.globalX,mockedTouch.globalY]);
					}
					else if (this.mCtrlDown && mouseTouch){
						if (mouseTouch.phase==/*starling.events.TouchPhase.HOVER*/"hover" || mouseTouch.phase==/*starling.events.TouchPhase.ENDED*/"ended")
							this.mQueue.unshift([1,/*starling.events.TouchPhase.HOVER*/"hover",this.mTouchMarker.mockX,this.mTouchMarker.mockY]);
						else
						this.mQueue.unshift([1,/*starling.events.TouchPhase.BEGAN*/"began",this.mTouchMarker.mockX,this.mTouchMarker.mockY]);
					}
				}
			}
			else if (event.keyCode==16){
				this.mShiftDown=event.type==/*starling.events.KeyboardEvent.KEY_DOWN*/"keyDown";
			}
		}

		__proto.monitorInterruptions=function(enable){
			try{
				var nativeAppClass=iflash.utils.getDefinitionByName("flash.desktop::NativeApplication");
				var nativeApp=nativeAppClass["nativeApplication"];
				if (enable)
					nativeApp.addEventListener("deactivate",__bind(this,this.onInterruption),false,0,true);
				else
				nativeApp.removeEventListener("deactivate",__bind(this,this.onInterruption));
			}
			catch (e){}
		}

		__proto.onInterruption=function(event){
			this.cancelTouches();
		}

		__getset(0,__proto,'simulateMultitouch',function(){return this.mTouchMarker !=null;},function(value){
			if (this.simulateMultitouch==value)return;
			if (value){
				this.mTouchMarker=new TouchMarker();
				this.mTouchMarker.visible=false;
				this.mStage.addChild(this.mTouchMarker);
			}
			else{
				this.mTouchMarker.removeFromParent(true);
				this.mTouchMarker=null;
			}
		});

		__getset(0,__proto,'multitapTime',function(){return this.mMultitapTime;},function(value){this.mMultitapTime=value;});
		__getset(0,__proto,'multitapDistance',function(){return this.mMultitapDistance;},function(value){this.mMultitapDistance=value;});
		__getset(0,__proto,'stage',function(){return this.mStage;});
		__getset(0,__proto,'root',function(){return this.mRoot;},function(value){this.mRoot=value;});
		__getset(0,__proto,'numCurrentTouches',function(){return this.mCurrentTouches.length;});
		__static(TouchProcessor,
		['sUpdatedTouches',function(){return this.sUpdatedTouches=/*new vector.<>*/[];},'sHelperPoint',function(){return this.sHelperPoint=new Point();}
		]);
		return TouchProcessor;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/extensions/colorargb.as
	//class starling.extensions.ColorArgb
	var ColorArgb=(function(){
		function ColorArgb(red,green,blue,alpha){
			this.red=NaN;
			this.green=NaN;
			this.blue=NaN;
			this.alpha=NaN;
			(red===void 0)&& (red=0);
			(green===void 0)&& (green=0);
			(blue===void 0)&& (blue=0);
			(alpha===void 0)&& (alpha=0);
			this.red=red;
			this.green=green;
			this.blue=blue;
			this.alpha=alpha;
		}

		__class(ColorArgb,'starling.extensions.ColorArgb',true);
		var __proto=ColorArgb.prototype;
		__proto.toRgb=function(){
			var r=this.red;if (r < 0.0)r=0.0;else if (r > 1.0)r=1.0;
			var g=this.green;if (g < 0.0)g=0.0;else if (g > 1.0)g=1.0;
			var b=this.blue;if (b < 0.0)b=0.0;else if (b > 1.0)b=1.0;
			return int(r *255)<< 16 | int(g *255)<< 8 | int(b *255);
		}

		__proto.toArgb=function(){
			var a=this.alpha;if (a < 0.0)a=0.0;else if (a > 1.0)a=1.0;
			var r=this.red;if (r < 0.0)r=0.0;else if (r > 1.0)r=1.0;
			var g=this.green;if (g < 0.0)g=0.0;else if (g > 1.0)g=1.0;
			var b=this.blue;if (b < 0.0)b=0.0;else if (b > 1.0)b=1.0;
			return int(a *255)<< 24 | int(r *255)<< 16 | int(g *255)<< 8 | int(b *255);
		}

		__proto.fromRgb=function(color){
			this.red=(color >> 16 & 0xFF)/ 255.0;
			this.green=(color >> 8 & 0xFF)/ 255.0;
			this.blue=(color & 0xFF)/ 255.0;
		}

		__proto.fromArgb=function(color){
			this.red=(color >> 16 & 0xFF)/ 255.0;
			this.green=(color >> 8 & 0xFF)/ 255.0;
			this.blue=(color & 0xFF)/ 255.0;
			this.alpha=(color >> 24 & 0xFF)/ 255.0;
		}

		__proto.copyFrom=function(argb){
			this.red=argb.red;
			this.green=argb.green;
			this.blue=argb.blue;
			this.alpha=argb.alpha;
		}

		ColorArgb.fromRgb=function(color){
			var rgb=new ColorArgb();
			rgb.fromRgb(color);
			return rgb;
		}

		ColorArgb.fromArgb=function(color){
			var argb=new ColorArgb();
			argb.fromArgb(color);
			return argb;
		}

		return ColorArgb;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/extensions/particle.as
	//class starling.extensions.Particle
	var Particle=(function(){
		function Particle(){
			this.x=NaN;
			this.y=NaN;
			this.scale=NaN;
			this.rotation=NaN;
			this.color=0;
			this.alpha=NaN;
			this.currentTime=NaN;
			this.totalTime=NaN;
			this.x=this.y=this.rotation=this.currentTime=0.0;
			this.totalTime=this.alpha=this.scale=1.0;
			this.color=0xffffff;
		}

		__class(Particle,'starling.extensions.Particle',true);
		return Particle;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/fragmentfilter.as
	//class starling.filters.FragmentFilter
	var FragmentFilter=(function(){
		function FragmentFilter(numPasses,resolution){
			this.MIN_TEXTURE_SIZE=64;
			this.PMA=true;
			this.mVertexPosAtID=0;
			this.mTexCoordsAtID=1;
			this.mBaseTextureID=0;
			this.mMvpConstantID=0;
			this.mNumPasses=0;
			this.mPassTextures=null;
			this.mMode=null;
			this.mResolution=NaN;
			this.mMarginX=NaN;
			this.mMarginY=NaN;
			this.mOffsetX=NaN;
			this.mOffsetY=NaN;
			this.mVertexData=null;
			this.mVertexBuffer=null;
			this.mIndexData=null;
			this.mIndexBuffer=null;
			this.mCacheRequested=false;
			this.mCache=null;
			this.mHelperMatrix=new Matrix();
			this.mHelperMatrix3D=new Matrix3D();
			this.mHelperRect=new Rectangle();
			this.mHelperRect2=new Rectangle();
			(numPasses===void 0)&& (numPasses=1);
			(resolution===void 0)&& (resolution=1.0);
			if (Capabilities.isDebugger &&
				iflash.utils.getQualifiedClassName(this)=="starling.filters::FragmentFilter"){
				throw new AbstractClassError();
			}
			if (numPasses < 1)throw new Error("At least one pass is required.");
			this.mNumPasses=numPasses;
			this.mMarginX=this.mMarginY=0.0;
			this.mOffsetX=this.mOffsetY=0;
			this.mResolution=resolution;
			this.mPassTextures=/*new vector.<>*/[];
			this.mMode=/*starling.filters.FragmentFilterMode.REPLACE*/"replace";
			this.mVertexData=new VertexData(4);
			this.mVertexData.setTexCoords(0,0,0);
			this.mVertexData.setTexCoords(1,1,0);
			this.mVertexData.setTexCoords(2,0,1);
			this.mVertexData.setTexCoords(3,1,1);
			this.mIndexData=/*new vector.<>*/[0,1,2,1,3,2];
			this.mIndexData.fixed=true;
			if (Starling.current.contextValid)
				this.createPrograms();
		}

		__class(FragmentFilter,'starling.filters.FragmentFilter',true);
		var __proto=FragmentFilter.prototype;
		__proto.dispose=function(){
			Starling.current.stage3D.removeEventListener(/*starling.events.Event.CONTEXT3D_CREATE*/"context3DCreate",__bind(this,this.onContextCreated));
			if (this.mVertexBuffer){
				this.mVertexBuffer.dispose();
				this.mVertexBuffer=null;
			}
			if (this.mIndexBuffer){
				this.mIndexBuffer.dispose();
				this.mIndexBuffer=null;
			}
			this.disposePassTextures();
			this.disposeCache();
		}

		__proto.onContextCreated=function(event){
			this.mVertexBuffer=null;
			this.mIndexBuffer=null;
			this.disposePassTextures();
			this.createPrograms();
			if (this.mCache)this.cache();
		}

		__proto.render=function(object,support,parentAlpha){
			if (this.mode==/*starling.filters.FragmentFilterMode.ABOVE*/"above")
				object.render(support,parentAlpha);
			if (this.mCacheRequested){
				this.mCacheRequested=false;
				this.mCache=this.renderPasses(object,support,1.0,true);
				this.disposePassTextures();
			}
			if (this.mCache)
				this.mCache.render(support,parentAlpha);
			else
			this.renderPasses(object,support,parentAlpha,false);
			if (this.mode==/*starling.filters.FragmentFilterMode.BELOW*/"below")
				object.render(support,parentAlpha);
		}

		__proto.renderPasses=function(object,support,parentAlpha,intoCache){
			(intoCache===void 0)&& (intoCache=false);
			var passTexture;
			var cacheTexture=null;
			var context=Starling.context;
			var targetSpace=object.stage;
			var stage=Starling.current.stage;
			var scale=Starling.current.contentScaleFactor;
			var projMatrix=this.mHelperMatrix;
			var projMatrix3D=this.mHelperMatrix3D;
			var bounds=this.mHelperRect;
			var boundsPot=this.mHelperRect2;
			var previousStencilRefValue=0;
			var previousRenderTarget;
			if (context==null)throw new MissingContextError();
			this.calculateBounds(object,targetSpace,this.mResolution *scale,!intoCache,bounds,boundsPot);
			if (bounds.isEmpty()){
				this.disposePassTextures();
				return intoCache ? new QuadBatch():null;
			}
			this.updateBuffers(context,boundsPot);
			this.updatePassTextures(boundsPot.width,boundsPot.height,this.mResolution *scale);
			support.finishQuadBatch();
			support.raiseDrawCount(this.mNumPasses);
			support.pushMatrix();
			support.pushMatrix3D();
			projMatrix.copyFrom(support.projectionMatrix);
			projMatrix3D.copyFrom(support.projectionMatrix3D);
			previousRenderTarget=support.renderTarget;
			previousStencilRefValue=support.stencilReferenceValue;
			if (previousRenderTarget && !SystemUtil.supportsRelaxedTargetClearRequirement)
				throw new IllegalOperationError(
			"To nest filters, you need at least Flash Player / AIR version 15.");
			if (intoCache)
				cacheTexture=Texture1.empty(boundsPot.width,boundsPot.height,this.PMA,false,true,
			this.mResolution *scale);
			support.renderTarget=this.mPassTextures[0];
			support.clear();
			support.blendMode=/*starling.display.BlendMode.NORMAL*/"normal";
			support.stencilReferenceValue=0;
			support.setProjectionMatrix(
			bounds.x,bounds.y,boundsPot.width,boundsPot.height,
			stage.stageWidth,stage.stageHeight,stage.cameraPosition);
			QuadBatch.Y_FLIP=true;
			object.render(support,parentAlpha);
			support.finishQuadBatch();
			QuadBatch.Y_FLIP=false;
			RenderSupport.setBlendFactors(this.PMA);
			support.loadIdentity();
			support.pushClipRect(bounds);
			context.setVertexBufferAt(this.mVertexPosAtID,this.mVertexBuffer,/*starling.utils.VertexData.POSITION_OFFSET*/0,
			/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
			context.setVertexBufferAt(this.mTexCoordsAtID,this.mVertexBuffer,/*starling.utils.VertexData.TEXCOORD_OFFSET*/6,
			/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
			for (var i=0;i<this.mNumPasses;++i){
				if (i < this.mNumPasses-1){
					support.renderTarget=this.getPassTexture(i+1);
					support.clear();
				}
				else{
					if (intoCache){
						support.renderTarget=cacheTexture;
						support.clear();
					}
					else{
						support.projectionMatrix=projMatrix;
						support.projectionMatrix3D=projMatrix3D;
						support.renderTarget=previousRenderTarget;
						support.translateMatrix(this.mOffsetX,this.mOffsetY);
						support.stencilReferenceValue=previousStencilRefValue;
						support.blendMode=object.blendMode;
						support.applyBlendMode(this.PMA);
					}
				}
				passTexture=this.getPassTexture(i);
				context.setTextureAt(this.mBaseTextureID,passTexture.base);
				context.webglContext.generateMipmap(context.webglContext.TEXTURE_2D);
				this.activate(i,context,passTexture);
				var loc=context.m_currentProgram.getUniformLocation("u_mvpMatrix");
				context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",loc,support.mvpMatrix3D,true);
				context.drawTriangles(this.mIndexBuffer,0,2);
				context.webglContext.bindTexture(context.webglContext.TEXTURE_2D,null);
			}
			context.setVertexBufferAt(this.mVertexPosAtID,null);
			context.setVertexBufferAt(this.mTexCoordsAtID,null);
			context.setTextureAt(this.mBaseTextureID,null);
			support.popMatrix();
			support.popMatrix3D();
			support.popClipRect();
			if (intoCache){
				support.renderTarget=previousRenderTarget;
				support.projectionMatrix.copyFrom(projMatrix);
				support.projectionMatrix3D.copyFrom(projMatrix3D);
				var quadBatch=new CacheQuadBatch();
				var image=new Image2(cacheTexture);
				object.getTransformationMatrix(targetSpace,FragmentFilter.sTransformationMatrix).invert();
				MatrixUtil1.prependTranslation(FragmentFilter.sTransformationMatrix,
				bounds.x+this.mOffsetX,bounds.y+this.mOffsetY);
				quadBatch.addImage(image,1.0,FragmentFilter.sTransformationMatrix);
				return quadBatch;
			}
			else return null;
		}

		__proto.updateBuffers=function(context,bounds){
			this.mVertexData.setPosition(0,bounds.x,bounds.y);
			this.mVertexData.setPosition(1,bounds.right,bounds.y);
			this.mVertexData.setPosition(2,bounds.x,bounds.bottom);
			this.mVertexData.setPosition(3,bounds.right,bounds.bottom);
			if (this.mVertexBuffer==null){
				this.mVertexBuffer=context.createVertexBuffer(4,/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8);
				this.mIndexBuffer=context.createIndexBuffer(6);
				this.mIndexBuffer.uploadFromVector(this.mIndexData,0,6);
			}
			this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,4);
		}

		__proto.updatePassTextures=function(width,height,scale){
			var numPassTextures=this.mNumPasses > 1 ? 2 :1;
			var needsUpdate=
			this.mPassTextures.length !=numPassTextures ||
			Math.abs(this.mPassTextures[0].nativeWidth-width *scale)> 0.1 ||
			Math.abs(this.mPassTextures[0].nativeHeight-height *scale)> 0.1;
			if (needsUpdate){
				this.disposePassTextures();
				for (var i=0;i<numPassTextures;++i){
					this.mPassTextures[i]=Texture1.empty(width,height,this.PMA,false,true,scale);
					var gl=Starling.context.webglContext;
					gl.bindTexture(gl.TEXTURE_2D,this.mPassTextures[i].base.m_texID);
					gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);
					gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR_MIPMAP_NEAREST);
					gl.generateMipmap(gl.TEXTURE_2D);
					gl.bindTexture(gl.TEXTURE_2D,null);
				}
			}
		}

		__proto.getPassTexture=function(pass){
			return this.mPassTextures[pass % 2];
		}

		__proto.calculateBounds=function(object,targetSpace,scale,intersectWithStage,resultRect,resultPotRect){
			var stage;
			var marginX=this.mMarginX;
			var marginY=this.mMarginY;
			if ((targetSpace instanceof starling.display.Stage )){
				stage=targetSpace;
				if (object==stage || object==object.root){
					marginX=marginY=0;
					resultRect.setTo(0,0,stage.stageWidth,stage.stageHeight);
				}
				else{
					object.getBounds(stage,resultRect);
				}
				if (intersectWithStage){
					FragmentFilter.sStageBounds.setTo(0,0,stage.stageWidth,stage.stageHeight);
					RectangleUtil.intersect(resultRect,FragmentFilter.sStageBounds,resultRect);
				}
			}
			else{
				object.getBounds(targetSpace,resultRect);
			}
			if (!resultRect.isEmpty()){
				resultRect.inflate(marginX,marginY);
				var minSize=this.MIN_TEXTURE_SIZE / scale;
				var minWidth=resultRect.width > minSize ? resultRect.width :minSize;
				var minHeight=resultRect.height > minSize ? resultRect.height :minSize;
				resultPotRect.setTo(
				resultRect.x,resultRect.y,
				starling.utils.getNextPowerOfTwo(minWidth *scale)/ scale,
				starling.utils.getNextPowerOfTwo(minHeight *scale)/ scale);
			}
		}

		__proto.disposePassTextures=function(){
			var texture;
			/*for each*/for(var $each_texture in this.mPassTextures){
				texture=this.mPassTextures[$each_texture];
				texture.dispose();
			}
			this.mPassTextures.length=0;
		}

		__proto.disposeCache=function(){
			if (this.mCache){
				this.mCache.dispose();
				this.mCache=null;
			}
		}

		__proto.createPrograms=function(){
			throw new Error("Method has to be implemented in subclass!");
		}

		__proto.activate=function(pass,context,texture){
			throw new Error("Method has to be implemented in subclass!");
		}

		__proto.deactivate=function(pass,context,texture){}
		__proto.assembleAgal=function(fragmentShader,vertexShader){
			if (fragmentShader==null)
				fragmentShader=GLSL_ShaderList.shader.FRA_FLT_STD_FS;
			if (vertexShader==null)
				vertexShader=GLSL_ShaderList.shader.FRA_FLT_STD_VS;
			return RenderSupport.assembleAgal(vertexShader,fragmentShader);
			return RenderSupport.assembleAgal(vertexShader,fragmentShader);
		}

		__proto.cache=function(){
			this.mCacheRequested=true;
			this.disposeCache();
		}

		__proto.clearCache=function(){
			this.mCacheRequested=false;
			this.disposeCache();
		}

		__proto.compile=function(object){
			if (this.mCache)return this.mCache;
			else{
				var support;
				var stage=object.stage;
				var quadBatch;
				support=new RenderSupport();
				object.getTransformationMatrix(stage,support.modelViewMatrix);
				quadBatch=this.renderPasses(object,support,1.0,true);
				support.dispose();
				return quadBatch;
			}
		}

		__getset(0,__proto,'isCached',function(){return (this.mCache !=null)|| this.mCacheRequested;});
		__getset(0,__proto,'offsetX',function(){return this.mOffsetX;},function(value){this.mOffsetX=value;});
		__getset(0,__proto,'offsetY',function(){return this.mOffsetY;},function(value){this.mOffsetY=value;});
		__getset(0,__proto,'resolution',function(){return this.mResolution;},function(value){
			if (value <=0)throw new Error("Resolution must be > 0");
			else this.mResolution=value;
		});

		__getset(0,__proto,'mode',function(){return this.mMode;},function(value){this.mMode=value;});
		__getset(0,__proto,'marginX',function(){return this.mMarginX;},function(value){this.mMarginX=value;});
		__getset(0,__proto,'vertexPosAtID',function(){return this.mVertexPosAtID;},function(value){this.mVertexPosAtID=value;});
		__getset(0,__proto,'marginY',function(){return this.mMarginY;},function(value){this.mMarginY=value;});
		__getset(0,__proto,'numPasses',function(){return this.mNumPasses;},function(value){this.mNumPasses=value;});
		__getset(0,__proto,'texCoordsAtID',function(){return this.mTexCoordsAtID;},function(value){this.mTexCoordsAtID=value;});
		__getset(0,__proto,'baseTextureID',function(){return this.mBaseTextureID;},function(value){this.mBaseTextureID=value;});
		__getset(0,__proto,'mvpConstantID',function(){return this.mMvpConstantID;},function(value){this.mMvpConstantID=value;});
		__static(FragmentFilter,
		['sStageBounds',function(){return this.sStageBounds=new Rectangle();},'sTransformationMatrix',function(){return this.sTransformationMatrix=new Matrix();}
		]);
		return FragmentFilter;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/fragmentfiltermode.as
	//class starling.filters.FragmentFilterMode
	var FragmentFilterMode=(function(){
		function FragmentFilterMode(){throw new AbstractClassError();}
		__class(FragmentFilterMode,'starling.filters.FragmentFilterMode',true);
		FragmentFilterMode.BELOW="below";
		FragmentFilterMode.REPLACE="replace";
		FragmentFilterMode.ABOVE="above";
		return FragmentFilterMode;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/geom/polygon.as
	//class starling.geom.Polygon
	var Polygon=(function(){
		function Polygon(vertices){
			this.mCoords=null;
			this.mCoords=/*new vector.<>*/[];
			this.addVertices.apply(this,vertices);
		}

		__class(Polygon,'starling.geom.Polygon',false);
		var __proto=Polygon.prototype;
		__proto.clone=function(){
			var clone=new Polygon();
			var numCoords=this.mCoords.length;
			for (var i=0;i<numCoords;++i)
			clone.mCoords[i]=this.mCoords[i];
			return clone;
		}

		__proto.reverse=function(){
			var numCoords=this.mCoords.length;
			var numVertices=numCoords / 2;
			var tmp=NaN;
			for (var i=0;i<numVertices;i+=2){
				tmp=this.mCoords[i];
				this.mCoords[i]=this.mCoords[numCoords-i-2];
				this.mCoords[numCoords-i-2]=tmp;
				tmp=this.mCoords[i+1];
				this.mCoords[i+1]=this.mCoords[numCoords-i-1];
				this.mCoords[numCoords-i-1]=tmp;
			}
		}

		__proto.addVertices=function(__args){
			var args=arguments;
			var i=0;
			var numArgs=args.length;
			var numCoords=this.mCoords.length;
			if (numArgs > 0){
				if (((args[0])instanceof iflash.geom.Point )){
					for (i=0;i<numArgs;i++){
						this.mCoords[numCoords+i *2]=(args [i]).x;
						this.mCoords[numCoords+i *2+1]=(args [i]).y;
					}
				}
				else if ((typeof (args[0])=='number')){
					for (i=0;i<numArgs;++i)
					this.mCoords[numCoords+i]=args[i];
				}
				else throw new Error("Invalid type: "+iflash.utils.getQualifiedClassName(args[0]));
			}
		}

		__proto.setVertex=function(index,x,y){
			if (index >=0 && index <=this.numVertices){
				this.mCoords[index *2]=x;
				this.mCoords[index *2+1]=y;
			}
			else throw new RangeError("Invalid index: "+index);
		}

		__proto.getVertex=function(index,result){
			if (index >=0 && index < this.numVertices)
			{result=result|| new Point();
				result.setTo(this.mCoords[index *2],this.mCoords[index *2+1]);
				return result;
			}
			else throw new RangeError("Invalid index: "+index);
		}

		__proto.contains=function(x,y){
			var i=0,j=this.numVertices-1;
			var oddNodes=0;
			for (i=0;i<this.numVertices;++i){
				var ix=this.mCoords[i *2];
				var iy=this.mCoords[i *2+1];
				var jx=this.mCoords[j *2];
				var jy=this.mCoords[j *2+1];
				if ((iy < y && jy >=y || jy < y && iy >=y)&& (ix <=x || jx <=x))
					oddNodes ^=uint(ix+(y-iy)/ (jy-iy)*(jx-ix)< x);
				j=i;
			}
			return oddNodes !=0;
		}

		__proto.containsPoint=function(point){
			return this.contains(point.x,point.y);
		}

		__proto.triangulate=function(result){
			if (result==null)result=/*new vector.<>*/[];
			var numVertices=this.numVertices;
			var i=0,restIndexPos=0,numRestIndices=0,resultPos=0;
			if (numVertices < 3)return result;
			Polygon.sRestIndices.length=numVertices;
			for (i=0;i<numVertices;++i)Polygon.sRestIndices[i]=i;
			restIndexPos=0;
			resultPos=result.length;
			numRestIndices=numVertices;
			while (numRestIndices > 3){
				var i0=Polygon.sRestIndices[ restIndexPos % numRestIndices];
				var i1=Polygon.sRestIndices[(restIndexPos+1)% numRestIndices];
				var i2=Polygon.sRestIndices[(restIndexPos+2)% numRestIndices];
				var ax=this.mCoords[2 *i0];
				var ay=this.mCoords[2 *i0+1];
				var bx=this.mCoords[2 *i1];
				var by=this.mCoords[2 *i1+1];
				var cx=this.mCoords[2 *i2];
				var cy=this.mCoords[2 *i2+1];
				var earFound=false;
				if (Polygon.isConvexTriangle(ax,ay,bx,by,cx,cy)){
					earFound=true;
					for (i=3;i < numRestIndices;++i){
						var otherIndex=Polygon.sRestIndices[(restIndexPos+i)% numRestIndices];
						if (Polygon.isPointInTriangle(this.mCoords[2 *otherIndex],this.mCoords[2 *otherIndex+1],
							ax,ay,bx,by,cx,cy)){
							earFound=false;
							break ;
						}
					}
				}
				if (earFound){
					result[resultPos++]=i0;
					result[resultPos++]=i1;
					result[resultPos++]=i2;
					VectorUtil.removeUnsignedIntAt(Polygon.sRestIndices,(restIndexPos+1)% numRestIndices);
					numRestIndices--;
					restIndexPos=0;
				}
				else{
					restIndexPos++;
					if (restIndexPos==numRestIndices)break ;
				}
			}
			result[resultPos++]=Polygon.sRestIndices[0];
			result[resultPos++]=Polygon.sRestIndices[1];
			result[resultPos]=Polygon.sRestIndices[2];
			return result;
		}

		__proto.copyToVertexData=function(target,targetIndex){
			(targetIndex===void 0)&& (targetIndex=0);
			var requiredTargetLength=targetIndex+this.numVertices;
			if (target.numVertices < requiredTargetLength)
				target.numVertices=requiredTargetLength;
			this.copyToVector(target.rawData,
			targetIndex */*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8,
			/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8-2);
		}

		__proto.copyToVector=function(target,targetIndex,stride){
			(targetIndex===void 0)&& (targetIndex=0);
			(stride===void 0)&& (stride=0);
			var numVertices=this.numVertices;
			for (var i=0;i<numVertices;++i){
				target[targetIndex++]=this.mCoords[i *2];
				target[targetIndex++]=this.mCoords[i *2+1];
				targetIndex+=stride;
			}
		}

		__proto.toString=function(){
			var result="[Polygon \n";
			var numPoints=this.numVertices;
			for (var i=0;i<numPoints;++i){
				result+="  [Vertex "+i+": "+
				"x="+this.mCoords[i *2].toFixed(1)+", "+
				"y="+this.mCoords[i *2+1].toFixed(1)+"]"+
				(i==numPoints-1 ? "\n" :",\n");
			}
			return result+"]";
		}

		__getset(0,__proto,'isSimple',function(){
			var numCoords=this.mCoords.length;
			if (numCoords <=6)return true;
			for (var i=0;i<numCoords;i+=2){
				var ax=this.mCoords[ i];
				var ay=this.mCoords[ i+1];
				var bx=this.mCoords[(i+2)% numCoords];
				var by=this.mCoords[(i+3)% numCoords];
				var endJ=i+numCoords-2;
				for (var j=i+4;j<endJ;j+=2){
					var cx=this.mCoords[ j % numCoords];
					var cy=this.mCoords[(j+1)% numCoords];
					var dx=this.mCoords[(j+2)% numCoords];
					var dy=this.mCoords[(j+3)% numCoords];
					if (Polygon.areVectorsIntersecting(ax,ay,bx,by,cx,cy,dx,dy))
						return false;
				}
			}
			return true;
		});

		__getset(0,__proto,'isConvex',function(){
			var numCoords=this.mCoords.length;
			if (numCoords < 6)return true;
			else{
				for (var i=0;i < numCoords;i+=2){
					if (!Polygon.isConvexTriangle(this.mCoords[i],this.mCoords[i+1],
						this.mCoords[(i+2)% numCoords],this.mCoords[(i+3)% numCoords],
					this.mCoords[(i+4)% numCoords],this.mCoords[(i+5)% numCoords])){
						return false;
					}
				}
			}
			return true;
		});

		__getset(0,__proto,'numVertices',function(){
			return this.mCoords.length / 2;
			},function(value){
			var oldLength=this.numVertices;
			this.mCoords.length=value *2;
			if (oldLength < value){
				for (var i=oldLength;i < value;++i)
				this.mCoords[i *2]=this.mCoords[i *2+1]=0.0;
			}
		});

		__getset(0,__proto,'area',function(){
			var area=0;
			var numCoords=this.mCoords.length;
			if (numCoords >=6){
				for (var i=0;i < numCoords;i+=2){
					area+=this.mCoords[i] *this.mCoords[(i+3)% numCoords];
					area-=this.mCoords[i+1] *this.mCoords[(i+2)% numCoords];
				}
			}
			return area / 2.0;
		});

		Polygon.createEllipse=function(x,y,radiusX,radiusY){
			return new Ellipse(x,y,radiusX,radiusY);
		}

		Polygon.createCircle=function(x,y,radius){
			return new Ellipse(x,y,radius,radius);
		}

		Polygon.createRectangle=function(x,y,width,height){
			return new sRectangle(x,y,width,height);
		}

		Polygon.isConvexTriangle=function(ax,ay,bx,by,cx,cy){
			return (ay-by)*(cx-bx)+(bx-ax)*(cy-by)>=0;
		}

		Polygon.isPointInTriangle=function(px,py,ax,ay,bx,by,cx,cy){
			var v0x=cx-ax;
			var v0y=cy-ay;
			var v1x=bx-ax;
			var v1y=by-ay;
			var v2x=px-ax;
			var v2y=py-ay;
			var dot00=v0x *v0x+v0y *v0y;
			var dot01=v0x *v1x+v0y *v1y;
			var dot02=v0x *v2x+v0y *v2y;
			var dot11=v1x *v1x+v1y *v1y;
			var dot12=v1x *v2x+v1y *v2y;
			var invDen=1.0 / (dot00 *dot11-dot01 *dot01);
			var u=(dot11 *dot02-dot01 *dot12)*invDen;
			var v=(dot00 *dot12-dot01 *dot02)*invDen;
			return (u >=0)&& (v >=0)&& (u+v < 1);
		}

		Polygon.areVectorsIntersecting=function(ax,ay,bx,by,cx,cy,dx,dy){
			if ((ax==bx && ay==by)|| (cx==dx && cy==dy))return false;
			var abx=bx-ax;
			var aby=by-ay;
			var cdx=dx-cx;
			var cdy=dy-cy;
			var tDen=cdy *abx-cdx *aby;
			if (tDen==0.0)return false;
			var t=(aby *(cx-ax)-abx *(cy-ay))/ tDen;
			if (t < 0 || t > 1)return false;
			var s=aby ? (cy-ay+t *cdy)/ aby :
			(cx-ax+t *cdx)/ abx;
			return s >=0.0 && s <=1.0;
		}

		__static(Polygon,
		['sRestIndices',function(){return this.sRestIndices=/*new vector.<>*/[];}
		]);
		return Polygon;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/bitmapchar.as
	//class starling.text.BitmapChar
	var BitmapChar=(function(){
		function BitmapChar(id,texture,xOffset,yOffset,xAdvance){
			this.mTexture=null;
			this.mCharID=0;
			this.mXOffset=NaN;
			this.mYOffset=NaN;
			this.mXAdvance=NaN;
			this.mKernings=null;
			this.mCharID=id;
			this.mTexture=texture;
			this.mXOffset=xOffset;
			this.mYOffset=yOffset;
			this.mXAdvance=xAdvance;
			this.mKernings=null;
		}

		__class(BitmapChar,'starling.text.BitmapChar',true);
		var __proto=BitmapChar.prototype;
		__proto.addKerning=function(charID,amount){
			if (this.mKernings==null)
				this.mKernings=new Object();
			this.mKernings[charID]=amount;
		}

		__proto.getKerning=function(charID){
			if (this.mKernings==null || this.mKernings[charID]==undefined)return 0.0;
			else return this.mKernings[charID];
		}

		__proto.createImage=function(){
			return new Image2(this.mTexture);
		}

		__getset(0,__proto,'charID',function(){return this.mCharID;});
		__getset(0,__proto,'texture',function(){return this.mTexture;});
		__getset(0,__proto,'xOffset',function(){return this.mXOffset;});
		__getset(0,__proto,'yOffset',function(){return this.mYOffset;});
		__getset(0,__proto,'xAdvance',function(){return this.mXAdvance;});
		__getset(0,__proto,'width',function(){return this.mTexture.width;});
		__getset(0,__proto,'height',function(){return this.mTexture.height;});
		return BitmapChar;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/bitmapfont.as
	//class starling.text.BitmapFont
	var BitmapFont=(function(){
		function BitmapFont(texture,fontXml){
			this.mTexture=null;
			this.mChars=null;
			this.mName=null;
			this.mSize=NaN;
			this.mLineHeight=NaN;
			this.mBaseline=NaN;
			this.mOffsetX=NaN;
			this.mOffsetY=NaN;
			this.mHelperImage=null;
			if (texture==null && fontXml==null){
				texture=MiniBitmapFont.texture;
				fontXml=MiniBitmapFont.xml;
			}
			else if (texture !=null && fontXml==null){
				throw new Error("fontXml cannot be null!");
			}
			this.mName="unknown";
			this.mLineHeight=this.mSize=this.mBaseline=14;
			this.mOffsetX=this.mOffsetY=0.0;
			this.mTexture=texture;
			this.mChars=new Object();
			this.mHelperImage=new Image2(texture);
			this.parseFontXml(fontXml);
		}

		__class(BitmapFont,'starling.text.BitmapFont',true);
		var __proto=BitmapFont.prototype;
		__proto.dispose=function(){
			if (this.mTexture)
				this.mTexture.dispose();
			for(var i in this.mChars){
				delete this.mChars[i];
			}
		}

		__proto.parseFontXml=function(fontXml){
			var scale=this.mTexture.scale;
			var frame=this.mTexture.frame;
			var frameX=frame ? frame.x :0;
			var frameY=frame ? frame.y :0;
			this.mName=starling.utils.cleanMasterString(fontXml.info.getAttribute('face'));
			this.mSize=parseFloat(fontXml.info.getAttribute('size'))/ scale;
			this.mLineHeight=parseFloat(fontXml.common.getAttribute('lineHeight'))/ scale;
			this.mBaseline=parseFloat(fontXml.common.getAttribute('base'))/ scale;
			if (fontXml.info.getAttribute('smooth').toString()=="0")
				this.smoothing=/*starling.textures.TextureSmoothing.NONE*/"none";
			if (this.mSize <=0){
				console.log("[Starling] Warning: invalid font size in '"+this.mName+"' font.");
				this.mSize=(this.mSize==0.0 ? 16.0 :this.mSize *-1.0);
			}
			if (fontXml.chars){
				var charElement;
				/*for each*/for(var $each_charElement in fontXml.chars.char){
					charElement=fontXml.chars.char[$each_charElement];
					var id=Laya.__parseInt(charElement.getAttribute('id'));
					var xOffset=parseFloat(charElement.getAttribute('xoffset'))/ scale;
					var yOffset=parseFloat(charElement.getAttribute('yoffset'))/ scale;
					var xAdvance=parseFloat(charElement.getAttribute('xadvance'))/ scale;
					var region=new Rectangle();
					region.x=parseFloat(charElement.getAttribute('x'))/ scale+frameX;
					region.y=parseFloat(charElement.getAttribute('y'))/ scale+frameY;
					region.width=parseFloat(charElement.getAttribute('width'))/ scale;
					region.height=parseFloat(charElement.getAttribute('height'))/ scale;
					var texture=Texture1.fromTexture(this.mTexture,region);
					var bitmapChar=new BitmapChar(id,texture,xOffset,yOffset,xAdvance);
					this.addChar(id,bitmapChar);
				}
			}
			if (fontXml.kernings){
				var kerningElement;
				/*for each*/for(var $each_kerningElement in fontXml.kernings.kerning){
					kerningElement=fontXml.kernings.kerning[$each_kerningElement];
					var first=Laya.__parseInt(kerningElement.getAttribute('first'));
					var second=Laya.__parseInt(kerningElement.getAttribute('second'));
					var amount=parseFloat(kerningElement.getAttribute('amount'))/ scale;
					if (second in this.mChars)this.getChar(second).addKerning(first,amount);
				}
			}
		}

		__proto.getChar=function(charID){
			return this.mChars[charID];
		}

		__proto.addChar=function(charID,bitmapChar){
			this.mChars[charID]=bitmapChar;
		}

		__proto.getCharIDs=function(result){
			if (result==null)result=/*new vector.<>*/[];
			for(var key in this.mChars)
			result[result.length]=int(key);
			return result;
		}

		__proto.hasChars=function(text){
			if (text==null)return true;
			var charID=0;
			var numChars=text.length;
			for (var i=0;i<numChars;++i){
				charID=text.charCodeAt(i);
				if (charID !=32 && charID !=9 && charID !=10 &&
					charID !=13 && this.getChar(charID)==null){
					return false;
				}
			}
			return true;
		}

		__proto.createSprite=function(width,height,text,fontSize,color,hAlign,vAlign,autoScale,kerning){
			(fontSize===void 0)&& (fontSize=-1);
			(color===void 0)&& (color=0xffffff);
			(hAlign===void 0)&& (hAlign="center");
			(vAlign===void 0)&& (vAlign="center");
			(autoScale===void 0)&& (autoScale=true);
			(kerning===void 0)&& (kerning=true);
			var charLocations=this.arrangeChars(width,height,text,fontSize,
			hAlign,vAlign,autoScale,kerning);
			var numChars=charLocations.length;
			var sprite=new Sprite1();
			for (var i=0;i<numChars;++i){
				var charLocation=charLocations[i];
				var char=charLocation.char.createImage();
				char.x=charLocation.x;
				char.y=charLocation.y;
				char.scaleX=char.scaleY=charLocation.scale;
				char.color=color;
				sprite.addChild(char);
			}
			CharLocation.rechargePool();
			return sprite;
		}

		__proto.fillQuadBatch=function(quadBatch,width,height,text,fontSize,color,hAlign,vAlign,autoScale,kerning){
			(fontSize===void 0)&& (fontSize=-1);
			(color===void 0)&& (color=0xffffff);
			(hAlign===void 0)&& (hAlign="center");
			(vAlign===void 0)&& (vAlign="center");
			(autoScale===void 0)&& (autoScale=true);
			(kerning===void 0)&& (kerning=true);
			var charLocations=this.arrangeChars(width,height,text,fontSize,
			hAlign,vAlign,autoScale,kerning);
			var numChars=charLocations.length;
			this.mHelperImage.color=color;
			for (var i=0;i<numChars;++i){
				var charLocation=charLocations[i];
				this.mHelperImage.texture=charLocation.char.texture;
				this.mHelperImage.readjustSize();
				this.mHelperImage.x=charLocation.x;
				this.mHelperImage.y=charLocation.y;
				this.mHelperImage.scaleX=this.mHelperImage.scaleY=charLocation.scale;
				quadBatch.addImage(this.mHelperImage);
			}
			CharLocation.rechargePool();
		}

		__proto.arrangeChars=function(width,height,text,fontSize,hAlign,vAlign,autoScale,kerning){
			(fontSize===void 0)&& (fontSize=-1);
			(hAlign===void 0)&& (hAlign="center");
			(vAlign===void 0)&& (vAlign="center");
			(autoScale===void 0)&& (autoScale=true);
			(kerning===void 0)&& (kerning=true);
			if (text==null || text.length==0)return CharLocation.vectorFromPool();
			if (fontSize < 0)fontSize *=-this.mSize;
			var finished=false;
			var charLocation;
			var numChars=0;
			var containerWidth=NaN;
			var containerHeight=NaN;
			var scale=NaN;
			while (!finished){
				BitmapFont.sLines.length=0;
				scale=fontSize / this.mSize;
				containerWidth=width / scale;
				containerHeight=height / scale;
				if (this.mLineHeight <=containerHeight){
					var lastWhiteSpace=-1;
					var lastCharID=-1;
					var currentX=0;
					var currentY=0;
					var currentLine=CharLocation.vectorFromPool();
					numChars=text.length;
					for (var i=0;i<numChars;++i){
						var lineFull=false;
						var charID=text.charCodeAt(i);
						var char=this.getChar(charID);
						if (charID==10 || charID==13){
							lineFull=true;
						}
						else if (char==null){
							console.log("[Starling] Missing character: "+charID);
						}
						else{
							if (charID==32 || charID==9)
								lastWhiteSpace=i;
							if (kerning)
								currentX+=char.getKerning(lastCharID);
							charLocation=CharLocation.instanceFromPool(char);
							charLocation.x=currentX+char.xOffset;
							charLocation.y=currentY+char.yOffset;
							currentLine[currentLine.length]=charLocation;
							currentX+=char.xAdvance;
							lastCharID=charID;
							if (charLocation.x+char.width > containerWidth){
								if (autoScale && lastWhiteSpace==-1)
									break ;
								var numCharsToRemove=lastWhiteSpace==-1 ? 1 :i-lastWhiteSpace;
								var removeIndex=currentLine.length-numCharsToRemove;
								currentLine.splice(removeIndex,numCharsToRemove);
								if (currentLine.length==0)
									break ;
								i-=numCharsToRemove;
								lineFull=true;
							}
						}
						if (i==numChars-1){
							BitmapFont.sLines[BitmapFont.sLines.length]=currentLine;
							finished=true;
						}
						else if (lineFull){
							BitmapFont.sLines[BitmapFont.sLines.length]=currentLine;
							if (lastWhiteSpace==i)
								currentLine.pop();
							if (currentY+2*this.mLineHeight <=containerHeight){
								currentLine=CharLocation.vectorFromPool();
								currentX=0;
								currentY+=this.mLineHeight;
								lastWhiteSpace=-1;
								lastCharID=-1;
							}
							else{
								break ;
							}
						}
					}
				}
				if (autoScale && !finished && fontSize > 3)
					fontSize-=1;
				else
				finished=true;
			};
			var finalLocations=CharLocation.vectorFromPool();
			var numLines=BitmapFont.sLines.length;
			var bottom=currentY+this.mLineHeight;
			var yOffset=0;
			if (vAlign==/*starling.utils.VAlign.BOTTOM*/"bottom")yOffset=containerHeight-bottom;
			else if (vAlign==/*starling.utils.VAlign.CENTER*/"center")yOffset=(containerHeight-bottom)/ 2;
			for (var lineID=0;lineID<numLines;++lineID){
				var line=BitmapFont.sLines[lineID];
				numChars=line.length;
				if (numChars==0)continue ;
				var xOffset=0;
				var lastLocation=line[line.length-1];
				var right=lastLocation.x-lastLocation.char.xOffset
				+lastLocation.char.xAdvance;
				if (hAlign==/*starling.utils.HAlign.RIGHT*/"right")xOffset=containerWidth-right;
				else if (hAlign==/*starling.utils.HAlign.CENTER*/"center")xOffset=(containerWidth-right)/ 2;
				for (var c=0;c<numChars;++c){
					charLocation=line[c];
					charLocation.x=scale *(charLocation.x+xOffset+this.mOffsetX);
					charLocation.y=scale *(charLocation.y+yOffset+this.mOffsetY);
					charLocation.scale=scale;
					if (charLocation.char.width > 0 && charLocation.char.height > 0)
						finalLocations[finalLocations.length]=charLocation;
				}
			}
			return finalLocations;
		}

		__getset(0,__proto,'name',function(){return this.mName;});
		__getset(0,__proto,'size',function(){return this.mSize;});
		__getset(0,__proto,'lineHeight',function(){return this.mLineHeight;},function(value){this.mLineHeight=value;});
		__getset(0,__proto,'smoothing',function(){return this.mHelperImage.smoothing;},function(value){this.mHelperImage.smoothing=value;});
		__getset(0,__proto,'baseline',function(){return this.mBaseline;},function(value){this.mBaseline=value;});
		__getset(0,__proto,'offsetX',function(){return this.mOffsetX;},function(value){this.mOffsetX=value;});
		__getset(0,__proto,'offsetY',function(){return this.mOffsetY;},function(value){this.mOffsetY=value;});
		__getset(0,__proto,'texture',function(){return this.mTexture;});
		BitmapFont.NATIVE_SIZE=6;
		BitmapFont.MINI="mini";
		BitmapFont.CHAR_SPACE=32;
		BitmapFont.CHAR_TAB=9;
		BitmapFont.CHAR_NEWLINE=10;
		BitmapFont.CHAR_CARRIAGE_RETURN=13;
		BitmapFont.sLines=[];
		return BitmapFont;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/charlocation.as
	//class starling.text.CharLocation
	var CharLocation=(function(){
		function CharLocation(char){
			this.char=null;
			this.scale=NaN;
			this.x=NaN;
			this.y=NaN;
			this.reset(char);
		}

		__class(CharLocation,'starling.text.CharLocation',true);
		var __proto=CharLocation.prototype;
		__proto.reset=function(char){
			this.char=char;
			return this;
		}

		CharLocation.instanceFromPool=function(char){
			var instance=CharLocation.sInstancePool.length > 0 ?
			CharLocation.sInstancePool.pop():new CharLocation(char);
			instance.reset(char);
			CharLocation.sInstanceLoan[CharLocation.sInstanceLoan.length]=instance;
			return instance;
		}

		CharLocation.vectorFromPool=function(){
			var vector=CharLocation.sVectorPool.length > 0 ?
			CharLocation.sVectorPool.pop():/*new vector.<>*/[];
			vector.length=0;
			CharLocation.sVectorLoan[CharLocation.sVectorLoan.length]=vector;
			return vector;
		}

		CharLocation.rechargePool=function(){
			var instance;
			var vector;
			while (CharLocation.sInstanceLoan.length > 0){
				instance=CharLocation.sInstanceLoan.pop();
				instance.char=null;
				CharLocation.sInstancePool[CharLocation.sInstancePool.length]=instance;
			}
			while (CharLocation.sVectorLoan.length > 0){
				vector=CharLocation.sVectorLoan.pop();
				vector.length=0;
				CharLocation.sVectorPool[CharLocation.sVectorPool.length]=vector;
			}
		}

		CharLocation.sVectorPool=[];
		CharLocation.sVectorLoan=[];
		__static(CharLocation,
		['sInstancePool',function(){return this.sInstancePool=/*new vector.<>*/[];},'sInstanceLoan',function(){return this.sInstanceLoan=/*new vector.<>*/[];}
		]);
		return CharLocation;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/minibitmapfont.as
	//class starling.text.MiniBitmapFont
	var MiniBitmapFont=(function(){
		function MiniBitmapFont(){};
		__class(MiniBitmapFont,'starling.text.MiniBitmapFont',true);
		__getset(1,MiniBitmapFont,'texture',function(){
			var texture=Texture1.empty(128,64);
			return texture;
		});

		__getset(1,MiniBitmapFont,'xml',function(){return MiniBitmapFont.XML_DATA;});
		MiniBitmapFont.getBitmapData=function(){
			var bmpData=new BitmapData(128,64);
			var bmpBytes=new ByteArray();
			var numBytes=MiniBitmapFont.BITMAP_DATA.length;
			for (var i=0;i<numBytes;++i)
			bmpBytes.writeUnsignedInt(MiniBitmapFont.BITMAP_DATA[i]);
			bmpBytes.uncompress();
			bmpData.setPixels(new Rectangle(0,0,128,64),bmpBytes);
			bmpBytes.clear();
			return bmpData;
		}

		MiniBitmapFont.BITMAP_WIDTH=128;
		MiniBitmapFont.BITMAP_HEIGHT=64;
		__static(MiniBitmapFont,
		['BITMAP_DATA',function(){return this.BITMAP_DATA=[
			2027613533,3413039936,202148514,2266925598,4206886452,4286853117,2034947,
			3202703399,352977282,2957757964,3113652880,2158068882,1468709156,2268063717,
			2779310143,2101025806,3416509055,4215794539,3602168838,1038056207,1932393374,
			3182285627,3086802234,1741291262,2017257123,3395280843,984074419,3049693147,
			3986077023,1055013549,1806563255,1754714962,1577746187,1124058786,3888759258,
			2482229043,2916583666,3743065328,866060213,1695195001,2401582068,3113347901,
			2616521596,1053798161,2093370968,4229025683,560451479,854767518,2610241322,
			4279041348,4181572480,4031244973,587139110,1081376765,962217926,783603325,
			3605526425,4102001916,289204733,2635140255,3453981695,3487854373,2132197241,
			3164775074,4257640328,770238970,144664537,707141570,2934433071,871272893,
			512964596,808491899,481894297,3095982481,3598364156,1710636358,2904016319,
			1751040139,596966466,1363963692,465815609,315567311,4290666159,4086022551,
			179721458,2221734970,3942224988,1519355876,3292323782,3933427230,3314199893,
			3736227348,3846038425,603088884,2677349227,3207069327,3555275967,3063054283,
			3064577213,3412044179,693642210,4280513949,762928717,1802215333,3774849674,
			4221155330,970959395,557220237,2107226136,3509822982,3403284788,4265820019,
			898597576,991077243,2091615904,3334716888,633599866,4218780109,2216000376,
			834870947,2118009742,1362731961,236280636,1274945142,1458729366,797960805,
			3289369720,2103717340,3946406003,2676522889,1624104606,1156993903,3186170404,
			2254499071,1204911924,1314218830,3307086392,2824275959,3839865679,2073394964,
			1873329433,1754205930,1528429545,1631106062,2263272465,4220497047,3522893765,
			3641376303,707451487,3452496787,1390653868,2620555793,1027328684,3419683476,
			3662193703,765701986,3808279132,786403271,3824435837,713234896,4261856399,
			3471930731,3993492879,1447960461,1398434593,1914230187,2398643285,4156374464,
			3859339207,3220700061,3373248762,3186030434,1315917060,2809852481,4008553903,
			4105611953,1599499652,3513857591,877854499,4198259455,3648560077,2838035419,
			3255594190,2465578457,4263505201,534904657,2889261598,1358214576,1069250354,
			3870010557,2628896583,3448610878,442343309,1024736866,4015119133,3250867279,
			1513359261,2442089596,1944476762,735490552,426990058,4234106111,1204305707,
			3330995265,2398649368,4221048123,1724669255,3801115709,3489328790,3896402933,
			3696936939,2836983295,3656750393,3349724512,3810416287,3654997608,4284455103,
			2294939563,4207697932,642748805,2476981639,2319419898,572956615,3833238940,
			964924880,2081600351,3572458416,2056247513,1951368808,2133449703,2783728628,
			512866577,913279200,1678129016,3488578991,3373952929,2562996951,3666058925,
			1664169178,1943591935,750675303,154399903,2571590890,852654952,4117307766,
			1971649621,4180195820,1222535348,4283953215,2880662236,2717410980,1175907705,
			1157322027,505963121,2631540616,3661227656,3591803353,2624126821,1948662907,
			3596065103,1147387734,256773959,1173572460,2361957471,4210876076,3080180620,
			3464801210,3821654259,1465302035,2851185457,3143266144,3793180414,3368833103,
			4274670712,3473819108,3487569332,773123355,1618635668,2570176190,2075248691,
			1740805534,288646743,1837597401,603556968,3182536872,673184603,3088757053,
			2897054404,3192651316,2885335802,1057233368,1118437241,4182126463,3110464775,
			3313191614,2360987274,735505357,2992631425,2360928811,4187834527,279183208,
			1586420003,1174008423,4062987589,1162167621,1162167621,1162167621,1162167621,
			1174119799,787274608];},'XML_DATA',function(){return this.XML_DATA=new XML(
			'<font>'+
			'<info face="mini" size="8" bold="0" italic="0" smooth="0"/>'+
			'<common lineHeight="8" base="7" scaleW="128" scaleH="64" pages="1" packed="0"/>'+
			'<chars count="191">'+
			'<char id="195" x="1" y="1" width="5" height="9" xoffset="0" yoffset="-2" xadvance="6"/>'+
			'<char id="209" x="7" y="1" width="5" height="9" xoffset="0" yoffset="-2" xadvance="6"/>'+
			'<char id="213" x="13" y="1" width="5" height="9" xoffset="0" yoffset="-2" xadvance="6"/>'+
			'<char id="253" x="19" y="1" width="4" height="9" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="255" x="24" y="1" width="4" height="9" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="192" x="29" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="193" x="35" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="194" x="41" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="197" x="47" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="200" x="53" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="201" x="59" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="202" x="65" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="210" x="71" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="211" x="77" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="212" x="83" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="217" x="89" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="218" x="95" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="219" x="101" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="221" x="107" y="1" width="5" height="8" xoffset="0" yoffset="-1" xadvance="6"/>'+
			'<char id="206" x="113" y="1" width="3" height="8" xoffset="-1" yoffset="-1" xadvance="2"/>'+
			'<char id="204" x="117" y="1" width="2" height="8" xoffset="-1" yoffset="-1" xadvance="2"/>'+
			'<char id="205" x="120" y="1" width="2" height="8" xoffset="0" yoffset="-1" xadvance="2"/>'+
			'<char id="36"  x="1" y="11" width="5" height="7" xoffset="0" yoffset="1" xadvance="6"/>'+
			'<char id="196" x="7" y="11" width="5" height="7" xoffset="0" yoffset="0" xadvance="6"/>'+
			'<char id="199" x="13" y="11" width="5" height="7" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="203" x="19" y="11" width="5" height="7" xoffset="0" yoffset="0" xadvance="6"/>'+
			'<char id="214" x="25" y="11" width="5" height="7" xoffset="0" yoffset="0" xadvance="6"/>'+
			'<char id="220" x="31" y="11" width="5" height="7" xoffset="0" yoffset="0" xadvance="6"/>'+
			'<char id="224" x="37" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="225" x="42" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="226" x="47" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="227" x="52" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="232" x="57" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="233" x="62" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="234" x="67" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="235" x="72" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="241" x="77" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="242" x="82" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="243" x="87" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="244" x="92" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="245" x="97" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="249" x="102" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="250" x="107" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="251" x="112" y="11" width="4" height="7" xoffset="0" yoffset="0" xadvance="5"/>'+
			'<char id="254" x="117" y="11" width="4" height="7" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="123" x="122" y="11" width="3" height="7" xoffset="0" yoffset="1" xadvance="4"/>'+
			'<char id="125" x="1" y="19" width="3" height="7" xoffset="0" yoffset="1" xadvance="4"/>'+
			'<char id="167" x="5" y="19" width="3" height="7" xoffset="0" yoffset="1" xadvance="4"/>'+
			'<char id="207" x="9" y="19" width="3" height="7" xoffset="-1" yoffset="0" xadvance="2"/>'+
			'<char id="106" x="13" y="19" width="2" height="7" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="40" x="16" y="19" width="2" height="7" xoffset="0" yoffset="1" xadvance="3"/>'+
			'<char id="41" x="19" y="19" width="2" height="7" xoffset="0" yoffset="1" xadvance="3"/>'+
			'<char id="91" x="22" y="19" width="2" height="7" xoffset="0" yoffset="1" xadvance="3"/>'+
			'<char id="93" x="25" y="19" width="2" height="7" xoffset="0" yoffset="1" xadvance="3"/>'+
			'<char id="124" x="28" y="19" width="1" height="7" xoffset="1" yoffset="1" xadvance="4"/>'+
			'<char id="81" x="30" y="19" width="5" height="6" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="163" x="36" y="19" width="5" height="6" xoffset="0" yoffset="1" xadvance="6"/>'+
			'<char id="177" x="42" y="19" width="5" height="6" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="181" x="48" y="19" width="5" height="6" xoffset="0" yoffset="3" xadvance="6"/>'+
			'<char id="103" x="54" y="19" width="4" height="6" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="112" x="59" y="19" width="4" height="6" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="113" x="64" y="19" width="4" height="6" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="121" x="69" y="19" width="4" height="6" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="162" x="74" y="19" width="4" height="6" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="228" x="79" y="19" width="4" height="6" xoffset="0" yoffset="1" xadvance="5"/>'+
			'<char id="229" x="84" y="19" width="4" height="6" xoffset="0" yoffset="1" xadvance="5"/>'+
			'<char id="231" x="89" y="19" width="4" height="6" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="240" x="94" y="19" width="4" height="6" xoffset="0" yoffset="1" xadvance="5"/>'+
			'<char id="246" x="99" y="19" width="4" height="6" xoffset="0" yoffset="1" xadvance="5"/>'+
			'<char id="252" x="104" y="19" width="4" height="6" xoffset="0" yoffset="1" xadvance="5"/>'+
			'<char id="238" x="109" y="19" width="3" height="6" xoffset="-1" yoffset="1" xadvance="2"/>'+
			'<char id="59" x="113" y="19" width="2" height="6" xoffset="0" yoffset="3" xadvance="4"/>'+
			'<char id="236" x="116" y="19" width="2" height="6" xoffset="-1" yoffset="1" xadvance="2"/>'+
			'<char id="237" x="119" y="19" width="2" height="6" xoffset="0" yoffset="1" xadvance="2"/>'+
			'<char id="198" x="1" y="27" width="9" height="5" xoffset="0" yoffset="2" xadvance="10"/>'+
			'<char id="190" x="11" y="27" width="8" height="5" xoffset="0" yoffset="2" xadvance="9"/>'+
			'<char id="87" x="20" y="27" width="7" height="5" xoffset="0" yoffset="2" xadvance="8"/>'+
			'<char id="188" x="28" y="27" width="7" height="5" xoffset="0" yoffset="2" xadvance="8"/>'+
			'<char id="189" x="36" y="27" width="7" height="5" xoffset="0" yoffset="2" xadvance="8"/>'+
			'<char id="38" x="44" y="27" width="6" height="5" xoffset="0" yoffset="2" xadvance="7"/>'+
			'<char id="164" x="51" y="27" width="6" height="5" xoffset="0" yoffset="2" xadvance="7"/>'+
			'<char id="208" x="58" y="27" width="6" height="5" xoffset="0" yoffset="2" xadvance="7"/>'+
			'<char id="8364" x="65" y="27" width="6" height="5" xoffset="0" yoffset="2" xadvance="7"/>'+
			'<char id="65" x="72" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="66" x="78" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="67" x="84" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="68" x="90" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="69" x="96" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="70" x="102" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="71" x="108" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="72" x="114" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="75" x="120" y="27" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="77" x="1" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="78" x="7" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="79" x="13" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="80" x="19" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="82" x="25" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="83" x="31" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="84" x="37" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="85" x="43" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="86" x="49" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="88" x="55" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="89" x="61" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="90" x="67" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="50" x="73" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="51" x="79" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="52" x="85" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="53" x="91" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="54" x="97" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="56" x="103" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="57" x="109" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="48" x="115" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="47" x="121" y="33" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="64" x="1" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="92" x="7" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="37" x="13" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="43" x="19" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="35" x="25" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="42" x="31" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="165" x="37" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="169" x="43" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="174" x="49" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="182" x="55" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="216" x="61" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="247" x="67" y="39" width="5" height="5" xoffset="0" yoffset="2" xadvance="6"/>'+
			'<char id="74" x="73" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="76" x="78" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="98" x="83" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="100" x="88" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="104" x="93" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="107" x="98" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="55" x="103" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="63" x="108" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="191" x="113" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="222" x="118" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="223" x="123" y="39" width="4" height="5" xoffset="0" yoffset="2" xadvance="5"/>'+
			'<char id="116" x="1" y="45" width="3" height="5" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="60" x="5" y="45" width="3" height="5" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="62" x="9" y="45" width="3" height="5" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="170" x="13" y="45" width="3" height="5" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="186" x="17" y="45" width="3" height="5" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="239" x="21" y="45" width="3" height="5" xoffset="-1" yoffset="2" xadvance="2"/>'+
			'<char id="102" x="25" y="45" width="2" height="5" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="49" x="28" y="45" width="2" height="5" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="73" x="31" y="45" width="1" height="5" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="105" x="33" y="45" width="1" height="5" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="108" x="35" y="45" width="1" height="5" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="33" x="37" y="45" width="1" height="5" xoffset="1" yoffset="2" xadvance="3"/>'+
			'<char id="161" x="39" y="45" width="1" height="5" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="166" x="41" y="45" width="1" height="5" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="109" x="43" y="45" width="7" height="4" xoffset="0" yoffset="3" xadvance="8"/>'+
			'<char id="119" x="51" y="45" width="7" height="4" xoffset="0" yoffset="3" xadvance="8"/>'+
			'<char id="230" x="59" y="45" width="7" height="4" xoffset="0" yoffset="3" xadvance="8"/>'+
			'<char id="97" x="67" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="99" x="72" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="101" x="77" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="110" x="82" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="111" x="87" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="115" x="92" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="117" x="97" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="118" x="102" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="120" x="107" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="122" x="112" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="215" x="117" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="248" x="122" y="45" width="4" height="4" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="114" x="1" y="51" width="3" height="4" xoffset="0" yoffset="3" xadvance="4"/>'+
			'<char id="178" x="5" y="51" width="3" height="4" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="179" x="9" y="51" width="3" height="4" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="185" x="13" y="51" width="1" height="4" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="61" x="15" y="51" width="5" height="3" xoffset="0" yoffset="3" xadvance="6"/>'+
			'<char id="171" x="21" y="51" width="5" height="3" xoffset="0" yoffset="3" xadvance="6"/>'+
			'<char id="172" x="27" y="51" width="5" height="3" xoffset="0" yoffset="4" xadvance="6"/>'+
			'<char id="187" x="33" y="51" width="5" height="3" xoffset="0" yoffset="3" xadvance="6"/>'+
			'<char id="176" x="39" y="51" width="3" height="3" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="44" x="43" y="51" width="2" height="3" xoffset="0" yoffset="6" xadvance="3"/>'+
			'<char id="58" x="46" y="51" width="1" height="3" xoffset="1" yoffset="3" xadvance="4"/>'+
			'<char id="94" x="48" y="51" width="4" height="2" xoffset="-1" yoffset="2" xadvance="4"/>'+
			'<char id="126" x="53" y="51" width="4" height="2" xoffset="0" yoffset="3" xadvance="5"/>'+
			'<char id="34" x="58" y="51" width="3" height="2" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="96" x="62" y="51" width="2" height="2" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="180" x="65" y="51" width="2" height="2" xoffset="0" yoffset="2" xadvance="3"/>'+
			'<char id="184" x="68" y="51" width="2" height="2" xoffset="0" yoffset="7" xadvance="3"/>'+
			'<char id="39" x="71" y="51" width="1" height="2" xoffset="0" yoffset="2" xadvance="2"/>'+
			'<char id="95" x="73" y="51" width="5" height="1" xoffset="0" yoffset="7" xadvance="6"/>'+
			'<char id="45" x="79" y="51" width="4" height="1" xoffset="0" yoffset="4" xadvance="5"/>'+
			'<char id="173" x="84" y="51" width="4" height="1" xoffset="0" yoffset="4" xadvance="5"/>'+
			'<char id="168" x="89" y="51" width="3" height="1" xoffset="1" yoffset="2" xadvance="5"/>'+
			'<char id="175" x="93" y="51" width="3" height="1" xoffset="0" yoffset="2" xadvance="4"/>'+
			'<char id="46" x="97" y="51" width="1" height="1" xoffset="0" yoffset="6" xadvance="2"/>'+
			'<char id="183" x="99" y="51" width="1" height="1" xoffset="0" yoffset="4" xadvance="2"/>'+
			'<char id="32" x="6" y="56" width="0" height="0" xoffset="0" yoffset="127" xadvance="3"/>'+
			'</chars>'+
			'</font>');}
		]);
		return MiniBitmapFont;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/textfieldautosize.as
	//class starling.text.TextFieldAutoSize
	var TextFieldAutoSize1=(function(){
		function TextFieldAutoSize(){throw new AbstractClassError();}
		__class(TextFieldAutoSize,'starling.text.TextFieldAutoSize',true,null,'TextFieldAutoSize1');
		TextFieldAutoSize.NONE="none";
		TextFieldAutoSize.HORIZONTAL="horizontal";
		TextFieldAutoSize.VERTICAL="vertical";
		TextFieldAutoSize.BOTH_DIRECTIONS="bothDirections";
		return TextFieldAutoSize;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/atfdata.as
	//class starling.textures.AtfData
	var AtfData=(function(){
		function AtfData(data){
			this.mFormat=null;
			this.mWidth=0;
			this.mHeight=0;
			this.mNumTextures=0;
			this.mIsCubeMap=false;
			this.mData=null;
			if (!AtfData.isAtfData(data))throw new Error("Invalid ATF data");
			if (data[6]==255)data.position=12;
			else data.position=6;
			var format=data.readUnsignedByte();
			switch (format & 0x7f){
				case 0:
				case 1:this.mFormat=/*iflash.display3D.Context3DTextureFormat.BGRA*/"bgra";break ;
				case 2:
				case 3:this.mFormat=/*iflash.display3D.Context3DTextureFormat.COMPRESSED*/"compressed";break ;
				case 4:
				case 5:this.mFormat="compressedAlpha";break ;
				default :throw new Error("Invalid ATF format");
				}
			this.mWidth=Math.pow(2,data.readUnsignedByte());
			this.mHeight=Math.pow(2,data.readUnsignedByte());
			this.mNumTextures=data.readUnsignedByte();
			this.mIsCubeMap=(format & 0x80)!=0;
			this.mData=data;
			if (data[5] !=0 && data[6]==255){
				var emptyMipmaps=(data[5] & 0x01)==1;
				var numTextures=data[5] >> 1 & 0x7f;
				this.mNumTextures=emptyMipmaps ? 1 :numTextures;
			}
		}

		__class(AtfData,'starling.textures.AtfData',true);
		var __proto=AtfData.prototype;
		__getset(0,__proto,'format',function(){return this.mFormat;});
		__getset(0,__proto,'width',function(){return this.mWidth;});
		__getset(0,__proto,'data',function(){return this.mData;});
		__getset(0,__proto,'height',function(){return this.mHeight;});
		__getset(0,__proto,'numTextures',function(){return this.mNumTextures;});
		__getset(0,__proto,'isCubeMap',function(){return this.mIsCubeMap;});
		AtfData.isAtfData=function(data){
			if (data.length < 3)return false;
			else{
				var signature=String.fromCharCode(data[0],data[1],data[2]);
				return signature=="ATF";
			}
		}

		return AtfData;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/texture.as
	//class starling.textures.Texture
	var Texture1=(function(){
		function Texture(){
			if (Capabilities.isDebugger &&
				iflash.utils.getQualifiedClassName(this)=="starling.textures::Texture"){
				throw new AbstractClassError();
			}
		}

		__class(Texture,'starling.textures.Texture',true,null,'Texture1');
		var __proto=Texture.prototype;
		__proto.dispose=function(){}
		__proto.adjustVertexData=function(vertexData,vertexID,count){}
		__proto.adjustTexCoords=function(texCoords,startIndex,stride,count){
			(startIndex===void 0)&& (startIndex=0);
			(stride===void 0)&& (stride=0);
			(count===void 0)&& (count=-1);
		}

		__getset(0,__proto,'frame',LAYAFNNULL/*function(){return null;}*/);
		__getset(0,__proto,'root',LAYAFNNULL/*function(){return null;}*/);
		__getset(0,__proto,'repeat',LAYAFNFALSE/*function(){return false;}*/);
		__getset(0,__proto,'format',function(){return /*iflash.display3D.Context3DTextureFormat.BGRA*/"bgra";});
		__getset(0,__proto,'scale',function(){return 1.0;});
		__getset(0,__proto,'width',LAYAFN0/*function(){return 0;}*/);
		__getset(0,__proto,'height',LAYAFN0/*function(){return 0;}*/);
		__getset(0,__proto,'base',LAYAFNNULL/*function(){return null;}*/);
		__getset(0,__proto,'nativeWidth',LAYAFN0/*function(){return 0;}*/);
		__getset(0,__proto,'nativeHeight',LAYAFN0/*function(){return 0;}*/);
		__getset(0,__proto,'mipMapping',LAYAFNFALSE/*function(){return false;}*/);
		__getset(0,__proto,'premultipliedAlpha',LAYAFNFALSE/*function(){return false;}*/);
		__getset(1,Texture,'maxSize',function(){
			var target=Starling.current;
			var profile=target ? target.profile :"baseline";
			if (profile=="baseline" || profile=="baselineConstrained")
				return 2048;
			else
			return 4096;
		});

		Texture.fromData=function(data,options){
			var texture=null;
			if ((data instanceof iflash.display.Bitmap ))data=(data).bitmapData;
			if (options==null)options=new TextureOptions();
			if (Laya.__isClass(data)){
				texture=Texture.fromEmbeddedAsset(data,
				options.mipMapping,options.optimizeForRenderToTexture,options.scale,
				options.format,options.repeat);
			}
			else if ((data instanceof iflash.display.BitmapData )){
				texture=Texture.fromBitmapData(data,
				options.mipMapping,options.optimizeForRenderToTexture,options.scale,
				options.format,options.repeat);
			}
			else if ((data instanceof iflash.utils.ByteArray )){
				texture=Texture.fromAtfData(data,
				options.scale,options.mipMapping,options.onReady,options.repeat);
			}
			else
			throw new Error("Unsupported 'data' type: "+iflash.utils.getQualifiedClassName(data));
			return texture;
		}

		Texture.fromEmbeddedAsset=function(assetClass,mipMapping,optimizeForRenderToTexture,scale,format,repeat){
			(mipMapping===void 0)&& (mipMapping=true);
			(optimizeForRenderToTexture===void 0)&& (optimizeForRenderToTexture=false);
			(scale===void 0)&& (scale=1);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			var texture;
			var asset=new assetClass();
			if ((asset instanceof iflash.display.Bitmap )){
				texture=starling.textures.Texture.fromBitmap(asset,mipMapping,
				optimizeForRenderToTexture,scale,format,repeat);
				texture.root.onRestore=function (){
					texture.root.uploadBitmap(new assetClass());
				};
			}
			else if ((asset instanceof iflash.utils.ByteArray )){
				texture=starling.textures.Texture.fromAtfData(asset,scale,mipMapping,null,repeat);
				texture.root.onRestore=function (){
					texture.root.uploadAtfData(new assetClass());
				};
			}
			else{
				throw new Error("Invalid asset type: "+iflash.utils.getQualifiedClassName(asset));
			}
			asset=null;
			return texture;
		}

		Texture.fromBitmap=function(bitmap,generateMipMaps,optimizeForRenderToTexture,scale,format,repeat){
			(generateMipMaps===void 0)&& (generateMipMaps=true);
			(optimizeForRenderToTexture===void 0)&& (optimizeForRenderToTexture=false);
			(scale===void 0)&& (scale=1);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			if (bitmap==null){
				throw new Error("Null Texture Data find...");
				return null;
			}
			if ((bitmap instanceof iflash.display.Bitmap ))
				bitmap=bitmap.bitmapData.getCanvas();
			return Texture.fromBitmapData(bitmap,generateMipMaps,optimizeForRenderToTexture,scale,format,repeat);
		}

		Texture.fromBitmapData=function(data,generateMipMaps,optimizeForRenderToTexture,scale,format,repeat){
			(generateMipMaps===void 0)&& (generateMipMaps=true);
			(optimizeForRenderToTexture===void 0)&& (optimizeForRenderToTexture=false);
			(scale===void 0)&& (scale=1);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			if (data==null){
				throw new Error("Null Texture Data find...");
				return null;
			}
			if ((data instanceof iflash.display.BitmapData ))
				data=data.getCanvas();
			var texture=starling.textures.Texture.empty(data.width / scale,data.height / scale,true,
			generateMipMaps,optimizeForRenderToTexture,scale,
			format,repeat);
			texture.root.uploadBitmapData(data);
			return texture;
		}

		Texture.fromAtfData=function(data,scale,useMipMaps,async,repeat){
			(scale===void 0)&& (scale=1);
			(useMipMaps===void 0)&& (useMipMaps=true);
			(repeat===void 0)&& (repeat=false);
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			var atfData=new AtfData(data);
			var nativeTexture=context.createTexture(
			atfData.width,atfData.height,atfData.format,false);
			var concreteTexture=new ConcreteTexture(nativeTexture,atfData.format,
			atfData.width,atfData.height,useMipMaps && atfData.numTextures > 1,
			false,false,scale,repeat);
			concreteTexture.uploadAtfData(data,0,async);
			concreteTexture.onRestore=function (){
				concreteTexture.uploadAtfData(data,0);
			};
			return concreteTexture;
		}

		Texture.fromCamera=function(camera,scale,onComplete){
			(scale===void 0)&& (scale=1);
			return Texture.fromVideoAttachment("Camera",camera,scale,onComplete);
		}

		Texture.fromVideoAttachment=function(type,attachment,scale,onComplete){
			var TEXTURE_READY="textureReady";
			if (!SystemUtil.supportsVideoTexture)
				throw new NotSupportedError("Video Textures are not supported on this platform");
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			var base=context["createVideoTexture"]();
			base["attach"+type](attachment);
			base.addEventListener(TEXTURE_READY,function(event){
				base.removeEventListener(TEXTURE_READY,arguments.callee);
				starling.utils.execute(onComplete,texture);
			});
			var texture=new ConcreteVideoTexture(base,scale);
			texture.onRestore=function (){
				texture.root.attachVideo(type,attachment);
			};
			return texture;
		}

		Texture.fromColor=function(width,height,color,optimizeForRenderToTexture,scale,format){
			(color===void 0)&& (color=0xffffffff);
			(optimizeForRenderToTexture===void 0)&& (optimizeForRenderToTexture=false);
			(scale===void 0)&& (scale=-1);
			(format===void 0)&& (format="bgra");
			var texture=starling.textures.Texture.empty(width,height,true,false,
			optimizeForRenderToTexture,scale,format);
			texture.root.clear(color,Color.getAlpha(color)/ 255.0);
			texture.root.onRestore=function (){
				texture.root.clear(color,Color.getAlpha(color)/ 255.0);
			};
			return texture;
		}

		Texture.empty=function(width,height,premultipliedAlpha,mipMapping,optimizeForRenderToTexture,scale,format,repeat){
			(premultipliedAlpha===void 0)&& (premultipliedAlpha=true);
			(mipMapping===void 0)&& (mipMapping=true);
			(optimizeForRenderToTexture===void 0)&& (optimizeForRenderToTexture=false);
			(scale===void 0)&& (scale=-1);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			if (scale <=0)scale=Starling.contentScaleFactor;
			var actualWidth=0,actualHeight=0;
			var nativeTexture;
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			var origWidth=width *scale;
			var origHeight=height *scale;
			var useRectTexture=!mipMapping && !repeat &&
			Starling.current.profile !="baselineConstrained" &&
			"createRectangleTexture" in context && format.indexOf("compressed")==-1;
			if (useRectTexture){
				actualWidth=Math.ceil(origWidth-0.000000001);
				actualHeight=Math.ceil(origHeight-0.000000001);
				nativeTexture=context["createRectangleTexture"](
				actualWidth,actualHeight,format,optimizeForRenderToTexture);
			}
			else{
				actualWidth=starling.utils.getNextPowerOfTwo(origWidth);
				actualHeight=starling.utils.getNextPowerOfTwo(origHeight);
				nativeTexture||(nativeTexture=context.createTexture(actualWidth,actualHeight,format,
				optimizeForRenderToTexture));
			};
			var concreteTexture=new ConcreteTexture(nativeTexture,format,
			actualWidth,actualHeight,mipMapping,premultipliedAlpha,
			optimizeForRenderToTexture,scale,repeat);
			concreteTexture.onRestore=iflash.method.bind(concreteTexture,concreteTexture.clear);
			if (actualWidth-origWidth < 0.001 && actualHeight-origHeight < 0.001)
				return concreteTexture;
			else
			return new SubTexture(concreteTexture,new Rectangle(0,0,width,height),true);
		}

		Texture.fromConch=function(conchID,width,height,scale,format){
			(scale===void 0)&& (scale=-1);
			(format===void 0)&& (format="bgra");
			if (scale <=0)scale=Starling.contentScaleFactor;
			var texture=starling.textures.Texture.empty(width / scale,height / scale,true,
			false,false,scale,
			format,false);
			texture.root.uploadBitmapData(conchID);
			return texture;
		}

		Texture.fromTexture=function(texture,region,frame,rotated){
			(rotated===void 0)&& (rotated=false);
			return new SubTexture(texture,region,false,frame,rotated);
		}

		return Texture;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/textureatlas.as
	//class starling.textures.TextureAtlas
	var TextureAtlas=(function(){
		function TextureAtlas(texture,atlasXml){
			this.mAtlasTexture=null;
			this.mSubTextures=null;
			this.mSubTextureNames=null;
			this.mSubTextures=new Object();
			this.mAtlasTexture=texture;
			if (atlasXml)
				this.parseAtlasXml(atlasXml);
		}

		__class(TextureAtlas,'starling.textures.TextureAtlas',true);
		var __proto=TextureAtlas.prototype;
		__proto.dispose=function(){
			this.mAtlasTexture.dispose();
		}

		__proto.parseAtlasXml=function(atlasXml){
			var scale=this.mAtlasTexture.scale;
			var region=new Rectangle();
			var frame=new Rectangle();
			var subTexture;
			/*for each*/for(var $each_subTexture in atlasXml.SubTexture){
				subTexture=atlasXml.SubTexture[$each_subTexture];
				var name=starling.utils.cleanMasterString(subTexture.getAttribute('name'));
				var x=parseFloat(subTexture.getAttribute('x'))/ scale;
				var y=parseFloat(subTexture.getAttribute('y'))/ scale;
				var width=parseFloat(subTexture.getAttribute('width'))/ scale;
				var height=parseFloat(subTexture.getAttribute('height'))/ scale;
				var frameX=parseFloat(subTexture.getAttribute('frameX'))/ scale;
				var frameY=parseFloat(subTexture.getAttribute('frameY'))/ scale;
				var frameWidth=parseFloat(subTexture.getAttribute('frameWidth'))/ scale;
				var frameHeight=parseFloat(subTexture.getAttribute('frameHeight'))/ scale;
				var rotated=TextureAtlas.parseBool(subTexture.getAttribute('rotated'));
				region.setTo(x,y,width,height);
				frame.setTo(frameX,frameY,frameWidth,frameHeight);
				if (frameWidth > 0 && frameHeight > 0)
					this.addRegion(name,region,frame,rotated);
				else
				this.addRegion(name,region,null,rotated);
			}
		}

		__proto.getTexture=function(name){
			return this.mSubTextures[name];
		}

		__proto.getTextures=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			if (result==null)result=/*new vector.<>*/[];
			var names=this.getNames(prefix,TextureAtlas.sNames);
			var name;
			/*for each*/for(var $each_name in names){
				name=names[$each_name];
				result[result.length]=this.getTexture(name);
			}
			TextureAtlas.sNames.length=0;
			return result;
		}

		__proto.getNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			var name;
			if (result==null)result=/*new vector.<>*/[];
			if (this.mSubTextureNames==null){
				this.mSubTextureNames=/*new vector.<>*/[];
				for (name in this.mSubTextures)this.mSubTextureNames[this.mSubTextureNames.length]=name;
				this.mSubTextureNames.sort(Array.CASEINSENSITIVE);
			}
			var $each_name;
			/*for each*/for($each_name in this.mSubTextureNames){
				name=this.mSubTextureNames[$each_name];
				if (name.indexOf(prefix)==0)
					result[result.length]=name;
			}
			return result;
		}

		__proto.getRegion=function(name){
			var subTexture=this.mSubTextures[name];
			return subTexture ? subTexture.region :null;
		}

		__proto.getFrame=function(name){
			var subTexture=this.mSubTextures[name];
			return subTexture ? subTexture.frame :null;
		}

		__proto.getRotation=function(name){
			var subTexture=this.mSubTextures[name];
			return subTexture ? subTexture.rotated :false;
		}

		__proto.addRegion=function(name,region,frame,rotated){
			(rotated===void 0)&& (rotated=false);
			this.mSubTextures[name]=new SubTexture(this.mAtlasTexture,region,false,frame,rotated);
			this.mSubTextureNames=null;
		}

		__proto.removeRegion=function(name){
			var subTexture=this.mSubTextures[name];
			if (subTexture)subTexture.dispose();
			delete this.mSubTextures[name];
			this.mSubTextureNames=null;
		}

		__getset(0,__proto,'texture',function(){return this.mAtlasTexture;});
		TextureAtlas.parseBool=function(value){
			if (value==null)return false;
			return value.toLowerCase()=="true";
		}

		__static(TextureAtlas,
		['sNames',function(){return this.sNames=/*new vector.<>*/[];}
		]);
		return TextureAtlas;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/textureoptions.as
	//class starling.textures.TextureOptions
	var TextureOptions=(function(){
		function TextureOptions(scale,mipMapping,format,repeat){
			this.mScale=NaN;
			this.mFormat=null;
			this.mMipMapping=false;
			this.mOptimizeForRenderToTexture=false;
			this.mOnReady=null;
			this.mRepeat=false;
			(scale===void 0)&& (scale=1.0);
			(mipMapping===void 0)&& (mipMapping=false);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			this.mScale=scale;
			this.mFormat=format;
			this.mMipMapping=mipMapping;
			this.mRepeat=repeat;
		}

		__class(TextureOptions,'starling.textures.TextureOptions',true);
		var __proto=TextureOptions.prototype;
		__proto.clone=function(){
			var clone=new TextureOptions(this.mScale,this.mMipMapping,this.mFormat,this.mRepeat);
			clone.mOptimizeForRenderToTexture=this.mOptimizeForRenderToTexture;
			clone.mOnReady=this.mOnReady;
			return clone;
		}

		__getset(0,__proto,'format',function(){return this.mFormat;},function(value){this.mFormat=value;});
		__getset(0,__proto,'onReady',function(){return this.mOnReady;},function(value){this.mOnReady=value;});
		__getset(0,__proto,'repeat',function(){return this.mRepeat;},function(value){this.mRepeat=value;});
		__getset(0,__proto,'scale',function(){return this.mScale;},function(value){
			this.mScale=value > 0 ? value :Starling.contentScaleFactor;
		});

		__getset(0,__proto,'mipMapping',function(){return this.mMipMapping;},function(value){this.mMipMapping=value;});
		__getset(0,__proto,'optimizeForRenderToTexture',function(){return this.mOptimizeForRenderToTexture;},function(value){this.mOptimizeForRenderToTexture=value;});
		return TextureOptions;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/texturesmoothing.as
	//class starling.textures.TextureSmoothing
	var TextureSmoothing=(function(){
		function TextureSmoothing(){throw new AbstractClassError();}
		__class(TextureSmoothing,'starling.textures.TextureSmoothing',true);
		TextureSmoothing.isValid=function(smoothing){
			return smoothing=="none" || smoothing=="bilinear" || smoothing=="trilinear";
		}

		TextureSmoothing.NONE="none";
		TextureSmoothing.BILINEAR="bilinear";
		TextureSmoothing.TRILINEAR="trilinear";
		return TextureSmoothing;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/arrayutil.as
	//class starling.utils.ArrayUtil
	var ArrayUtil=(function(){
		function ArrayUtil(){throw new AbstractClassError();}
		__class(ArrayUtil,'starling.utils.ArrayUtil',true);
		ArrayUtil.insertAt=function(array,index,object){
			var i=0;
			var length=array.length;
			if (index < 0)index+=length+1;
			if (index < 0)index=0;
			for (i=index-1;i >=length;--i)
			array[i]=null;
			for (i=length;i > index;--i)
			array[i]=array[int(i-1)];
			array[index]=object;
		}

		ArrayUtil.removeAt=function(array,index){
			var i=0;
			var length=array.length;
			if (index < 0)index+=length;
			if (index < 0)index=0;else if (index >=length)index=length-1;
			var object=array[index];
			for (i=index+1;i < length;++i)
			array[int(i-1)]=array[i];
			array.length=length-1;
			return object;
		}

		return ArrayUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/color.as
	//class starling.utils.Color
	var Color=(function(){
		function Color(){throw new AbstractClassError();}
		__class(Color,'starling.utils.Color',true);
		Color.getAlpha=function(color){return (color >> 24)& 0xff;}
		Color.getRed=function(color){return (color >> 16)& 0xff;}
		Color.getGreen=function(color){return (color >> 8)& 0xff;}
		Color.getBlue=function(color){return color & 0xff;}
		Color.rgb=function(red,green,blue){
			return (red << 16)| (green << 8)| blue;
		}

		Color.argb=function(alpha,red,green,blue){
			return (alpha << 24)| (red << 16)| (green << 8)| blue;
		}

		Color.WHITE=0xffffff;
		Color.SILVER=0xc0c0c0;
		Color.GRAY=0x808080;
		Color.BLACK=0x000000;
		Color.RED=0xff0000;
		Color.MAROON=0x800000;
		Color.YELLOW=0xffff00;
		Color.OLIVE=0x808000;
		Color.LIME=0x00ff00;
		Color.GREEN=0x008000;
		Color.AQUA=0x00ffff;
		Color.TEAL=0x008080;
		Color.BLUE=0x0000ff;
		Color.NAVY=0x000080;
		Color.FUCHSIA=0xff00ff;
		Color.PURPLE=0x800080;
		return Color;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/halign.as
	//class starling.utils.HAlign
	var HAlign=(function(){
		function HAlign(){throw new AbstractClassError();}
		__class(HAlign,'starling.utils.HAlign',true);
		HAlign.isValid=function(hAlign){
			return hAlign=="left" || hAlign=="center" || hAlign=="right";
		}

		HAlign.LEFT="left";
		HAlign.CENTER="center";
		HAlign.RIGHT="right";
		return HAlign;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/mathutil.as
	//class starling.utils.MathUtil
	var MathUtil=(function(){
		function MathUtil(){throw new AbstractClassError();}
		__class(MathUtil,'starling.utils.MathUtil',true);
		MathUtil.intersectLineWithXYPlane=function(pointA,pointB,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			var vectorX=pointB.x-pointA.x;
			var vectorY=pointB.y-pointA.y;
			var vectorZ=pointB.z-pointA.z;
			var lambda=-pointA.z / vectorZ;
			resultPoint.x=pointA.x+lambda *vectorX;
			resultPoint.y=pointA.y+lambda *vectorY;
			return resultPoint;
		}

		MathUtil.normalizeAngle=function(angle){
			angle=angle % MathUtil.TWO_PI;
			if (angle <-Math.PI)angle+=MathUtil.TWO_PI;
			if (angle > Math.PI)angle-=MathUtil.TWO_PI;
			return angle;
		}

		MathUtil.clamp=function(value,min,max){
			return value < min ? min :(value > max ? max :value);
		}

		__static(MathUtil,
		['TWO_PI',function(){return this.TWO_PI=Math.PI *2.0;}
		]);
		return MathUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/matrixutil.as
	//class starling.utils.MatrixUtil
	var MatrixUtil1=(function(){
		function MatrixUtil(){throw new AbstractClassError();}
		__class(MatrixUtil,'starling.utils.MatrixUtil',true,null,'MatrixUtil1');
		MatrixUtil.convertTo3D=function(matrix,resultMatrix){
			if (resultMatrix==null)resultMatrix=new Matrix3D();
			MatrixUtil.sRawData[ 0]=matrix.a;
			MatrixUtil.sRawData[ 1]=matrix.b;
			MatrixUtil.sRawData[ 4]=matrix.c;
			MatrixUtil.sRawData[ 5]=matrix.d;
			MatrixUtil.sRawData[12]=matrix.tx;
			MatrixUtil.sRawData[13]=matrix.ty;
			resultMatrix.copyRawDataFrom(MatrixUtil.sRawData);
			return resultMatrix;
		}

		MatrixUtil.convertTo2D=function(matrix3D,resultMatrix){
			if (resultMatrix==null)resultMatrix=new Matrix();
			matrix3D.copyRawDataTo(MatrixUtil.sRawData2);
			resultMatrix.a=MatrixUtil.sRawData2[ 0];
			resultMatrix.b=MatrixUtil.sRawData2[ 1];
			resultMatrix.c=MatrixUtil.sRawData2[ 4];
			resultMatrix.d=MatrixUtil.sRawData2[ 5];
			resultMatrix.tx=MatrixUtil.sRawData2[12];
			resultMatrix.ty=MatrixUtil.sRawData2[13];
			return resultMatrix;
		}

		MatrixUtil.transformPoint=function(matrix,point,resultPoint){
			return MatrixUtil.transformCoords(matrix,point.x,point.y,resultPoint);
		}

		MatrixUtil.transformPoint3D=function(matrix,point,resultPoint){
			return MatrixUtil.transformCoords3D(matrix,point.x,point.y,point.z,resultPoint);
		}

		MatrixUtil.transformCoords=function(matrix,x,y,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			resultPoint.x=matrix.a *x+matrix.c *y+matrix.tx;
			resultPoint.y=matrix.d *y+matrix.b *x+matrix.ty;
			return resultPoint;
		}

		MatrixUtil.transformCoords3D=function(matrix,x,y,z,resultPoint){
			if (resultPoint==null)resultPoint=new Vector3D();
			matrix.copyRawDataTo(MatrixUtil.sRawData2);
			resultPoint.x=x *MatrixUtil.sRawData2[0]+y *MatrixUtil.sRawData2[4]+z *MatrixUtil.sRawData2[ 8]+MatrixUtil.sRawData2[12];
			resultPoint.y=x *MatrixUtil.sRawData2[1]+y *MatrixUtil.sRawData2[5]+z *MatrixUtil.sRawData2[ 9]+MatrixUtil.sRawData2[13];
			resultPoint.z=x *MatrixUtil.sRawData2[2]+y *MatrixUtil.sRawData2[6]+z *MatrixUtil.sRawData2[10]+MatrixUtil.sRawData2[14];
			resultPoint.w=x *MatrixUtil.sRawData2[3]+y *MatrixUtil.sRawData2[7]+z *MatrixUtil.sRawData2[11]+MatrixUtil.sRawData2[15];
			return resultPoint;
		}

		MatrixUtil.skew=function(matrix,skewX,skewY){
			var sinX=Math.sin(skewX);
			var cosX=Math.cos(skewX);
			var sinY=Math.sin(skewY);
			var cosY=Math.cos(skewY);
			matrix.setTo(matrix.a *cosY-matrix.b *sinX,
			matrix.a *sinY+matrix.b *cosX,
			matrix.c *cosY-matrix.d *sinX,
			matrix.c *sinY+matrix.d *cosX,
			matrix.tx *cosY-matrix.ty *sinX,
			matrix.tx *sinY+matrix.ty *cosX);
		}

		MatrixUtil.prependMatrix=function(base,prep){
			base.setTo(base.a *prep.a+base.c *prep.b,
			base.b *prep.a+base.d *prep.b,
			base.a *prep.c+base.c *prep.d,
			base.b *prep.c+base.d *prep.d,
			base.tx+base.a *prep.tx+base.c *prep.ty,
			base.ty+base.b *prep.tx+base.d *prep.ty);
		}

		MatrixUtil.prependTranslation=function(matrix,tx,ty){
			matrix.tx+=matrix.a *tx+matrix.c *ty;
			matrix.ty+=matrix.b *tx+matrix.d *ty;
		}

		MatrixUtil.prependScale=function(matrix,sx,sy){
			matrix.setTo(matrix.a *sx,matrix.b *sx,
			matrix.c *sy,matrix.d *sy,
			matrix.tx,matrix.ty);
		}

		MatrixUtil.prependRotation=function(matrix,angle){
			var sin=Math.sin(angle);
			var cos=Math.cos(angle);
			matrix.setTo(matrix.a *cos+matrix.c *sin,matrix.b *cos+matrix.d *sin,
			matrix.c *cos-matrix.a *sin,matrix.d *cos-matrix.b *sin,
			matrix.tx,matrix.ty);
		}

		MatrixUtil.prependSkew=function(matrix,skewX,skewY){
			var sinX=Math.sin(skewX);
			var cosX=Math.cos(skewX);
			var sinY=Math.sin(skewY);
			var cosY=Math.cos(skewY);
			matrix.setTo(matrix.a *cosY+matrix.c *sinY,
			matrix.b *cosY+matrix.d *sinY,
			matrix.c *cosX-matrix.a *sinX,
			matrix.d *cosX-matrix.b *sinX,
			matrix.tx,matrix.ty);
		}

		__static(MatrixUtil,
		['sRawData',function(){return this.sRawData=
			/*new vector.<>*/[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];},'sRawData2',function(){return this.sRawData2=__newvec(16,0);}
		]);
		return MatrixUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/rectangleutil.as
	//class starling.utils.RectangleUtil
	var RectangleUtil=(function(){
		function RectangleUtil(){throw new AbstractClassError();}
		__class(RectangleUtil,'starling.utils.RectangleUtil',true);
		RectangleUtil.intersect=function(rect1,rect2,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			var left=rect1.x > rect2.x ? rect1.x :rect2.x;
			var right=rect1.right < rect2.right ? rect1.right :rect2.right;
			var top=rect1.y > rect2.y ? rect1.y :rect2.y;
			var bottom=rect1.bottom < rect2.bottom ? rect1.bottom :rect2.bottom;
			if (left > right || top > bottom)
				resultRect.setEmpty();
			else
			resultRect.setTo(left,top,right-left,bottom-top);
			return resultRect;
		}

		RectangleUtil.fit=function(rectangle,into,scaleMode,pixelPerfect,resultRect){
			(scaleMode===void 0)&& (scaleMode="showAll");
			(pixelPerfect===void 0)&& (pixelPerfect=false);
			if (!ScaleMode.isValid(scaleMode))throw new Error("Invalid scaleMode: "+scaleMode);
			if (resultRect==null)resultRect=new Rectangle();
			var width=rectangle.width;
			var height=rectangle.height;
			var factorX=into.width / width;
			var factorY=into.height / height;
			var factor=1.0;
			if (scaleMode==/*starling.utils.ScaleMode.SHOW_ALL*/"showAll"){
				factor=factorX < factorY ? factorX :factorY;
				if (pixelPerfect)factor=RectangleUtil.nextSuitableScaleFactor(factor,false);
			}
			else if (scaleMode==/*starling.utils.ScaleMode.NO_BORDER*/"noBorder"){
				factor=factorX > factorY ? factorX :factorY;
				if (pixelPerfect)factor=RectangleUtil.nextSuitableScaleFactor(factor,true);
			}
			width *=factor;
			height *=factor;
			resultRect.setTo(
			into.x+(into.width-width)/ 2,
			into.y+(into.height-height)/ 2,
			width,height);
			return resultRect;
		}

		RectangleUtil.nextSuitableScaleFactor=function(factor,up){
			var divisor=1.0;
			if (up){
				if (factor >=0.5)return Math.ceil(factor);
				else{
					while (1.0 / (divisor+1)> factor)
					++divisor;
				}
			}
			else{
				if (factor >=1.0)return Math.floor(factor);
				else{
					while (1.0 / divisor > factor)
					++divisor;
				}
			}
			return 1.0 / divisor;
		}

		RectangleUtil.normalize=function(rect){
			if (rect.width < 0){
				rect.width=-rect.width;
				rect.x-=rect.width;
			}
			if (rect.height < 0){
				rect.height=-rect.height;
				rect.y-=rect.height;
			}
		}

		RectangleUtil.getBounds=function(rectangle,transformationMatrix,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			var minX=Number.MAX_VALUE,maxX=-Number.MAX_VALUE;
			var minY=Number.MAX_VALUE,maxY=-Number.MAX_VALUE;
			for (var i=0;i<4;++i){
				MatrixUtil1.transformCoords(transformationMatrix,
				RectangleUtil.sPositions[i].x *rectangle.width,RectangleUtil.sPositions[i].y *rectangle.height,
				RectangleUtil.sHelperPoint);
				if (minX > RectangleUtil.sHelperPoint.x)minX=RectangleUtil.sHelperPoint.x;
				if (maxX < RectangleUtil.sHelperPoint.x)maxX=RectangleUtil.sHelperPoint.x;
				if (minY > RectangleUtil.sHelperPoint.y)minY=RectangleUtil.sHelperPoint.y;
				if (maxY < RectangleUtil.sHelperPoint.y)maxY=RectangleUtil.sHelperPoint.y;
			}
			resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			return resultRect;
		}

		__static(RectangleUtil,
		['sHelperPoint',function(){return this.sHelperPoint=new Point();},'sPositions',function(){return this.sPositions=
			/*new vector.<>*/[ new Point(0,0),new Point(1,0),new Point(0,1),new Point(1,1)];}
		]);
		return RectangleUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/scalemode.as
	//class starling.utils.ScaleMode
	var ScaleMode=(function(){
		function ScaleMode(){throw new AbstractClassError();}
		__class(ScaleMode,'starling.utils.ScaleMode',true);
		ScaleMode.isValid=function(scaleMode){
			return scaleMode=="none" || scaleMode=="noBorder" || scaleMode=="showAll";
		}

		ScaleMode.NONE="none";
		ScaleMode.NO_BORDER="noBorder";
		ScaleMode.SHOW_ALL="showAll";
		return ScaleMode;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/systemutil.as
	//class starling.utils.SystemUtil
	var SystemUtil=(function(){
		function SystemUtil(){throw new AbstractClassError();}
		__class(SystemUtil,'starling.utils.SystemUtil',true);
		__getset(1,SystemUtil,'isApplicationActive',function(){
			SystemUtil.initialize();
			return SystemUtil.sApplicationActive;
		});

		__getset(1,SystemUtil,'isAIR',function(){
			SystemUtil.initialize();
			return SystemUtil.sAIR;
		});

		__getset(1,SystemUtil,'isDesktop',function(){
			SystemUtil.initialize();
			var t_regExp=new RegExp("(WIN|MAC|LNX)");
			return t_regExp.exec(SystemUtil.sPlatform)!=null;
		});

		__getset(1,SystemUtil,'platform',function(){
			SystemUtil.initialize();
			return SystemUtil.sPlatform;
		});

		__getset(1,SystemUtil,'supportsDepthAndStencil',function(){
			return SystemUtil.sSupportsDepthAndStencil;
		});

		__getset(1,SystemUtil,'version',function(){
			SystemUtil.initialize();
			return SystemUtil.sVersion;
		});

		__getset(1,SystemUtil,'supportsRelaxedTargetClearRequirement',function(){
			return false;
		});

		__getset(1,SystemUtil,'supportsVideoTexture',function(){
			return Context3D["supportsVideoTexture"];
		});

		SystemUtil.initialize=function(){
			if (SystemUtil.sInitialized)return;
			SystemUtil.sInitialized=true;
			SystemUtil.sPlatform=Capabilities.version.substr(0,3);
			SystemUtil.sVersion=Capabilities.version.substr(4);
			try{
				var nativeAppClass=iflash.utils.getDefinitionByName("flash.desktop::NativeApplication");
				var nativeApp=nativeAppClass ["nativeApplication"];
				nativeApp.addEventListener(/*iflash.events.Event.ACTIVATE*/"activate",SystemUtil.onActivate,false,0,true);
				nativeApp.addEventListener(/*iflash.events.Event.DEACTIVATE*/"deactivate",SystemUtil.onDeactivate,false,0,true);
				SystemUtil.sAIR=true;
			}
			catch (e){
				SystemUtil.sAIR=false;
			}
		}

		SystemUtil.onActivate=function(event){
			SystemUtil.sApplicationActive=true;
			var call;
			/*for each*/for(var $each_call in SystemUtil.sWaitingCalls){
				call=SystemUtil.sWaitingCalls[$each_call];
				call[0].apply(null,call[1]);
			}
			SystemUtil.sWaitingCalls=[];
		}

		SystemUtil.onDeactivate=function(event){
			SystemUtil.sApplicationActive=false;
		}

		SystemUtil.executeWhenApplicationIsActive=function(call,__args){
			var args=[];for(var i=1,sz=arguments.length;i<sz;i++)args.push(arguments[i]);
			SystemUtil.initialize();
			if (SystemUtil.sApplicationActive)call.apply(null,args);
			else SystemUtil.sWaitingCalls.push([call,args]);
		}

		SystemUtil.sInitialized=false;
		SystemUtil.sApplicationActive=true;
		SystemUtil.sWaitingCalls=[];
		SystemUtil.sPlatform=null
		SystemUtil.sVersion=null
		SystemUtil.sAIR=false;
		SystemUtil.sSupportsDepthAndStencil=true;
		return SystemUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/valign.as
	//class starling.utils.VAlign
	var VAlign=(function(){
		function VAlign(){throw new AbstractClassError();}
		__class(VAlign,'starling.utils.VAlign',true);
		VAlign.isValid=function(vAlign){
			return vAlign=="top" || vAlign=="center" || vAlign=="bottom";
		}

		VAlign.TOP="top";
		VAlign.CENTER="center";
		VAlign.BOTTOM="bottom";
		return VAlign;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/vectorutil.as
	//class starling.utils.VectorUtil
	var VectorUtil=(function(){
		function VectorUtil(){throw new AbstractClassError();}
		__class(VectorUtil,'starling.utils.VectorUtil',true);
		VectorUtil.insertIntAt=function(vector,index,value){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length+1;
			if (index < 0)index=0;
			for (i=index-1;i >=length;--i)
			vector[i]=0;
			for (i=length;i > index;--i)
			vector[i]=vector[i-1];
			vector[index]=value;
		}

		VectorUtil.removeIntAt=function(vector,index){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length;
			if (index < 0)index=0;else if (index >=length)index=length-1;
			var value=vector[index];
			for (i=index+1;i < length;++i)
			vector[i-1]=vector[i];
			vector.length=length-1;
			return value;
		}

		VectorUtil.insertUnsignedIntAt=function(vector,index,value){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length+1;
			if (index < 0)index=0;
			for (i=index-1;i >=length;--i)
			vector[i]=0;
			for (i=length;i > index;--i)
			vector[i]=vector[i-1];
			vector[index]=value;
		}

		VectorUtil.removeUnsignedIntAt=function(vector,index){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length;
			if (index < 0)index=0;else if (index >=length)index=length-1;
			var value=vector[index];
			for (i=index+1;i < length;++i)
			vector[i-1]=vector[i];
			vector.length=length-1;
			return value;
		}

		VectorUtil.insertNumberAt=function(vector,index,value){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length+1;
			if (index < 0)index=0;
			for (i=index-1;i >=length;--i)
			vector[i]=NaN;
			for (i=length;i > index;--i)
			vector[i]=vector[i-1];
			vector[index]=value;
		}

		VectorUtil.removeNumberAt=function(vector,index){
			var i=0;
			var length=vector.length;
			if (index < 0)index+=length;
			if (index < 0)index=0;else if (index >=length)index=length-1;
			var value=vector[index];
			for (i=index+1;i < length;++i)
			vector[i-1]=vector[i];
			vector.length=length-1;
			return value;
		}

		return VectorUtil;
	})()


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/vertexdata.as
	//class starling.utils.VertexData
	var VertexData=(function(){
		function VertexData(numVertices,premultipliedAlpha){
			this.mRawData=null;
			this.mPremultipliedAlpha=false;
			this.mNumVertices=0;
			(premultipliedAlpha===void 0)&& (premultipliedAlpha=false);
			this.mRawData=/*new vector.<>*/[];
			this.mPremultipliedAlpha=premultipliedAlpha;
			this.numVertices=numVertices;
		}

		__class(VertexData,'starling.utils.VertexData',false);
		var __proto=VertexData.prototype;
		__proto.clone=function(vertexID,numVertices){
			(vertexID===void 0)&& (vertexID=0);
			(numVertices===void 0)&& (numVertices=-1);
			if (numVertices < 0 || vertexID+numVertices > this.mNumVertices)
				numVertices=this.mNumVertices-vertexID;
			var clone=new VertexData(0,this.mPremultipliedAlpha);
			clone.mNumVertices=numVertices;
			clone.mRawData=this.mRawData.slice(vertexID *8,
			numVertices *8);
			clone.mRawData.fixed=true;
			return clone;
		}

		__proto.copyTo=function(targetData,targetVertexID,vertexID,numVertices){
			(targetVertexID===void 0)&& (targetVertexID=0);
			(vertexID===void 0)&& (vertexID=0);
			(numVertices===void 0)&& (numVertices=-1);
			this.copyTransformedTo(targetData,targetVertexID,null,vertexID,numVertices);
		}

		__proto.copyTransformedTo=function(targetData,targetVertexID,matrix,vertexID,numVertices){
			(targetVertexID===void 0)&& (targetVertexID=0);
			(vertexID===void 0)&& (vertexID=0);
			(numVertices===void 0)&& (numVertices=-1);
			if (numVertices < 0 || vertexID+numVertices > this.mNumVertices)
				numVertices=this.mNumVertices-vertexID;
			var x=NaN,y=NaN;
			var targetRawData=targetData.mRawData;
			var targetIndex=targetVertexID *8;
			var sourceIndex=vertexID *8;
			var sourceEnd=(vertexID+numVertices)*8;
			if (matrix){
				while (sourceIndex < sourceEnd){
					x=this.mRawData[(sourceIndex++)];
					y=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=matrix.a *x+matrix.c *y+matrix.tx;
					targetRawData[(targetIndex++)]=matrix.d *y+matrix.b *x+matrix.ty;
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
					targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
				}
			}
			else{
				while (sourceIndex < sourceEnd)
				targetRawData[(targetIndex++)]=this.mRawData[(sourceIndex++)];
			}
		}

		__proto.append=function(data){
			this.mRawData.fixed=false;
			var targetIndex=this.mRawData.length;
			var rawData=data.mRawData;
			var rawDataLength=rawData.length;
			for (var i=0;i<rawDataLength;++i)
			this.mRawData[int(targetIndex++)]=rawData[i];
			this.mNumVertices+=data.numVertices;
			this.mRawData.fixed=true;
		}

		__proto.setPosition=function(vertexID,x,y){
			var offset=vertexID *8+0;
			this.mRawData[offset]=x;
			this.mRawData[int(offset+1)]=y;
		}

		__proto.getPosition=function(vertexID,position){
			var offset=vertexID *8+0;
			position.x=this.mRawData[offset];
			position.y=this.mRawData[int(offset+1)];
		}

		__proto.setColorAndAlpha=function(vertexID,color,alpha){
			if (alpha < 0.001)alpha=0.001;
			else if (alpha > 1.0)alpha=1.0;
			var offset=vertexID *8+2;
			var multiplier=this.mPremultipliedAlpha ? alpha :1.0;
			this.mRawData[offset]=((color >> 16)& 0xff)/ 255.0 *multiplier;
			this.mRawData[int(offset+1)]=((color >> 8)& 0xff)/ 255.0 *multiplier;
			this.mRawData[int(offset+2)]=(color & 0xff)/ 255.0 *multiplier;
			this.mRawData[int(offset+3)]=alpha;
		}

		__proto.setColor=function(vertexID,color){
			var offset=vertexID *8+2;
			var multiplier=this.mPremultipliedAlpha ? this.mRawData[int(offset+3)] :1.0;
			this.mRawData[offset]=((color >> 16)& 0xff)/ 255.0 *multiplier;
			this.mRawData[int(offset+1)]=((color >> 8)& 0xff)/ 255.0 *multiplier;
			this.mRawData[int(offset+2)]=(color & 0xff)/ 255.0 *multiplier;
		}

		__proto.getColor=function(vertexID){
			var offset=vertexID *8+2;
			var divisor=this.mPremultipliedAlpha ? this.mRawData[int(offset+3)] :1.0;
			if (divisor==0)return 0;
			else{
				var red=this.mRawData[offset] / divisor;
				var green=this.mRawData[int(offset+1)] / divisor;
				var blue=this.mRawData[int(offset+2)] / divisor;
				return (int(red*255)<< 16)| (int(green*255)<< 8)| int(blue*255);
			}
		}

		__proto.setAlpha=function(vertexID,alpha){
			if (this.mPremultipliedAlpha)
				this.setColorAndAlpha(vertexID,this.getColor(vertexID),alpha);
			else
			this.mRawData[int(vertexID *8+2+3)]=alpha;
		}

		__proto.getAlpha=function(vertexID){
			var offset=vertexID *8+2+3;
			return this.mRawData[offset];
		}

		__proto.setTexCoords=function(vertexID,u,v){
			var offset=vertexID *8+6;
			this.mRawData[offset]=u;
			this.mRawData[int(offset+1)]=v;
		}

		__proto.getTexCoords=function(vertexID,texCoords){
			var offset=vertexID *8+6;
			texCoords.x=this.mRawData[offset];
			texCoords.y=this.mRawData[int(offset+1)];
		}

		__proto.translateVertex=function(vertexID,deltaX,deltaY){
			var offset=vertexID *8+0;
			this.mRawData[offset]+=deltaX;
			this.mRawData[int(offset+1)]+=deltaY;
		}

		__proto.transformVertex=function(vertexID,matrix,numVertices){
			(numVertices===void 0)&& (numVertices=1);
			var x=NaN,y=NaN;
			var offset=vertexID *8+0;
			for (var i=0;i<numVertices;++i){
				x=this.mRawData[offset];
				y=this.mRawData[int(offset+1)];
				this.mRawData[offset]=matrix.a *x+matrix.c *y+matrix.tx;
				this.mRawData[int(offset+1)]=matrix.d *y+matrix.b *x+matrix.ty;
				offset+=8;
			}
		}

		__proto.setUniformColor=function(color){
			for (var i=0;i<this.mNumVertices;++i)
			this.setColor(i,color);
		}

		__proto.setUinformCAA=function(color,_alpha){
			for (var i=0;i<this.mNumVertices;++i)
			this.setColorAndAlpha(i,color,_alpha);
		}

		__proto.setUniformAlpha=function(alpha){
			for (var i=0;i<this.mNumVertices;++i)
			this.setAlpha(i,alpha);
		}

		__proto.scaleAlpha=function(vertexID,factor,numVertices){
			(numVertices===void 0)&& (numVertices=1);
			if (factor==1.0)return;
			if (numVertices < 0 || vertexID+numVertices > this.mNumVertices)
				numVertices=this.mNumVertices-vertexID;
			var i=0;
			if (this.mPremultipliedAlpha){
				for (i=0;i<numVertices;++i)
				this.setAlpha(vertexID+i,this.getAlpha(vertexID+i)*factor);
			}
			else{
				var offset=vertexID *8+2+3;
				for (i=0;i<numVertices;++i)
				this.mRawData[int(offset+i*8)] *=factor;
			}
		}

		__proto.getBounds=function(transformationMatrix,vertexID,numVertices,resultRect){
			(vertexID===void 0)&& (vertexID=0);
			(numVertices===void 0)&& (numVertices=-1);
			if (resultRect==null)resultRect=new Rectangle();
			if (numVertices < 0 || vertexID+numVertices > this.mNumVertices)
				numVertices=this.mNumVertices-vertexID;
			if (numVertices==0){
				if (transformationMatrix==null)
					resultRect.setEmpty();
				else{
					MatrixUtil1.transformCoords(transformationMatrix,0,0,VertexData.sHelperPoint);
					resultRect.setTo(VertexData.sHelperPoint.x,VertexData.sHelperPoint.y,0,0);
				}
			}
			else{
				var minX=Number.MAX_VALUE,maxX=-Number.MAX_VALUE;
				var minY=Number.MAX_VALUE,maxY=-Number.MAX_VALUE;
				var offset=vertexID *8+0;
				var x=NaN,y=NaN,i=0;
				if (transformationMatrix==null){
					for (i=0;i<numVertices;++i){
						x=this.mRawData[offset];
						y=this.mRawData[int(offset+1)];
						offset+=8;
						if (minX > x)minX=x;
						if (maxX < x)maxX=x;
						if (minY > y)minY=y;
						if (maxY < y)maxY=y;
					}
				}
				else{
					for (i=0;i<numVertices;++i){
						x=this.mRawData[offset];
						y=this.mRawData[int(offset+1)];
						offset+=8;
						MatrixUtil1.transformCoords(transformationMatrix,x,y,VertexData.sHelperPoint);
						if (minX > VertexData.sHelperPoint.x)minX=VertexData.sHelperPoint.x;
						if (maxX < VertexData.sHelperPoint.x)maxX=VertexData.sHelperPoint.x;
						if (minY > VertexData.sHelperPoint.y)minY=VertexData.sHelperPoint.y;
						if (maxY < VertexData.sHelperPoint.y)maxY=VertexData.sHelperPoint.y;
					}
				}
				resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			}
			return resultRect;
		}

		__proto.getBoundsProjected=function(transformationMatrix,camPos,vertexID,numVertices,resultRect){
			(vertexID===void 0)&& (vertexID=0);
			(numVertices===void 0)&& (numVertices=-1);
			if (camPos==null)throw new Error("camPos must not be null");
			if (resultRect==null)resultRect=new Rectangle();
			if (numVertices < 0 || vertexID+numVertices > this.mNumVertices)
				numVertices=this.mNumVertices-vertexID;
			if (numVertices==0){
				if (transformationMatrix)
					MatrixUtil1.transformCoords3D(transformationMatrix,0,0,0,VertexData.sHelperPoint3D);
				else
				VertexData.sHelperPoint3D.setTo(0,0,0);
				MathUtil.intersectLineWithXYPlane(camPos,VertexData.sHelperPoint3D,VertexData.sHelperPoint);
				resultRect.setTo(VertexData.sHelperPoint.x,VertexData.sHelperPoint.y,0,0);
			}
			else{
				var minX=Number.MAX_VALUE,maxX=-Number.MAX_VALUE;
				var minY=Number.MAX_VALUE,maxY=-Number.MAX_VALUE;
				var offset=vertexID *8+0;
				var x=NaN,y=NaN,i=0;
				for (i=0;i<numVertices;++i){
					x=this.mRawData[offset];
					y=this.mRawData[int(offset+1)];
					offset+=8;
					if (transformationMatrix)
						MatrixUtil1.transformCoords3D(transformationMatrix,x,y,0,VertexData.sHelperPoint3D);
					else
					VertexData.sHelperPoint3D.setTo(x,y,0);
					MathUtil.intersectLineWithXYPlane(camPos,VertexData.sHelperPoint3D,VertexData.sHelperPoint);
					if (minX > VertexData.sHelperPoint.x)minX=VertexData.sHelperPoint.x;
					if (maxX < VertexData.sHelperPoint.x)maxX=VertexData.sHelperPoint.x;
					if (minY > VertexData.sHelperPoint.y)minY=VertexData.sHelperPoint.y;
					if (maxY < VertexData.sHelperPoint.y)maxY=VertexData.sHelperPoint.y;
				}
				resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			}
			return resultRect;
		}

		__proto.toString=function(){
			var result="[VertexData \n";
			var position=new Point();
			var texCoords=new Point();
			for (var i=0;i<this.numVertices;++i){
				this.getPosition(i,position);
				this.getTexCoords(i,texCoords);
				result+="  [Vertex "+i+": "+
				"x="+position.x.toFixed(1)+", "+
				"y="+position.y.toFixed(1)+", "+
				"rgb="+this.getColor(i).toString(16)+", "+
				"a="+this.getAlpha(i).toFixed(2)+", "+
				"u="+texCoords.x.toFixed(4)+", "+
				"v="+texCoords.y.toFixed(4)+"]"+
				(i==this.numVertices-1 ? "\n" :",\n");
			}
			return result+"]";
		}

		__proto.setPremultipliedAlpha=function(value,updateData){
			(updateData===void 0)&& (updateData=true);
			if (value==this.mPremultipliedAlpha)return;
			if (updateData){
				var dataLength=this.mNumVertices *8;
				for (var i=2;i<dataLength;i+=8){
					var alpha=this.mRawData[int(i+3)];
					var divisor=this.mPremultipliedAlpha ? alpha :1.0;
					var multiplier=value ? alpha :1.0;
					if (divisor !=0){
						this.mRawData[i]=this.mRawData[i] / divisor *multiplier;
						this.mRawData[int(i+1)]=this.mRawData[int(i+1)] / divisor *multiplier;
						this.mRawData[int(i+2)]=this.mRawData[int(i+2)] / divisor *multiplier;
					}
				}
			}
			this.mPremultipliedAlpha=value;
		}

		__getset(0,__proto,'tinted',function(){
			var offset=2;
			for (var i=0;i<this.mNumVertices;++i){
				for (var j=0;j<4;++j)
				if (this.mRawData[int(offset+j)] !=1.0)return true;
				offset+=8;
			}
			return false;
		});

		__getset(0,__proto,'premultipliedAlpha',function(){return this.mPremultipliedAlpha;},function(value){
			this.setPremultipliedAlpha(value);
		});

		__getset(0,__proto,'numVertices',function(){return this.mNumVertices;},function(value){
			this.mRawData.fixed=false;
			this.mRawData.length=value *8;
			var startIndex=this.mNumVertices *8+2+3;
			var endIndex=this.mRawData.length;
			for (var i=startIndex;i<endIndex;i+=8)
			this.mRawData[i]=1.0;
			this.mNumVertices=value;
			this.mRawData.fixed=true;
		});

		__getset(0,__proto,'rawData',function(){return this.mRawData;});
		VertexData.ELEMENTS_PER_VERTEX=8;
		VertexData.POSITION_OFFSET=0;
		VertexData.COLOR_OFFSET=2;
		VertexData.TEXCOORD_OFFSET=6;
		__static(VertexData,
		['sHelperPoint',function(){return this.sHelperPoint=new Point();},'sHelperPoint3D',function(){return this.sHelperPoint3D=new Vector3D();}
		]);
		return VertexData;
	})()


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/argumenterror.jas
	//class ArgumentError extends Error
	var ArgumentError=(function(_super){
		function ArgumentError(message){
			ArgumentError.__super.call(this);
			(message===void 0)&& (message="");
		}

		__class(ArgumentError,'ArgumentError',true,Error);
		return ArgumentError;
	})(Error)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/rangeerror.jas
	//class RangeError extends Error
	var RangeError=(function(_super){
		function RangeError(message){
			RangeError.__super.call(this);
			(message===void 0)&& (message="");
		}

		__class(RangeError,'RangeError',true,Error);
		return RangeError;
	})(Error)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/errors/abstractclasserror.as
	//class starling.errors.AbstractClassError extends Error
	var AbstractClassError=(function(_super){
		function AbstractClassError(message,id){
			(message===void 0)&& (message="Cannot instantiate abstract class");
			(id===void 0)&& (id=0);
			AbstractClassError.__super.call(this,message,id);
		}

		__class(AbstractClassError,'starling.errors.AbstractClassError',true,Error);
		return AbstractClassError;
	})(Error)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/errors/abstractmethoderror.as
	//class starling.errors.AbstractMethodError extends Error
	var AbstractMethodError=(function(_super){
		function AbstractMethodError(message,id){
			(message===void 0)&& (message="Method needs to be implemented in subclass");
			(id===void 0)&& (id=0);
			AbstractMethodError.__super.call(this,message,id);
		}

		__class(AbstractMethodError,'starling.errors.AbstractMethodError',true,Error);
		return AbstractMethodError;
	})(Error)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/errors/missingcontexterror.as
	//class starling.errors.MissingContextError extends Error
	var MissingContextError=(function(_super){
		function MissingContextError(message,id){
			(message===void 0)&& (message="Starling context is missing");
			(id===void 0)&& (id=0);
			MissingContextError.__super.call(this,message,id);
		}

		__class(MissingContextError,'starling.errors.MissingContextError',true,Error);
		return MissingContextError;
	})(Error)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/errors/notsupportederror.as
	//class starling.errors.NotSupportedError extends Error
	var NotSupportedError=(function(_super){
		function NotSupportedError(message,id){
			(message===void 0)&& (message="");
			(id===void 0)&& (id=0);
			NotSupportedError.__super.call(this,message,id);
		}

		__class(NotSupportedError,'starling.errors.NotSupportedError',true,Error);
		return NotSupportedError;
	})(Error)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/mx/events/propertychangeevent.as
	//class mx.events.PropertyChangeEvent extends iflash.events.Event
	var PropertyChangeEvent=(function(_super){
		function PropertyChangeEvent(type,bubbles,cancelable,kind,property,oldValue,newValue,source){
			this.kind=null;
			this.newValue=null;
			this.oldValue=null;
			this.property=null;
			this.source=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			PropertyChangeEvent.__super.call(this,type,bubbles,cancelable);
			this.kind=kind;
			this.property=property;
			this.oldValue=oldValue;
			this.newValue=newValue;
			this.source=source;
		}

		__class(PropertyChangeEvent,'mx.events.PropertyChangeEvent',false,_super);
		var __proto=PropertyChangeEvent.prototype;
		__proto.clone=function(){
			return new PropertyChangeEvent(this.type,this.bubbles,this.cancelable,this.kind,this.property,this.oldValue,this.newValue,this.source);
		}

		PropertyChangeEvent.createUpdateEvent=function(source,property,oldValue,newValue){
			var event=new PropertyChangeEvent("propertyChange");
			event.kind="update";
			event.oldValue=oldValue;
			event.newValue=newValue;
			event.source=source;
			event.property=property;
			return event;
		}

		PropertyChangeEvent.event=function(source,property,oldValue,newValue){
			source.dispatchEvent(PropertyChangeEvent.createUpdateEvent(source,property,oldValue,newValue));
		}

		PropertyChangeEvent.PROPERTY_CHANGE="propertyChange";
		return PropertyChangeEvent;
	})(Event)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/assets_h5.as
	//class g.Assets_h5 extends iflash.events.EventDispatcher
	var Assets_h5=(function(_super){
		var Single;
		function Assets_h5(single){
			this._pathList=[
			"assets/Hit_mc_1.xml",
			"assets/Hit_mc_2.xml",
			"assets/Hit_mc_3.xml",
			"assets/Hit_mc_4.xml",
			"assets/Hit_mc_5.xml",
			"assets/Hit_mc_6.xml",
			"assets/Hit_mc_7.xml",
			"assets/Hit_mc_8.xml",
			"assets/Hit_mc_9.xml",
			"assets/Hit_mc_10.xml",
			"assets/Hit_mc_11.xml",
			"assets/Hit_mc_12.xml",
			"assets/Hit_mc_13.xml",
			"assets/Hit_mc_14.xml",
			"assets/Hit_mc_15.xml",
			"assets/levels_en.swf",
			"assets/ui_en.swf",
			"assets/views_en.swf"];
			this._pathId=0;
			this._lc=null;
			this._loader=null;
			this._urlLoader=null;
			this._xmlList=[];
			Assets_h5.__super.call(this);
			if (!single)throw new Error("单例");
		}

		__class(Assets_h5,'g.Assets_h5',false,_super);
		var __proto=Assets_h5.prototype;
		__proto.init=function(){
			this._lc=new LoaderContext(true,ApplicationDomain.currentDomain);
			this._loader=new Loader();
			this._urlLoader=new URLLoader();
			IFlash.preSwfAssets(this._pathList);
			this.loadHandler();
		}

		__proto.loadHandler=function(){
			var path=this._pathList[this._pathId];
			if(path.indexOf(".xml")>-1){
				if(this._pathId==this._pathList.length-1)this._urlLoader.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.allLoaded));
				else this._urlLoader.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.loaded));
				this._urlLoader.load(new URLRequest(path));
				}else{
				if(this._pathId==this._pathList.length-1)this._loader.contentLoaderInfo.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.allLoaded));
				else this._loader.contentLoaderInfo.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.loaded));
				this._loader.load(new URLRequest(path),this._lc);
			}
		}

		__proto.loaded=function(e){
			e.target.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.loaded));
			this.addXmlFromEventTarget(e.target,this._pathList[this._pathId]);
			if(this._pathId<this._pathList.length-1){
				this._pathId++;
				this.loadHandler();
			}
		}

		__proto.allLoaded=function(e){
			e.target.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.allLoaded));
			this.addXmlFromEventTarget(e.target,this._pathList[this._pathId]);
			this.dispatchEvent(new Event(/*iflash.events.Event.COMPLETE*/"complete"));
			this._lc=null;
			this._urlLoader=null;
			this._pathId=0;
		}

		__proto.addXmlFromEventTarget=function(eventTarget,curPath){
			if((eventTarget instanceof iflash.net.URLLoader )){
				var urlLoader=eventTarget;
				var id=int(curPath.substring(curPath.lastIndexOf("_")+1,curPath.indexOf(".xml")));
				this._xmlList[id]=urlLoader.data;
			}
		}

		__proto.getMapXML=function(level){
			if(level>=this._xmlList.length)return;
			return this._xmlList[level];
		}

		Assets_h5.getInstance=function(){
			if (Assets_h5._instance==null){
				Assets_h5._instance=new Assets_h5(new Single());
				Assets_h5._instance.init();
			}
			return Assets_h5._instance;
		}

		Assets_h5._instance=null
		Assets_h5.__init$=function(){
			//class Single
			Single=(function(){
				function Single(){};
				__class(Single,'',true);
				return Single;
			})()
		}

		return Assets_h5;
	})(EventDispatcher)


	;
	;
	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflash.as
	//class IFlash extends iflash.laya.ILaya
	var IFlash=(function(_super){
		function IFlash(sprite){
			this.stage=null;
			IFlash._sprite_=sprite;
			IFlash.__super.call(this,sprite);
		}

		__class(IFlash,'IFlash',false,_super);
		var __proto=IFlash.prototype;
		__proto._onInit_=function(){
			EventManager.stage=this.stage=Stage.stage;
			Capabilities.initScreenResolutionXY();
			var fn=IFlash.__beforInit__;
			(fn!=null)&&fn();
			if (IFlash.__width__ > 0 && IFlash.__height__ > 0)Laya.document.size(IFlash.__width__,IFlash.__height__);
			EventManager.stage=this.stage=Stage.stage;
			Laya.window.addEventListener(/*iflash.events.Event.RESIZE*/"resize",__bind(this,this._resize_));
			this.stage.bgcolor=IFlash.__bgColor;
			this.stage.setOrientationEx(IFlash.__setOrientationEx);
			this.stage.showInfo=IFlash.__showInfo;
			this.stage.frameRate=IFlash.__frameRate;
			IFlash._sprite_=IFlash._sprite_ || (new IFlashMain());
			if (IFlash._sprite_ && !IFlash._sprite_.parent && IFlash.__loadResource__==null){
				this.stage.addChild(IFlash._sprite_);
			}
			IFlash.__loadResource__ && IFlash.__StartLoadResource__();
		}

		__proto._resize_=function(e){
			e._lysetTarget(this.stage);
			this.stage.dispatchEvent(e);
		}

		__getset(1,IFlash,'isRuningOnAccelerator',function(){
			return Laya.CONCHVER;
		},iflash.laya.ILaya._$SET_isRuningOnAccelerator);

		IFlash.preSwfAssets=function(assets){
			Loader.preswfAsset(assets);
		}

		IFlash.setAutoDetect=function(value){
			AudioElement.disableAutoDetect=value;
		}

		IFlash.SetTouch=function(bool){
			/*__JS__ */Laya.CONCHVER && (conch.disableMultiTouch=bool);
		}

		IFlash.setSize=function(width,height){
			IFlash.__width__=width;
			IFlash.__height__=height;
			Stage.stage.width=IFlash.__width__;
			Stage.stage.height=IFlash.__height__;
			if(Laya.document.body){
				Laya.document.body.width=IFlash.__width__;
				Laya.document.body.height=IFlash.__height__;
			}
		}

		IFlash.lockScreen=function(value){
			(value===void 0)&& (value=false);
			/*__JS__ */conch.setScreenWakeLock(value);
		}

		IFlash.regBeforInit=function(callback){
			IFlash.__beforInit__=callback;
		}

		IFlash.setBgcolor=function(value){
			IFlash.__bgColor=value;
			Stage.stage.bgcolor=value;
		}

		IFlash.setOrientationEx=function(value){
			IFlash.__setOrientationEx=value;
			Stage.stage.setOrientationEx(value);
		}

		IFlash.setAutoOrients=function(autoOrients){
			(autoOrients===void 0)&& (autoOrients=true);
			Stage.stage.autoOrients=autoOrients;
		}

		IFlash.showInfo=function(value){
			IFlash.__showInfo=value;
			Stage.stage.showInfo=value;
		}

		IFlash.frameRate=function(value){
			if(Laya.CONCHVER && value < 60){
				/*__JS__ */if(conch.setMaxFPS)conch.setMaxFPS(value)
			}
			if(value==IFlash.__frameRate)
				return;
			IFlash.__frameRate=value;
			Stage.stage.frameRate=value;
		}

		IFlash.Start=function(){
			/*__JS__ */LAYABOX.getInterfaceDefinitionByName=function (name){var words=name.split('.');var o=Laya;for (var i=0;i < words.length;i++){o=o[words[i]];if(!o){return null}}return o;};
			new JSONParse();
			Laya.document.body=new Body();
			var R=Register,A=AnimationCreate;
			R.regClass(/*iflash.laya.runner.DataType.LYIMAGELEMENT*/51,LyImageElement);
			R.regClass(/*iflash.laya.runner.DataType.SHAPE*/52,Shape);
			R.regClass(/*iflash.laya.runner.DataType.SHAPE*/52,Shape);
			R.regClass(/*iflash.laya.runner.DataType.BITMAPDATA*/53,BitmapData);
			R.regClass(/*iflash.laya.runner.DataType.BITMAP*/54,Bitmap);
			R.regClass(/*iflash.laya.runner.DataType.SPRITE*/55,Sprite);
			R.regClass(/*iflash.laya.runner.DataType.MOVIECLIP*/56,MovieClip);
			R.regClass(/*iflash.laya.runner.DataType.BUTTON*/58,SimpleButton);
			R.regClass(/*iflash.laya.runner.DataType.TEXTFIELD*/57,TextField);
			R.regClass(/*iflash.laya.runner.DataType.STATICTEXTFIELD*/59,StaticText);
			R.regFunction(/*iflash.laya.runner.DataType.REMOVE_ALL*/151,A.removeAll,2,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.NULL*/0);
			R.regFunction(/*iflash.laya.runner.DataType.SET_INSTANCE_NAME*/152,A.setInstanceName,3,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.STRING*/6);
			R.regFunction(/*iflash.laya.runner.DataType.REMOVE_INSTANCE_NAME*/153,A.removeInstanceName,3,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.STRING*/6);
			R.regFunction(/*iflash.laya.runner.DataType.NEW_OBJECT*/154,A.newObject,4,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.STRING*/6);
			R.regFunction(/*iflash.laya.runner.DataType.ADD_CHILD*/155,A.addChild,3,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.SHORT*/4);
			R.regFunction(/*iflash.laya.runner.DataType.REMOVE_CHILD*/156,A.removeChild,2,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4);
			R.regFunction(/*iflash.laya.runner.DataType.SET_TRANSFORM*/157,A.setTransform,9,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5);
			R.regFunction(/*iflash.laya.runner.DataType.POS*/158,A.pos,4,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5);
			R.regFunction(/*iflash.laya.runner.DataType.EMPTY*/159,A.empty,2,false,/*iflash.laya.runner.DataType.NULL*/0,/*iflash.laya.runner.DataType.NULL*/0);
			R.regFunction(/*iflash.laya.runner.DataType.SET_ALPHA*/160,A.setAlpha,3,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.FLOAT*/5);
			R.regFunction(/*iflash.laya.runner.DataType.SET_VISIBLE*/161,A.setVisible,3,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.BOOL*/14);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_LYIMAGELEMENT_CMD*/162,A.initLyImage,4,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_SHAPE_CMD*/163,A.initShap,3,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.ID*/1,/*iflash.laya.runner.DataType.MATRIX*/13);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_SHAPE2ADDCMD*/167,A.initShape2Add,5,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.MATRIX*/13);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_MOVIECLIP_CMD*/164,A.initMovie,6,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.TEMPLATE_ID*/11,/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.ARRAY*/12);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_BUTTON_CMD*/166,A.initButton,6,false,/*iflash.laya.runner.DataType.CURRENT*/9,/*iflash.laya.runner.DataType.TEMPLATE_ID*/11,/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.SHORT*/4,/*iflash.laya.runner.DataType.ARRAY*/12);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_TEXTFIELD_CMD*/165,A.initText,14,false,/*iflash.laya.runner.DataType.CURRENT*/9,
			/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,
			/*iflash.laya.runner.DataType.BOOL*/14,/*iflash.laya.runner.DataType.BOOL*/14,/*iflash.laya.runner.DataType.BOOL*/14,
			/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.STRING*/6,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.STRING*/6);
			R.regFunction(/*iflash.laya.runner.DataType.INIT_STATICTEXTFIELDCMD*/168,A.initStaticText,14,false,/*iflash.laya.runner.DataType.CURRENT*/9,
			/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.FLOAT*/5,
			/*iflash.laya.runner.DataType.BOOL*/14,/*iflash.laya.runner.DataType.BOOL*/14,/*iflash.laya.runner.DataType.BOOL*/14,
			/*iflash.laya.runner.DataType.BYTE*/8,/*iflash.laya.runner.DataType.STRING*/6,/*iflash.laya.runner.DataType.FLOAT*/5,/*iflash.laya.runner.DataType.STRING*/6);
			Laya.window.resizeTo(Browser.window.innerWidth,Browser.window.innerHeight);
			Laya.CONCHVER && /*__JS__ */conchConfig.textBaseline(1);
		}

		IFlash.__StartLoadResource__=function(){
			var len=IFlash.__loadResource__.length;
			for(var i=0;i<len;i++){
				var loader=new Loader();
				loader.contentLoaderInfo.addEventListener(/*iflash.events.Event.COMPLETE*/"complete",IFlash.__onLoad__);
				loader.load(new URLRequest(IFlash.__loadResource__[i]),new LoaderContext(false,ApplicationDomain.currentDomain));
			}
		}

		IFlash.__onLoad__=function(e){
			IFlash.__resourceCount__++;
			if(IFlash.__loadResource__.length==IFlash.__resourceCount__){
				IFlash.__resourceCount__=0;
				IFlash.__loadResource__=null;
				Stage.stage.addChild(IFlash._sprite_);
			}
		}

		IFlash.LoadResource=function(files){
			IFlash.__loadResource__=files;
		}

		IFlash.Run=function(sprite,w,h){
			if(IFlash.__width__ <=0){
				IFlash.__width__=w;
			}
			if(IFlash.__height__ <=0){
				IFlash.__height__=h;
			}
			new IFlash(sprite);
			Laya.ilaya._onInit_();
		}

		IFlash._sprite_=null
		IFlash.__loadResource__=null;
		IFlash.__width__=-1;
		IFlash.__height__=-1;
		IFlash.__beforInit__=null
		IFlash.IS_3D=false;
		IFlash.__bgColor=0xffffff;
		IFlash.__setOrientationEx=1;
		IFlash.__showInfo=true;
		IFlash.__frameRate=60;
		IFlash.__resourceCount__=0;
		IFlash.LYData={};
		return IFlash;
	})(ILaya)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2circleshape.as
	;
	//class Box2D.Collision.Shapes.b2CircleShape extends Box2D.Collision.Shapes.b2Shape
	var b2CircleShape=(function(_super){
		function b2CircleShape(radius){
			this.m_p=new b2Vec2();
			(radius===void 0)&& (radius=0);
			b2CircleShape.__super.call(this);
			this.m_type=0;
			this.m_radius=radius;
		}

		__class(b2CircleShape,'Box2D.Collision.Shapes.b2CircleShape',false,_super);
		var __proto=b2CircleShape.prototype;
		__proto.Copy=function(){
			var s=new b2CircleShape();
			s.Set(this);
			return s;
		}

		__proto.Set=function(other){
			_super.prototype.Set.call(this,other);
			if ((other instanceof Box2D.Collision.Shapes.b2CircleShape )){
				var other2=other;
				this.m_p.SetV(other2.m_p);
			}
		}

		__proto.TestPoint=function(transform,p){
			var tMat=transform.R;
			var dX=transform.position.x+(tMat.col1.x *this.m_p.x+tMat.col2.x *this.m_p.y);
			var dY=transform.position.y+(tMat.col1.y *this.m_p.x+tMat.col2.y *this.m_p.y);
			dX=p.x-dX;
			dY=p.y-dY;
			return (dX*dX+dY*dY)<=this.m_radius *this.m_radius;
		}

		__proto.RayCast=function(output,input,transform){
			var tMat=transform.R;
			var positionX=transform.position.x+(tMat.col1.x *this.m_p.x+tMat.col2.x *this.m_p.y);
			var positionY=transform.position.y+(tMat.col1.y *this.m_p.x+tMat.col2.y *this.m_p.y);
			var sX=input.p1.x-positionX;
			var sY=input.p1.y-positionY;
			var b=(sX*sX+sY*sY)-this.m_radius *this.m_radius;
			var rX=input.p2.x-input.p1.x;
			var rY=input.p2.y-input.p1.y;
			var c=(sX*rX+sY*rY);
			var rr=(rX*rX+rY*rY);
			var sigma=c *c-rr *b;
			if (sigma < 0.0 || rr < Number.MIN_VALUE){
				return false;
			};
			var a=-(c+Math.sqrt(sigma));
			if (0.0 <=a && a <=input.maxFraction *rr){
				a /=rr;
				output.fraction=a;
				output.normal.x=sX+a *rX;
				output.normal.y=sY+a *rY;
				output.normal.Normalize();
				return true;
			}
			return false;
		}

		__proto.ComputeAABB=function(aabb,transform){
			var tMat=transform.R;
			var pX=transform.position.x+(tMat.col1.x *this.m_p.x+tMat.col2.x *this.m_p.y);
			var pY=transform.position.y+(tMat.col1.y *this.m_p.x+tMat.col2.y *this.m_p.y);
			aabb.lowerBound.Set(pX-this.m_radius,pY-this.m_radius);
			aabb.upperBound.Set(pX+this.m_radius,pY+this.m_radius);
		}

		__proto.ComputeMass=function(massData,density){
			massData.mass=density *b2Settings.b2_pi *this.m_radius *this.m_radius;
			massData.center.SetV(this.m_p);
			massData.I=massData.mass *(0.5 *this.m_radius *this.m_radius+(this.m_p.x*this.m_p.x+this.m_p.y*this.m_p.y));
		}

		__proto.ComputeSubmergedArea=function(normal,offset,xf,c){
			var p=b2Math.MulX(xf,this.m_p);
			var l=-(b2Math.Dot(normal,p)-offset);
			if (l <-this.m_radius+Number.MIN_VALUE){
				return 0;
			}
			if (l > this.m_radius){
				c.SetV(p);
				return Math.PI *this.m_radius *this.m_radius;
			};
			var r2=this.m_radius *this.m_radius;
			var l2=l *l;
			var area=r2 *(Math.asin(l / this.m_radius)+Math.PI / 2)+l *Math.sqrt(r2-l2);
			var com=-2 / 3 *Math.pow(r2-l2,1.5)/ area;
			c.x=p.x+normal.x *com;
			c.y=p.y+normal.y *com;
			return area;
		}

		__proto.GetLocalPosition=function(){
			return this.m_p;
		}

		__proto.SetLocalPosition=function(position){
			this.m_p.SetV(position);
		}

		__proto.GetRadius=function(){
			return this.m_radius;
		}

		__proto.SetRadius=function(radius){
			this.m_radius=radius;
		}

		return b2CircleShape;
	})(b2Shape)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2edgeshape.as
	;
	//class Box2D.Collision.Shapes.b2EdgeShape extends Box2D.Collision.Shapes.b2Shape
	var b2EdgeShape=(function(_super){
		function b2EdgeShape(v1,v2){
			this.m_length=NaN;
			this.m_cornerConvex1=false;
			this.m_cornerConvex2=false;
			this.m_nextEdge=null;
			this.m_prevEdge=null;
			this.s_supportVec=new b2Vec2();
			this.m_v1=new b2Vec2();
			this.m_v2=new b2Vec2();
			this.m_coreV1=new b2Vec2();
			this.m_coreV2=new b2Vec2();
			this.m_normal=new b2Vec2();
			this.m_direction=new b2Vec2();
			this.m_cornerDir1=new b2Vec2();
			this.m_cornerDir2=new b2Vec2();
			b2EdgeShape.__super.call(this);
			this.m_type=2;
			this.m_prevEdge=null;
			this.m_nextEdge=null;
			this.m_v1=v1;
			this.m_v2=v2;
			this.m_direction.Set(this.m_v2.x-this.m_v1.x,this.m_v2.y-this.m_v1.y);
			this.m_length=this.m_direction.Normalize();
			this.m_normal.Set(this.m_direction.y,-this.m_direction.x);
			this.m_coreV1.Set(-b2Settings.b2_toiSlop *(this.m_normal.x-this.m_direction.x)+this.m_v1.x,
			-b2Settings.b2_toiSlop *(this.m_normal.y-this.m_direction.y)+this.m_v1.y)
			this.m_coreV2.Set(-b2Settings.b2_toiSlop *(this.m_normal.x+this.m_direction.x)+this.m_v2.x,
			-b2Settings.b2_toiSlop *(this.m_normal.y+this.m_direction.y)+this.m_v2.y)
			this.m_cornerDir1=this.m_normal;
			this.m_cornerDir2.Set(-this.m_normal.x,-this.m_normal.y);
		}

		__class(b2EdgeShape,'Box2D.Collision.Shapes.b2EdgeShape',false,_super);
		var __proto=b2EdgeShape.prototype;
		__proto.TestPoint=function(transform,p){
			return false;
		}

		__proto.RayCast=function(output,input,transform){
			var tMat;
			var rX=input.p2.x-input.p1.x;
			var rY=input.p2.y-input.p1.y;
			tMat=transform.R;
			var v1X=transform.position.x+(tMat.col1.x *this.m_v1.x+tMat.col2.x *this.m_v1.y);
			var v1Y=transform.position.y+(tMat.col1.y *this.m_v1.x+tMat.col2.y *this.m_v1.y);
			var nX=transform.position.y+(tMat.col1.y *this.m_v2.x+tMat.col2.y *this.m_v2.y)-v1Y;
			var nY=-(transform.position.x+(tMat.col1.x *this.m_v2.x+tMat.col2.x *this.m_v2.y)-v1X);
			var k_slop=100.0 *Number.MIN_VALUE;
			var denom=-(rX *nX+rY *nY);
			if (denom > k_slop){
				var bX=input.p1.x-v1X;
				var bY=input.p1.y-v1Y;
				var a=(bX *nX+bY *nY);
				if (0.0 <=a && a <=input.maxFraction *denom){
					var mu2=-rX *bY+rY *bX;
					if (-k_slop *denom <=mu2 && mu2 <=denom *(1.0+k_slop)){
						a /=denom;
						output.fraction=a;
						var nLen=Math.sqrt(nX *nX+nY *nY);
						output.normal.x=nX / nLen;
						output.normal.y=nY / nLen;
						return true;
					}
				}
			}
			return false;
		}

		__proto.ComputeAABB=function(aabb,transform){
			var tMat=transform.R;
			var v1X=transform.position.x+(tMat.col1.x *this.m_v1.x+tMat.col2.x *this.m_v1.y);
			var v1Y=transform.position.y+(tMat.col1.y *this.m_v1.x+tMat.col2.y *this.m_v1.y);
			var v2X=transform.position.x+(tMat.col1.x *this.m_v2.x+tMat.col2.x *this.m_v2.y);
			var v2Y=transform.position.y+(tMat.col1.y *this.m_v2.x+tMat.col2.y *this.m_v2.y);
			if (v1X < v2X){
				aabb.lowerBound.x=v1X;
				aabb.upperBound.x=v2X;
				}else {
				aabb.lowerBound.x=v2X;
				aabb.upperBound.x=v1X;
			}
			if (v1Y < v2Y){
				aabb.lowerBound.y=v1Y;
				aabb.upperBound.y=v2Y;
				}else {
				aabb.lowerBound.y=v2Y;
				aabb.upperBound.y=v1Y;
			}
		}

		__proto.ComputeMass=function(massData,density){
			massData.mass=0;
			massData.center.SetV(this.m_v1);
			massData.I=0;
		}

		__proto.ComputeSubmergedArea=function(normal,offset,xf,c){
			var v0=new b2Vec2(normal.x *offset,normal.y *offset);
			var v1=b2Math.MulX(xf,this.m_v1);
			var v2=b2Math.MulX(xf,this.m_v2);
			var d1=b2Math.Dot(normal,v1)-offset;
			var d2=b2Math.Dot(normal,v2)-offset;
			if (d1 > 0){
				if (d2 > 0){
					return 0;
				}
				else{
					v1.x=-d2 / (d1-d2)*v1.x+d1 / (d1-d2)*v2.x;
					v1.y=-d2 / (d1-d2)*v1.y+d1 / (d1-d2)*v2.y;
				}
			}
			else{
				if (d2 > 0){
					v2.x=-d2 / (d1-d2)*v1.x+d1 / (d1-d2)*v2.x;
					v2.y=-d2 / (d1-d2)*v1.y+d1 / (d1-d2)*v2.y;
				}
				else{
				}
			}
			c.x=(v0.x+v1.x+v2.x)/ 3;
			c.y=(v0.y+v1.y+v2.y)/ 3;
			return 0.5 *((v1.x-v0.x)*(v2.y-v0.y)-(v1.y-v0.y)*(v2.x-v0.x));
		}

		__proto.GetLength=function(){
			return this.m_length;
		}

		__proto.GetVertex1=function(){
			return this.m_v1;
		}

		__proto.GetVertex2=function(){
			return this.m_v2;
		}

		__proto.GetCoreVertex1=function(){
			return this.m_coreV1;
		}

		__proto.GetCoreVertex2=function(){
			return this.m_coreV2;
		}

		__proto.GetNormalVector=function(){
			return this.m_normal;
		}

		__proto.GetDirectionVector=function(){
			return this.m_direction;
		}

		__proto.GetCorner1Vector=function(){
			return this.m_cornerDir1;
		}

		__proto.GetCorner2Vector=function(){
			return this.m_cornerDir2;
		}

		__proto.Corner1IsConvex=function(){
			return this.m_cornerConvex1;
		}

		__proto.Corner2IsConvex=function(){
			return this.m_cornerConvex2;
		}

		__proto.GetFirstVertex=function(xf){
			var tMat=xf.R;
			return new b2Vec2(xf.position.x+(tMat.col1.x *this.m_coreV1.x+tMat.col2.x *this.m_coreV1.y),
			xf.position.y+(tMat.col1.y *this.m_coreV1.x+tMat.col2.y *this.m_coreV1.y));
		}

		__proto.GetNextEdge=function(){
			return this.m_nextEdge;
		}

		__proto.GetPrevEdge=function(){
			return this.m_prevEdge;
		}

		__proto.Support=function(xf,dX,dY){
			var tMat=xf.R;
			var v1X=xf.position.x+(tMat.col1.x *this.m_coreV1.x+tMat.col2.x *this.m_coreV1.y);
			var v1Y=xf.position.y+(tMat.col1.y *this.m_coreV1.x+tMat.col2.y *this.m_coreV1.y);
			var v2X=xf.position.x+(tMat.col1.x *this.m_coreV2.x+tMat.col2.x *this.m_coreV2.y);
			var v2Y=xf.position.y+(tMat.col1.y *this.m_coreV2.x+tMat.col2.y *this.m_coreV2.y);
			if ((v1X *dX+v1Y *dY)> (v2X *dX+v2Y *dY)){
				this.s_supportVec.x=v1X;
				this.s_supportVec.y=v1Y;
				}else {
				this.s_supportVec.x=v2X;
				this.s_supportVec.y=v2Y;
			}
			return this.s_supportVec;
		}

		__proto.SetPrevEdge=function(edge,core,cornerDir,convex){
			this.m_prevEdge=edge;
			this.m_coreV1=core;
			this.m_cornerDir1=cornerDir;
			this.m_cornerConvex1=convex;
		}

		__proto.SetNextEdge=function(edge,core,cornerDir,convex){
			this.m_nextEdge=edge;
			this.m_coreV2=core;
			this.m_cornerDir2=cornerDir;
			this.m_cornerConvex2=convex;
		}

		return b2EdgeShape;
	})(b2Shape)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/collision/shapes/b2polygonshape.as
	;
	//class Box2D.Collision.Shapes.b2PolygonShape extends Box2D.Collision.Shapes.b2Shape
	var b2PolygonShape=(function(_super){
		function b2PolygonShape(){
			this.m_centroid=null;
			this.m_vertices=null;
			this.m_normals=null;
			this.m_vertexCount=0;
			b2PolygonShape.__super.call(this);
			this.m_type=1;
			this.m_centroid=new b2Vec2();
			this.m_vertices=[];
			this.m_normals=[];
		}

		__class(b2PolygonShape,'Box2D.Collision.Shapes.b2PolygonShape',false,_super);
		var __proto=b2PolygonShape.prototype;
		__proto.Copy=function(){
			var s=new b2PolygonShape();
			s.Set(this);
			return s;
		}

		__proto.Set=function(other){
			_super.prototype.Set.call(this,other);
			if ((other instanceof Box2D.Collision.Shapes.b2PolygonShape )){
				var other2=other;
				this.m_centroid.SetV(other2.m_centroid);
				this.m_vertexCount=other2.m_vertexCount;
				this.Reserve(this.m_vertexCount);
				for (var i=0;i < this.m_vertexCount;i++){
					this.m_vertices[i].SetV(other2.m_vertices[i]);
					this.m_normals[i].SetV(other2.m_normals[i]);
				}
			}
		}

		__proto.SetAsArray=function(vertices,vertexCount){
			(vertexCount===void 0)&& (vertexCount=0);
			var v=[];
			var tVec;
			/*for each*/for(var $each_tVec in vertices){
				tVec=vertices[$each_tVec];
				v.push(tVec);
			}
			this.SetAsVector(v,vertexCount);
		}

		__proto.SetAsVector=function(vertices,vertexCount){
			(vertexCount===void 0)&& (vertexCount=0);
			if (vertexCount==0)
				vertexCount=vertices.length;
			b2Settings.b2Assert(2 <=vertexCount);
			this.m_vertexCount=vertexCount;
			this.Reserve(vertexCount);
			var i=0;
			for (i=0;i < this.m_vertexCount;i++){
				this.m_vertices[i].SetV(vertices[i]);
			}
			for (i=0;i < this.m_vertexCount;++i){
				var i1=i;
				var i2=i+1 < this.m_vertexCount ? i+1 :0;
				var edge=b2Math.SubtractVV(this.m_vertices[i2],this.m_vertices[i1]);
				b2Settings.b2Assert(edge.LengthSquared()> Number.MIN_VALUE);
				this.m_normals[i].SetV(b2Math.CrossVF(edge,1.0));
				this.m_normals[i].Normalize();
			}
			this.m_centroid=b2PolygonShape.ComputeCentroid(this.m_vertices,this.m_vertexCount);
		}

		__proto.SetAsBox=function(hx,hy){
			this.m_vertexCount=4;
			this.Reserve(4);
			this.m_vertices[0].Set(-hx,-hy);
			this.m_vertices[1].Set(hx,-hy);
			this.m_vertices[2].Set(hx,hy);
			this.m_vertices[3].Set(-hx,hy);
			this.m_normals[0].Set(0.0,-1.0);
			this.m_normals[1].Set(1.0,0.0);
			this.m_normals[2].Set(0.0,1.0);
			this.m_normals[3].Set(-1.0,0.0);
			this.m_centroid.SetZero();
		}

		__proto.SetAsOrientedBox=function(hx,hy,center,angle){
			(angle===void 0)&& (angle=0.0);
			this.m_vertexCount=4;
			this.Reserve(4);
			this.m_vertices[0].Set(-hx,-hy);
			this.m_vertices[1].Set(hx,-hy);
			this.m_vertices[2].Set(hx,hy);
			this.m_vertices[3].Set(-hx,hy);
			this.m_normals[0].Set(0.0,-1.0);
			this.m_normals[1].Set(1.0,0.0);
			this.m_normals[2].Set(0.0,1.0);
			this.m_normals[3].Set(-1.0,0.0);
			this.m_centroid=center;
			var xf=new b2Transform();
			xf.position=center;
			xf.R.Set(angle);
			for (var i=0;i < this.m_vertexCount;++i){
				this.m_vertices[i]=b2Math.MulX(xf,this.m_vertices[i]);
				this.m_normals[i]=b2Math.MulMV(xf.R,this.m_normals[i]);
			}
		}

		__proto.SetAsEdge=function(v1,v2){
			this.m_vertexCount=2;
			this.Reserve(2);
			this.m_vertices[0].SetV(v1);
			this.m_vertices[1].SetV(v2);
			this.m_centroid.x=0.5 *(v1.x+v2.x);
			this.m_centroid.y=0.5 *(v1.y+v2.y);
			this.m_normals[0]=b2Math.CrossVF(b2Math.SubtractVV(v2,v1),1.0);
			this.m_normals[0].Normalize();
			this.m_normals[1].x=-this.m_normals[0].x;
			this.m_normals[1].y=-this.m_normals[0].y;
		}

		__proto.TestPoint=function(xf,p){
			var tVec;
			var tMat=xf.R;
			var tX=p.x-xf.position.x;
			var tY=p.y-xf.position.y;
			var pLocalX=(tX*tMat.col1.x+tY*tMat.col1.y);
			var pLocalY=(tX*tMat.col2.x+tY*tMat.col2.y);
			for (var i=0;i < this.m_vertexCount;++i){
				tVec=this.m_vertices[i];
				tX=pLocalX-tVec.x;
				tY=pLocalY-tVec.y;
				tVec=this.m_normals[i];
				var dot=(tVec.x *tX+tVec.y *tY);
				if (dot > 0.0){
					return false;
				}
			}
			return true;
		}

		__proto.RayCast=function(output,input,transform){
			var lower=0.0;
			var upper=input.maxFraction;
			var tX=NaN;
			var tY=NaN;
			var tMat;
			var tVec;
			tX=input.p1.x-transform.position.x;
			tY=input.p1.y-transform.position.y;
			tMat=transform.R;
			var p1X=(tX *tMat.col1.x+tY *tMat.col1.y);
			var p1Y=(tX *tMat.col2.x+tY *tMat.col2.y);
			tX=input.p2.x-transform.position.x;
			tY=input.p2.y-transform.position.y;
			tMat=transform.R;
			var p2X=(tX *tMat.col1.x+tY *tMat.col1.y);
			var p2Y=(tX *tMat.col2.x+tY *tMat.col2.y);
			var dX=p2X-p1X;
			var dY=p2Y-p1Y;
			var index=-1;
			for (var i=0;i < this.m_vertexCount;++i){
				tVec=this.m_vertices[i];
				tX=tVec.x-p1X;
				tY=tVec.y-p1Y;
				tVec=this.m_normals[i];
				var numerator=(tVec.x*tX+tVec.y*tY);
				var denominator=(tVec.x *dX+tVec.y *dY);
				if (denominator==0.0){
					if (numerator < 0.0){
						return false;
					}
				}
				else{
					if (denominator < 0.0 && numerator < lower *denominator){
						lower=numerator / denominator;
						index=i;
					}
					else if (denominator > 0.0 && numerator < upper *denominator){
						upper=numerator / denominator;
					}
				}
				if (upper < lower-Number.MIN_VALUE){
					return false;
				}
			}
			if (index >=0){
				output.fraction=lower;
				tMat=transform.R;
				tVec=this.m_normals[index];
				output.normal.x=(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				output.normal.y=(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				return true;
			}
			return false;
		}

		__proto.ComputeAABB=function(aabb,xf){
			var tMat=xf.R;
			var tVec=this.m_vertices[0];
			var lowerX=xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
			var lowerY=xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
			var upperX=lowerX;
			var upperY=lowerY;
			for (var i=1;i < this.m_vertexCount;++i){
				tVec=this.m_vertices[i];
				var vX=xf.position.x+(tMat.col1.x *tVec.x+tMat.col2.x *tVec.y);
				var vY=xf.position.y+(tMat.col1.y *tVec.x+tMat.col2.y *tVec.y);
				lowerX=lowerX < vX ? lowerX :vX;
				lowerY=lowerY < vY ? lowerY :vY;
				upperX=upperX > vX ? upperX :vX;
				upperY=upperY > vY ? upperY :vY;
			}
			aabb.lowerBound.x=lowerX-this.m_radius;
			aabb.lowerBound.y=lowerY-this.m_radius;
			aabb.upperBound.x=upperX+this.m_radius;
			aabb.upperBound.y=upperY+this.m_radius;
		}

		__proto.ComputeMass=function(massData,density){
			if (this.m_vertexCount==2){
				massData.center.x=0.5 *(this.m_vertices[0].x+this.m_vertices[1].x);
				massData.center.y=0.5 *(this.m_vertices[0].y+this.m_vertices[1].y);
				massData.mass=0.0;
				massData.I=0.0;
				return;
			};
			var centerX=0.0;
			var centerY=0.0;
			var area=0.0;
			var I=0.0;
			var p1X=0.0;
			var p1Y=0.0;
			var k_inv3=1.0 / 3.0;
			for (var i=0;i < this.m_vertexCount;++i){
				var p2=this.m_vertices[i];
				var p3=i+1 < this.m_vertexCount ? this.m_vertices[int(i+1)] :this.m_vertices[0];
				var e1X=p2.x-p1X;
				var e1Y=p2.y-p1Y;
				var e2X=p3.x-p1X;
				var e2Y=p3.y-p1Y;
				var D=e1X *e2Y-e1Y *e2X;
				var triangleArea=0.5 *D;
				area+=triangleArea;
				centerX+=triangleArea *k_inv3 *(p1X+p2.x+p3.x);
				centerY+=triangleArea *k_inv3 *(p1Y+p2.y+p3.y);
				var px=p1X;
				var py=p1Y;
				var ex1=e1X;
				var ey1=e1Y;
				var ex2=e2X;
				var ey2=e2Y;
				var intx2=k_inv3 *(0.25 *(ex1*ex1+ex2*ex1+ex2*ex2)+(px*ex1+px*ex2))+0.5*px*px;
				var inty2=k_inv3 *(0.25 *(ey1*ey1+ey2*ey1+ey2*ey2)+(py*ey1+py*ey2))+0.5*py*py;
				I+=D *(intx2+inty2);
			}
			massData.mass=density *area;
			centerX *=1.0 / area;
			centerY *=1.0 / area;
			massData.center.Set(centerX,centerY);
			massData.I=density *I;
		}

		__proto.ComputeSubmergedArea=function(normal,offset,xf,c){
			var normalL=b2Math.MulTMV(xf.R,normal);
			var offsetL=offset-b2Math.Dot(normal,xf.position);
			var depths=[];
			var diveCount=0;
			var intoIndex=-1;
			var outoIndex=-1;
			var lastSubmerged=false;
			var i=0;
			for (i=0;i < this.m_vertexCount;++i){
				depths[i]=b2Math.Dot(normalL,this.m_vertices[i])-offsetL;
				var isSubmerged=depths[i] <-Number.MIN_VALUE;
				if (i > 0){
					if (isSubmerged){
						if (!lastSubmerged){
							intoIndex=i-1;
							diveCount++;
						}
					}
					else{
						if (lastSubmerged){
							outoIndex=i-1;
							diveCount++;
						}
					}
				}
				lastSubmerged=isSubmerged;
			}
			switch(diveCount){
				case 0:
					if (lastSubmerged){
						var md=new b2MassData();
						this.ComputeMass(md,1);
						c.SetV(b2Math.MulX(xf,md.center));
						return md.mass;
					}
					else{
						return 0;
					}
					break ;
				case 1:
					if (intoIndex==-1){
						intoIndex=this.m_vertexCount-1;
					}
					else{
						outoIndex=this.m_vertexCount-1;
					}
					break ;
				};
			var intoIndex2=(intoIndex+1)% this.m_vertexCount;
			var outoIndex2=(outoIndex+1)% this.m_vertexCount;
			var intoLamdda=(0-depths[intoIndex])/ (depths[intoIndex2]-depths[intoIndex]);
			var outoLamdda=(0-depths[outoIndex])/ (depths[outoIndex2]-depths[outoIndex]);
			var intoVec=new b2Vec2(this.m_vertices[intoIndex].x *(1-intoLamdda)+this.m_vertices[intoIndex2].x *intoLamdda,
			this.m_vertices[intoIndex].y *(1-intoLamdda)+this.m_vertices[intoIndex2].y *intoLamdda);
			var outoVec=new b2Vec2(this.m_vertices[outoIndex].x *(1-outoLamdda)+this.m_vertices[outoIndex2].x *outoLamdda,
			this.m_vertices[outoIndex].y *(1-outoLamdda)+this.m_vertices[outoIndex2].y *outoLamdda);
			var area=0;
			var center=new b2Vec2();
			var p2=this.m_vertices[intoIndex2];
			var p3;
			i=intoIndex2;
			while (i !=outoIndex2){
				i=(i+1)% this.m_vertexCount;
				if(i==outoIndex2)
					p3=outoVec
				else
				p3=this.m_vertices[i];
				var triangleArea=0.5 *((p2.x-intoVec.x)*(p3.y-intoVec.y)-(p2.y-intoVec.y)*(p3.x-intoVec.x));
				area+=triangleArea;
				center.x+=triangleArea *(intoVec.x+p2.x+p3.x)/ 3;
				center.y+=triangleArea *(intoVec.y+p2.y+p3.y)/ 3;
				p2=p3;
			}
			center.Multiply(1 / area);
			c.SetV(b2Math.MulX(xf,center));
			return area;
		}

		__proto.GetVertexCount=function(){
			return this.m_vertexCount;
		}

		__proto.GetVertices=function(){
			return this.m_vertices;
		}

		__proto.GetNormals=function(){
			return this.m_normals;
		}

		__proto.GetSupport=function(d){
			var bestIndex=0;
			var bestValue=this.m_vertices[0].x *d.x+this.m_vertices[0].y *d.y;
			for (var i=1;i < this.m_vertexCount;++i){
				var value=this.m_vertices[i].x *d.x+this.m_vertices[i].y *d.y;
				if (value > bestValue){
					bestIndex=i;
					bestValue=value;
				}
			}
			return bestIndex;
		}

		__proto.GetSupportVertex=function(d){
			var bestIndex=0;
			var bestValue=this.m_vertices[0].x *d.x+this.m_vertices[0].y *d.y;
			for (var i=1;i < this.m_vertexCount;++i){
				var value=this.m_vertices[i].x *d.x+this.m_vertices[i].y *d.y;
				if (value > bestValue){
					bestIndex=i;
					bestValue=value;
				}
			}
			return this.m_vertices[bestIndex];
		}

		__proto.Validate=function(){
			return false;
		}

		__proto.Reserve=function(count){
			for (var i=this.m_vertices.length;i < count;i++){
				this.m_vertices[i]=new b2Vec2();
				this.m_normals[i]=new b2Vec2();
			}
		}

		b2PolygonShape.AsArray=function(vertices,vertexCount){
			var polygonShape=new b2PolygonShape();
			polygonShape.SetAsArray(vertices,vertexCount);
			return polygonShape;
		}

		b2PolygonShape.AsVector=function(vertices,vertexCount){
			var polygonShape=new b2PolygonShape();
			polygonShape.SetAsVector(vertices,vertexCount);
			return polygonShape;
		}

		b2PolygonShape.AsBox=function(hx,hy){
			var polygonShape=new b2PolygonShape();
			polygonShape.SetAsBox(hx,hy);
			return polygonShape;
		}

		b2PolygonShape.AsOrientedBox=function(hx,hy,center,angle){
			(angle===void 0)&& (angle=0.0);
			var polygonShape=new b2PolygonShape();
			polygonShape.SetAsOrientedBox(hx,hy,center,angle);
			return polygonShape;
		}

		b2PolygonShape.AsEdge=function(v1,v2){
			var polygonShape=new b2PolygonShape();
			polygonShape.SetAsEdge(v1,v2);
			return polygonShape;
		}

		b2PolygonShape.ComputeCentroid=function(vs,count){
			var c=new b2Vec2();
			var area=0.0;
			var p1X=0.0;
			var p1Y=0.0;
			var inv3=1.0 / 3.0;
			for (var i=0;i < count;++i){
				var p2=vs[i];
				var p3=i+1 < count ? vs[int(i+1)] :vs[0];
				var e1X=p2.x-p1X;
				var e1Y=p2.y-p1Y;
				var e2X=p3.x-p1X;
				var e2Y=p3.y-p1Y;
				var D=(e1X *e2Y-e1Y *e2X);
				var triangleArea=0.5 *D;
				area+=triangleArea;
				c.x+=triangleArea *inv3 *(p1X+p2.x+p3.x);
				c.y+=triangleArea *inv3 *(p1Y+p2.y+p3.y);
			}
			c.x *=1.0 / area;
			c.y *=1.0 / area;
			return c;
		}

		b2PolygonShape.ComputeOBB=function(obb,vs,count){
			var i=0;
			var p=new Array(count+1);
			for (i=0;i < count;++i){
				p[i]=vs[i];
			}
			p[count]=p[0];
			var minArea=Number.MAX_VALUE;
			for (i=1;i <=count;++i){
				var root=p[int(i-1)];
				var uxX=p[i].x-root.x;
				var uxY=p[i].y-root.y;
				var length=Math.sqrt(uxX*uxX+uxY*uxY);
				uxX /=length;
				uxY /=length;
				var uyX=-uxY;
				var uyY=uxX;
				var lowerX=Number.MAX_VALUE;
				var lowerY=Number.MAX_VALUE;
				var upperX=-Number.MAX_VALUE;
				var upperY=-Number.MAX_VALUE;
				for (var j=0;j < count;++j){
					var dX=p[j].x-root.x;
					var dY=p[j].y-root.y;
					var rX=(uxX*dX+uxY*dY);
					var rY=(uyX*dX+uyY*dY);
					if (rX < lowerX)lowerX=rX;
					if (rY < lowerY)lowerY=rY;
					if (rX > upperX)upperX=rX;
					if (rY > upperY)upperY=rY;
				};
				var area=(upperX-lowerX)*(upperY-lowerY);
				if (area < 0.95 *minArea){
					minArea=area;
					obb.R.col1.x=uxX;
					obb.R.col1.y=uxY;
					obb.R.col2.x=uyX;
					obb.R.col2.y=uyY;
					var centerX=0.5 *(lowerX+upperX);
					var centerY=0.5 *(lowerY+upperY);
					var tMat=obb.R;
					obb.center.x=root.x+(tMat.col1.x *centerX+tMat.col2.x *centerY);
					obb.center.y=root.y+(tMat.col1.y *centerX+tMat.col2.y *centerY);
					obb.extents.x=0.5 *(upperX-lowerX);
					obb.extents.y=0.5 *(upperY-lowerY);
				}
			}
		}

		__static(b2PolygonShape,
		['s_mat',function(){return this.s_mat=new b2Mat22();}
		]);
		return b2PolygonShape;
	})(b2Shape)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2circlecontact.as
	;
	//class Box2D.Dynamics.Contacts.b2CircleContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2CircleContact=(function(_super){
		function b2CircleContact(){b2CircleContact.__super.call(this);;
		};

		__class(b2CircleContact,'Box2D.Dynamics.Contacts.b2CircleContact',false,_super);
		var __proto=b2CircleContact.prototype;
		__proto.Reset=function(fixtureA,fixtureB){
			_super.prototype.Reset.call(this,fixtureA,fixtureB);
		}

		__proto.Evaluate=function(){
			var bA=this.m_fixtureA.GetBody();
			var bB=this.m_fixtureB.GetBody();
			b2Collision.CollideCircles(this.m_manifold,
			this.m_fixtureA.GetShape(),bA.m_xf,
			this.m_fixtureB.GetShape(),bB.m_xf);
		}

		b2CircleContact.Create=function(allocator){
			return new b2CircleContact();
		}

		b2CircleContact.Destroy=function(contact,allocator){}
		return b2CircleContact;
	})(b2Contact)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2edgeandcirclecontact.as
	;
	//class Box2D.Dynamics.Contacts.b2EdgeAndCircleContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2EdgeAndCircleContact=(function(_super){
		function b2EdgeAndCircleContact(){b2EdgeAndCircleContact.__super.call(this);;
		};

		__class(b2EdgeAndCircleContact,'Box2D.Dynamics.Contacts.b2EdgeAndCircleContact',false,_super);
		var __proto=b2EdgeAndCircleContact.prototype;
		__proto.Reset=function(fixtureA,fixtureB){
			_super.prototype.Reset.call(this,fixtureA,fixtureB);
		}

		__proto.Evaluate=function(){
			var bA=this.m_fixtureA.GetBody();
			var bB=this.m_fixtureB.GetBody();
			this.b2CollideEdgeAndCircle(this.m_manifold,
			this.m_fixtureA.GetShape(),bA.m_xf,
			this.m_fixtureB.GetShape(),bB.m_xf);
		}

		__proto.b2CollideEdgeAndCircle=function(manifold,edge,xf1,circle,xf2){}
		b2EdgeAndCircleContact.Create=function(allocator){
			return new b2EdgeAndCircleContact();
		}

		b2EdgeAndCircleContact.Destroy=function(contact,allocator){}
		return b2EdgeAndCircleContact;
	})(b2Contact)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2nullcontact.as
	;
	//class Box2D.Dynamics.Contacts.b2NullContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2NullContact=(function(_super){
		function b2NullContact(){
			b2NullContact.__super.call(this);
		}

		__class(b2NullContact,'Box2D.Dynamics.Contacts.b2NullContact',false,_super);
		var __proto=b2NullContact.prototype;
		__proto.Evaluate=LAYAFNVOID/*function(){}*/
		return b2NullContact;
	})(b2Contact)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2polyandcirclecontact.as
	;
	//class Box2D.Dynamics.Contacts.b2PolyAndCircleContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2PolyAndCircleContact=(function(_super){
		function b2PolyAndCircleContact(){b2PolyAndCircleContact.__super.call(this);;
		};

		__class(b2PolyAndCircleContact,'Box2D.Dynamics.Contacts.b2PolyAndCircleContact',false,_super);
		var __proto=b2PolyAndCircleContact.prototype;
		__proto.Reset=function(fixtureA,fixtureB){
			_super.prototype.Reset.call(this,fixtureA,fixtureB);
			b2Settings.b2Assert(fixtureA.GetType()==/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1);
			b2Settings.b2Assert(fixtureB.GetType()==/*Box2D.Collision.Shapes.b2Shape.e_circleShape*/0);
		}

		__proto.Evaluate=function(){
			var bA=this.m_fixtureA.m_body;
			var bB=this.m_fixtureB.m_body;
			b2Collision.CollidePolygonAndCircle(this.m_manifold,
			this.m_fixtureA.GetShape(),bA.m_xf,
			this.m_fixtureB.GetShape(),bB.m_xf);
		}

		b2PolyAndCircleContact.Create=function(allocator){
			return new b2PolyAndCircleContact();
		}

		b2PolyAndCircleContact.Destroy=function(contact,allocator){}
		return b2PolyAndCircleContact;
	})(b2Contact)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2polyandedgecontact.as
	;
	//class Box2D.Dynamics.Contacts.b2PolyAndEdgeContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2PolyAndEdgeContact=(function(_super){
		function b2PolyAndEdgeContact(){b2PolyAndEdgeContact.__super.call(this);;
		};

		__class(b2PolyAndEdgeContact,'Box2D.Dynamics.Contacts.b2PolyAndEdgeContact',false,_super);
		var __proto=b2PolyAndEdgeContact.prototype;
		__proto.Reset=function(fixtureA,fixtureB){
			_super.prototype.Reset.call(this,fixtureA,fixtureB);
			b2Settings.b2Assert(fixtureA.GetType()==/*Box2D.Collision.Shapes.b2Shape.e_polygonShape*/1);
			b2Settings.b2Assert(fixtureB.GetType()==/*Box2D.Collision.Shapes.b2Shape.e_edgeShape*/2);
		}

		__proto.Evaluate=function(){
			var bA=this.m_fixtureA.GetBody();
			var bB=this.m_fixtureB.GetBody();
			this.b2CollidePolyAndEdge(this.m_manifold,
			this.m_fixtureA.GetShape(),bA.m_xf,
			this.m_fixtureB.GetShape(),bB.m_xf);
		}

		__proto.b2CollidePolyAndEdge=function(manifold,polygon,xf1,edge,xf2){}
		b2PolyAndEdgeContact.Create=function(allocator){
			return new b2PolyAndEdgeContact();
		}

		b2PolyAndEdgeContact.Destroy=function(contact,allocator){}
		return b2PolyAndEdgeContact;
	})(b2Contact)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/contacts/b2polygoncontact.as
	;
	//class Box2D.Dynamics.Contacts.b2PolygonContact extends Box2D.Dynamics.Contacts.b2Contact
	var b2PolygonContact=(function(_super){
		function b2PolygonContact(){b2PolygonContact.__super.call(this);;
		};

		__class(b2PolygonContact,'Box2D.Dynamics.Contacts.b2PolygonContact',false,_super);
		var __proto=b2PolygonContact.prototype;
		__proto.Reset=function(fixtureA,fixtureB){
			_super.prototype.Reset.call(this,fixtureA,fixtureB);
		}

		__proto.Evaluate=function(){
			var bA=this.m_fixtureA.GetBody();
			var bB=this.m_fixtureB.GetBody();
			b2Collision.CollidePolygons(this.m_manifold,
			this.m_fixtureA.GetShape(),bA.m_xf,
			this.m_fixtureB.GetShape(),bB.m_xf);
		}

		b2PolygonContact.Create=function(allocator){
			return new b2PolygonContact();
		}

		b2PolygonContact.Destroy=function(contact,allocator){}
		return b2PolygonContact;
	})(b2Contact)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2buoyancycontroller.as
	//class Box2D.Dynamics.Controllers.b2BuoyancyController extends Box2D.Dynamics.Controllers.b2Controller
	var b2BuoyancyController=(function(_super){
		function b2BuoyancyController(){
			this.offset=0;
			this.density=0;
			this.linearDrag=2;
			this.angularDrag=1;
			this.useDensity=false;
			this.useWorldGravity=true;
			this.gravity=null;
			b2BuoyancyController.__super.call(this);
			this.normal=new b2Vec2(0,-1);
			this.velocity=new b2Vec2(0,0);
		}

		__class(b2BuoyancyController,'Box2D.Dynamics.Controllers.b2BuoyancyController',false,_super);
		var __proto=b2BuoyancyController.prototype;
		__proto.Step=function(step){
			if(!this.m_bodyList)
				return;
			if(this.useWorldGravity){
				this.gravity=this.GetWorld().GetGravity().Copy();
			}
			for(var i=this.m_bodyList;i;i=i.nextBody){
				var body=i.body;
				if(body.IsAwake()==false){
					continue ;
				};
				var areac=new b2Vec2();
				var massc=new b2Vec2();
				var area=0.0;
				var mass=0.0;
				for(var fixture=body.GetFixtureList();fixture;fixture=fixture.GetNext()){
					var sc=new b2Vec2();
					var sarea=fixture.GetShape().ComputeSubmergedArea(this.normal,this.offset,body.GetTransform(),sc);
					area+=sarea;
					areac.x+=sarea *sc.x;
					areac.y+=sarea *sc.y;
					var shapeDensity=NaN;
					if (this.useDensity){
						shapeDensity=1;
						}else{
						shapeDensity=1;
					}
					mass+=sarea*shapeDensity;
					massc.x+=sarea *sc.x *shapeDensity;
					massc.y+=sarea *sc.y *shapeDensity;
				}
				areac.x/=area;
				areac.y/=area;
				massc.x/=mass;
				massc.y/=mass;
				if(area<Number.MIN_VALUE)
					continue ;
				var buoyancyForce=this.gravity.GetNegative();
				buoyancyForce.Multiply(this.density*area)
				body.ApplyForce(buoyancyForce,massc);
				var dragForce=body.GetLinearVelocityFromWorldPoint(areac);
				dragForce.Subtract(this.velocity);
				dragForce.Multiply(-this.linearDrag*area);
				body.ApplyForce(dragForce,areac);
				body.ApplyTorque(-body.GetInertia()/body.GetMass()*area*body.GetAngularVelocity()*this.angularDrag)
			}
		}

		__proto.Draw=function(debugDraw){
			var r=1000;
			var p1=new b2Vec2();
			var p2=new b2Vec2();
			p1.x=this.normal.x *this.offset+this.normal.y *r;
			p1.y=this.normal.y *this.offset-this.normal.x *r;
			p2.x=this.normal.x *this.offset-this.normal.y *r;
			p2.y=this.normal.y *this.offset+this.normal.x *r;
			var color=new b2Color(0,0,1);
			debugDraw.DrawSegment(p1,p2,color);
		}

		return b2BuoyancyController;
	})(b2Controller)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2constantaccelcontroller.as
	//class Box2D.Dynamics.Controllers.b2ConstantAccelController extends Box2D.Dynamics.Controllers.b2Controller
	var b2ConstantAccelController=(function(_super){
		function b2ConstantAccelController(){
			b2ConstantAccelController.__super.call(this);
			this.A=new b2Vec2(0,0);
		}

		__class(b2ConstantAccelController,'Box2D.Dynamics.Controllers.b2ConstantAccelController',false,_super);
		var __proto=b2ConstantAccelController.prototype;
		__proto.Step=function(step){
			var smallA=new b2Vec2(this.A.x*step.dt,this.A.y*step.dt);
			for(var i=this.m_bodyList;i;i=i.nextBody){
				var body=i.body;
				if(!body.IsAwake())
					continue ;
				body.SetLinearVelocity(new b2Vec2(
				body.GetLinearVelocity().x+smallA.x,
				body.GetLinearVelocity().y+smallA.y));
			}
		}

		return b2ConstantAccelController;
	})(b2Controller)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2constantforcecontroller.as
	//class Box2D.Dynamics.Controllers.b2ConstantForceController extends Box2D.Dynamics.Controllers.b2Controller
	var b2ConstantForceController=(function(_super){
		function b2ConstantForceController(){
			b2ConstantForceController.__super.call(this);
			this.F=new b2Vec2(0,0);
		}

		__class(b2ConstantForceController,'Box2D.Dynamics.Controllers.b2ConstantForceController',false,_super);
		var __proto=b2ConstantForceController.prototype;
		__proto.Step=function(step){
			for(var i=this.m_bodyList;i;i=i.nextBody){
				var body=i.body;
				if(!body.IsAwake())
					continue ;
				body.ApplyForce(this.F,body.GetWorldCenter());
			}
		}

		return b2ConstantForceController;
	})(b2Controller)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2gravitycontroller.as
	//class Box2D.Dynamics.Controllers.b2GravityController extends Box2D.Dynamics.Controllers.b2Controller
	var b2GravityController=(function(_super){
		function b2GravityController(){
			this.G=1;
			this.invSqr=true;
			b2GravityController.__super.call(this);
		}

		__class(b2GravityController,'Box2D.Dynamics.Controllers.b2GravityController',false,_super);
		var __proto=b2GravityController.prototype;
		__proto.Step=function(step){
			var i=null;
			var body1=null;
			var p1=null;
			var mass1=0;
			var j=null;
			var body2=null;
			var p2=null;
			var dx=0;
			var dy=0;
			var r2=0;
			var f=null;
			if(this.invSqr){
				for(i=this.m_bodyList;i;i=i.nextBody){
					body1=i.body;
					p1=body1.GetWorldCenter();
					mass1=body1.GetMass();
					for(j=this.m_bodyList;j!=i;j=j.nextBody){
						body2=j.body;
						p2=body2.GetWorldCenter()
						dx=p2.x-p1.x;
						dy=p2.y-p1.y;
						r2=dx*dx+dy*dy;
						if(r2<Number.MIN_VALUE)
							continue ;
						f=new b2Vec2(dx,dy);
						f.Multiply(this.G / r2 / Math.sqrt(r2)*mass1*body2.GetMass());
						if(body1.IsAwake())
							body1.ApplyForce(f,p1);
						f.Multiply(-1);
						if(body2.IsAwake())
							body2.ApplyForce(f,p2);
					}
				}
				}else{
				for(i=this.m_bodyList;i;i=i.nextBody){
					body1=i.body;
					p1=body1.GetWorldCenter();
					mass1=body1.GetMass();
					for(j=this.m_bodyList;j!=i;j=j.nextBody){
						body2=j.body;
						p2=body2.GetWorldCenter()
						dx=p2.x-p1.x;
						dy=p2.y-p1.y;
						r2=dx*dx+dy*dy;
						if(r2<Number.MIN_VALUE)
							continue ;
						f=new b2Vec2(dx,dy);
						f.Multiply(this.G / r2 *mass1 *body2.GetMass());
						if(body1.IsAwake())
							body1.ApplyForce(f,p1);
						f.Multiply(-1);
						if(body2.IsAwake())
							body2.ApplyForce(f,p2);
					}
				}
			}
		}

		return b2GravityController;
	})(b2Controller)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/controllers/b2tensordampingcontroller.as
	//class Box2D.Dynamics.Controllers.b2TensorDampingController extends Box2D.Dynamics.Controllers.b2Controller
	var b2TensorDampingController=(function(_super){
		function b2TensorDampingController(){
			this.maxTimestep=0;
			b2TensorDampingController.__super.call(this);
			this.T=new b2Mat22();
		}

		__class(b2TensorDampingController,'Box2D.Dynamics.Controllers.b2TensorDampingController',false,_super);
		var __proto=b2TensorDampingController.prototype;
		__proto.SetAxisAligned=function(xDamping,yDamping){
			this.T.col1.x=-xDamping;
			this.T.col1.y=0;
			this.T.col2.x=0;
			this.T.col2.y=-yDamping;
			if(xDamping>0 || yDamping>0){
				this.maxTimestep=1/Math.max(xDamping,yDamping);
				}else{
				this.maxTimestep=0;
			}
		}

		__proto.Step=function(step){
			var timestep=step.dt;
			if(timestep<=Number.MIN_VALUE)
				return;
			if(timestep>this.maxTimestep && this.maxTimestep>0)
				timestep=this.maxTimestep;
			for(var i=this.m_bodyList;i;i=i.nextBody){
				var body=i.body;
				if(!body.IsAwake()){
					continue ;
				};
				var damping=
				body.GetWorldVector(
				b2Math.MulMV(this.T,
				body.GetLocalVector(
				body.GetLinearVelocity())));
				body.SetLinearVelocity(new b2Vec2(
				body.GetLinearVelocity().x+damping.x *timestep,
				body.GetLinearVelocity().y+damping.y *timestep));
			}
		}

		return b2TensorDampingController;
	})(b2Controller)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2distancejoint.as
	;
	//class Box2D.Dynamics.Joints.b2DistanceJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2DistanceJoint=(function(_super){
		function b2DistanceJoint(def){
			this.m_frequencyHz=NaN;
			this.m_dampingRatio=NaN;
			this.m_gamma=NaN;
			this.m_bias=NaN;
			this.m_impulse=NaN;
			this.m_mass=NaN;
			this.m_length=NaN;
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_u=new b2Vec2();
			b2DistanceJoint.__super.call(this,def);
			var tMat;
			var tX=NaN;
			var tY=NaN;
			this.m_localAnchor1.SetV(def.localAnchorA);
			this.m_localAnchor2.SetV(def.localAnchorB);
			this.m_length=def.length;
			this.m_frequencyHz=def.frequencyHz;
			this.m_dampingRatio=def.dampingRatio;
			this.m_impulse=0.0;
			this.m_gamma=0.0;
			this.m_bias=0.0;
		}

		__class(b2DistanceJoint,'Box2D.Dynamics.Joints.b2DistanceJoint',false,_super);
		var __proto=b2DistanceJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse *this.m_u.x,inv_dt *this.m_impulse *this.m_u.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return 0.0;
		}

		__proto.GetLength=function(){
			return this.m_length;
		}

		__proto.SetLength=function(length){
			this.m_length=length;
		}

		__proto.GetFrequency=function(){
			return this.m_frequencyHz;
		}

		__proto.SetFrequency=function(hz){
			this.m_frequencyHz=hz;
		}

		__proto.GetDampingRatio=function(){
			return this.m_dampingRatio;
		}

		__proto.SetDampingRatio=function(ratio){
			this.m_dampingRatio=ratio;
		}

		__proto.InitVelocityConstraints=function(step){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			this.m_u.x=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
			this.m_u.y=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
			var length=Math.sqrt(this.m_u.x*this.m_u.x+this.m_u.y*this.m_u.y);
			if (length > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
				this.m_u.Multiply(1.0 / length);
			}
			else{
				this.m_u.SetZero();
			};
			var cr1u=(r1X *this.m_u.y-r1Y *this.m_u.x);
			var cr2u=(r2X *this.m_u.y-r2Y *this.m_u.x);
			var invMass=bA.m_invMass+bA.m_invI *cr1u *cr1u+bB.m_invMass+bB.m_invI *cr2u *cr2u;
			this.m_mass=invMass !=0.0 ? 1.0 / invMass :0.0;
			if (this.m_frequencyHz > 0.0){
				var C=length-this.m_length;
				var omega=2.0 *Math.PI *this.m_frequencyHz;
				var d=2.0 *this.m_mass *this.m_dampingRatio *omega;
				var k=this.m_mass *omega *omega;
				this.m_gamma=step.dt *(d+step.dt *k);
				this.m_gamma=this.m_gamma !=0.0?1 / this.m_gamma:0.0;
				this.m_bias=C *step.dt *k *this.m_gamma;
				this.m_mass=invMass+this.m_gamma;
				this.m_mass=this.m_mass !=0.0 ? 1.0 / this.m_mass :0.0;
			}
			if (step.warmStarting){
				this.m_impulse *=step.dtRatio;
				var PX=this.m_impulse *this.m_u.x;
				var PY=this.m_impulse *this.m_u.y;
				bA.m_linearVelocity.x-=bA.m_invMass *PX;
				bA.m_linearVelocity.y-=bA.m_invMass *PY;
				bA.m_angularVelocity-=bA.m_invI *(r1X *PY-r1Y *PX);
				bB.m_linearVelocity.x+=bB.m_invMass *PX;
				bB.m_linearVelocity.y+=bB.m_invMass *PY;
				bB.m_angularVelocity+=bB.m_invI *(r2X *PY-r2Y *PX);
			}
			else{
				this.m_impulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var tMat;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var v1X=bA.m_linearVelocity.x+(-bA.m_angularVelocity *r1Y);
			var v1Y=bA.m_linearVelocity.y+(bA.m_angularVelocity *r1X);
			var v2X=bB.m_linearVelocity.x+(-bB.m_angularVelocity *r2Y);
			var v2Y=bB.m_linearVelocity.y+(bB.m_angularVelocity *r2X);
			var Cdot=(this.m_u.x *(v2X-v1X)+this.m_u.y *(v2Y-v1Y));
			var impulse=-this.m_mass *(Cdot+this.m_bias+this.m_gamma *this.m_impulse);
			this.m_impulse+=impulse;
			var PX=impulse *this.m_u.x;
			var PY=impulse *this.m_u.y;
			bA.m_linearVelocity.x-=bA.m_invMass *PX;
			bA.m_linearVelocity.y-=bA.m_invMass *PY;
			bA.m_angularVelocity-=bA.m_invI *(r1X *PY-r1Y *PX);
			bB.m_linearVelocity.x+=bB.m_invMass *PX;
			bB.m_linearVelocity.y+=bB.m_invMass *PY;
			bB.m_angularVelocity+=bB.m_invI *(r2X *PY-r2Y *PX);
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var tMat;
			if (this.m_frequencyHz > 0.0){
				return true;
			};
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var dX=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
			var dY=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
			var length=Math.sqrt(dX*dX+dY*dY);
			dX /=length;
			dY /=length;
			var C=length-this.m_length;
			C=b2Math.Clamp(C,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2);
			var impulse=-this.m_mass *C;
			this.m_u.Set(dX,dY);
			var PX=impulse *this.m_u.x;
			var PY=impulse *this.m_u.y;
			bA.m_sweep.c.x-=bA.m_invMass *PX;
			bA.m_sweep.c.y-=bA.m_invMass *PY;
			bA.m_sweep.a-=bA.m_invI *(r1X *PY-r1Y *PX);
			bB.m_sweep.c.x+=bB.m_invMass *PX;
			bB.m_sweep.c.y+=bB.m_invMass *PY;
			bB.m_sweep.a+=bB.m_invI *(r2X *PY-r2Y *PX);
			bA.SynchronizeTransform();
			bB.SynchronizeTransform();
			return b2Math.Abs(C)< /*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
		}

		return b2DistanceJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2frictionjoint.as
	;
	//class Box2D.Dynamics.Joints.b2FrictionJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2FrictionJoint=(function(_super){
		function b2FrictionJoint(def){
			this.m_angularMass=NaN;
			this.m_angularImpulse=NaN;
			this.m_maxForce=NaN;
			this.m_maxTorque=NaN;
			this.m_localAnchorA=new b2Vec2();
			this.m_localAnchorB=new b2Vec2();
			this.m_linearMass=new b2Mat22();
			this.m_linearImpulse=new b2Vec2();
			b2FrictionJoint.__super.call(this,def);
			this.m_localAnchorA.SetV(def.localAnchorA);
			this.m_localAnchorB.SetV(def.localAnchorB);
			this.m_linearMass.SetZero();
			this.m_angularMass=0.0;
			this.m_linearImpulse.SetZero();
			this.m_angularImpulse=0.0;
			this.m_maxForce=def.maxForce;
			this.m_maxTorque=def.maxTorque;
		}

		__class(b2FrictionJoint,'Box2D.Dynamics.Joints.b2FrictionJoint',false,_super);
		var __proto=b2FrictionJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_linearImpulse.x,inv_dt *this.m_linearImpulse.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return inv_dt *this.m_angularImpulse;
		}

		__proto.SetMaxForce=function(force){
			this.m_maxForce=force;
		}

		__proto.GetMaxForce=function(){
			return this.m_maxForce;
		}

		__proto.SetMaxTorque=function(torque){
			this.m_maxTorque=torque;
		}

		__proto.GetMaxTorque=function(){
			return this.m_maxTorque;
		}

		__proto.InitVelocityConstraints=function(step){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var rAX=this.m_localAnchorA.x-bA.m_sweep.localCenter.x;
			var rAY=this.m_localAnchorA.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rAX+tMat.col2.x *rAY);
			rAY=(tMat.col1.y *rAX+tMat.col2.y *rAY);
			rAX=tX;
			tMat=bB.m_xf.R;
			var rBX=this.m_localAnchorB.x-bB.m_sweep.localCenter.x;
			var rBY=this.m_localAnchorB.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rBX+tMat.col2.x *rBY);
			rBY=(tMat.col1.y *rBX+tMat.col2.y *rBY);
			rBX=tX;
			var mA=bA.m_invMass;
			var mB=bB.m_invMass;
			var iA=bA.m_invI;
			var iB=bB.m_invI;
			var K=new b2Mat22();
			K.col1.x=mA+mB;K.col2.x=0.0;
			K.col1.y=0.0;K.col2.y=mA+mB;
			K.col1.x+=iA *rAY *rAY;K.col2.x+=-iA *rAX *rAY;
			K.col1.y+=-iA *rAX *rAY;K.col2.y+=iA *rAX *rAX;
			K.col1.x+=iB *rBY *rBY;K.col2.x+=-iB *rBX *rBY;
			K.col1.y+=-iB *rBX *rBY;K.col2.y+=iB *rBX *rBX;
			K.GetInverse(this.m_linearMass);
			this.m_angularMass=iA+iB;
			if (this.m_angularMass > 0.0){
				this.m_angularMass=1.0 / this.m_angularMass;
			}
			if (step.warmStarting){
				this.m_linearImpulse.x *=step.dtRatio;
				this.m_linearImpulse.y *=step.dtRatio;
				this.m_angularImpulse *=step.dtRatio;
				var P=this.m_linearImpulse;
				bA.m_linearVelocity.x-=mA *P.x;
				bA.m_linearVelocity.y-=mA *P.y;
				bA.m_angularVelocity-=iA *(rAX *P.y-rAY *P.x+this.m_angularImpulse);
				bB.m_linearVelocity.x+=mB *P.x;
				bB.m_linearVelocity.y+=mB *P.y;
				bB.m_angularVelocity+=iB *(rBX *P.y-rBY *P.x+this.m_angularImpulse);
			}
			else{
				this.m_linearImpulse.SetZero();
				this.m_angularImpulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var vA=bA.m_linearVelocity;
			var wA=bA.m_angularVelocity;
			var vB=bB.m_linearVelocity;
			var wB=bB.m_angularVelocity;
			var mA=bA.m_invMass;
			var mB=bB.m_invMass;
			var iA=bA.m_invI;
			var iB=bB.m_invI;
			tMat=bA.m_xf.R;
			var rAX=this.m_localAnchorA.x-bA.m_sweep.localCenter.x;
			var rAY=this.m_localAnchorA.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rAX+tMat.col2.x *rAY);
			rAY=(tMat.col1.y *rAX+tMat.col2.y *rAY);
			rAX=tX;
			tMat=bB.m_xf.R;
			var rBX=this.m_localAnchorB.x-bB.m_sweep.localCenter.x;
			var rBY=this.m_localAnchorB.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rBX+tMat.col2.x *rBY);
			rBY=(tMat.col1.y *rBX+tMat.col2.y *rBY);
			rBX=tX;
			var maxImpulse=NaN;{
				var Cdot=wB-wA;
				var impulse=-this.m_angularMass *Cdot;
				var oldImpulse=this.m_angularImpulse;
				maxImpulse=step.dt *this.m_maxTorque;
				this.m_angularImpulse=b2Math.Clamp(this.m_angularImpulse+impulse,-maxImpulse,maxImpulse);
				impulse=this.m_angularImpulse-oldImpulse;
				wA-=iA *impulse;
				wB+=iB *impulse;
				}{
				var CdotX=vB.x-wB *rBY-vA.x+wA *rAY;
				var CdotY=vB.y+wB *rBX-vA.y-wA *rAX;
				var impulseV=b2Math.MulMV(this.m_linearMass,new b2Vec2(-CdotX,-CdotY));
				var oldImpulseV=this.m_linearImpulse.Copy();
				this.m_linearImpulse.Add(impulseV);
				maxImpulse=step.dt *this.m_maxForce;
				if (this.m_linearImpulse.LengthSquared()> maxImpulse *maxImpulse){
					this.m_linearImpulse.Normalize();
					this.m_linearImpulse.Multiply(maxImpulse);
				}
				impulseV=b2Math.SubtractVV(this.m_linearImpulse,oldImpulseV);
				vA.x-=mA *impulseV.x;
				vA.y-=mA *impulseV.y;
				wA-=iA *(rAX *impulseV.y-rAY *impulseV.x);
				vB.x+=mB *impulseV.x;
				vB.y+=mB *impulseV.y;
				wB+=iB *(rBX *impulseV.y-rBY *impulseV.x);
			}
			bA.m_angularVelocity=wA;
			bB.m_angularVelocity=wB;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			return true;
		}

		return b2FrictionJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2distancejointdef.as
	;
	//class Box2D.Dynamics.Joints.b2DistanceJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2DistanceJointDef=(function(_super){
		function b2DistanceJointDef(){
			this.length=NaN;
			this.frequencyHz=NaN;
			this.dampingRatio=NaN;
			b2DistanceJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_distanceJoint*/3;
			this.length=1.0;
			this.frequencyHz=0.0;
			this.dampingRatio=0.0;
		}

		__class(b2DistanceJointDef,'Box2D.Dynamics.Joints.b2DistanceJointDef',false,_super);
		var __proto=b2DistanceJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchorA,anchorB){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchorA));
			this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchorB));
			var dX=anchorB.x-anchorA.x;
			var dY=anchorB.y-anchorA.y;
			this.length=Math.sqrt(dX*dX+dY*dY);
			this.frequencyHz=0.0;
			this.dampingRatio=0.0;
		}

		return b2DistanceJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2gearjoint.as
	;
	//class Box2D.Dynamics.Joints.b2GearJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2GearJoint=(function(_super){
		function b2GearJoint(def){
			this.m_ground1=null;
			this.m_ground2=null;
			this.m_revolute1=null;
			this.m_prismatic1=null;
			this.m_revolute2=null;
			this.m_prismatic2=null;
			this.m_constant=NaN;
			this.m_ratio=NaN;
			this.m_mass=NaN;
			this.m_impulse=NaN;
			this.m_groundAnchor1=new b2Vec2();
			this.m_groundAnchor2=new b2Vec2();
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_J=new b2Jacobian();
			b2GearJoint.__super.call(this,def);
			var type1=def.joint1.m_type;
			var type2=def.joint2.m_type;
			this.m_revolute1=null;
			this.m_prismatic1=null;
			this.m_revolute2=null;
			this.m_prismatic2=null;
			var coordinate1=NaN;
			var coordinate2=NaN;
			this.m_ground1=def.joint1.GetBodyA();
			this.m_bodyA=def.joint1.GetBodyB();
			if (type1==/*Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint*/1){
				this.m_revolute1=def.joint1;
				this.m_groundAnchor1.SetV(this.m_revolute1.m_localAnchor1);
				this.m_localAnchor1.SetV(this.m_revolute1.m_localAnchor2);
				coordinate1=this.m_revolute1.GetJointAngle();
			}
			else{
				this.m_prismatic1=def.joint1;
				this.m_groundAnchor1.SetV(this.m_prismatic1.m_localAnchor1);
				this.m_localAnchor1.SetV(this.m_prismatic1.m_localAnchor2);
				coordinate1=this.m_prismatic1.GetJointTranslation();
			}
			this.m_ground2=def.joint2.GetBodyA();
			this.m_bodyB=def.joint2.GetBodyB();
			if (type2==/*Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint*/1){
				this.m_revolute2=def.joint2;
				this.m_groundAnchor2.SetV(this.m_revolute2.m_localAnchor1);
				this.m_localAnchor2.SetV(this.m_revolute2.m_localAnchor2);
				coordinate2=this.m_revolute2.GetJointAngle();
			}
			else{
				this.m_prismatic2=def.joint2;
				this.m_groundAnchor2.SetV(this.m_prismatic2.m_localAnchor1);
				this.m_localAnchor2.SetV(this.m_prismatic2.m_localAnchor2);
				coordinate2=this.m_prismatic2.GetJointTranslation();
			}
			this.m_ratio=def.ratio;
			this.m_constant=coordinate1+this.m_ratio *coordinate2;
			this.m_impulse=0.0;
		}

		__class(b2GearJoint,'Box2D.Dynamics.Joints.b2GearJoint',false,_super);
		var __proto=b2GearJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse *this.m_J.linearB.x,inv_dt *this.m_impulse *this.m_J.linearB.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			var tMat=this.m_bodyB.m_xf.R;
			var rX=this.m_localAnchor1.x-this.m_bodyB.m_sweep.localCenter.x;
			var rY=this.m_localAnchor1.y-this.m_bodyB.m_sweep.localCenter.y;
			var tX=tMat.col1.x *rX+tMat.col2.x *rY;
			rY=tMat.col1.y *rX+tMat.col2.y *rY;
			rX=tX;
			var PX=this.m_impulse *this.m_J.linearB.x;
			var PY=this.m_impulse *this.m_J.linearB.y;
			return inv_dt *(this.m_impulse *this.m_J.angularB-rX *PY+rY *PX);
		}

		__proto.GetRatio=function(){
			return this.m_ratio;
		}

		__proto.SetRatio=function(ratio){
			this.m_ratio=ratio;
		}

		__proto.InitVelocityConstraints=function(step){
			var g1=this.m_ground1;
			var g2=this.m_ground2;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var ugX=NaN;
			var ugY=NaN;
			var rX=NaN;
			var rY=NaN;
			var tMat;
			var tVec;
			var crug=NaN;
			var tX=NaN;
			var K=0.0;
			this.m_J.SetZero();
			if (this.m_revolute1){
				this.m_J.angularA=-1.0;
				K+=bA.m_invI;
			}
			else{
				tMat=g1.m_xf.R;
				tVec=this.m_prismatic1.m_localXAxis1;
				ugX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
				ugY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
				tMat=bA.m_xf.R;
				rX=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				rY=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=tMat.col1.x *rX+tMat.col2.x *rY;
				rY=tMat.col1.y *rX+tMat.col2.y *rY;
				rX=tX;
				crug=rX *ugY-rY *ugX;
				this.m_J.linearA.Set(-ugX,-ugY);
				this.m_J.angularA=-crug;
				K+=bA.m_invMass+bA.m_invI *crug *crug;
			}
			if (this.m_revolute2){
				this.m_J.angularB=-this.m_ratio;
				K+=this.m_ratio *this.m_ratio *bB.m_invI;
			}
			else{
				tMat=g2.m_xf.R;
				tVec=this.m_prismatic2.m_localXAxis1;
				ugX=tMat.col1.x *tVec.x+tMat.col2.x *tVec.y;
				ugY=tMat.col1.y *tVec.x+tMat.col2.y *tVec.y;
				tMat=bB.m_xf.R;
				rX=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				rY=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=tMat.col1.x *rX+tMat.col2.x *rY;
				rY=tMat.col1.y *rX+tMat.col2.y *rY;
				rX=tX;
				crug=rX *ugY-rY *ugX;
				this.m_J.linearB.Set(-this.m_ratio*ugX,-this.m_ratio*ugY);
				this.m_J.angularB=-this.m_ratio *crug;
				K+=this.m_ratio *this.m_ratio *(bB.m_invMass+bB.m_invI *crug *crug);
			}
			this.m_mass=K > 0.0?1.0 / K:0.0;
			if (step.warmStarting){
				bA.m_linearVelocity.x+=bA.m_invMass *this.m_impulse *this.m_J.linearA.x;
				bA.m_linearVelocity.y+=bA.m_invMass *this.m_impulse *this.m_J.linearA.y;
				bA.m_angularVelocity+=bA.m_invI *this.m_impulse *this.m_J.angularA;
				bB.m_linearVelocity.x+=bB.m_invMass *this.m_impulse *this.m_J.linearB.x;
				bB.m_linearVelocity.y+=bB.m_invMass *this.m_impulse *this.m_J.linearB.y;
				bB.m_angularVelocity+=bB.m_invI *this.m_impulse *this.m_J.angularB;
			}
			else{
				this.m_impulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var Cdot=this.m_J.Compute(bA.m_linearVelocity,bA.m_angularVelocity,
			bB.m_linearVelocity,bB.m_angularVelocity);
			var impulse=-this.m_mass *Cdot;
			this.m_impulse+=impulse;
			bA.m_linearVelocity.x+=bA.m_invMass *impulse *this.m_J.linearA.x;
			bA.m_linearVelocity.y+=bA.m_invMass *impulse *this.m_J.linearA.y;
			bA.m_angularVelocity+=bA.m_invI *impulse *this.m_J.angularA;
			bB.m_linearVelocity.x+=bB.m_invMass *impulse *this.m_J.linearB.x;
			bB.m_linearVelocity.y+=bB.m_invMass *impulse *this.m_J.linearB.y;
			bB.m_angularVelocity+=bB.m_invI *impulse *this.m_J.angularB;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var linearError=0.0;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var coordinate1=NaN;
			var coordinate2=NaN;
			if (this.m_revolute1){
				coordinate1=this.m_revolute1.GetJointAngle();
			}
			else{
				coordinate1=this.m_prismatic1.GetJointTranslation();
			}
			if (this.m_revolute2){
				coordinate2=this.m_revolute2.GetJointAngle();
			}
			else{
				coordinate2=this.m_prismatic2.GetJointTranslation();
			};
			var C=this.m_constant-(coordinate1+this.m_ratio *coordinate2);
			var impulse=-this.m_mass *C;
			bA.m_sweep.c.x+=bA.m_invMass *impulse *this.m_J.linearA.x;
			bA.m_sweep.c.y+=bA.m_invMass *impulse *this.m_J.linearA.y;
			bA.m_sweep.a+=bA.m_invI *impulse *this.m_J.angularA;
			bB.m_sweep.c.x+=bB.m_invMass *impulse *this.m_J.linearB.x;
			bB.m_sweep.c.y+=bB.m_invMass *impulse *this.m_J.linearB.y;
			bB.m_sweep.a+=bB.m_invI *impulse *this.m_J.angularB;
			bA.SynchronizeTransform();
			bB.SynchronizeTransform();
			return linearError < /*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
		}

		return b2GearJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2frictionjointdef.as
	;
	//class Box2D.Dynamics.Joints.b2FrictionJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2FrictionJointDef=(function(_super){
		function b2FrictionJointDef(){
			this.maxForce=NaN;
			this.maxTorque=NaN;
			b2FrictionJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_frictionJoint*/9;
			this.maxForce=0.0;
			this.maxTorque=0.0;
		}

		__class(b2FrictionJointDef,'Box2D.Dynamics.Joints.b2FrictionJointDef',false,_super);
		var __proto=b2FrictionJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchor){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));
			this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));
		}

		return b2FrictionJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2gearjointdef.as
	;
	//class Box2D.Dynamics.Joints.b2GearJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2GearJointDef=(function(_super){
		function b2GearJointDef(){
			this.joint1=null;
			this.joint2=null;
			this.ratio=NaN;
			b2GearJointDef.__super.call(this);
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_gearJoint*/6;
			this.joint1=null;
			this.joint2=null;
			this.ratio=1.0;
		}

		__class(b2GearJointDef,'Box2D.Dynamics.Joints.b2GearJointDef',false,_super);
		return b2GearJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2linejoint.as
	;
	//class Box2D.Dynamics.Joints.b2LineJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2LineJoint=(function(_super){
		function b2LineJoint(def){
			this.m_s1=NaN;
			this.m_s2=NaN;
			this.m_a1=NaN;
			this.m_a2=NaN;
			this.m_motorMass=NaN;
			this.m_motorImpulse=NaN;
			this.m_lowerTranslation=NaN;
			this.m_upperTranslation=NaN;
			this.m_maxMotorForce=NaN;
			this.m_motorSpeed=NaN;
			this.m_enableLimit=false;
			this.m_enableMotor=false;
			this.m_limitState=0;
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_localXAxis1=new b2Vec2();
			this.m_localYAxis1=new b2Vec2();
			this.m_axis=new b2Vec2();
			this.m_perp=new b2Vec2();
			this.m_K=new b2Mat22();
			this.m_impulse=new b2Vec2();
			b2LineJoint.__super.call(this,def);
			var tMat;
			var tX=NaN;
			var tY=NaN;
			this.m_localAnchor1.SetV(def.localAnchorA);
			this.m_localAnchor2.SetV(def.localAnchorB);
			this.m_localXAxis1.SetV(def.localAxisA);
			this.m_localYAxis1.x=-this.m_localXAxis1.y;
			this.m_localYAxis1.y=this.m_localXAxis1.x;
			this.m_impulse.SetZero();
			this.m_motorMass=0.0;
			this.m_motorImpulse=0.0;
			this.m_lowerTranslation=def.lowerTranslation;
			this.m_upperTranslation=def.upperTranslation;
			this.m_maxMotorForce=def.maxMotorForce;
			this.m_motorSpeed=def.motorSpeed;
			this.m_enableLimit=def.enableLimit;
			this.m_enableMotor=def.enableMotor;
			this.m_limitState=0;
			this.m_axis.SetZero();
			this.m_perp.SetZero();
		}

		__class(b2LineJoint,'Box2D.Dynamics.Joints.b2LineJoint',false,_super);
		var __proto=b2LineJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *(this.m_impulse.x *this.m_perp.x+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.x),
			inv_dt *(this.m_impulse.x *this.m_perp.y+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.y));
		}

		__proto.GetReactionTorque=function(inv_dt){
			return inv_dt *this.m_impulse.y;
		}

		__proto.GetJointTranslation=function(){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var p1=bA.GetWorldPoint(this.m_localAnchor1);
			var p2=bB.GetWorldPoint(this.m_localAnchor2);
			var dX=p2.x-p1.x;
			var dY=p2.y-p1.y;
			var axis=bA.GetWorldVector(this.m_localXAxis1);
			var translation=axis.x*dX+axis.y*dY;
			return translation;
		}

		__proto.GetJointSpeed=function(){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var p1X=bA.m_sweep.c.x+r1X;
			var p1Y=bA.m_sweep.c.y+r1Y;
			var p2X=bB.m_sweep.c.x+r2X;
			var p2Y=bB.m_sweep.c.y+r2Y;
			var dX=p2X-p1X;
			var dY=p2Y-p1Y;
			var axis=bA.GetWorldVector(this.m_localXAxis1);
			var v1=bA.m_linearVelocity;
			var v2=bB.m_linearVelocity;
			var w1=bA.m_angularVelocity;
			var w2=bB.m_angularVelocity;
			var speed=(dX*(-w1 *axis.y)+dY*(w1 *axis.x))+(axis.x *(((v2.x+(-w2 *r2Y))-v1.x)-(-w1 *r1Y))+axis.y *(((v2.y+(w2 *r2X))-v1.y)-(w1 *r1X)));
			return speed;
		}

		__proto.IsLimitEnabled=function(){
			return this.m_enableLimit;
		}

		__proto.EnableLimit=function(flag){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_enableLimit=flag;
		}

		__proto.GetLowerLimit=function(){
			return this.m_lowerTranslation;
		}

		__proto.GetUpperLimit=function(){
			return this.m_upperTranslation;
		}

		__proto.SetLimits=function(lower,upper){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_lowerTranslation=lower;
			this.m_upperTranslation=upper;
		}

		__proto.IsMotorEnabled=function(){
			return this.m_enableMotor;
		}

		__proto.EnableMotor=function(flag){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_enableMotor=flag;
		}

		__proto.SetMotorSpeed=function(speed){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_motorSpeed=speed;
		}

		__proto.GetMotorSpeed=function(){
			return this.m_motorSpeed;
		}

		__proto.SetMaxMotorForce=function(force){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_maxMotorForce=force;
		}

		__proto.GetMaxMotorForce=function(){
			return this.m_maxMotorForce;
		}

		__proto.GetMotorForce=function(){
			return this.m_motorImpulse;
		}

		__proto.InitVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var tX=NaN;
			this.m_localCenterA.SetV(bA.GetLocalCenter());
			this.m_localCenterB.SetV(bB.GetLocalCenter());
			var xf1=bA.GetTransform();
			var xf2=bB.GetTransform();
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-this.m_localCenterA.x;
			var r1Y=this.m_localAnchor1.y-this.m_localCenterA.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-this.m_localCenterB.x;
			var r2Y=this.m_localAnchor2.y-this.m_localCenterB.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var dX=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
			var dY=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
			this.m_invMassA=bA.m_invMass;
			this.m_invMassB=bB.m_invMass;
			this.m_invIA=bA.m_invI;
			this.m_invIB=bB.m_invI;{
				this.m_axis.SetV(b2Math.MulMV(xf1.R,this.m_localXAxis1));
				this.m_a1=(dX+r1X)*this.m_axis.y-(dY+r1Y)*this.m_axis.x;
				this.m_a2=r2X *this.m_axis.y-r2Y *this.m_axis.x;
				this.m_motorMass=this.m_invMassA+this.m_invMassB+this.m_invIA *this.m_a1 *this.m_a1+this.m_invIB *this.m_a2 *this.m_a2;
				this.m_motorMass=this.m_motorMass > Number.MIN_VALUE?1.0 / this.m_motorMass:0.0;
				}{
				this.m_perp.SetV(b2Math.MulMV(xf1.R,this.m_localYAxis1));
				this.m_s1=(dX+r1X)*this.m_perp.y-(dY+r1Y)*this.m_perp.x;
				this.m_s2=r2X *this.m_perp.y-r2Y *this.m_perp.x;
				var m1=this.m_invMassA;
				var m2=this.m_invMassB;
				var i1=this.m_invIA;
				var i2=this.m_invIB;
				this.m_K.col1.x=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				this.m_K.col1.y=i1 *this.m_s1 *this.m_a1+i2 *this.m_s2 *this.m_a2;
				this.m_K.col2.x=this.m_K.col1.y;
				this.m_K.col2.y=m1+m2+i1 *this.m_a1 *this.m_a1+i2 *this.m_a2 *this.m_a2;
			}
			if (this.m_enableLimit){
				var jointTransition=this.m_axis.x *dX+this.m_axis.y *dY;
				if (b2Math.Abs(this.m_upperTranslation-this.m_lowerTranslation)< 2.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_limitState=3;
				}
				else if (jointTransition <=this.m_lowerTranslation){
					if (this.m_limitState !=1){
						this.m_limitState=1;
						this.m_impulse.y=0.0;
					}
				}
				else if (jointTransition >=this.m_upperTranslation){
					if (this.m_limitState !=2){
						this.m_limitState=2;
						this.m_impulse.y=0.0;
					}
				}
				else{
					this.m_limitState=0;
					this.m_impulse.y=0.0;
				}
			}
			else{
				this.m_limitState=0;
			}
			if (this.m_enableMotor==false){
				this.m_motorImpulse=0.0
			}
			if (step.warmStarting){
				this.m_impulse.x *=step.dtRatio;
				this.m_impulse.y *=step.dtRatio;
				this.m_motorImpulse *=step.dtRatio;
				var PX=this.m_impulse.x *this.m_perp.x+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.x;
				var PY=this.m_impulse.x *this.m_perp.y+(this.m_motorImpulse+this.m_impulse.y)*this.m_axis.y;
				var L1=this.m_impulse.x *this.m_s1+(this.m_motorImpulse+this.m_impulse.y)*this.m_a1;
				var L2=this.m_impulse.x *this.m_s2+(this.m_motorImpulse+this.m_impulse.y)*this.m_a2;
				bA.m_linearVelocity.x-=this.m_invMassA *PX;
				bA.m_linearVelocity.y-=this.m_invMassA *PY;
				bA.m_angularVelocity-=this.m_invIA *L1;
				bB.m_linearVelocity.x+=this.m_invMassB *PX;
				bB.m_linearVelocity.y+=this.m_invMassB *PY;
				bB.m_angularVelocity+=this.m_invIB *L2;
			}
			else{
				this.m_impulse.SetZero();
				this.m_motorImpulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var v1=bA.m_linearVelocity;
			var w1=bA.m_angularVelocity;
			var v2=bB.m_linearVelocity;
			var w2=bB.m_angularVelocity;
			var PX=NaN;
			var PY=NaN;
			var L1=NaN;
			var L2=NaN;
			if (this.m_enableMotor && this.m_limitState !=3){
				var Cdot=this.m_axis.x *(v2.x-v1.x)+this.m_axis.y *(v2.y-v1.y)+this.m_a2 *w2-this.m_a1 *w1;
				var impulse=this.m_motorMass *(this.m_motorSpeed-Cdot);
				var oldImpulse=this.m_motorImpulse;
				var maxImpulse=step.dt *this.m_maxMotorForce;
				this.m_motorImpulse=b2Math.Clamp(this.m_motorImpulse+impulse,-maxImpulse,maxImpulse);
				impulse=this.m_motorImpulse-oldImpulse;
				PX=impulse *this.m_axis.x;
				PY=impulse *this.m_axis.y;
				L1=impulse *this.m_a1;
				L2=impulse *this.m_a2;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			};
			var Cdot1=this.m_perp.x *(v2.x-v1.x)+this.m_perp.y *(v2.y-v1.y)+this.m_s2 *w2-this.m_s1 *w1;
			if (this.m_enableLimit && this.m_limitState !=0){
				var Cdot2=this.m_axis.x *(v2.x-v1.x)+this.m_axis.y *(v2.y-v1.y)+this.m_a2 *w2-this.m_a1 *w1;
				var f1=this.m_impulse.Copy();
				var df=this.m_K.Solve(new b2Vec2(),-Cdot1,-Cdot2);
				this.m_impulse.Add(df);
				if (this.m_limitState==1){
					this.m_impulse.y=b2Math.Max(this.m_impulse.y,0.0);
				}
				else if (this.m_limitState==2){
					this.m_impulse.y=b2Math.Min(this.m_impulse.y,0.0);
				};
				var b=-Cdot1-(this.m_impulse.y-f1.y)*this.m_K.col2.x;
				var f2r=NaN;
				if (this.m_K.col1.x !=0.0){
					f2r=b / this.m_K.col1.x+f1.x;
					}else {
					f2r=f1.x;
				}
				this.m_impulse.x=f2r;
				df.x=this.m_impulse.x-f1.x;
				df.y=this.m_impulse.y-f1.y;
				PX=df.x *this.m_perp.x+df.y *this.m_axis.x;
				PY=df.x *this.m_perp.y+df.y *this.m_axis.y;
				L1=df.x *this.m_s1+df.y *this.m_a1;
				L2=df.x *this.m_s2+df.y *this.m_a2;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			}
			else{
				var df2=NaN;
				if (this.m_K.col1.x !=0.0){
					df2=(-Cdot1)/ this.m_K.col1.x;
					}else {
					df2=0.0;
				}
				this.m_impulse.x+=df2;
				PX=df2 *this.m_perp.x;
				PY=df2 *this.m_perp.y;
				L1=df2 *this.m_s1;
				L2=df2 *this.m_s2;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			}
			bA.m_linearVelocity.SetV(v1);
			bA.m_angularVelocity=w1;
			bB.m_linearVelocity.SetV(v2);
			bB.m_angularVelocity=w2;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var limitC=NaN;
			var oldLimitImpulse=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var c1=bA.m_sweep.c;
			var a1=bA.m_sweep.a;
			var c2=bB.m_sweep.c;
			var a2=bB.m_sweep.a;
			var tMat;
			var tX=NaN;
			var m1=NaN;
			var m2=NaN;
			var i1=NaN;
			var i2=NaN;
			var linearError=0.0;
			var angularError=0.0;
			var active=false;
			var C2=0.0;
			var R1=b2Mat22.FromAngle(a1);
			var R2=b2Mat22.FromAngle(a2);
			tMat=R1;
			var r1X=this.m_localAnchor1.x-this.m_localCenterA.x;
			var r1Y=this.m_localAnchor1.y-this.m_localCenterA.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=R2;
			var r2X=this.m_localAnchor2.x-this.m_localCenterB.x;
			var r2Y=this.m_localAnchor2.y-this.m_localCenterB.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var dX=c2.x+r2X-c1.x-r1X;
			var dY=c2.y+r2Y-c1.y-r1Y;
			if (this.m_enableLimit){
				this.m_axis=b2Math.MulMV(R1,this.m_localXAxis1);
				this.m_a1=(dX+r1X)*this.m_axis.y-(dY+r1Y)*this.m_axis.x;
				this.m_a2=r2X *this.m_axis.y-r2Y *this.m_axis.x;
				var translation=this.m_axis.x *dX+this.m_axis.y *dY;
				if (b2Math.Abs(this.m_upperTranslation-this.m_lowerTranslation)< 2.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					C2=b2Math.Clamp(translation,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2);
					linearError=b2Math.Abs(translation);
					active=true;
				}
				else if (translation <=this.m_lowerTranslation){
					C2=b2Math.Clamp(translation-this.m_lowerTranslation+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
					linearError=this.m_lowerTranslation-translation;
					active=true;
				}
				else if (translation >=this.m_upperTranslation){
					C2=b2Math.Clamp(translation-this.m_upperTranslation+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,0.0,/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2);
					linearError=translation-this.m_upperTranslation;
					active=true;
				}
			}
			this.m_perp=b2Math.MulMV(R1,this.m_localYAxis1);
			this.m_s1=(dX+r1X)*this.m_perp.y-(dY+r1Y)*this.m_perp.x;
			this.m_s2=r2X *this.m_perp.y-r2Y *this.m_perp.x;
			var impulse=new b2Vec2();
			var C1=this.m_perp.x *dX+this.m_perp.y *dY;
			linearError=b2Math.Max(linearError,b2Math.Abs(C1));
			angularError=0.0;
			if (active){
				m1=this.m_invMassA;
				m2=this.m_invMassB;
				i1=this.m_invIA;
				i2=this.m_invIB;
				this.m_K.col1.x=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				this.m_K.col1.y=i1 *this.m_s1 *this.m_a1+i2 *this.m_s2 *this.m_a2;
				this.m_K.col2.x=this.m_K.col1.y;
				this.m_K.col2.y=m1+m2+i1 *this.m_a1 *this.m_a1+i2 *this.m_a2 *this.m_a2;
				this.m_K.Solve(impulse,-C1,-C2);
			}
			else{
				m1=this.m_invMassA;
				m2=this.m_invMassB;
				i1=this.m_invIA;
				i2=this.m_invIB;
				var k11=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				var impulse1=NaN;
				if (k11 !=0.0){
					impulse1=(-C1)/ k11;
					}else {
					impulse1=0.0;
				}
				impulse.x=impulse1;
				impulse.y=0.0;
			};
			var PX=impulse.x *this.m_perp.x+impulse.y *this.m_axis.x;
			var PY=impulse.x *this.m_perp.y+impulse.y *this.m_axis.y;
			var L1=impulse.x *this.m_s1+impulse.y *this.m_a1;
			var L2=impulse.x *this.m_s2+impulse.y *this.m_a2;
			c1.x-=this.m_invMassA *PX;
			c1.y-=this.m_invMassA *PY;
			a1-=this.m_invIA *L1;
			c2.x+=this.m_invMassB *PX;
			c2.y+=this.m_invMassB *PY;
			a2+=this.m_invIB *L2;
			bA.m_sweep.a=a1;
			bB.m_sweep.a=a2;
			bA.SynchronizeTransform();
			bB.SynchronizeTransform();
			return linearError <=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005 && angularError <=b2Settings.b2_angularSlop;
		}

		return b2LineJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2mousejoint.as
	;
	//class Box2D.Dynamics.Joints.b2MouseJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2MouseJoint=(function(_super){
		function b2MouseJoint(def){
			this.m_maxForce=NaN;
			this.m_frequencyHz=NaN;
			this.m_dampingRatio=NaN;
			this.m_beta=NaN;
			this.m_gamma=NaN;
			this.K=new b2Mat22();
			this.K1=new b2Mat22();
			this.K2=new b2Mat22();
			this.m_localAnchor=new b2Vec2();
			this.m_target=new b2Vec2();
			this.m_impulse=new b2Vec2();
			this.m_mass=new b2Mat22();
			this.m_C=new b2Vec2();
			b2MouseJoint.__super.call(this,def);
			this.m_target.SetV(def.target);
			var tX=this.m_target.x-this.m_bodyB.m_xf.position.x;
			var tY=this.m_target.y-this.m_bodyB.m_xf.position.y;
			var tMat=this.m_bodyB.m_xf.R;
			this.m_localAnchor.x=(tX *tMat.col1.x+tY *tMat.col1.y);
			this.m_localAnchor.y=(tX *tMat.col2.x+tY *tMat.col2.y);
			this.m_maxForce=def.maxForce;
			this.m_impulse.SetZero();
			this.m_frequencyHz=def.frequencyHz;
			this.m_dampingRatio=def.dampingRatio;
			this.m_beta=0.0;
			this.m_gamma=0.0;
		}

		__class(b2MouseJoint,'Box2D.Dynamics.Joints.b2MouseJoint',false,_super);
		var __proto=b2MouseJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_target;
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse.x,inv_dt *this.m_impulse.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return 0.0;
		}

		__proto.GetTarget=function(){
			return this.m_target;
		}

		__proto.SetTarget=function(target){
			if (this.m_bodyB.IsAwake()==false){
				this.m_bodyB.SetAwake(true);
			}
			this.m_target=target;
		}

		__proto.GetMaxForce=function(){
			return this.m_maxForce;
		}

		__proto.SetMaxForce=function(maxForce){
			this.m_maxForce=maxForce;
		}

		__proto.GetFrequency=function(){
			return this.m_frequencyHz;
		}

		__proto.SetFrequency=function(hz){
			this.m_frequencyHz=hz;
		}

		__proto.GetDampingRatio=function(){
			return this.m_dampingRatio;
		}

		__proto.SetDampingRatio=function(ratio){
			this.m_dampingRatio=ratio;
		}

		__proto.InitVelocityConstraints=function(step){
			var b=this.m_bodyB;
			var mass=b.GetMass();
			var omega=2.0 *Math.PI *this.m_frequencyHz;
			var d=2.0 *mass *this.m_dampingRatio *omega;
			var k=mass *omega *omega;
			this.m_gamma=step.dt *(d+step.dt *k);
			this.m_gamma=this.m_gamma !=0 ? 1 / this.m_gamma:0.0;
			this.m_beta=step.dt *k *this.m_gamma;
			var tMat;
			tMat=b.m_xf.R;
			var rX=this.m_localAnchor.x-b.m_sweep.localCenter.x;
			var rY=this.m_localAnchor.y-b.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *rX+tMat.col2.x *rY);
			rY=(tMat.col1.y *rX+tMat.col2.y *rY);
			rX=tX;
			var invMass=b.m_invMass;
			var invI=b.m_invI;
			this.K1.col1.x=invMass;
			this.K1.col2.x=0.0;
			this.K1.col1.y=0.0;
			this.K1.col2.y=invMass;
			this.K2.col1.x=invI *rY *rY;
			this.K2.col2.x=-invI *rX *rY;
			this.K2.col1.y=-invI *rX *rY;
			this.K2.col2.y=invI *rX *rX;
			this.K.SetM(this.K1);
			this.K.AddM(this.K2);
			this.K.col1.x+=this.m_gamma;
			this.K.col2.y+=this.m_gamma;
			this.K.GetInverse(this.m_mass);
			this.m_C.x=b.m_sweep.c.x+rX-this.m_target.x;
			this.m_C.y=b.m_sweep.c.y+rY-this.m_target.y;
			b.m_angularVelocity *=0.98;
			this.m_impulse.x *=step.dtRatio;
			this.m_impulse.y *=step.dtRatio;
			b.m_linearVelocity.x+=invMass *this.m_impulse.x;
			b.m_linearVelocity.y+=invMass *this.m_impulse.y;
			b.m_angularVelocity+=invI *(rX *this.m_impulse.y-rY *this.m_impulse.x);
		}

		__proto.SolveVelocityConstraints=function(step){
			var b=this.m_bodyB;
			var tMat;
			var tX=NaN;
			var tY=NaN;
			tMat=b.m_xf.R;
			var rX=this.m_localAnchor.x-b.m_sweep.localCenter.x;
			var rY=this.m_localAnchor.y-b.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rX+tMat.col2.x *rY);
			rY=(tMat.col1.y *rX+tMat.col2.y *rY);
			rX=tX;
			var CdotX=b.m_linearVelocity.x+(-b.m_angularVelocity *rY);
			var CdotY=b.m_linearVelocity.y+(b.m_angularVelocity *rX);
			tMat=this.m_mass;
			tX=CdotX+this.m_beta *this.m_C.x+this.m_gamma *this.m_impulse.x;
			tY=CdotY+this.m_beta *this.m_C.y+this.m_gamma *this.m_impulse.y;
			var impulseX=-(tMat.col1.x *tX+tMat.col2.x *tY);
			var impulseY=-(tMat.col1.y *tX+tMat.col2.y *tY);
			var oldImpulseX=this.m_impulse.x;
			var oldImpulseY=this.m_impulse.y;
			this.m_impulse.x+=impulseX;
			this.m_impulse.y+=impulseY;
			var maxImpulse=step.dt *this.m_maxForce;
			if (this.m_impulse.LengthSquared()> maxImpulse*maxImpulse){
				this.m_impulse.Multiply(maxImpulse / this.m_impulse.Length());
			}
			impulseX=this.m_impulse.x-oldImpulseX;
			impulseY=this.m_impulse.y-oldImpulseY;
			b.m_linearVelocity.x+=b.m_invMass *impulseX;
			b.m_linearVelocity.y+=b.m_invMass *impulseY;
			b.m_angularVelocity+=b.m_invI *(rX *impulseY-rY *impulseX);
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			return true;
		}

		return b2MouseJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2linejointdef.as
	;
	//class Box2D.Dynamics.Joints.b2LineJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2LineJointDef=(function(_super){
		function b2LineJointDef(){
			this.enableLimit=false;
			this.lowerTranslation=NaN;
			this.upperTranslation=NaN;
			this.enableMotor=false;
			this.maxMotorForce=NaN;
			this.motorSpeed=NaN;
			b2LineJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.localAxisA=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_lineJoint*/7;
			this.localAxisA.Set(1.0,0.0);
			this.enableLimit=false;
			this.lowerTranslation=0.0;
			this.upperTranslation=0.0;
			this.enableMotor=false;
			this.maxMotorForce=0.0;
			this.motorSpeed=0.0;
		}

		__class(b2LineJointDef,'Box2D.Dynamics.Joints.b2LineJointDef',false,_super);
		var __proto=b2LineJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchor,axis){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA=this.bodyA.GetLocalPoint(anchor);
			this.localAnchorB=this.bodyB.GetLocalPoint(anchor);
			this.localAxisA=this.bodyA.GetLocalVector(axis);
		}

		return b2LineJointDef;
	})(b2JointDef)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2prismaticjoint.as
	;
	//class Box2D.Dynamics.Joints.b2PrismaticJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2PrismaticJoint=(function(_super){
		function b2PrismaticJoint(def){
			this.m_refAngle=NaN;
			this.m_s1=NaN;
			this.m_s2=NaN;
			this.m_a1=NaN;
			this.m_a2=NaN;
			this.m_motorMass=NaN;
			this.m_motorImpulse=NaN;
			this.m_lowerTranslation=NaN;
			this.m_upperTranslation=NaN;
			this.m_maxMotorForce=NaN;
			this.m_motorSpeed=NaN;
			this.m_enableLimit=false;
			this.m_enableMotor=false;
			this.m_limitState=0;
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_localXAxis1=new b2Vec2();
			this.m_localYAxis1=new b2Vec2();
			this.m_axis=new b2Vec2();
			this.m_perp=new b2Vec2();
			this.m_K=new b2Mat33();
			this.m_impulse=new b2Vec3();
			b2PrismaticJoint.__super.call(this,def);
			var tMat;
			var tX=NaN;
			var tY=NaN;
			this.m_localAnchor1.SetV(def.localAnchorA);
			this.m_localAnchor2.SetV(def.localAnchorB);
			this.m_localXAxis1.SetV(def.localAxisA);
			this.m_localYAxis1.x=-this.m_localXAxis1.y;
			this.m_localYAxis1.y=this.m_localXAxis1.x;
			this.m_refAngle=def.referenceAngle;
			this.m_impulse.SetZero();
			this.m_motorMass=0.0;
			this.m_motorImpulse=0.0;
			this.m_lowerTranslation=def.lowerTranslation;
			this.m_upperTranslation=def.upperTranslation;
			this.m_maxMotorForce=def.maxMotorForce;
			this.m_motorSpeed=def.motorSpeed;
			this.m_enableLimit=def.enableLimit;
			this.m_enableMotor=def.enableMotor;
			this.m_limitState=0;
			this.m_axis.SetZero();
			this.m_perp.SetZero();
		}

		__class(b2PrismaticJoint,'Box2D.Dynamics.Joints.b2PrismaticJoint',false,_super);
		var __proto=b2PrismaticJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *(this.m_impulse.x *this.m_perp.x+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.x),inv_dt *(this.m_impulse.x *this.m_perp.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.y));
		}

		__proto.GetReactionTorque=function(inv_dt){
			return inv_dt *this.m_impulse.y;
		}

		__proto.GetJointTranslation=function(){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var p1=bA.GetWorldPoint(this.m_localAnchor1);
			var p2=bB.GetWorldPoint(this.m_localAnchor2);
			var dX=p2.x-p1.x;
			var dY=p2.y-p1.y;
			var axis=bA.GetWorldVector(this.m_localXAxis1);
			var translation=axis.x*dX+axis.y*dY;
			return translation;
		}

		__proto.GetJointSpeed=function(){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var p1X=bA.m_sweep.c.x+r1X;
			var p1Y=bA.m_sweep.c.y+r1Y;
			var p2X=bB.m_sweep.c.x+r2X;
			var p2Y=bB.m_sweep.c.y+r2Y;
			var dX=p2X-p1X;
			var dY=p2Y-p1Y;
			var axis=bA.GetWorldVector(this.m_localXAxis1);
			var v1=bA.m_linearVelocity;
			var v2=bB.m_linearVelocity;
			var w1=bA.m_angularVelocity;
			var w2=bB.m_angularVelocity;
			var speed=(dX*(-w1 *axis.y)+dY*(w1 *axis.x))+(axis.x *(((v2.x+(-w2 *r2Y))-v1.x)-(-w1 *r1Y))+axis.y *(((v2.y+(w2 *r2X))-v1.y)-(w1 *r1X)));
			return speed;
		}

		__proto.IsLimitEnabled=function(){
			return this.m_enableLimit;
		}

		__proto.EnableLimit=function(flag){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_enableLimit=flag;
		}

		__proto.GetLowerLimit=function(){
			return this.m_lowerTranslation;
		}

		__proto.GetUpperLimit=function(){
			return this.m_upperTranslation;
		}

		__proto.SetLimits=function(lower,upper){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_lowerTranslation=lower;
			this.m_upperTranslation=upper;
		}

		__proto.IsMotorEnabled=function(){
			return this.m_enableMotor;
		}

		__proto.EnableMotor=function(flag){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_enableMotor=flag;
		}

		__proto.SetMotorSpeed=function(speed){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_motorSpeed=speed;
		}

		__proto.GetMotorSpeed=function(){
			return this.m_motorSpeed;
		}

		__proto.SetMaxMotorForce=function(force){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_maxMotorForce=force;
		}

		__proto.GetMotorForce=function(){
			return this.m_motorImpulse;
		}

		__proto.InitVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var tX=NaN;
			this.m_localCenterA.SetV(bA.GetLocalCenter());
			this.m_localCenterB.SetV(bB.GetLocalCenter());
			var xf1=bA.GetTransform();
			var xf2=bB.GetTransform();
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-this.m_localCenterA.x;
			var r1Y=this.m_localAnchor1.y-this.m_localCenterA.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-this.m_localCenterB.x;
			var r2Y=this.m_localAnchor2.y-this.m_localCenterB.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var dX=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
			var dY=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
			this.m_invMassA=bA.m_invMass;
			this.m_invMassB=bB.m_invMass;
			this.m_invIA=bA.m_invI;
			this.m_invIB=bB.m_invI;{
				this.m_axis.SetV(b2Math.MulMV(xf1.R,this.m_localXAxis1));
				this.m_a1=(dX+r1X)*this.m_axis.y-(dY+r1Y)*this.m_axis.x;
				this.m_a2=r2X *this.m_axis.y-r2Y *this.m_axis.x;
				this.m_motorMass=this.m_invMassA+this.m_invMassB+this.m_invIA *this.m_a1 *this.m_a1+this.m_invIB *this.m_a2 *this.m_a2;
				if(this.m_motorMass > Number.MIN_VALUE)
					this.m_motorMass=1.0 / this.m_motorMass;
				}{
				this.m_perp.SetV(b2Math.MulMV(xf1.R,this.m_localYAxis1));
				this.m_s1=(dX+r1X)*this.m_perp.y-(dY+r1Y)*this.m_perp.x;
				this.m_s2=r2X *this.m_perp.y-r2Y *this.m_perp.x;
				var m1=this.m_invMassA;
				var m2=this.m_invMassB;
				var i1=this.m_invIA;
				var i2=this.m_invIB;
				this.m_K.col1.x=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				this.m_K.col1.y=i1 *this.m_s1+i2 *this.m_s2;
				this.m_K.col1.z=i1 *this.m_s1 *this.m_a1+i2 *this.m_s2 *this.m_a2;
				this.m_K.col2.x=this.m_K.col1.y;
				this.m_K.col2.y=i1+i2;
				this.m_K.col2.z=i1 *this.m_a1+i2 *this.m_a2;
				this.m_K.col3.x=this.m_K.col1.z;
				this.m_K.col3.y=this.m_K.col2.z;
				this.m_K.col3.z=m1+m2+i1 *this.m_a1 *this.m_a1+i2 *this.m_a2 *this.m_a2;
			}
			if (this.m_enableLimit){
				var jointTransition=this.m_axis.x *dX+this.m_axis.y *dY;
				if (b2Math.Abs(this.m_upperTranslation-this.m_lowerTranslation)< 2.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_limitState=3;
				}
				else if (jointTransition <=this.m_lowerTranslation){
					if (this.m_limitState !=1){
						this.m_limitState=1;
						this.m_impulse.z=0.0;
					}
				}
				else if (jointTransition >=this.m_upperTranslation){
					if (this.m_limitState !=2){
						this.m_limitState=2;
						this.m_impulse.z=0.0;
					}
				}
				else{
					this.m_limitState=0;
					this.m_impulse.z=0.0;
				}
			}
			else{
				this.m_limitState=0;
			}
			if (this.m_enableMotor==false){
				this.m_motorImpulse=0.0
			}
			if (step.warmStarting){
				this.m_impulse.x *=step.dtRatio;
				this.m_impulse.y *=step.dtRatio;
				this.m_motorImpulse *=step.dtRatio;
				var PX=this.m_impulse.x *this.m_perp.x+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.x;
				var PY=this.m_impulse.x *this.m_perp.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_axis.y;
				var L1=this.m_impulse.x *this.m_s1+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a1;
				var L2=this.m_impulse.x *this.m_s2+this.m_impulse.y+(this.m_motorImpulse+this.m_impulse.z)*this.m_a2;
				bA.m_linearVelocity.x-=this.m_invMassA *PX;
				bA.m_linearVelocity.y-=this.m_invMassA *PY;
				bA.m_angularVelocity-=this.m_invIA *L1;
				bB.m_linearVelocity.x+=this.m_invMassB *PX;
				bB.m_linearVelocity.y+=this.m_invMassB *PY;
				bB.m_angularVelocity+=this.m_invIB *L2;
			}
			else{
				this.m_impulse.SetZero();
				this.m_motorImpulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var v1=bA.m_linearVelocity;
			var w1=bA.m_angularVelocity;
			var v2=bB.m_linearVelocity;
			var w2=bB.m_angularVelocity;
			var PX=NaN;
			var PY=NaN;
			var L1=NaN;
			var L2=NaN;
			if (this.m_enableMotor && this.m_limitState !=3){
				var Cdot=this.m_axis.x *(v2.x-v1.x)+this.m_axis.y *(v2.y-v1.y)+this.m_a2 *w2-this.m_a1 *w1;
				var impulse=this.m_motorMass *(this.m_motorSpeed-Cdot);
				var oldImpulse=this.m_motorImpulse;
				var maxImpulse=step.dt *this.m_maxMotorForce;
				this.m_motorImpulse=b2Math.Clamp(this.m_motorImpulse+impulse,-maxImpulse,maxImpulse);
				impulse=this.m_motorImpulse-oldImpulse;
				PX=impulse *this.m_axis.x;
				PY=impulse *this.m_axis.y;
				L1=impulse *this.m_a1;
				L2=impulse *this.m_a2;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			};
			var Cdot1X=this.m_perp.x *(v2.x-v1.x)+this.m_perp.y *(v2.y-v1.y)+this.m_s2 *w2-this.m_s1 *w1;
			var Cdot1Y=w2-w1;
			if (this.m_enableLimit && this.m_limitState !=0){
				var Cdot2=this.m_axis.x *(v2.x-v1.x)+this.m_axis.y *(v2.y-v1.y)+this.m_a2 *w2-this.m_a1 *w1;
				var f1=this.m_impulse.Copy();
				var df=this.m_K.Solve33(new b2Vec3(),-Cdot1X,-Cdot1Y,-Cdot2);
				this.m_impulse.Add(df);
				if (this.m_limitState==1){
					this.m_impulse.z=b2Math.Max(this.m_impulse.z,0.0);
				}
				else if (this.m_limitState==2){
					this.m_impulse.z=b2Math.Min(this.m_impulse.z,0.0);
				};
				var bX=-Cdot1X-(this.m_impulse.z-f1.z)*this.m_K.col3.x;
				var bY=-Cdot1Y-(this.m_impulse.z-f1.z)*this.m_K.col3.y;
				var f2r=this.m_K.Solve22(new b2Vec2(),bX,bY)
				f2r.x+=f1.x;
				f2r.y+=f1.y;
				this.m_impulse.x=f2r.x;
				this.m_impulse.y=f2r.y;
				df.x=this.m_impulse.x-f1.x;
				df.y=this.m_impulse.y-f1.y;
				df.z=this.m_impulse.z-f1.z;
				PX=df.x *this.m_perp.x+df.z *this.m_axis.x;
				PY=df.x *this.m_perp.y+df.z *this.m_axis.y;
				L1=df.x *this.m_s1+df.y+df.z *this.m_a1;
				L2=df.x *this.m_s2+df.y+df.z *this.m_a2;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			}
			else{
				var df2=this.m_K.Solve22(new b2Vec2(),-Cdot1X,-Cdot1Y);
				this.m_impulse.x+=df2.x;
				this.m_impulse.y+=df2.y;
				PX=df2.x *this.m_perp.x;
				PY=df2.x *this.m_perp.y;
				L1=df2.x *this.m_s1+df2.y;
				L2=df2.x *this.m_s2+df2.y;
				v1.x-=this.m_invMassA *PX;
				v1.y-=this.m_invMassA *PY;
				w1-=this.m_invIA *L1;
				v2.x+=this.m_invMassB *PX;
				v2.y+=this.m_invMassB *PY;
				w2+=this.m_invIB *L2;
			}
			bA.m_linearVelocity.SetV(v1);
			bA.m_angularVelocity=w1;
			bB.m_linearVelocity.SetV(v2);
			bB.m_angularVelocity=w2;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var limitC=NaN;
			var oldLimitImpulse=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var c1=bA.m_sweep.c;
			var a1=bA.m_sweep.a;
			var c2=bB.m_sweep.c;
			var a2=bB.m_sweep.a;
			var tMat;
			var tX=NaN;
			var m1=NaN;
			var m2=NaN;
			var i1=NaN;
			var i2=NaN;
			var linearError=0.0;
			var angularError=0.0;
			var active=false;
			var C2=0.0;
			var R1=b2Mat22.FromAngle(a1);
			var R2=b2Mat22.FromAngle(a2);
			tMat=R1;
			var r1X=this.m_localAnchor1.x-this.m_localCenterA.x;
			var r1Y=this.m_localAnchor1.y-this.m_localCenterA.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=R2;
			var r2X=this.m_localAnchor2.x-this.m_localCenterB.x;
			var r2Y=this.m_localAnchor2.y-this.m_localCenterB.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var dX=c2.x+r2X-c1.x-r1X;
			var dY=c2.y+r2Y-c1.y-r1Y;
			if (this.m_enableLimit){
				this.m_axis=b2Math.MulMV(R1,this.m_localXAxis1);
				this.m_a1=(dX+r1X)*this.m_axis.y-(dY+r1Y)*this.m_axis.x;
				this.m_a2=r2X *this.m_axis.y-r2Y *this.m_axis.x;
				var translation=this.m_axis.x *dX+this.m_axis.y *dY;
				if (b2Math.Abs(this.m_upperTranslation-this.m_lowerTranslation)< 2.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					C2=b2Math.Clamp(translation,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2);
					linearError=b2Math.Abs(translation);
					active=true;
				}
				else if (translation <=this.m_lowerTranslation){
					C2=b2Math.Clamp(translation-this.m_lowerTranslation+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
					linearError=this.m_lowerTranslation-translation;
					active=true;
				}
				else if (translation >=this.m_upperTranslation){
					C2=b2Math.Clamp(translation-this.m_upperTranslation+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,0.0,/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2);
					linearError=translation-this.m_upperTranslation;
					active=true;
				}
			}
			this.m_perp=b2Math.MulMV(R1,this.m_localYAxis1);
			this.m_s1=(dX+r1X)*this.m_perp.y-(dY+r1Y)*this.m_perp.x;
			this.m_s2=r2X *this.m_perp.y-r2Y *this.m_perp.x;
			var impulse=new b2Vec3();
			var C1X=this.m_perp.x *dX+this.m_perp.y *dY;
			var C1Y=a2-a1-this.m_refAngle;
			linearError=b2Math.Max(linearError,b2Math.Abs(C1X));
			angularError=b2Math.Abs(C1Y);
			if (active){
				m1=this.m_invMassA;
				m2=this.m_invMassB;
				i1=this.m_invIA;
				i2=this.m_invIB;
				this.m_K.col1.x=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				this.m_K.col1.y=i1 *this.m_s1+i2 *this.m_s2;
				this.m_K.col1.z=i1 *this.m_s1 *this.m_a1+i2 *this.m_s2 *this.m_a2;
				this.m_K.col2.x=this.m_K.col1.y;
				this.m_K.col2.y=i1+i2;
				this.m_K.col2.z=i1 *this.m_a1+i2 *this.m_a2;
				this.m_K.col3.x=this.m_K.col1.z;
				this.m_K.col3.y=this.m_K.col2.z;
				this.m_K.col3.z=m1+m2+i1 *this.m_a1 *this.m_a1+i2 *this.m_a2 *this.m_a2;
				this.m_K.Solve33(impulse,-C1X,-C1Y,-C2);
			}
			else{
				m1=this.m_invMassA;
				m2=this.m_invMassB;
				i1=this.m_invIA;
				i2=this.m_invIB;
				var k11=m1+m2+i1 *this.m_s1 *this.m_s1+i2 *this.m_s2 *this.m_s2;
				var k12=i1 *this.m_s1+i2 *this.m_s2;
				var k22=i1+i2;
				this.m_K.col1.Set(k11,k12,0.0);
				this.m_K.col2.Set(k12,k22,0.0);
				var impulse1=this.m_K.Solve22(new b2Vec2(),-C1X,-C1Y);
				impulse.x=impulse1.x;
				impulse.y=impulse1.y;
				impulse.z=0.0;
			};
			var PX=impulse.x *this.m_perp.x+impulse.z *this.m_axis.x;
			var PY=impulse.x *this.m_perp.y+impulse.z *this.m_axis.y;
			var L1=impulse.x *this.m_s1+impulse.y+impulse.z *this.m_a1;
			var L2=impulse.x *this.m_s2+impulse.y+impulse.z *this.m_a2;
			c1.x-=this.m_invMassA *PX;
			c1.y-=this.m_invMassA *PY;
			a1-=this.m_invIA *L1;
			c2.x+=this.m_invMassB *PX;
			c2.y+=this.m_invMassB *PY;
			a2+=this.m_invIB *L2;
			bA.m_sweep.a=a1;
			bB.m_sweep.a=a2;
			bA.SynchronizeTransform();
			bB.SynchronizeTransform();
			return linearError <=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005 && angularError <=b2Settings.b2_angularSlop;
		}

		return b2PrismaticJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2mousejointdef.as
	;
	//class Box2D.Dynamics.Joints.b2MouseJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2MouseJointDef=(function(_super){
		function b2MouseJointDef(){
			this.maxForce=NaN;
			this.frequencyHz=NaN;
			this.dampingRatio=NaN;
			b2MouseJointDef.__super.call(this);
			this.target=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_mouseJoint*/5;
			this.maxForce=0.0;
			this.frequencyHz=5.0;
			this.dampingRatio=0.7;
		}

		__class(b2MouseJointDef,'Box2D.Dynamics.Joints.b2MouseJointDef',false,_super);
		return b2MouseJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/mycontactlistener.as
	//class framework.system.MyContactListener extends Box2D.Dynamics.b2ContactListener
	var MyContactListener=(function(_super){
		function MyContactListener(){MyContactListener.__super.call(this);}
		__class(MyContactListener,'framework.system.MyContactListener',false,_super);
		var __proto=MyContactListener.prototype;
		__proto.BeginContact=function(contact){
			var b1=contact.GetFixtureA().GetBody();
			var b2=contact.GetFixtureB().GetBody();
			b1.RunContactBeginCallback(contact);
			b2.RunContactBeginCallback(contact);
		}

		__proto.EndContact=function(contact){
			var b1=contact.GetFixtureA().GetBody();
			var b2=contact.GetFixtureB().GetBody();
			b1.RunContactEndCallback(contact);
			b2.RunContactEndCallback(contact);
		}

		__proto.PreSolve=function(contact,oldManifold){
			var b1=contact.GetFixtureA().GetBody();
			var b2=contact.GetFixtureB().GetBody();
			b1.RunPreSolveCallback(contact,oldManifold);
			b2.RunPreSolveCallback(contact,oldManifold);
		}

		__proto.PostSolve=function(contact,impulse){
			var b1=contact.GetFixtureA().GetBody();
			var b2=contact.GetFixtureB().GetBody();
			b1.RunPostSolveCallback(contact,impulse);
			b2.RunPostSolveCallback(contact,impulse);
		}

		return MyContactListener;
	})(b2ContactListener)


	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2pulleyjoint.as
	;
	//class Box2D.Dynamics.Joints.b2PulleyJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2PulleyJoint=(function(_super){
		function b2PulleyJoint(def){
			this.m_ground=null;
			this.m_constant=NaN;
			this.m_ratio=NaN;
			this.m_maxLength1=NaN;
			this.m_maxLength2=NaN;
			this.m_pulleyMass=NaN;
			this.m_limitMass1=NaN;
			this.m_limitMass2=NaN;
			this.m_impulse=NaN;
			this.m_limitImpulse1=NaN;
			this.m_limitImpulse2=NaN;
			this.m_state=0;
			this.m_limitState1=0;
			this.m_limitState2=0;
			this.m_groundAnchor1=new b2Vec2();
			this.m_groundAnchor2=new b2Vec2();
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_u1=new b2Vec2();
			this.m_u2=new b2Vec2();
			b2PulleyJoint.__super.call(this,def);
			var tMat;
			var tX=NaN;
			var tY=NaN;
			this.m_ground=this.m_bodyA.m_world.m_groundBody;
			this.m_groundAnchor1.x=def.groundAnchorA.x-this.m_ground.m_xf.position.x;
			this.m_groundAnchor1.y=def.groundAnchorA.y-this.m_ground.m_xf.position.y;
			this.m_groundAnchor2.x=def.groundAnchorB.x-this.m_ground.m_xf.position.x;
			this.m_groundAnchor2.y=def.groundAnchorB.y-this.m_ground.m_xf.position.y;
			this.m_localAnchor1.SetV(def.localAnchorA);
			this.m_localAnchor2.SetV(def.localAnchorB);
			this.m_ratio=def.ratio;
			this.m_constant=def.lengthA+this.m_ratio *def.lengthB;
			this.m_maxLength1=b2Math.Min(def.maxLengthA,this.m_constant-this.m_ratio *2.0);
			this.m_maxLength2=b2Math.Min(def.maxLengthB,(this.m_constant-2.0)/ this.m_ratio);
			this.m_impulse=0.0;
			this.m_limitImpulse1=0.0;
			this.m_limitImpulse2=0.0;
		}

		__class(b2PulleyJoint,'Box2D.Dynamics.Joints.b2PulleyJoint',false,_super);
		var __proto=b2PulleyJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse *this.m_u2.x,inv_dt *this.m_impulse *this.m_u2.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return 0.0;
		}

		__proto.GetGroundAnchorA=function(){
			var a=this.m_ground.m_xf.position.Copy();
			a.Add(this.m_groundAnchor1);
			return a;
		}

		__proto.GetGroundAnchorB=function(){
			var a=this.m_ground.m_xf.position.Copy();
			a.Add(this.m_groundAnchor2);
			return a;
		}

		__proto.GetLength1=function(){
			var p=this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
			var sX=this.m_ground.m_xf.position.x+this.m_groundAnchor1.x;
			var sY=this.m_ground.m_xf.position.y+this.m_groundAnchor1.y;
			var dX=p.x-sX;
			var dY=p.y-sY;
			return Math.sqrt(dX*dX+dY*dY);
		}

		__proto.GetLength2=function(){
			var p=this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
			var sX=this.m_ground.m_xf.position.x+this.m_groundAnchor2.x;
			var sY=this.m_ground.m_xf.position.y+this.m_groundAnchor2.y;
			var dX=p.x-sX;
			var dY=p.y-sY;
			return Math.sqrt(dX*dX+dY*dY);
		}

		__proto.GetRatio=function(){
			return this.m_ratio;
		}

		__proto.InitVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var p1X=bA.m_sweep.c.x+r1X;
			var p1Y=bA.m_sweep.c.y+r1Y;
			var p2X=bB.m_sweep.c.x+r2X;
			var p2Y=bB.m_sweep.c.y+r2Y;
			var s1X=this.m_ground.m_xf.position.x+this.m_groundAnchor1.x;
			var s1Y=this.m_ground.m_xf.position.y+this.m_groundAnchor1.y;
			var s2X=this.m_ground.m_xf.position.x+this.m_groundAnchor2.x;
			var s2Y=this.m_ground.m_xf.position.y+this.m_groundAnchor2.y;
			this.m_u1.Set(p1X-s1X,p1Y-s1Y);
			this.m_u2.Set(p2X-s2X,p2Y-s2Y);
			var length1=this.m_u1.Length();
			var length2=this.m_u2.Length();
			if (length1 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
				this.m_u1.Multiply(1.0 / length1);
			}
			else{
				this.m_u1.SetZero();
			}
			if (length2 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
				this.m_u2.Multiply(1.0 / length2);
			}
			else{
				this.m_u2.SetZero();
			};
			var C=this.m_constant-length1-this.m_ratio *length2;
			if (C > 0.0){
				this.m_state=0;
				this.m_impulse=0.0;
			}
			else{
				this.m_state=2;
			}
			if (length1 < this.m_maxLength1){
				this.m_limitState1=0;
				this.m_limitImpulse1=0.0;
			}
			else{
				this.m_limitState1=2;
			}
			if (length2 < this.m_maxLength2){
				this.m_limitState2=0;
				this.m_limitImpulse2=0.0;
			}
			else{
				this.m_limitState2=2;
			};
			var cr1u1=r1X *this.m_u1.y-r1Y *this.m_u1.x;
			var cr2u2=r2X *this.m_u2.y-r2Y *this.m_u2.x;
			this.m_limitMass1=bA.m_invMass+bA.m_invI *cr1u1 *cr1u1;
			this.m_limitMass2=bB.m_invMass+bB.m_invI *cr2u2 *cr2u2;
			this.m_pulleyMass=this.m_limitMass1+this.m_ratio *this.m_ratio *this.m_limitMass2;
			this.m_limitMass1=1.0 / this.m_limitMass1;
			this.m_limitMass2=1.0 / this.m_limitMass2;
			this.m_pulleyMass=1.0 / this.m_pulleyMass;
			if (step.warmStarting){
				this.m_impulse *=step.dtRatio;
				this.m_limitImpulse1 *=step.dtRatio;
				this.m_limitImpulse2 *=step.dtRatio;
				var P1X=(-this.m_impulse-this.m_limitImpulse1)*this.m_u1.x;
				var P1Y=(-this.m_impulse-this.m_limitImpulse1)*this.m_u1.y;
				var P2X=(-this.m_ratio *this.m_impulse-this.m_limitImpulse2)*this.m_u2.x;
				var P2Y=(-this.m_ratio *this.m_impulse-this.m_limitImpulse2)*this.m_u2.y;
				bA.m_linearVelocity.x+=bA.m_invMass *P1X;
				bA.m_linearVelocity.y+=bA.m_invMass *P1Y;
				bA.m_angularVelocity+=bA.m_invI *(r1X *P1Y-r1Y *P1X);
				bB.m_linearVelocity.x+=bB.m_invMass *P2X;
				bB.m_linearVelocity.y+=bB.m_invMass *P2Y;
				bB.m_angularVelocity+=bB.m_invI *(r2X *P2Y-r2Y *P2X);
			}
			else{
				this.m_impulse=0.0;
				this.m_limitImpulse1=0.0;
				this.m_limitImpulse2=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			var tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var v1X=NaN;
			var v1Y=NaN;
			var v2X=NaN;
			var v2Y=NaN;
			var P1X=NaN;
			var P1Y=NaN;
			var P2X=NaN;
			var P2Y=NaN;
			var Cdot=NaN;
			var impulse=NaN;
			var oldImpulse=NaN;
			if (this.m_state==2){
				v1X=bA.m_linearVelocity.x+(-bA.m_angularVelocity *r1Y);
				v1Y=bA.m_linearVelocity.y+(bA.m_angularVelocity *r1X);
				v2X=bB.m_linearVelocity.x+(-bB.m_angularVelocity *r2Y);
				v2Y=bB.m_linearVelocity.y+(bB.m_angularVelocity *r2X);
				Cdot=-(this.m_u1.x *v1X+this.m_u1.y *v1Y)-this.m_ratio *(this.m_u2.x *v2X+this.m_u2.y *v2Y);
				impulse=this.m_pulleyMass *(-Cdot);
				oldImpulse=this.m_impulse;
				this.m_impulse=b2Math.Max(0.0,this.m_impulse+impulse);
				impulse=this.m_impulse-oldImpulse;
				P1X=-impulse *this.m_u1.x;
				P1Y=-impulse *this.m_u1.y;
				P2X=-this.m_ratio *impulse *this.m_u2.x;
				P2Y=-this.m_ratio *impulse *this.m_u2.y;
				bA.m_linearVelocity.x+=bA.m_invMass *P1X;
				bA.m_linearVelocity.y+=bA.m_invMass *P1Y;
				bA.m_angularVelocity+=bA.m_invI *(r1X *P1Y-r1Y *P1X);
				bB.m_linearVelocity.x+=bB.m_invMass *P2X;
				bB.m_linearVelocity.y+=bB.m_invMass *P2Y;
				bB.m_angularVelocity+=bB.m_invI *(r2X *P2Y-r2Y *P2X);
			}
			if (this.m_limitState1==2){
				v1X=bA.m_linearVelocity.x+(-bA.m_angularVelocity *r1Y);
				v1Y=bA.m_linearVelocity.y+(bA.m_angularVelocity *r1X);
				Cdot=-(this.m_u1.x *v1X+this.m_u1.y *v1Y);
				impulse=-this.m_limitMass1 *Cdot;
				oldImpulse=this.m_limitImpulse1;
				this.m_limitImpulse1=b2Math.Max(0.0,this.m_limitImpulse1+impulse);
				impulse=this.m_limitImpulse1-oldImpulse;
				P1X=-impulse *this.m_u1.x;
				P1Y=-impulse *this.m_u1.y;
				bA.m_linearVelocity.x+=bA.m_invMass *P1X;
				bA.m_linearVelocity.y+=bA.m_invMass *P1Y;
				bA.m_angularVelocity+=bA.m_invI *(r1X *P1Y-r1Y *P1X);
			}
			if (this.m_limitState2==2){
				v2X=bB.m_linearVelocity.x+(-bB.m_angularVelocity *r2Y);
				v2Y=bB.m_linearVelocity.y+(bB.m_angularVelocity *r2X);
				Cdot=-(this.m_u2.x *v2X+this.m_u2.y *v2Y);
				impulse=-this.m_limitMass2 *Cdot;
				oldImpulse=this.m_limitImpulse2;
				this.m_limitImpulse2=b2Math.Max(0.0,this.m_limitImpulse2+impulse);
				impulse=this.m_limitImpulse2-oldImpulse;
				P2X=-impulse *this.m_u2.x;
				P2Y=-impulse *this.m_u2.y;
				bB.m_linearVelocity.x+=bB.m_invMass *P2X;
				bB.m_linearVelocity.y+=bB.m_invMass *P2Y;
				bB.m_angularVelocity+=bB.m_invI *(r2X *P2Y-r2Y *P2X);
			}
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var s1X=this.m_ground.m_xf.position.x+this.m_groundAnchor1.x;
			var s1Y=this.m_ground.m_xf.position.y+this.m_groundAnchor1.y;
			var s2X=this.m_ground.m_xf.position.x+this.m_groundAnchor2.x;
			var s2Y=this.m_ground.m_xf.position.y+this.m_groundAnchor2.y;
			var r1X=NaN;
			var r1Y=NaN;
			var r2X=NaN;
			var r2Y=NaN;
			var p1X=NaN;
			var p1Y=NaN;
			var p2X=NaN;
			var p2Y=NaN;
			var length1=NaN;
			var length2=NaN;
			var C=NaN;
			var impulse=NaN;
			var oldImpulse=NaN;
			var oldLimitPositionImpulse=NaN;
			var tX=NaN;
			var linearError=0.0;
			if (this.m_state==2){
				tMat=bA.m_xf.R;
				r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
				r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
				r1X=tX;
				tMat=bB.m_xf.R;
				r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
				r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
				r2X=tX;
				p1X=bA.m_sweep.c.x+r1X;
				p1Y=bA.m_sweep.c.y+r1Y;
				p2X=bB.m_sweep.c.x+r2X;
				p2Y=bB.m_sweep.c.y+r2Y;
				this.m_u1.Set(p1X-s1X,p1Y-s1Y);
				this.m_u2.Set(p2X-s2X,p2Y-s2Y);
				length1=this.m_u1.Length();
				length2=this.m_u2.Length();
				if (length1 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_u1.Multiply(1.0 / length1);
				}
				else{
					this.m_u1.SetZero();
				}
				if (length2 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_u2.Multiply(1.0 / length2);
				}
				else{
					this.m_u2.SetZero();
				}
				C=this.m_constant-length1-this.m_ratio *length2;
				linearError=b2Math.Max(linearError,-C);
				C=b2Math.Clamp(C+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
				impulse=-this.m_pulleyMass *C;
				p1X=-impulse *this.m_u1.x;
				p1Y=-impulse *this.m_u1.y;
				p2X=-this.m_ratio *impulse *this.m_u2.x;
				p2Y=-this.m_ratio *impulse *this.m_u2.y;
				bA.m_sweep.c.x+=bA.m_invMass *p1X;
				bA.m_sweep.c.y+=bA.m_invMass *p1Y;
				bA.m_sweep.a+=bA.m_invI *(r1X *p1Y-r1Y *p1X);
				bB.m_sweep.c.x+=bB.m_invMass *p2X;
				bB.m_sweep.c.y+=bB.m_invMass *p2Y;
				bB.m_sweep.a+=bB.m_invI *(r2X *p2Y-r2Y *p2X);
				bA.SynchronizeTransform();
				bB.SynchronizeTransform();
			}
			if (this.m_limitState1==2){
				tMat=bA.m_xf.R;
				r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
				r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
				r1X=tX;
				p1X=bA.m_sweep.c.x+r1X;
				p1Y=bA.m_sweep.c.y+r1Y;
				this.m_u1.Set(p1X-s1X,p1Y-s1Y);
				length1=this.m_u1.Length();
				if (length1 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_u1.x *=1.0 / length1;
					this.m_u1.y *=1.0 / length1;
				}
				else{
					this.m_u1.SetZero();
				}
				C=this.m_maxLength1-length1;
				linearError=b2Math.Max(linearError,-C);
				C=b2Math.Clamp(C+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
				impulse=-this.m_limitMass1 *C;
				p1X=-impulse *this.m_u1.x;
				p1Y=-impulse *this.m_u1.y;
				bA.m_sweep.c.x+=bA.m_invMass *p1X;
				bA.m_sweep.c.y+=bA.m_invMass *p1Y;
				bA.m_sweep.a+=bA.m_invI *(r1X *p1Y-r1Y *p1X);
				bA.SynchronizeTransform();
			}
			if (this.m_limitState2==2){
				tMat=bB.m_xf.R;
				r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
				r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
				r2X=tX;
				p2X=bB.m_sweep.c.x+r2X;
				p2Y=bB.m_sweep.c.y+r2Y;
				this.m_u2.Set(p2X-s2X,p2Y-s2Y);
				length2=this.m_u2.Length();
				if (length2 > /*Box2D.Common.b2Settings.b2_linearSlop*/0.005){
					this.m_u2.x *=1.0 / length2;
					this.m_u2.y *=1.0 / length2;
				}
				else{
					this.m_u2.SetZero();
				}
				C=this.m_maxLength2-length2;
				linearError=b2Math.Max(linearError,-C);
				C=b2Math.Clamp(C+/*Box2D.Common.b2Settings.b2_linearSlop*/0.005,-/*Box2D.Common.b2Settings.b2_maxLinearCorrection*/0.2,0.0);
				impulse=-this.m_limitMass2 *C;
				p2X=-impulse *this.m_u2.x;
				p2Y=-impulse *this.m_u2.y;
				bB.m_sweep.c.x+=bB.m_invMass *p2X;
				bB.m_sweep.c.y+=bB.m_invMass *p2Y;
				bB.m_sweep.a+=bB.m_invI *(r2X *p2Y-r2Y *p2X);
				bB.SynchronizeTransform();
			}
			return linearError < /*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
		}

		b2PulleyJoint.b2_minPulleyLength=2.0;
		return b2PulleyJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2prismaticjointdef.as
	;
	//class Box2D.Dynamics.Joints.b2PrismaticJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2PrismaticJointDef=(function(_super){
		function b2PrismaticJointDef(){
			this.referenceAngle=NaN;
			this.enableLimit=false;
			this.lowerTranslation=NaN;
			this.upperTranslation=NaN;
			this.enableMotor=false;
			this.maxMotorForce=NaN;
			this.motorSpeed=NaN;
			b2PrismaticJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.localAxisA=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_prismaticJoint*/2;
			this.localAxisA.Set(1.0,0.0);
			this.referenceAngle=0.0;
			this.enableLimit=false;
			this.lowerTranslation=0.0;
			this.upperTranslation=0.0;
			this.enableMotor=false;
			this.maxMotorForce=0.0;
			this.motorSpeed=0.0;
		}

		__class(b2PrismaticJointDef,'Box2D.Dynamics.Joints.b2PrismaticJointDef',false,_super);
		var __proto=b2PrismaticJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchor,axis){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA=this.bodyA.GetLocalPoint(anchor);
			this.localAnchorB=this.bodyB.GetLocalPoint(anchor);
			this.localAxisA=this.bodyA.GetLocalVector(axis);
			this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle();
		}

		return b2PrismaticJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2revolutejoint.as
	;
	//class Box2D.Dynamics.Joints.b2RevoluteJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2RevoluteJoint=(function(_super){
		function b2RevoluteJoint(def){
			this.m_motorImpulse=NaN;
			this.m_motorMass=NaN;
			this.m_enableMotor=false;
			this.m_maxMotorTorque=NaN;
			this.m_motorSpeed=NaN;
			this.m_enableLimit=false;
			this.m_referenceAngle=NaN;
			this.m_lowerAngle=NaN;
			this.m_upperAngle=NaN;
			this.m_limitState=0;
			this.K=new b2Mat22();
			this.K1=new b2Mat22();
			this.K2=new b2Mat22();
			this.K3=new b2Mat22();
			this.impulse3=new b2Vec3();
			this.impulse2=new b2Vec2();
			this.reduced=new b2Vec2();
			this.m_localAnchor1=new b2Vec2();
			this.m_localAnchor2=new b2Vec2();
			this.m_impulse=new b2Vec3();
			this.m_mass=new b2Mat33();
			b2RevoluteJoint.__super.call(this,def);
			this.m_localAnchor1.SetV(def.localAnchorA);
			this.m_localAnchor2.SetV(def.localAnchorB);
			this.m_referenceAngle=def.referenceAngle;
			this.m_impulse.SetZero();
			this.m_motorImpulse=0.0;
			this.m_lowerAngle=def.lowerAngle;
			this.m_upperAngle=def.upperAngle;
			this.m_maxMotorTorque=def.maxMotorTorque;
			this.m_motorSpeed=def.motorSpeed;
			this.m_enableLimit=def.enableLimit;
			this.m_enableMotor=def.enableMotor;
			this.m_limitState=0;
		}

		__class(b2RevoluteJoint,'Box2D.Dynamics.Joints.b2RevoluteJoint',false,_super);
		var __proto=b2RevoluteJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchor1);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchor2);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse.x,inv_dt *this.m_impulse.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return inv_dt *this.m_impulse.z;
		}

		__proto.GetJointAngle=function(){
			return this.m_bodyB.m_sweep.a-this.m_bodyA.m_sweep.a-this.m_referenceAngle;
		}

		__proto.GetJointSpeed=function(){
			return this.m_bodyB.m_angularVelocity-this.m_bodyA.m_angularVelocity;
		}

		__proto.IsLimitEnabled=function(){
			return this.m_enableLimit;
		}

		__proto.EnableLimit=function(flag){
			this.m_enableLimit=flag;
		}

		__proto.GetLowerLimit=function(){
			return this.m_lowerAngle;
		}

		__proto.GetUpperLimit=function(){
			return this.m_upperAngle;
		}

		__proto.SetLimits=function(lower,upper){
			this.m_lowerAngle=lower;
			this.m_upperAngle=upper;
		}

		__proto.IsMotorEnabled=function(){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			return this.m_enableMotor;
		}

		__proto.EnableMotor=function(flag){
			this.m_enableMotor=flag;
		}

		__proto.SetMotorSpeed=function(speed){
			this.m_bodyA.SetAwake(true);
			this.m_bodyB.SetAwake(true);
			this.m_motorSpeed=speed;
		}

		__proto.GetMotorSpeed=function(){
			return this.m_motorSpeed;
		}

		__proto.SetMaxMotorTorque=function(torque){
			this.m_maxMotorTorque=torque;
		}

		__proto.GetMotorTorque=function(){
			return this.m_maxMotorTorque;
		}

		__proto.InitVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var tX=NaN;
			if (this.m_enableMotor || this.m_enableLimit){
			}
			tMat=bA.m_xf.R;
			var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
			var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
			r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
			r1X=tX;
			tMat=bB.m_xf.R;
			var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
			var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
			r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
			r2X=tX;
			var m1=bA.m_invMass;
			var m2=bB.m_invMass;
			var i1=bA.m_invI;
			var i2=bB.m_invI;
			this.m_mass.col1.x=m1+m2+r1Y *r1Y *i1+r2Y *r2Y *i2;
			this.m_mass.col2.x=-r1Y *r1X *i1-r2Y *r2X *i2;
			this.m_mass.col3.x=-r1Y *i1-r2Y *i2;
			this.m_mass.col1.y=this.m_mass.col2.x;
			this.m_mass.col2.y=m1+m2+r1X *r1X *i1+r2X *r2X *i2;
			this.m_mass.col3.y=r1X *i1+r2X *i2;
			this.m_mass.col1.z=this.m_mass.col3.x;
			this.m_mass.col2.z=this.m_mass.col3.y;
			this.m_mass.col3.z=i1+i2;
			this.m_motorMass=1.0 / (i1+i2);
			if (this.m_enableMotor==false){
				this.m_motorImpulse=0.0;
			}
			if (this.m_enableLimit){
				var jointAngle=bB.m_sweep.a-bA.m_sweep.a-this.m_referenceAngle;
				if (b2Math.Abs(this.m_upperAngle-this.m_lowerAngle)< 2.0 *b2Settings.b2_angularSlop){
					this.m_limitState=3;
				}
				else if (jointAngle <=this.m_lowerAngle){
					if (this.m_limitState !=1){
						this.m_impulse.z=0.0;
					}
					this.m_limitState=1;
				}
				else if (jointAngle >=this.m_upperAngle){
					if (this.m_limitState !=2){
						this.m_impulse.z=0.0;
					}
					this.m_limitState=2;
				}
				else{
					this.m_limitState=0;
					this.m_impulse.z=0.0;
				}
			}
			else{
				this.m_limitState=0;
			}
			if (step.warmStarting){
				this.m_impulse.x *=step.dtRatio;
				this.m_impulse.y *=step.dtRatio;
				this.m_motorImpulse *=step.dtRatio;
				var PX=this.m_impulse.x;
				var PY=this.m_impulse.y;
				bA.m_linearVelocity.x-=m1 *PX;
				bA.m_linearVelocity.y-=m1 *PY;
				bA.m_angularVelocity-=i1 *((r1X *PY-r1Y *PX)+this.m_motorImpulse+this.m_impulse.z);
				bB.m_linearVelocity.x+=m2 *PX;
				bB.m_linearVelocity.y+=m2 *PY;
				bB.m_angularVelocity+=i2 *((r2X *PY-r2Y *PX)+this.m_motorImpulse+this.m_impulse.z);
			}
			else{
				this.m_impulse.SetZero();
				this.m_motorImpulse=0.0;
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var tMat;
			var tX=NaN;
			var newImpulse=NaN;
			var r1X=NaN;
			var r1Y=NaN;
			var r2X=NaN;
			var r2Y=NaN;
			var v1=bA.m_linearVelocity;
			var w1=bA.m_angularVelocity;
			var v2=bB.m_linearVelocity;
			var w2=bB.m_angularVelocity;
			var m1=bA.m_invMass;
			var m2=bB.m_invMass;
			var i1=bA.m_invI;
			var i2=bB.m_invI;
			if (this.m_enableMotor && this.m_limitState !=3){
				var Cdot=w2-w1-this.m_motorSpeed;
				var impulse=this.m_motorMass *(-Cdot);
				var oldImpulse=this.m_motorImpulse;
				var maxImpulse=step.dt *this.m_maxMotorTorque;
				this.m_motorImpulse=b2Math.Clamp(this.m_motorImpulse+impulse,-maxImpulse,maxImpulse);
				impulse=this.m_motorImpulse-oldImpulse;
				w1-=i1 *impulse;
				w2+=i2 *impulse;
			}
			if (this.m_enableLimit && this.m_limitState !=0){
				tMat=bA.m_xf.R;
				r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
				r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
				r1X=tX;
				tMat=bB.m_xf.R;
				r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
				r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
				r2X=tX;
				var Cdot1X=v2.x+(-w2 *r2Y)-v1.x-(-w1 *r1Y);
				var Cdot1Y=v2.y+(w2 *r2X)-v1.y-(w1 *r1X);
				var Cdot2=w2-w1;
				this.m_mass.Solve33(this.impulse3,-Cdot1X,-Cdot1Y,-Cdot2);
				if (this.m_limitState==3){
					this.m_impulse.Add(this.impulse3);
				}
				else if (this.m_limitState==1){
					newImpulse=this.m_impulse.z+this.impulse3.z;
					if (newImpulse < 0.0){
						this.m_mass.Solve22(this.reduced,-Cdot1X,-Cdot1Y);
						this.impulse3.x=this.reduced.x;
						this.impulse3.y=this.reduced.y;
						this.impulse3.z=-this.m_impulse.z;
						this.m_impulse.x+=this.reduced.x;
						this.m_impulse.y+=this.reduced.y;
						this.m_impulse.z=0.0;
					}
				}
				else if (this.m_limitState==2){
					newImpulse=this.m_impulse.z+this.impulse3.z;
					if (newImpulse > 0.0){
						this.m_mass.Solve22(this.reduced,-Cdot1X,-Cdot1Y);
						this.impulse3.x=this.reduced.x;
						this.impulse3.y=this.reduced.y;
						this.impulse3.z=-this.m_impulse.z;
						this.m_impulse.x+=this.reduced.x;
						this.m_impulse.y+=this.reduced.y;
						this.m_impulse.z=0.0;
					}
				}
				v1.x-=m1 *this.impulse3.x;
				v1.y-=m1 *this.impulse3.y;
				w1-=i1 *(r1X *this.impulse3.y-r1Y *this.impulse3.x+this.impulse3.z);
				v2.x+=m2 *this.impulse3.x;
				v2.y+=m2 *this.impulse3.y;
				w2+=i2 *(r2X *this.impulse3.y-r2Y *this.impulse3.x+this.impulse3.z);
			}
			else{
				tMat=bA.m_xf.R;
				r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
				r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
				r1X=tX;
				tMat=bB.m_xf.R;
				r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
				r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
				r2X=tX;
				var CdotX=v2.x+(-w2 *r2Y)-v1.x-(-w1 *r1Y);
				var CdotY=v2.y+(w2 *r2X)-v1.y-(w1 *r1X);
				this.m_mass.Solve22(this.impulse2,-CdotX,-CdotY);
				this.m_impulse.x+=this.impulse2.x;
				this.m_impulse.y+=this.impulse2.y;
				v1.x-=m1 *this.impulse2.x;
				v1.y-=m1 *this.impulse2.y;
				w1-=i1 *(r1X *this.impulse2.y-r1Y *this.impulse2.x);
				v2.x+=m2 *this.impulse2.x;
				v2.y+=m2 *this.impulse2.y;
				w2+=i2 *(r2X *this.impulse2.y-r2Y *this.impulse2.x);
			}
			bA.m_linearVelocity.SetV(v1);
			bA.m_angularVelocity=w1;
			bB.m_linearVelocity.SetV(v2);
			bB.m_angularVelocity=w2;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var oldLimitImpulse=NaN;
			var C=NaN;
			var tMat;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var angularError=0.0;
			var positionError=0.0;
			var tX=NaN;
			var impulseX=NaN;
			var impulseY=NaN;
			if (this.m_enableLimit && this.m_limitState !=0){
				var angle=bB.m_sweep.a-bA.m_sweep.a-this.m_referenceAngle;
				var limitImpulse=0.0;
				if (this.m_limitState==3){
					C=b2Math.Clamp(angle-this.m_lowerAngle,-b2Settings.b2_maxAngularCorrection,b2Settings.b2_maxAngularCorrection);
					limitImpulse=-this.m_motorMass *C;
					angularError=b2Math.Abs(C);
				}
				else if (this.m_limitState==1){
					C=angle-this.m_lowerAngle;
					angularError=-C;
					C=b2Math.Clamp(C+b2Settings.b2_angularSlop,-b2Settings.b2_maxAngularCorrection,0.0);
					limitImpulse=-this.m_motorMass *C;
				}
				else if (this.m_limitState==2){
					C=angle-this.m_upperAngle;
					angularError=C;
					C=b2Math.Clamp(C-b2Settings.b2_angularSlop,0.0,b2Settings.b2_maxAngularCorrection);
					limitImpulse=-this.m_motorMass *C;
				}
				bA.m_sweep.a-=bA.m_invI *limitImpulse;
				bB.m_sweep.a+=bB.m_invI *limitImpulse;
				bA.SynchronizeTransform();
				bB.SynchronizeTransform();
				}{
				tMat=bA.m_xf.R;
				var r1X=this.m_localAnchor1.x-bA.m_sweep.localCenter.x;
				var r1Y=this.m_localAnchor1.y-bA.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r1X+tMat.col2.x *r1Y);
				r1Y=(tMat.col1.y *r1X+tMat.col2.y *r1Y);
				r1X=tX;
				tMat=bB.m_xf.R;
				var r2X=this.m_localAnchor2.x-bB.m_sweep.localCenter.x;
				var r2Y=this.m_localAnchor2.y-bB.m_sweep.localCenter.y;
				tX=(tMat.col1.x *r2X+tMat.col2.x *r2Y);
				r2Y=(tMat.col1.y *r2X+tMat.col2.y *r2Y);
				r2X=tX;
				var CX=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
				var CY=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
				var CLengthSquared=CX *CX+CY *CY;
				var CLength=Math.sqrt(CLengthSquared);
				positionError=CLength;
				var invMass1=bA.m_invMass;
				var invMass2=bB.m_invMass;
				var invI1=bA.m_invI;
				var invI2=bB.m_invI;
				var k_allowedStretch=10.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
				if (CLengthSquared > k_allowedStretch *k_allowedStretch){
					var uX=CX / CLength;
					var uY=CY / CLength;
					var k=invMass1+invMass2;
					var m=1.0 / k;
					impulseX=m *(-CX);
					impulseY=m *(-CY);
					var k_beta=0.5;
					bA.m_sweep.c.x-=k_beta *invMass1 *impulseX;
					bA.m_sweep.c.y-=k_beta *invMass1 *impulseY;
					bB.m_sweep.c.x+=k_beta *invMass2 *impulseX;
					bB.m_sweep.c.y+=k_beta *invMass2 *impulseY;
					CX=bB.m_sweep.c.x+r2X-bA.m_sweep.c.x-r1X;
					CY=bB.m_sweep.c.y+r2Y-bA.m_sweep.c.y-r1Y;
				}
				this.K1.col1.x=invMass1+invMass2;
				this.K1.col2.x=0.0;
				this.K1.col1.y=0.0;
				this.K1.col2.y=invMass1+invMass2;
				this.K2.col1.x=invI1 *r1Y *r1Y;
				this.K2.col2.x=-invI1 *r1X *r1Y;
				this.K2.col1.y=-invI1 *r1X *r1Y;
				this.K2.col2.y=invI1 *r1X *r1X;
				this.K3.col1.x=invI2 *r2Y *r2Y;
				this.K3.col2.x=-invI2 *r2X *r2Y;
				this.K3.col1.y=-invI2 *r2X *r2Y;
				this.K3.col2.y=invI2 *r2X *r2X;
				this.K.SetM(this.K1);
				this.K.AddM(this.K2);
				this.K.AddM(this.K3);
				this.K.Solve(b2RevoluteJoint.tImpulse,-CX,-CY);
				impulseX=b2RevoluteJoint.tImpulse.x;
				impulseY=b2RevoluteJoint.tImpulse.y;
				bA.m_sweep.c.x-=bA.m_invMass *impulseX;
				bA.m_sweep.c.y-=bA.m_invMass *impulseY;
				bA.m_sweep.a-=bA.m_invI *(r1X *impulseY-r1Y *impulseX);
				bB.m_sweep.c.x+=bB.m_invMass *impulseX;
				bB.m_sweep.c.y+=bB.m_invMass *impulseY;
				bB.m_sweep.a+=bB.m_invI *(r2X *impulseY-r2Y *impulseX);
				bA.SynchronizeTransform();
				bB.SynchronizeTransform();
			}
			return positionError <=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005 && angularError <=b2Settings.b2_angularSlop;
		}

		__static(b2RevoluteJoint,
		['tImpulse',function(){return this.tImpulse=new b2Vec2();}
		]);
		return b2RevoluteJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2pulleyjointdef.as
	;
	//class Box2D.Dynamics.Joints.b2PulleyJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2PulleyJointDef=(function(_super){
		function b2PulleyJointDef(){
			this.lengthA=NaN;
			this.maxLengthA=NaN;
			this.lengthB=NaN;
			this.maxLengthB=NaN;
			this.ratio=NaN;
			b2PulleyJointDef.__super.call(this);
			this.groundAnchorA=new b2Vec2();
			this.groundAnchorB=new b2Vec2();
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_pulleyJoint*/4;
			this.groundAnchorA.Set(-1.0,1.0);
			this.groundAnchorB.Set(1.0,1.0);
			this.localAnchorA.Set(-1.0,0.0);
			this.localAnchorB.Set(1.0,0.0);
			this.lengthA=0.0;
			this.maxLengthA=0.0;
			this.lengthB=0.0;
			this.maxLengthB=0.0;
			this.ratio=1.0;
			this.collideConnected=true;
		}

		__class(b2PulleyJointDef,'Box2D.Dynamics.Joints.b2PulleyJointDef',false,_super);
		var __proto=b2PulleyJointDef.prototype;
		__proto.Initialize=function(bA,bB,gaA,gaB,anchorA,anchorB,r){
			this.bodyA=bA;
			this.bodyB=bB;
			this.groundAnchorA.SetV(gaA);
			this.groundAnchorB.SetV(gaB);
			this.localAnchorA=this.bodyA.GetLocalPoint(anchorA);
			this.localAnchorB=this.bodyB.GetLocalPoint(anchorB);
			var d1X=anchorA.x-gaA.x;
			var d1Y=anchorA.y-gaA.y;
			this.lengthA=Math.sqrt(d1X*d1X+d1Y*d1Y);
			var d2X=anchorB.x-gaB.x;
			var d2Y=anchorB.y-gaB.y;
			this.lengthB=Math.sqrt(d2X*d2X+d2Y*d2Y);
			this.ratio=r;
			var C=this.lengthA+this.ratio *this.lengthB;
			this.maxLengthA=C-this.ratio */*Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength*/2.0;
			this.maxLengthB=(C-/*Box2D.Dynamics.Joints.b2PulleyJoint.b2_minPulleyLength*/2.0)/ this.ratio;
		}

		return b2PulleyJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2weldjoint.as
	;
	//class Box2D.Dynamics.Joints.b2WeldJoint extends Box2D.Dynamics.Joints.b2Joint
	var b2WeldJoint=(function(_super){
		function b2WeldJoint(def){
			this.m_referenceAngle=NaN;
			this.m_localAnchorA=new b2Vec2();
			this.m_localAnchorB=new b2Vec2();
			this.m_impulse=new b2Vec3();
			this.m_mass=new b2Mat33();
			b2WeldJoint.__super.call(this,def);
			this.m_localAnchorA.SetV(def.localAnchorA);
			this.m_localAnchorB.SetV(def.localAnchorB);
			this.m_referenceAngle=def.referenceAngle;
			this.m_impulse.SetZero();
			this.m_mass=new b2Mat33();
		}

		__class(b2WeldJoint,'Box2D.Dynamics.Joints.b2WeldJoint',false,_super);
		var __proto=b2WeldJoint.prototype;
		__proto.GetAnchorA=function(){
			return this.m_bodyA.GetWorldPoint(this.m_localAnchorA);
		}

		__proto.GetAnchorB=function(){
			return this.m_bodyB.GetWorldPoint(this.m_localAnchorB);
		}

		__proto.GetReactionForce=function(inv_dt){
			return new b2Vec2(inv_dt *this.m_impulse.x,inv_dt *this.m_impulse.y);
		}

		__proto.GetReactionTorque=function(inv_dt){
			return inv_dt *this.m_impulse.z;
		}

		__proto.InitVelocityConstraints=function(step){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var rAX=this.m_localAnchorA.x-bA.m_sweep.localCenter.x;
			var rAY=this.m_localAnchorA.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rAX+tMat.col2.x *rAY);
			rAY=(tMat.col1.y *rAX+tMat.col2.y *rAY);
			rAX=tX;
			tMat=bB.m_xf.R;
			var rBX=this.m_localAnchorB.x-bB.m_sweep.localCenter.x;
			var rBY=this.m_localAnchorB.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rBX+tMat.col2.x *rBY);
			rBY=(tMat.col1.y *rBX+tMat.col2.y *rBY);
			rBX=tX;
			var mA=bA.m_invMass;
			var mB=bB.m_invMass;
			var iA=bA.m_invI;
			var iB=bB.m_invI;
			this.m_mass.col1.x=mA+mB+rAY *rAY *iA+rBY *rBY *iB;
			this.m_mass.col2.x=-rAY *rAX *iA-rBY *rBX *iB;
			this.m_mass.col3.x=-rAY *iA-rBY *iB;
			this.m_mass.col1.y=this.m_mass.col2.x;
			this.m_mass.col2.y=mA+mB+rAX *rAX *iA+rBX *rBX *iB;
			this.m_mass.col3.y=rAX *iA+rBX *iB;
			this.m_mass.col1.z=this.m_mass.col3.x;
			this.m_mass.col2.z=this.m_mass.col3.y;
			this.m_mass.col3.z=iA+iB;
			if (step.warmStarting){
				this.m_impulse.x *=step.dtRatio;
				this.m_impulse.y *=step.dtRatio;
				this.m_impulse.z *=step.dtRatio;
				bA.m_linearVelocity.x-=mA *this.m_impulse.x;
				bA.m_linearVelocity.y-=mA *this.m_impulse.y;
				bA.m_angularVelocity-=iA *(rAX *this.m_impulse.y-rAY *this.m_impulse.x+this.m_impulse.z);
				bB.m_linearVelocity.x+=mB *this.m_impulse.x;
				bB.m_linearVelocity.y+=mB *this.m_impulse.y;
				bB.m_angularVelocity+=iB *(rBX *this.m_impulse.y-rBY *this.m_impulse.x+this.m_impulse.z);
			}
			else{
				this.m_impulse.SetZero();
			}
		}

		__proto.SolveVelocityConstraints=function(step){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			var vA=bA.m_linearVelocity;
			var wA=bA.m_angularVelocity;
			var vB=bB.m_linearVelocity;
			var wB=bB.m_angularVelocity;
			var mA=bA.m_invMass;
			var mB=bB.m_invMass;
			var iA=bA.m_invI;
			var iB=bB.m_invI;
			tMat=bA.m_xf.R;
			var rAX=this.m_localAnchorA.x-bA.m_sweep.localCenter.x;
			var rAY=this.m_localAnchorA.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rAX+tMat.col2.x *rAY);
			rAY=(tMat.col1.y *rAX+tMat.col2.y *rAY);
			rAX=tX;
			tMat=bB.m_xf.R;
			var rBX=this.m_localAnchorB.x-bB.m_sweep.localCenter.x;
			var rBY=this.m_localAnchorB.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rBX+tMat.col2.x *rBY);
			rBY=(tMat.col1.y *rBX+tMat.col2.y *rBY);
			rBX=tX;
			var Cdot1X=vB.x-wB *rBY-vA.x+wA *rAY;
			var Cdot1Y=vB.y+wB *rBX-vA.y-wA *rAX;
			var Cdot2=wB-wA;
			var impulse=new b2Vec3();
			this.m_mass.Solve33(impulse,-Cdot1X,-Cdot1Y,-Cdot2);
			this.m_impulse.Add(impulse);
			vA.x-=mA *impulse.x;
			vA.y-=mA *impulse.y;
			wA-=iA *(rAX *impulse.y-rAY *impulse.x+impulse.z);
			vB.x+=mB *impulse.x;
			vB.y+=mB *impulse.y;
			wB+=iB *(rBX *impulse.y-rBY *impulse.x+impulse.z);
			bA.m_angularVelocity=wA;
			bB.m_angularVelocity=wB;
		}

		__proto.SolvePositionConstraints=function(baumgarte){
			var tMat;
			var tX=NaN;
			var bA=this.m_bodyA;
			var bB=this.m_bodyB;
			tMat=bA.m_xf.R;
			var rAX=this.m_localAnchorA.x-bA.m_sweep.localCenter.x;
			var rAY=this.m_localAnchorA.y-bA.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rAX+tMat.col2.x *rAY);
			rAY=(tMat.col1.y *rAX+tMat.col2.y *rAY);
			rAX=tX;
			tMat=bB.m_xf.R;
			var rBX=this.m_localAnchorB.x-bB.m_sweep.localCenter.x;
			var rBY=this.m_localAnchorB.y-bB.m_sweep.localCenter.y;
			tX=(tMat.col1.x *rBX+tMat.col2.x *rBY);
			rBY=(tMat.col1.y *rBX+tMat.col2.y *rBY);
			rBX=tX;
			var mA=bA.m_invMass;
			var mB=bB.m_invMass;
			var iA=bA.m_invI;
			var iB=bB.m_invI;
			var C1X=bB.m_sweep.c.x+rBX-bA.m_sweep.c.x-rAX;
			var C1Y=bB.m_sweep.c.y+rBY-bA.m_sweep.c.y-rAY;
			var C2=bB.m_sweep.a-bA.m_sweep.a-this.m_referenceAngle;
			var k_allowedStretch=10.0 */*Box2D.Common.b2Settings.b2_linearSlop*/0.005;
			var positionError=Math.sqrt(C1X *C1X+C1Y *C1Y);
			var angularError=b2Math.Abs(C2);
			if (positionError > k_allowedStretch){
				iA *=1.0;
				iB *=1.0;
			}
			this.m_mass.col1.x=mA+mB+rAY *rAY *iA+rBY *rBY *iB;
			this.m_mass.col2.x=-rAY *rAX *iA-rBY *rBX *iB;
			this.m_mass.col3.x=-rAY *iA-rBY *iB;
			this.m_mass.col1.y=this.m_mass.col2.x;
			this.m_mass.col2.y=mA+mB+rAX *rAX *iA+rBX *rBX *iB;
			this.m_mass.col3.y=rAX *iA+rBX *iB;
			this.m_mass.col1.z=this.m_mass.col3.x;
			this.m_mass.col2.z=this.m_mass.col3.y;
			this.m_mass.col3.z=iA+iB;
			var impulse=new b2Vec3();
			this.m_mass.Solve33(impulse,-C1X,-C1Y,-C2);
			bA.m_sweep.c.x-=mA *impulse.x;
			bA.m_sweep.c.y-=mA *impulse.y;
			bA.m_sweep.a-=iA *(rAX *impulse.y-rAY *impulse.x+impulse.z);
			bB.m_sweep.c.x+=mB *impulse.x;
			bB.m_sweep.c.y+=mB *impulse.y;
			bB.m_sweep.a+=iB *(rBX *impulse.y-rBY *impulse.x+impulse.z);
			bA.SynchronizeTransform();
			bB.SynchronizeTransform();
			return positionError <=/*Box2D.Common.b2Settings.b2_linearSlop*/0.005 && angularError <=b2Settings.b2_angularSlop;
		}

		return b2WeldJoint;
	})(b2Joint)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2revolutejointdef.as
	;
	//class Box2D.Dynamics.Joints.b2RevoluteJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2RevoluteJointDef=(function(_super){
		function b2RevoluteJointDef(){
			this.referenceAngle=NaN;
			this.enableLimit=false;
			this.lowerAngle=NaN;
			this.upperAngle=NaN;
			this.enableMotor=false;
			this.motorSpeed=NaN;
			this.maxMotorTorque=NaN;
			b2RevoluteJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_revoluteJoint*/1;
			this.localAnchorA.Set(0.0,0.0);
			this.localAnchorB.Set(0.0,0.0);
			this.referenceAngle=0.0;
			this.lowerAngle=0.0;
			this.upperAngle=0.0;
			this.maxMotorTorque=0.0;
			this.motorSpeed=0.0;
			this.enableLimit=false;
			this.enableMotor=false;
		}

		__class(b2RevoluteJointDef,'Box2D.Dynamics.Joints.b2RevoluteJointDef',false,_super);
		var __proto=b2RevoluteJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchor){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA=this.bodyA.GetLocalPoint(anchor);
			this.localAnchorB=this.bodyB.GetLocalPoint(anchor);
			this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle();
		}

		return b2RevoluteJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/box2d/dynamics/joints/b2weldjointdef.as
	;
	//class Box2D.Dynamics.Joints.b2WeldJointDef extends Box2D.Dynamics.Joints.b2JointDef
	var b2WeldJointDef=(function(_super){
		function b2WeldJointDef(){
			this.referenceAngle=NaN;
			b2WeldJointDef.__super.call(this);
			this.localAnchorA=new b2Vec2();
			this.localAnchorB=new b2Vec2();
			this.type=/*Box2D.Dynamics.Joints.b2Joint.e_weldJoint*/8;
			this.referenceAngle=0.0;
		}

		__class(b2WeldJointDef,'Box2D.Dynamics.Joints.b2WeldJointDef',false,_super);
		var __proto=b2WeldJointDef.prototype;
		__proto.Initialize=function(bA,bB,anchor){
			this.bodyA=bA;
			this.bodyB=bB;
			this.localAnchorA.SetV(this.bodyA.GetLocalPoint(anchor));
			this.localAnchorB.SetV(this.bodyB.GetLocalPoint(anchor));
			this.referenceAngle=this.bodyB.GetAngle()-this.bodyA.GetAngle();
		}

		return b2WeldJointDef;
	})(b2JointDef)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/objs/gameobject.as
	;
	//class framework.objs.GameObject extends starling.events.EventDispatcher
	var GameObject=(function(_super){
		function GameObject(){
			this._game=null;
			this._gameObjectListProxy=null;
			GameObject.__super.call(this);
		}

		__class(GameObject,'framework.objs.GameObject',false,_super);
		var __proto=GameObject.prototype;
		__proto.init_internal=function(game,gameObjectListProxy,info){
			this._game=game;
			this._gameObjectListProxy=gameObjectListProxy;
			this.addToGameObjectList(this._gameObjectListProxy);
			this.init(info);
			this._game.addEventListener(FrameworkEvent.DESTROY_ALL,__bind(this,this.destroyAll));
		}

		__proto.init=LAYAFNVOID/*function(info){}*/
		__proto.addToGameObjectList=function(gameObjectListProxy){
			gameObjectListProxy.addGameObject(iflash.utils.getQualifiedClassName(this),this);
			var parentClassName,o=this;
			var rootClassName=iflash.utils.getQualifiedClassName(GameObject);
			while (true){
				parentClassName=iflash.utils.getQualifiedSuperclassName(o);
				gameObjectListProxy.addGameObject(parentClassName,this);
				if(parentClassName==rootClassName)break ;
				o=iflash.utils.getDefinitionByName(parentClassName);
			}
		}

		__proto.removeFromGameObjectList=function(gameObjectListProxy){
			gameObjectListProxy.removeGameObject(iflash.utils.getQualifiedClassName(this),this);
			var parentClassName,o=this;
			var rootClassName=iflash.utils.getQualifiedClassName(GameObject);
			while (true){
				parentClassName=iflash.utils.getQualifiedSuperclassName(o);
				gameObjectListProxy.removeGameObject(parentClassName,this);
				if(parentClassName==rootClassName)break ;
				o=iflash.utils.getDefinitionByName(parentClassName);
			}
		}

		__proto.scheduleUpdate=function(updateType){
			(updateType===void 0)&& (updateType=2);
			switch (updateType){
				case /*framework.UpdateType.FOREVER*/0:this._game.addUpdate(updateType,__bind(this,this.foreverUpdate));break ;
				case /*framework.UpdateType.FIXED*/1:this._game.addUpdate(updateType,__bind(this,this.fixedUpdate));break ;
				case /*framework.UpdateType.UPDATE*/2:this._game.addUpdate(updateType,__bind(this,this.update));break ;
				case /*framework.UpdateType.LATE*/3:this._game.addUpdate(updateType,__bind(this,this.lateUpdate));break ;
				default :
				}
		}

		__proto.unscheduleUpdate=function(updateType){
			(updateType===void 0)&& (updateType=2);
			switch (updateType){
				case /*framework.UpdateType.FOREVER*/0:this._game.removeUpdate(updateType,__bind(this,this.foreverUpdate));break ;
				case /*framework.UpdateType.FIXED*/1:this._game.removeUpdate(updateType,__bind(this,this.fixedUpdate));break ;
				case /*framework.UpdateType.UPDATE*/2:this._game.removeUpdate(updateType,__bind(this,this.update));break ;
				case /*framework.UpdateType.LATE*/3:this._game.removeUpdate(updateType,__bind(this,this.lateUpdate));break ;
				default :
				}
		}

		__proto.foreverUpdate=LAYAFNVOID/*function(){}*/
		__proto.fixedUpdate=LAYAFNVOID/*function(){}*/
		__proto.update=LAYAFNVOID/*function(){}*/
		__proto.lateUpdate=LAYAFNVOID/*function(){}*/
		__proto.destroyAll=function(e){this.destroy();}
		__proto.destroy=function(){
			this._game.removeEventListener(FrameworkEvent.DESTROY_ALL,__bind(this,this.destroyAll));
			if(this._gameObjectListProxy){
				this.removeFromGameObjectList(this._gameObjectListProxy);
				this._gameObjectListProxy=null;
			}
			this._game=null;
		}

		return GameObject;
	})(EventDispatcher1)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/game.as
	;
	//class framework.Game extends starling.events.EventDispatcher
	var Game=(function(_super){
		function Game(){
			this._global=null;
			this._gameObjectListProxy=null;
			this._updateProxy=null;
			this._pause=false;
			Game.__super.call(this);
			if(Game._instance)throw new Error("该类只能实例化一次!!!");
			Game._instance=this;
			this.init();
		}

		__class(Game,'framework.Game',false,_super);
		var __proto=Game.prototype;
		__proto.init=function(){
			this._gameObjectListProxy=new GameObjectListProxy();
			this._updateProxy=new UpdateProxy(this);
		}

		__proto.createGameObj=function(obj,info){
			obj.init_internal(this,this._gameObjectListProxy,info);
			return obj;
		}

		__proto.getGameObjList=function(gameObjClass){
			var qualifiedClassName=iflash.utils.getQualifiedClassName(gameObjClass);
			return this._gameObjectListProxy.getGameObjectList(qualifiedClassName);
		}

		__proto.getGameObjListToArray=function(gameObjClass){
			var qualifiedClassName=iflash.utils.getQualifiedClassName(gameObjClass);
			return this._gameObjectListProxy.getGameObjectListToArray(qualifiedClassName);
		}

		__proto.addUpdate=function(updateType,func){
			this._updateProxy.add(updateType,func);
		}

		__proto.removeUpdate=function(updateType,func){
			this._updateProxy.remove(updateType,func);
		}

		__proto.destroyAll=function(){
			this.dispatchEvent(FrameworkEvent.getDestroyAllEvent());
		}

		__proto.startup=function(main,stage,data){
			main.addEventListener("enterFrame",__bind(this,this.update));
		}

		__proto.update=function(e){
			this._updateProxy.update();
		}

		__getset(0,__proto,'pause',function(){return this._pause;},function(value){
			if(value==this._pause)return;
			this._pause=value;
			var evt=this._pause?FrameworkEvent.getPauseEvent():FrameworkEvent.getResumeEvent();
			this.dispatchEvent(evt);
		});

		__getset(0,__proto,'global',function(){return this._global;});
		Game.getInstance=function(){return Game._instance=Game._instance||new Game();}
		Game._instance=null
		return Game;
	})(EventDispatcher1)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/events/frameworkevent.as
	//class framework.events.FrameworkEvent extends starling.events.Event
	var FrameworkEvent=(function(_super){
		function FrameworkEvent(type,info,bubbles,cancelable){
			this.info=null;
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			this.info=info;
			FrameworkEvent.__super.call(this,type,bubbles);
		}

		__class(FrameworkEvent,'framework.events.FrameworkEvent',false,_super);
		var __proto=FrameworkEvent.prototype;
		__proto.toString=function(){
			return _super.prototype.toString.call(this);
		}

		FrameworkEvent.getDestroyAllEvent=function(info){FrameworkEvent._destroyAllEvt=FrameworkEvent._destroyAllEvt||new FrameworkEvent(FrameworkEvent.DESTROY_ALL);
			FrameworkEvent._destroyAllEvt.info=info;
			return FrameworkEvent._destroyAllEvt;
		}

		FrameworkEvent.getPauseEvent=function(info){FrameworkEvent._pauseEvt=FrameworkEvent._pauseEvt|| new FrameworkEvent(FrameworkEvent.PAUSE);
			FrameworkEvent._pauseEvt.info=info;
			return FrameworkEvent._pauseEvt;
		}

		FrameworkEvent.getResumeEvent=function(info){FrameworkEvent._resumeEvt=FrameworkEvent._resumeEvt|| new FrameworkEvent(FrameworkEvent.RESUME);
			FrameworkEvent._resumeEvt.info=info;
			return FrameworkEvent._resumeEvt;
		}

		FrameworkEvent.CHANGE_CURRENT_WORLD="changeCurrentWorld";
		FrameworkEvent.DESTROY_ALL="destroyAll";
		FrameworkEvent._destroyAllEvt=null
		FrameworkEvent.PAUSE="pause";
		FrameworkEvent._pauseEvt=null
		FrameworkEvent.RESUME="resume";
		FrameworkEvent._resumeEvt=null
		return FrameworkEvent;
	})(Event1)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/displayobject.as
	//class starling.display.DisplayObject extends starling.events.EventDispatcher
	var DisplayObject1=(function(_super){
		function DisplayObject(){
			this.mX=NaN;
			this.mY=NaN;
			this.mPivotX=NaN;
			this.mPivotY=NaN;
			this.mScaleX=NaN;
			this.mScaleY=NaN;
			this.mSkewX=NaN;
			this.mSkewY=NaN;
			this.mRotation=NaN;
			this.mAlpha=NaN;
			this.mVisible=false;
			this.mTouchable=false;
			this.mBlendMode=null;
			this.mName=null;
			this.mUseHandCursor=false;
			this.mParent=null;
			this.mTransformationMatrix=null;
			this.mTransformationMatrix3D=null;
			this.mOrientationChanged=false;
			this.mFilter=null;
			this.mIs3D=false;
			this.mMask=null;
			this.mIsMask=false;
			DisplayObject.__super.call(this);
			if (Capabilities.isDebugger &&
				iflash.utils.getQualifiedClassName(this)=="starling.display::DisplayObject"){
				throw new AbstractClassError();
			}
			this.mX=this.mY=this.mPivotX=this.mPivotY=this.mRotation=this.mSkewX=this.mSkewY=0.0;
			this.mScaleX=this.mScaleY=this.mAlpha=1.0;
			this.mVisible=this.mTouchable=true;
			this.mBlendMode=/*starling.display.BlendMode.AUTO*/"auto";
			this.mTransformationMatrix=new Matrix();
			this.mOrientationChanged=this.mUseHandCursor=false;
		}

		__class(DisplayObject,'starling.display.DisplayObject',false,_super,'DisplayObject1');
		var __proto=DisplayObject.prototype;
		__proto.dispose=function(){
			if (this.mFilter)this.mFilter.dispose();
			if (this.mMask)this.mMask.dispose();
			this.removeEventListeners();
			this.mask=null;
		}

		__proto.removeFromParent=function(dispose){
			(dispose===void 0)&& (dispose=false);
			if (this.mParent)this.mParent.removeChild(this,dispose);
			else if (dispose)this.dispose();
		}

		__proto.getTransformationMatrix=function(targetSpace,resultMatrix){
			var commonParent;
			var currentObject;
			if (resultMatrix)resultMatrix.identity();
			else resultMatrix=new Matrix();
			if (targetSpace==this){
				return resultMatrix;
			}
			else if (targetSpace==this.mParent || (targetSpace==null && this.mParent==null)){
				resultMatrix.copyFrom(this.transformationMatrix);
				return resultMatrix;
			}
			else if (targetSpace==null || targetSpace==this.base){
				currentObject=this;
				while (currentObject !=targetSpace){
					resultMatrix.concat(currentObject.transformationMatrix);
					currentObject=currentObject.mParent;
				}
				return resultMatrix;
			}
			else if (targetSpace.mParent==this){
				targetSpace.getTransformationMatrix(this,resultMatrix);
				resultMatrix.invert();
				return resultMatrix;
			}
			commonParent=this.findCommonParent(this,targetSpace);
			currentObject=this;
			while (currentObject !=commonParent){
				resultMatrix.concat(currentObject.transformationMatrix);
				currentObject=currentObject.mParent;
			}
			if (commonParent==targetSpace)
				return resultMatrix;
			DisplayObject.sHelperMatrix.identity();
			currentObject=targetSpace;
			while (currentObject !=commonParent){
				DisplayObject.sHelperMatrix.concat(currentObject.transformationMatrix);
				currentObject=currentObject.mParent;
			}
			DisplayObject.sHelperMatrix.invert();
			resultMatrix.concat(DisplayObject.sHelperMatrix);
			return resultMatrix;
		}

		__proto.getBounds=function(targetSpace,resultRect){
			throw new AbstractMethodError();
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (forTouch && (!this.mVisible || !this.mTouchable))return null;
			if (this.mMask && !this.hitTestMask(localPoint))return null;
			if (this.getBounds(this,DisplayObject.sHelperRect).containsPoint(localPoint))return this;
			else return null;
		}

		__proto.hitTestMask=function(localPoint){
			if (this.mMask){
				if (this.mMask.stage)this.getTransformationMatrix(this.mMask,DisplayObject.sHelperMatrixAlt);
				else{
					DisplayObject.sHelperMatrixAlt.copyFrom(this.mMask.transformationMatrix);
					DisplayObject.sHelperMatrixAlt.invert();
				}
				MatrixUtil1.transformPoint(DisplayObject.sHelperMatrixAlt,localPoint,DisplayObject.sHelperPoint);
				return this.mMask.hitTest(DisplayObject.sHelperPoint,true)!=null;
			}
			else return true;
		}

		__proto.localToGlobal=function(localPoint,resultPoint){
			if (this.is3D){
				DisplayObject.sHelperPoint3D.setTo(localPoint.x,localPoint.y,0);
				return this.local3DToGlobal(DisplayObject.sHelperPoint3D,resultPoint);
			}
			else{
				this.getTransformationMatrix(this.base,DisplayObject.sHelperMatrixAlt);
				return MatrixUtil1.transformPoint(DisplayObject.sHelperMatrixAlt,localPoint,resultPoint);
			}
		}

		__proto.globalToLocal=function(globalPoint,resultPoint){
			if (this.is3D){
				this.globalToLocal3D(globalPoint,DisplayObject.sHelperPoint3D);
				return MathUtil.intersectLineWithXYPlane(
				this.stage.cameraPosition,DisplayObject.sHelperPoint3D,resultPoint);
			}
			else{
				this.getTransformationMatrix(this.base,DisplayObject.sHelperMatrixAlt);
				DisplayObject.sHelperMatrixAlt.invert();
				return MatrixUtil1.transformPoint(DisplayObject.sHelperMatrixAlt,globalPoint,resultPoint);
			}
		}

		__proto.render=function(support,parentAlpha){
			throw new AbstractMethodError();
		}

		__proto.alignPivot=function(hAlign,vAlign){
			(hAlign===void 0)&& (hAlign="center");
			(vAlign===void 0)&& (vAlign="center");
			var bounds=this.getBounds(this);
			this.mOrientationChanged=true;
			if (hAlign==/*starling.utils.HAlign.LEFT*/"left")this.mPivotX=bounds.x;
			else if (hAlign==/*starling.utils.HAlign.CENTER*/"center")this.mPivotX=bounds.x+bounds.width / 2.0;
			else if (hAlign==/*starling.utils.HAlign.RIGHT*/"right")this.mPivotX=bounds.x+bounds.width;
			else throw new Error("Invalid horizontal alignment: "+hAlign);
			if (vAlign==/*starling.utils.VAlign.TOP*/"top")this.mPivotY=bounds.y;
			else if (vAlign==/*starling.utils.VAlign.CENTER*/"center")this.mPivotY=bounds.y+bounds.height / 2.0;
			else if (vAlign==/*starling.utils.VAlign.BOTTOM*/"bottom")this.mPivotY=bounds.y+bounds.height;
			else throw new Error("Invalid vertical alignment: "+vAlign);
		}

		__proto.getTransformationMatrix3D=function(targetSpace,resultMatrix){
			var commonParent;
			var currentObject;
			if (resultMatrix)resultMatrix.identity();
			else resultMatrix=new Matrix3D();
			if (targetSpace==this){
				return resultMatrix;
			}
			else if (targetSpace==this.mParent || (targetSpace==null && this.mParent==null)){
				resultMatrix.copyFrom(this.transformationMatrix3D);
				return resultMatrix;
			}
			else if (targetSpace==null || targetSpace==this.base){
				currentObject=this;
				while (currentObject !=targetSpace){
					resultMatrix.append(currentObject.transformationMatrix3D);
					currentObject=currentObject.mParent;
				}
				return resultMatrix;
			}
			else if (targetSpace.mParent==this){
				targetSpace.getTransformationMatrix3D(this,resultMatrix);
				resultMatrix.invert();
				return resultMatrix;
			}
			commonParent=this.findCommonParent(this,targetSpace);
			currentObject=this;
			while (currentObject !=commonParent){
				resultMatrix.append(currentObject.transformationMatrix3D);
				currentObject=currentObject.mParent;
			}
			if (commonParent==targetSpace)
				return resultMatrix;
			DisplayObject.sHelperMatrix3D.identity();
			currentObject=targetSpace;
			while (currentObject !=commonParent){
				DisplayObject.sHelperMatrix3D.append(currentObject.transformationMatrix3D);
				currentObject=currentObject.mParent;
			}
			DisplayObject.sHelperMatrix3D.invert();
			resultMatrix.append(DisplayObject.sHelperMatrix3D);
			return resultMatrix;
		}

		__proto.local3DToGlobal=function(localPoint,resultPoint){
			var stage=this.stage;
			if (stage==null)throw new IllegalOperationError("Object not connected to stage");
			this.getTransformationMatrix3D(stage,DisplayObject.sHelperMatrixAlt3D);
			MatrixUtil1.transformPoint3D(DisplayObject.sHelperMatrixAlt3D,localPoint,DisplayObject.sHelperPoint3D);
			return MathUtil.intersectLineWithXYPlane(
			stage.cameraPosition,DisplayObject.sHelperPoint3D,resultPoint);
		}

		__proto.globalToLocal3D=function(globalPoint,resultPoint){
			var stage=this.stage;
			if (stage==null)throw new IllegalOperationError("Object not connected to stage");
			this.getTransformationMatrix3D(stage,DisplayObject.sHelperMatrixAlt3D);
			DisplayObject.sHelperMatrixAlt3D.invert();
			return MatrixUtil1.transformCoords3D(
			DisplayObject.sHelperMatrixAlt3D,globalPoint.x,globalPoint.y,0,resultPoint);
		}

		__proto.setParent=function(value){
			var ancestor=value;
			while (ancestor !=this && ancestor !=null)
			ancestor=ancestor.mParent;
			if (ancestor==this)
				throw new Error("An object cannot be added as a child to itself or one "+
			"of its children (or children's children, etc.)");
			else
			this.mParent=value;
		}

		__proto.setIs3D=function(value){
			this.mIs3D=value;
		}

		__proto.isEquivalent=function(a,b,epsilon){
			(epsilon===void 0)&& (epsilon=0.0001);
			return (a-epsilon < b)&& (a+epsilon > b);
		}

		__proto.findCommonParent=function(object1,object2){
			var currentObject=object1;
			while (currentObject){
				DisplayObject.sAncestors[DisplayObject.sAncestors.length]=currentObject;
				currentObject=currentObject.mParent;
			}
			currentObject=object2;
			while (currentObject && DisplayObject.sAncestors.indexOf(currentObject)==-1)
			currentObject=currentObject.mParent;
			DisplayObject.sAncestors.length=0;
			if (currentObject)return currentObject;
			else throw new Error("Object not connected to target");
		}

		__proto.dispatchEvent=function(event){
			if (event.type==/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage" && this.stage==null){
				return;
			}
			else{
				_super.prototype.dispatchEvent.call(this,event);
			}
		}

		__proto.addEventListener=function(type,listener){
			if (type==/*starling.events.Event.ENTER_FRAME*/"enterFrame" && !this.hasEventListener(type)){
				this.addEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addEnterFrameListenerToStage));
				this.addEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.removeEnterFrameListenerFromStage));
				if (this.stage)this.addEnterFrameListenerToStage();
			}
			_super.prototype.addEventListener.call(this,type,listener);
		}

		__proto.removeEventListener=function(type,listener){
			_super.prototype.removeEventListener.call(this,type,listener);
			if (type==/*starling.events.Event.ENTER_FRAME*/"enterFrame" && !this.hasEventListener(type)){
				this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addEnterFrameListenerToStage));
				this.removeEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.removeEnterFrameListenerFromStage));
				this.removeEnterFrameListenerFromStage();
			}
		}

		__proto.removeEventListeners=function(type){
			if ((type==null ||type==/*starling.events.Event.ENTER_FRAME*/"enterFrame")&& this.hasEventListener(/*starling.events.Event.ENTER_FRAME*/"enterFrame")){
				this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addEnterFrameListenerToStage));
				this.removeEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.removeEnterFrameListenerFromStage));
				this.removeEnterFrameListenerFromStage();
			}
			_super.prototype.removeEventListeners.call(this,type);
		}

		__proto.addEnterFrameListenerToStage=function(){
			Starling.current.stage.addEnterFrameListener(this);
		}

		__proto.removeEnterFrameListenerFromStage=function(){
			Starling.current.stage.removeEnterFrameListener(this);
		}

		__proto.onTouch=function(event){
			Mouse.cursor=event.interactsWith(this)? /*iflash.ui.MouseCursor.BUTTON*/"button" :/*iflash.ui.MouseCursor.AUTO*/"auto";
		}

		__getset(0,__proto,'hasVisibleArea',function(){
			return this.mAlpha !=0.0 && this.mVisible && !this.mIsMask && this.mScaleX !=0.0 && this.mScaleY !=0.0;
		});

		__getset(0,__proto,'is3D',function(){return this.mIs3D;});
		__getset(0,__proto,'height',function(){return this.getBounds(this.mParent,DisplayObject.sHelperRect).height;},function(value){
			this.scaleY=1.0;
			var actualHeight=this.height;
			if (actualHeight !=0.0)this.scaleY=value / actualHeight;
		});

		__getset(0,__proto,'isMask',function(){
			return this.mIsMask;
		});

		__getset(0,__proto,'transformationMatrix3D',function(){
			if (this.mTransformationMatrix3D==null)
				this.mTransformationMatrix3D=new Matrix3D();
			return MatrixUtil1.convertTo3D(this.transformationMatrix,this.mTransformationMatrix3D);
		});

		__getset(0,__proto,'transformationMatrix',function(){
			if (this.mOrientationChanged){
				this.mOrientationChanged=false;
				if (this.mSkewX==0.0 && this.mSkewY==0.0){
					if (this.mRotation==0.0){
						this.mTransformationMatrix.setTo(this.mScaleX,0.0,0.0,this.mScaleY,
						this.mX-this.mPivotX *this.mScaleX,this.mY-this.mPivotY *this.mScaleY);
					}
					else{
						var cos=Math.cos(this.mRotation);
						var sin=Math.sin(this.mRotation);
						var a=this.mScaleX *cos;
						var b=this.mScaleX *sin;
						var c=this.mScaleY *-sin;
						var d=this.mScaleY *cos;
						var tx=this.mX-this.mPivotX *a-this.mPivotY *c;
						var ty=this.mY-this.mPivotX *b-this.mPivotY *d;
						this.mTransformationMatrix.setTo(a,b,c,d,tx,ty);
					}
				}
				else{
					this.mTransformationMatrix.identity();
					this.mTransformationMatrix.scale(this.mScaleX,this.mScaleY);
					MatrixUtil1.skew(this.mTransformationMatrix,this.mSkewX,this.mSkewY);
					this.mTransformationMatrix.rotate(this.mRotation);
					this.mTransformationMatrix.translate(this.mX,this.mY);
					if (this.mPivotX !=0.0 || this.mPivotY !=0.0){
						this.mTransformationMatrix.tx=this.mX-this.mTransformationMatrix.a *this.mPivotX
						-this.mTransformationMatrix.c *this.mPivotY;
						this.mTransformationMatrix.ty=this.mY-this.mTransformationMatrix.b *this.mPivotX
						-this.mTransformationMatrix.d *this.mPivotY;
					}
				}
			}
			return this.mTransformationMatrix;
			},function(matrix){
			var PI_Q=Math.PI / 4.0;
			this.mOrientationChanged=false;
			this.mTransformationMatrix.copyFrom(matrix);
			this.mPivotX=this.mPivotY=0;
			this.mX=matrix.tx;
			this.mY=matrix.ty;
			this.mScaleX=Math.sqrt(matrix.a *matrix.a+matrix.b *matrix.b);
			this.mSkewY=Math.acos(matrix.a / this.mScaleX);
			if (!this.isEquivalent(matrix.b,this.mScaleX *Math.sin(this.mSkewY))){
				this.mScaleX *=-1;
				this.mSkewY=Math.acos(matrix.a / this.mScaleX);
			}
			this.mScaleY=Math.sqrt(matrix.c *matrix.c+matrix.d *matrix.d);
			this.mSkewX=Math.acos(matrix.d / this.mScaleY);
			if (!this.isEquivalent(matrix.c,-this.mScaleY *Math.sin(this.mSkewX))){
				this.mScaleY *=-1;
				this.mSkewX=Math.acos(matrix.d / this.mScaleY);
			}
			if (this.isEquivalent(this.mSkewX,this.mSkewY)){
				this.mRotation=this.mSkewX;
				this.mSkewX=this.mSkewY=0;
			}
			else{
				this.mRotation=0;
			}
		});

		__getset(0,__proto,'useHandCursor',function(){return this.mUseHandCursor;},function(value){
			if (value==this.mUseHandCursor)return;
			this.mUseHandCursor=value;
			if (this.mUseHandCursor)
				this.addEventListener(/*starling.events.TouchEvent.TOUCH*/"touch",__bind(this,this.onTouch));
			else
			this.removeEventListener(/*starling.events.TouchEvent.TOUCH*/"touch",__bind(this,this.onTouch));
		});

		__getset(0,__proto,'skewX',function(){return this.mSkewX;},function(value){
			value=MathUtil.normalizeAngle(value);
			if (this.mSkewX !=value){
				this.mSkewX=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'width',function(){return this.getBounds(this.mParent,DisplayObject.sHelperRect).width;},function(value){
			this.scaleX=1.0;
			var actualWidth=this.width;
			if (actualWidth !=0.0)this.scaleX=value / actualWidth;
		});

		__getset(0,__proto,'bounds',function(){
			return this.getBounds(this.mParent);
		});

		__getset(0,__proto,'root',function(){
			var currentObject=this;
			while (currentObject.mParent){
				if ((currentObject.mParent instanceof starling.display.Stage ))return currentObject;
				else currentObject=currentObject.parent;
			}
			return null;
		});

		__getset(0,__proto,'x',function(){return this.mX;},function(value){
			if (this.mX !=value){
				this.mX=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'y',function(){return this.mY;},function(value){
			if (this.mY !=value){
				this.mY=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'pivotX',function(){return this.mPivotX;},function(value){
			if (this.mPivotX !=value){
				this.mPivotX=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'pivotY',function(){return this.mPivotY;},function(value){
			if (this.mPivotY !=value){
				this.mPivotY=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'scaleX',function(){return this.mScaleX;},function(value){
			if (this.mScaleX !=value){
				this.mScaleX=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'rotation',function(){return this.mRotation;},function(value){
			value=MathUtil.normalizeAngle(value);
			if (this.mRotation !=value){
				this.mRotation=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'scaleY',function(){return this.mScaleY;},function(value){
			if (this.mScaleY !=value){
				this.mScaleY=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'blendMode',function(){return this.mBlendMode;},function(value){this.mBlendMode=value;});
		__getset(0,__proto,'skewY',function(){return this.mSkewY;},function(value){
			value=MathUtil.normalizeAngle(value);
			if (this.mSkewY !=value){
				this.mSkewY=value;
				this.mOrientationChanged=true;
			}
		});

		__getset(0,__proto,'alpha',function(){return this.mAlpha;},function(value){
			this.mAlpha=value < 0.0 ? 0.0 :(value > 1.0 ? 1.0 :value);
		});

		__getset(0,__proto,'visible',function(){return this.mVisible;},function(value){this.mVisible=value;});
		__getset(0,__proto,'touchable',function(){return this.mTouchable;},function(value){this.mTouchable=value;});
		__getset(0,__proto,'name',function(){return this.mName;},function(value){this.mName=value;});
		__getset(0,__proto,'parent',function(){return this.mParent;});
		__getset(0,__proto,'filter',function(){return this.mFilter;},function(value){this.mFilter=value;});
		__getset(0,__proto,'mask',function(){return this.mMask;},function(value){
			if (this.mMask !=value){
				if (this.mMask)this.mMask.mIsMask=false;
				if (value)value.mIsMask=true;
				this.mMask=value;
			}
		});

		__getset(0,__proto,'base',function(){
			var currentObject=this;
			while (currentObject.mParent)currentObject=currentObject.mParent;
			return currentObject;
		});

		__getset(0,__proto,'stage',function(){
			return iflash.method.typeAs(this.base ,Stage1);
		});

		__static(DisplayObject,
		['sAncestors',function(){return this.sAncestors=/*new vector.<>*/[];},'sHelperPoint',function(){return this.sHelperPoint=new Point();},'sHelperPoint3D',function(){return this.sHelperPoint3D=new Vector3D();},'sHelperRect',function(){return this.sHelperRect=new Rectangle();},'sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sHelperMatrixAlt',function(){return this.sHelperMatrixAlt=new Matrix();},'sHelperMatrix3D',function(){return this.sHelperMatrix3D=new Matrix3D();},'sHelperMatrixAlt3D',function(){return this.sHelperMatrixAlt3D=new Matrix3D();}
		]);
		return DisplayObject;
	})(EventDispatcher1)


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/global.as
	//class framework.system.Global extends starling.events.EventDispatcher
	var Global=(function(_super){
		function Global(main,game,gameWidth,gameHeight,box2dDebugVisible,ptm_ratio){
			this._game=null;
			this._stage=null;
			this._main=null;
			this._nativeStage=null;
			this._nativeMain=null;
			this._layerMan=null;
			this._objectPool=null;
			this._curWorld=null;
			this._localMan=null;
			this._box2dManList=null;
			this._gameWidth=NaN;
			this._gameHeight=NaN;
			this._ptm_ratio=NaN;
			this._nativeOverlay=null;
			(box2dDebugVisible===void 0)&& (box2dDebugVisible=false);
			(ptm_ratio===void 0)&& (ptm_ratio=30);
			Global.__super.call(this);
			this._main=main;
			this._stage=main.stage;
			this._game=game;
			this._gameWidth=gameWidth;
			this._gameHeight=gameHeight;
			this._ptm_ratio=ptm_ratio;
			this._nativeStage=Starling.current.nativeStage;
			this._nativeOverlay=Starling.current.nativeOverlay;
			var i=this._nativeStage.numChildren;var child;
			while(--i>=0){
				child=this._nativeStage.getChildAt(i);
				if((child instanceof g.Main )){this._nativeMain=child;break ;}
					}
			this._layerMan=new LayerManager(this._main,this._nativeMain);
			this._objectPool=ObjectPool.getInstance();
		}

		__class(Global,'framework.system.Global',false,_super);
		var __proto=Global.prototype;
		__proto.setCurWorld=function(value){
			if(value==this._curWorld)return;
			this._curWorld=value;
			this._curWorld.SetContactListener(new MyContactListener());
			this.dispatchEvent(new FrameworkEvent(FrameworkEvent.CHANGE_CURRENT_WORLD));
		}

		__proto.getBox2dMan=function(id){
			if(!this._box2dManList || this._box2dManList.length<=id)return null;
			return this._box2dManList[id];
		}

		__proto.createBox2dMan=function(id,worldDisObj,gravity,useMouseJoint,deltaTime,ptm_ratio){
			(useMouseJoint===void 0)&& (useMouseJoint=false);
			(deltaTime===void 0)&& (deltaTime=30);
			(ptm_ratio===void 0)&& (ptm_ratio=30);
			if(this._box2dManList==null)this._box2dManList=[];
			this._box2dManList[id]=new Box2dManager(worldDisObj,this._game,useMouseJoint,gravity,deltaTime,ptm_ratio);
			return this._box2dManList[id];
		}

		__proto.reset=function(){
			this._layerMan.reset();
			if(this._box2dManList.length>0){
				var i=this._box2dManList.length,box2dMan;
				while (--i >=0){
					box2dMan=this._box2dManList[i];
					if(box2dMan)box2dMan.reset();
				}
			}
		}

		__getset(0,__proto,'curWorld',function(){return this._curWorld;});
		__getset(0,__proto,'localManager',function(){return this._localMan=this._localMan||new LocalManager();});
		__getset(0,__proto,'stage',function(){return this._stage;});
		__getset(0,__proto,'main',function(){return this._main;});
		__getset(0,__proto,'gameHeight',function(){return this._gameHeight;});
		__getset(0,__proto,'layerMan',function(){return this._layerMan;});
		__getset(0,__proto,'ptm_ratio',function(){return this._ptm_ratio;});
		__getset(0,__proto,'objectPool',function(){return this._objectPool;});
		__getset(0,__proto,'gameWidth',function(){return this._gameWidth;});
		__getset(0,__proto,'nativeStage',function(){return this._nativeStage;});
		__getset(0,__proto,'nativeMain',function(){return this._nativeMain;});
		__getset(0,__proto,'nativeOverlay',function(){return this._nativeOverlay;});
		return Global;
	})(EventDispatcher1)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/framework/system/systemkeyboard.as
	//class framework.system.SystemKeyboard extends framework.system.Input
	var SystemKeyboard=(function(_super){
		function SystemKeyboard(){
			this.ESCAPE=false;
			this.F1=false;
			this.F2=false;
			this.F3=false;
			this.F4=false;
			this.F5=false;
			this.F6=false;
			this.F7=false;
			this.F8=false;
			this.F9=false;
			this.F10=false;
			this.F11=false;
			this.F12=false;
			this.ONE=false;
			this.TWO=false;
			this.THREE=false;
			this.FOUR=false;
			this.FIVE=false;
			this.SIX=false;
			this.SEVEN=false;
			this.EIGHT=false;
			this.NINE=false;
			this.ZERO=false;
			this.NUMPADONE=false;
			this.NUMPADTWO=false;
			this.NUMPADTHREE=false;
			this.NUMPADFOUR=false;
			this.NUMPADFIVE=false;
			this.NUMPADSIX=false;
			this.NUMPADSEVEN=false;
			this.NUMPADEIGHT=false;
			this.NUMPADNINE=false;
			this.NUMPADZERO=false;
			this.PAGEUP=false;
			this.PAGEDOWN=false;
			this.HOME=false;
			this.END=false;
			this.INSERT=false;
			this.MINUS=false;
			this.NUMPADMINUS=false;
			this.PLUS=false;
			this.NUMPADPLUS=false;
			this.DELETE=false;
			this.BACKSPACE=false;
			this.TAB=false;
			this.Q=false;
			this.W=false;
			this.E=false;
			this.R=false;
			this.T=false;
			this.Y=false;
			this.U=false;
			this.I=false;
			this.O=false;
			this.P=false;
			this.LBRACKET=false;
			this.RBRACKET=false;
			this.BACKSLASH=false;
			this.CAPSLOCK=false;
			this.A=false;
			this.S=false;
			this.D=false;
			this.F=false;
			this.G=false;
			this.H=false;
			this.J=false;
			this.K=false;
			this.L=false;
			this.SEMICOLON=false;
			this.QUOTE=false;
			this.ENTER=false;
			this.SHIFT=false;
			this.Z=false;
			this.X=false;
			this.C=false;
			this.V=false;
			this.B=false;
			this.N=false;
			this.M=false;
			this.COMMA=false;
			this.PERIOD=false;
			this.NUMPADPERIOD=false;
			this.SLASH=false;
			this.NUMPADSLASH=false;
			this.CONTROL=false;
			this.ALT=false;
			this.SPACE=false;
			this.UP=false;
			this.DOWN=false;
			this.LEFT=false;
			this.RIGHT=false;
			SystemKeyboard.__super.call(this);
			var i=0;
			i=65;
			while(i <=90)
			this.addKey(String.fromCharCode(i),i++);
			i=48;
			this.addKey("ZERO",i++);
			this.addKey("ONE",i++);
			this.addKey("TWO",i++);
			this.addKey("THREE",i++);
			this.addKey("FOUR",i++);
			this.addKey("FIVE",i++);
			this.addKey("SIX",i++);
			this.addKey("SEVEN",i++);
			this.addKey("EIGHT",i++);
			this.addKey("NINE",i++);
			i=96;
			this.addKey("NUMPADZERO",i++);
			this.addKey("NUMPADONE",i++);
			this.addKey("NUMPADTWO",i++);
			this.addKey("NUMPADTHREE",i++);
			this.addKey("NUMPADFOUR",i++);
			this.addKey("NUMPADFIVE",i++);
			this.addKey("NUMPADSIX",i++);
			this.addKey("NUMPADSEVEN",i++);
			this.addKey("NUMPADEIGHT",i++);
			this.addKey("NUMPADNINE",i++);
			this.addKey("PAGEUP",33);
			this.addKey("PAGEDOWN",34);
			this.addKey("HOME",36);
			this.addKey("END",35);
			this.addKey("INSERT",45);
			i=1;
			while(i <=12)
			this.addKey("F"+i,111+(i++));
			this.addKey("ESCAPE",27);
			this.addKey("MINUS",189);
			this.addKey("NUMPADMINUS",109);
			this.addKey("PLUS",187);
			this.addKey("NUMPADPLUS",107);
			this.addKey("DELETE",46);
			this.addKey("BACKSPACE",8);
			this.addKey("LBRACKET",219);
			this.addKey("RBRACKET",221);
			this.addKey("BACKSLASH",220);
			this.addKey("CAPSLOCK",20);
			this.addKey("SEMICOLON",186);
			this.addKey("QUOTE",222);
			this.addKey("ENTER",13);
			this.addKey("SHIFT",16);
			this.addKey("COMMA",188);
			this.addKey("PERIOD",190);
			this.addKey("NUMPADPERIOD",110);
			this.addKey("SLASH",191);
			this.addKey("NUMPADSLASH",191);
			this.addKey("CONTROL",17);
			this.addKey("ALT",18);
			this.addKey("SPACE",32);
			this.addKey("UP",38);
			this.addKey("DOWN",40);
			this.addKey("LEFT",37);
			this.addKey("RIGHT",39);
			this.addKey("TAB",9);
		}

		__class(SystemKeyboard,'framework.system.SystemKeyboard',false,_super);
		var __proto=SystemKeyboard.prototype;
		__proto.handleKeyDown=function(FlashEvent){
			var object=this._map[FlashEvent.keyCode];
			if(object==null)return;
			if(object.current > 0)object.current=1;
			else object.current=2;
			this[object.name]=true;
		}

		__proto.handleKeyUp=function(FlashEvent){
			var object=this._map[FlashEvent.keyCode];
			if(object==null)return;
			if(object.current > 0)object.current=-1;
			else object.current=0;
			this[object.name]=false;
		}

		__proto.bind=function(stage){
			stage.addEventListener(/*iflash.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.handleKeyDown));
			stage.addEventListener(/*iflash.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.handleKeyUp));
		}

		__proto.unbind=function(stage){
			stage.removeEventListener(/*iflash.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.handleKeyDown));
			stage.removeEventListener(/*iflash.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.handleKeyUp));
		}

		return SystemKeyboard;
	})(Input)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/animation/delayedcall.as
	//class starling.animation.DelayedCall extends starling.events.EventDispatcher
	var DelayedCall=(function(_super){
		function DelayedCall(call,delay,args){
			this.mCurrentTime=NaN;
			this.mTotalTime=NaN;
			this.mCall=null;
			this.mArgs=null;
			this.mRepeatCount=0;
			DelayedCall.__super.call(this);
			this.reset(call,delay,args);
		}

		__class(DelayedCall,'starling.animation.DelayedCall',false,_super);
		var __proto=DelayedCall.prototype;
		Laya.imps(__proto,{"starling.animation.IAnimatable":true})
		__proto.reset=function(call,delay,args){
			this.mCurrentTime=0;
			this.mTotalTime=Math.max(delay,0.0001);
			this.mCall=call;
			this.mArgs=args;
			this.mRepeatCount=1;
			return this;
		}

		__proto.advanceTime=function(time){
			var previousTime=this.mCurrentTime;
			this.mCurrentTime+=time;
			if (this.mCurrentTime > this.mTotalTime)
				this.mCurrentTime=this.mTotalTime;
			if (previousTime < this.mTotalTime && this.mCurrentTime >=this.mTotalTime){
				if (this.mRepeatCount==0 || this.mRepeatCount > 1){
					this.mCall.apply(null,this.mArgs);
					if (this.mRepeatCount > 0)this.mRepeatCount-=1;
					this.mCurrentTime=0;
					this.advanceTime((previousTime+time)-this.mTotalTime);
				}
				else{
					var call=this.mCall;
					var args=this.mArgs;
					this.dispatchEventWith(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler");
					call.apply(null,args);
				}
			}
		}

		__proto.complete=function(){
			var restTime=this.mTotalTime-this.mCurrentTime;
			if (restTime > 0)this.advanceTime(restTime);
		}

		__getset(0,__proto,'isComplete',function(){
			return this.mRepeatCount==1 && this.mCurrentTime >=this.mTotalTime;
		});

		__getset(0,__proto,'totalTime',function(){return this.mTotalTime;});
		__getset(0,__proto,'currentTime',function(){return this.mCurrentTime;});
		__getset(0,__proto,'repeatCount',function(){return this.mRepeatCount;},function(value){this.mRepeatCount=value;});
		DelayedCall.fromPool=function(call,delay,args){
			if (DelayedCall.sPool.length)return DelayedCall.sPool.pop().reset(call,delay,args);
			else return new DelayedCall(call,delay,args);
		}

		DelayedCall.toPool=function(delayedCall){
			delayedCall.mCall=null;
			delayedCall.mArgs=null;
			delayedCall.removeEventListeners();
			DelayedCall.sPool.push(delayedCall);
		}

		__static(DelayedCall,
		['sPool',function(){return this.sPool=/*new vector.<>*/[];}
		]);
		return DelayedCall;
	})(EventDispatcher1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/animation/tween.as
	//class starling.animation.Tween extends starling.events.EventDispatcher
	var Tween=(function(_super){
		function Tween(target,time,transition){
			this.mTarget=null;
			this.mTransitionFunc=null;
			this.mTransitionName=null;
			this.mProperties=null;
			this.mStartValues=null;
			this.mEndValues=null;
			this.mUpdateFuncs=null;
			this.mOnStart=null;
			this.mOnUpdate=null;
			this.mOnRepeat=null;
			this.mOnComplete=null;
			this.mOnStartArgs=null;
			this.mOnUpdateArgs=null;
			this.mOnRepeatArgs=null;
			this.mOnCompleteArgs=null;
			this.mTotalTime=NaN;
			this.mCurrentTime=NaN;
			this.mProgress=NaN;
			this.mDelay=NaN;
			this.mRoundToInt=false;
			this.mNextTween=null;
			this.mRepeatCount=0;
			this.mRepeatDelay=NaN;
			this.mReverse=false;
			this.mCurrentCycle=0;
			Tween.__super.call(this);
			(transition===void 0)&& (transition="linear");
			this.reset(target,time,transition);
		}

		__class(Tween,'starling.animation.Tween',false,_super);
		var __proto=Tween.prototype;
		Laya.imps(__proto,{"starling.animation.IAnimatable":true})
		__proto.reset=function(target,time,transition){
			(transition===void 0)&& (transition="linear");
			this.mTarget=target;
			this.mCurrentTime=0.0;
			this.mTotalTime=Math.max(0.0001,time);
			this.mProgress=0.0;
			this.mDelay=this.mRepeatDelay=0.0;
			this.mOnStart=this.mOnUpdate=this.mOnRepeat=this.mOnComplete=null;
			this.mOnStartArgs=this.mOnUpdateArgs=this.mOnRepeatArgs=this.mOnCompleteArgs=null;
			this.mRoundToInt=this.mReverse=false;
			this.mRepeatCount=1;
			this.mCurrentCycle=-1;
			this.mNextTween=null;
			if ((typeof transition=='string'))
				this.transition=transition;
			else if ((typeof transition=='function'))
			this.transitionFunc=transition;
			else
			throw new Error("Transition must be either a string or a function");
			if (this.mProperties)this.mProperties.length=0;else this.mProperties=/*new vector.<>*/[];
			if (this.mStartValues)this.mStartValues.length=0;else this.mStartValues=/*new vector.<>*/[];
			if (this.mEndValues)this.mEndValues.length=0;else this.mEndValues=/*new vector.<>*/[];
			if (this.mUpdateFuncs)this.mUpdateFuncs.length=0;else this.mUpdateFuncs=/*new vector.<>*/[];
			return this;
		}

		__proto.animate=function(property,endValue){
			if (this.mTarget==null)return;
			var pos=this.mProperties.length;
			var updateFunc=this.getUpdateFuncFromProperty(property);
			this.mProperties[pos]=Tween.getPropertyName(property);
			this.mStartValues[pos]=Number.NaN;
			this.mEndValues[pos]=endValue;
			this.mUpdateFuncs[pos]=updateFunc;
		}

		__proto.scaleTo=function(factor){
			this.animate("scaleX",factor);
			this.animate("scaleY",factor);
		}

		__proto.moveTo=function(x,y){
			this.animate("x",x);
			this.animate("y",y);
		}

		__proto.fadeTo=function(alpha){
			this.animate("alpha",alpha);
		}

		__proto.rotateTo=function(angle,type){
			(type===void 0)&& (type="rad");
			this.animate("rotation#"+type,angle);
		}

		__proto.advanceTime=function(time){
			if (time==0 || (this.mRepeatCount==1 && this.mCurrentTime==this.mTotalTime))return;
			var i=0;
			var previousTime=this.mCurrentTime;
			var restTime=this.mTotalTime-this.mCurrentTime;
			var carryOverTime=time > restTime ? time-restTime :0.0;
			this.mCurrentTime+=time;
			if (this.mCurrentTime <=0)
				return;
			else if (this.mCurrentTime > this.mTotalTime)
			this.mCurrentTime=this.mTotalTime;
			if (this.mCurrentCycle < 0 && previousTime <=0 && this.mCurrentTime > 0){
				this.mCurrentCycle++;
				if (this.mOnStart !=null)this.mOnStart.apply(this,this.mOnStartArgs);
			};
			var ratio=this.mCurrentTime / this.mTotalTime;
			var reversed=this.mReverse && (this.mCurrentCycle % 2==1);
			var numProperties=this.mStartValues.length;
			this.mProgress=reversed ? this.mTransitionFunc(1.0-ratio):this.mTransitionFunc(ratio);
			for (i=0;i<numProperties;++i){
				if (this.mStartValues[i] !=this.mStartValues[i])
					this.mStartValues[i]=this.mTarget [this.mProperties[i]];
				var updateFunc=this.mUpdateFuncs [i];
				updateFunc(this.mProperties[i],this.mStartValues[i],this.mEndValues[i]);
			}
			if (this.mOnUpdate !=null)
				this.mOnUpdate.apply(this,this.mOnUpdateArgs);
			if (previousTime < this.mTotalTime && this.mCurrentTime >=this.mTotalTime){
				if (this.mRepeatCount==0 || this.mRepeatCount > 1){
					this.mCurrentTime=-this.mRepeatDelay;
					this.mCurrentCycle++;
					if (this.mRepeatCount > 1)this.mRepeatCount--;
					if (this.mOnRepeat !=null)this.mOnRepeat.apply(this,this.mOnRepeatArgs);
				}
				else{
					var onComplete=this.mOnComplete;
					var onCompleteArgs=this.mOnCompleteArgs;
					this.dispatchEventWith(/*starling.events.Event.REMOVE_FROM_JUGGLER*/"removeFromJuggler");
					if (onComplete !=null)onComplete.apply(this,onCompleteArgs);
				}
			}
			if (carryOverTime)
				this.advanceTime(carryOverTime);
		}

		__proto.getUpdateFuncFromProperty=function(property){
			var updateFunc;
			var hint=Tween.getPropertyHint(property);
			switch (hint){
				case null:updateFunc=iflash.method.bind(this,this.updateStandard);break ;
				case "rgb":updateFunc=iflash.method.bind(this,this.updateRgb);break ;
				case "rad":updateFunc=iflash.method.bind(this,this.updateRad);break ;
				case "deg":updateFunc=iflash.method.bind(this,this.updateDeg);break ;
				default :
					updateFunc=iflash.method.bind(this,this.updateStandard);
				}
			return updateFunc;
		}

		__proto.updateStandard=function(property,startValue,endValue){
			var newValue=startValue+this.mProgress *(endValue-startValue);
			if (this.mRoundToInt)newValue=Math.round(newValue);
			this.mTarget[property]=newValue;
		}

		__proto.updateRgb=function(property,startValue,endValue){
			var startColor=uint(startValue);
			var endColor=uint(endValue);
			var startA=(startColor >> 24)& 0xff;
			var startR=(startColor >> 16)& 0xff;
			var startG=(startColor >> 8)& 0xff;
			var startB=(startColor)& 0xff;
			var endA=(endColor >> 24)& 0xff;
			var endR=(endColor >> 16)& 0xff;
			var endG=(endColor >> 8)& 0xff;
			var endB=(endColor)& 0xff;
			var newA=startA+(endA-startA)*this.mProgress;
			var newR=startR+(endR-startR)*this.mProgress;
			var newG=startG+(endG-startG)*this.mProgress;
			var newB=startB+(endB-startB)*this.mProgress;
			this.mTarget[property]=(newA << 24)| (newR << 16)| (newG << 8)| newB;
		}

		__proto.updateRad=function(property,startValue,endValue){
			this.updateAngle(Math.PI,property,startValue,endValue);
		}

		__proto.updateDeg=function(property,startValue,endValue){
			this.updateAngle(180,property,startValue,endValue);
		}

		__proto.updateAngle=function(pi,property,startValue,endValue){
			while (Math.abs(endValue-startValue)> pi){
				if (startValue < endValue)endValue-=2.0 *pi;
				else endValue+=2.0 *pi;
			}
			this.updateStandard(property,startValue,endValue);
		}

		__proto.getEndValue=function(property){
			var index=this.mProperties.indexOf(property);
			if (index==-1)throw new Error("The property '"+property+"' is not animated");
			else return this.mEndValues [index];
		}

		__getset(0,__proto,'isComplete',function(){
			return this.mCurrentTime >=this.mTotalTime && this.mRepeatCount==1;
		});

		__getset(0,__proto,'transition',function(){return this.mTransitionName;},function(value){
			this.mTransitionName=value;
			this.mTransitionFunc=Transitions.getTransition(value);
			if (this.mTransitionFunc==null)
				throw new Error("Invalid transiton: "+value);
		});

		__getset(0,__proto,'transitionFunc',function(){return this.mTransitionFunc;},function(value){
			this.mTransitionName="custom";
			this.mTransitionFunc=value;
		});

		__getset(0,__proto,'progress',function(){return this.mProgress;});
		__getset(0,__proto,'target',function(){return this.mTarget;});
		__getset(0,__proto,'onRepeatArgs',function(){return this.mOnRepeatArgs;},function(value){this.mOnRepeatArgs=value;});
		__getset(0,__proto,'totalTime',function(){return this.mTotalTime;});
		__getset(0,__proto,'currentTime',function(){return this.mCurrentTime;});
		__getset(0,__proto,'delay',function(){return this.mDelay;},function(value){
			this.mCurrentTime=this.mCurrentTime+this.mDelay-value;
			this.mDelay=value;
		});

		__getset(0,__proto,'repeatCount',function(){return this.mRepeatCount;},function(value){this.mRepeatCount=value;});
		__getset(0,__proto,'onUpdate',function(){return this.mOnUpdate;},function(value){this.mOnUpdate=value;});
		__getset(0,__proto,'repeatDelay',function(){return this.mRepeatDelay;},function(value){this.mRepeatDelay=value;});
		__getset(0,__proto,'roundToInt',function(){return this.mRoundToInt;},function(value){this.mRoundToInt=value;});
		__getset(0,__proto,'reverse',function(){return this.mReverse;},function(value){this.mReverse=value;});
		__getset(0,__proto,'nextTween',function(){return this.mNextTween;},function(value){this.mNextTween=value;});
		__getset(0,__proto,'onStart',function(){return this.mOnStart;},function(value){this.mOnStart=value;});
		__getset(0,__proto,'onRepeat',function(){return this.mOnRepeat;},function(value){this.mOnRepeat=value;});
		__getset(0,__proto,'onComplete',function(){return this.mOnComplete;},function(value){this.mOnComplete=value;});
		__getset(0,__proto,'onStartArgs',function(){return this.mOnStartArgs;},function(value){this.mOnStartArgs=value;});
		__getset(0,__proto,'onUpdateArgs',function(){return this.mOnUpdateArgs;},function(value){this.mOnUpdateArgs=value;});
		__getset(0,__proto,'onCompleteArgs',function(){return this.mOnCompleteArgs;},function(value){this.mOnCompleteArgs=value;});
		Tween.getPropertyHint=function(property){
			if (property.indexOf("color")!=-1 || property.indexOf("Color")!=-1)
				return "rgb";
			var hintMarkerIndex=property.indexOf('#');
			if (hintMarkerIndex !=-1)return property.substr(hintMarkerIndex+1);
			else return null;
		}

		Tween.getPropertyName=function(property){
			var hintMarkerIndex=property.indexOf('#');
			if (hintMarkerIndex !=-1)return property.substring(0,hintMarkerIndex);
			else return property;
		}

		Tween.fromPool=function(target,time,transition){
			(transition===void 0)&& (transition="linear");
			if (Tween.sTweenPool.length)return Tween.sTweenPool.pop().reset(target,time,transition);
			else return new Tween(target,time,transition);
		}

		Tween.toPool=function(tween){
			tween.mOnStart=tween.mOnUpdate=tween.mOnRepeat=tween.mOnComplete=null;
			tween.mOnStartArgs=tween.mOnUpdateArgs=tween.mOnRepeatArgs=tween.mOnCompleteArgs=null;
			tween.mTarget=null;
			tween.mTransitionFunc=null;
			tween.removeEventListeners();
			Tween.sTweenPool.push(tween);
		}

		Tween.HINT_MARKER='#';
		__static(Tween,
		['sTweenPool',function(){return this.sTweenPool=/*new vector.<>*/[];}
		]);
		return Tween;
	})(EventDispatcher1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/core/starling.as
	//class starling.core.Starling extends starling.events.EventDispatcher
	var Starling=(function(_super){
		function Starling(rootClass,stage,viewPort,stage3D,renderMode,profile){
			this.speedTimes=1;
			this.mStage3D=null;
			this.mStage=null;
			this.mRootClass=null;
			this.mRoot=null;
			this.mJuggler=null;
			this.mSupport=null;
			this.mTouchProcessor=null;
			this.mAntiAliasing=0;
			this.mSimulateMultitouch=false;
			this.mEnableErrorChecking=false;
			this.mLastFrameTimestamp=NaN;
			this.mLeftMouseDown=false;
			this.mStatsDisplay=null;
			this.mShareContext=false;
			this.mProfile=null;
			this.mContext=null;
			this.mStarted=false;
			this.mRendering=false;
			this.mSupportHighResolutions=false;
			this.mViewPort=null;
			this.mPreviousViewPort=null;
			this.mClippedViewPort=null;
			this.mNativeStage=null;
			this.mNativeOverlay=null;
			this.mNativeStageContentScaleFactor=NaN;
			Starling.__super.call(this);
			(renderMode===void 0)&& (renderMode="auto");
			(profile===void 0)&& (profile="baselineConstrained");
			if (stage==null)throw new Error("Stage must not be null");
			if (viewPort==null)viewPort=new Rectangle(0,0,stage.stageWidth,stage.stageHeight);
			if (stage3D==null)stage3D=stage.stage3Ds[0];
			SystemUtil.initialize();
			Starling.sAll.push(this);
			this.makeCurrent();
			this.mRootClass=rootClass;
			this.mViewPort=viewPort;
			this.mPreviousViewPort=new Rectangle();
			this.mStage3D=stage3D;
			this.mStage=new Stage1(viewPort.width,viewPort.height,stage.color);
			this.mNativeOverlay=new Sprite();
			this.mNativeStage=stage;
			this.mNativeStage.addChild(this.mNativeOverlay);
			this.mNativeStageContentScaleFactor=1.0;
			this.mTouchProcessor=new TouchProcessor(this.mStage);
			this.mJuggler=new Juggler();
			this.mAntiAliasing=0;
			this.mSimulateMultitouch=false;
			this.mEnableErrorChecking=false;
			this.mSupportHighResolutions=false;
			this.mLastFrameTimestamp=iflash.utils.getTimer()/ 1000.0;
			this.mSupport=new RenderSupport();
			Starling.sContextData.set(stage3D,{});
			Starling.sContextData.get(stage3D)["Starling.programs"]=new Object();
			stage.scaleMode=/*iflash.display.StageScaleMode.NO_SCALE*/"noScale";
			var touchEventType;
			/*for each*/for(var $each_touchEventType in this.touchEventTypes){
				touchEventType=this.touchEventTypes[$each_touchEventType];
				stage.addEventListener(touchEventType,__bind(this,this.onTouch),false,0,true);
			}
			stage.addEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame),false,0,true);
			stage.addEventListener(/*iflash.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.onKey),false,0,true);
			stage.addEventListener(/*iflash.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.onKey),false,0,true);
			stage.addEventListener(/*iflash.events.Event.RESIZE*/"resize",__bind(this,this.onResize),false,0,true);
			stage.addEventListener(/*iflash.events.Event.MOUSE_LEAVE*/"mouseLeave",__bind(this,this.onMouseLeave),false,0,true);
			this.mStage3D.addEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",__bind(this,this.onContextCreated),false,10,true);
			this.mStage3D.addEventListener(/*iflash.events.ErrorEvent.ERROR*/"error",__bind(this,this.onStage3DError),false,10,true);
			if (this.mStage3D.context3D && this.mStage3D.context3D.driverInfo !="Disposed"){
				if (profile=="auto" || (profile instanceof Array))
					throw new Error("When sharing the context3D, "+
				"the actual profile has to be supplied");
				else
				this.mProfile="profile" in this.mStage3D.context3D ? this.mStage3D.context3D["profile"] :profile;
				this.mShareContext=true;
				iflash.utils.setTimeout(__bind(this,this.initialize),1);
			}
			else{
				if (!SystemUtil.supportsDepthAndStencil)
					console.log("[Starling] Mask support requires 'depthAndStencil' to be enabled"+
				" in the application descriptor.");
				this.mShareContext=false;
				this.requestContext3D(stage3D,renderMode,profile);
			}
		}

		__class(Starling,'starling.core.Starling',false,_super);
		var __proto=Starling.prototype;
		__proto.dispose=function(){
			this.stop(true);
			this.mNativeStage.removeEventListener(/*iflash.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame),false);
			this.mNativeStage.removeEventListener(/*iflash.events.KeyboardEvent.KEY_DOWN*/"keyDown",__bind(this,this.onKey),false);
			this.mNativeStage.removeEventListener(/*iflash.events.KeyboardEvent.KEY_UP*/"keyUp",__bind(this,this.onKey),false);
			this.mNativeStage.removeEventListener(/*iflash.events.Event.RESIZE*/"resize",__bind(this,this.onResize),false);
			this.mNativeStage.removeEventListener(/*iflash.events.Event.MOUSE_LEAVE*/"mouseLeave",__bind(this,this.onMouseLeave),false);
			this.mNativeStage.removeChild(this.mNativeOverlay);
			this.mStage3D.removeEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",__bind(this,this.onContextCreated),false);
			this.mStage3D.removeEventListener(/*iflash.events.ErrorEvent.ERROR*/"error",__bind(this,this.onStage3DError),false);
			var touchEventType;
			/*for each*/for(var $each_touchEventType in this.touchEventTypes){
				touchEventType=this.touchEventTypes[$each_touchEventType];
				this.mNativeStage.removeEventListener(touchEventType,__bind(this,this.onTouch),false);
			}
			if (this.mStage)this.mStage.dispose();
			if (this.mSupport)this.mSupport.dispose();
			if (this.mTouchProcessor)this.mTouchProcessor.dispose();
			if (Starling.sCurrent==this)Starling.sCurrent=null;
			if (this.mContext && !this.mShareContext){
				starling.utils.execute(this.mContext.dispose,false);
			};
			var index=Starling.sAll.indexOf(this);
			if (index !=-1)Starling.sAll.splice(index,1);
		}

		__proto.requestContext3D=function(stage3D,renderMode,profile){
			var _$this=this;
			var profiles;
			var currentProfile;
			if (profile=="auto")
				profiles=["standardExtended","standard","standardConstrained","baselineExtended","baseline","baselineConstrained"];
			else if ((typeof profile=='string'))
			profiles=[ profile];
			else if ((profile instanceof Array))
			profiles=profile;
			else
			throw new Error("Profile must be of type 'String' or 'Array'");
			this.mStage3D.addEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",onCreated,false,100);
			this.mStage3D.addEventListener(/*iflash.events.ErrorEvent.ERROR*/"error",onError,false,100);
			requestNextProfile();
			function requestNextProfile (){
				currentProfile=profiles.shift();
				try {
					starling.utils.execute(iflash.method.bind(_$this.mStage3D,_$this.mStage3D.requestContext3D),renderMode,currentProfile);
				}
				catch (error){
					if (profiles.length !=0)iflash.utils.setTimeout(requestNextProfile,1);
					else
					throw error;
				}
			}
			function onCreated (event){
				var context=stage3D.context3D;
				if (renderMode==/*iflash.display3D.Context3DRenderMode.AUTO*/"auto" && profiles.length !=0 &&
					context.driverInfo.indexOf("Software")!=-1){
					onError(event);
				}
				else{
					_$this.mProfile=currentProfile;
					onFinished();
				}
			}
			function onError (event){
				if (profiles.length !=0){
					event.stopImmediatePropagation();
					iflash.utils.setTimeout(requestNextProfile,1);
				}
				else onFinished();
			}
			function onFinished (){
				_$this.mStage3D.removeEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",onCreated);
				_$this.mStage3D.removeEventListener(/*iflash.events.ErrorEvent.ERROR*/"error",onError);
			}
		}

		__proto.initialize=function(){
			this.makeCurrent();
			this.initializeGraphicsAPI();
			this.initializeRoot();
			this.mTouchProcessor.simulateMultitouch=this.mSimulateMultitouch;
			this.mLastFrameTimestamp=iflash.utils.getTimer()/ 1000.0;
			if (Laya.CONCHVER){
				/*__JS__ */if(conch.setOnInvalidGLRes ){conch.setOnInvalidGLRes(function(){QuadBatch.syncAllQuadBatch();});};
			}
			this.mContext.setMainViewPortPos(this.mViewPort.x,this.mViewPort.y);
		}

		__proto.initializeGraphicsAPI=function(){
			this.mContext=this.mStage3D.context3D;
			this.mContext.enableErrorChecking=this.mEnableErrorChecking;
			this.contextData["Starling.programs"]=new Object();
			console.log("[Starling] Initialization complete.");
			console.log("[Starling] Display Driver:",this.mContext.driverInfo);
			this.updateViewPort(true);
			this.dispatchEventWith(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",false,this.mContext);
		}

		__proto.initializeRoot=function(){
			if (this.mRoot==null && this.mRootClass !=null){
				this.mRoot=new this.mRootClass();
				if (this.mRoot==null)throw new Error("Invalid root class: "+this.mRootClass);
				this.mStage.addChildAt(this.mRoot,0);
				this.dispatchEventWith(/*starling.events.Event.ROOT_CREATED*/"rootCreated",false,this.mRoot);
			}
		}

		__proto.nextFrame=function(){
			var now=iflash.utils.getTimer()/ 1000.0;
			var passedTime=now-this.mLastFrameTimestamp;
			this.mLastFrameTimestamp=now;
			if (passedTime > 1.0)passedTime=1.0;
			this.advanceTime(passedTime);
			this.render();
		}

		__proto.advanceTime=function(passedTime){
			if (!this.contextValid)
				return;
			this.makeCurrent();
			this.mTouchProcessor.advanceTime(passedTime);
			this.mStage.advanceTime(passedTime);
			this.mJuggler.advanceTime(passedTime *this.speedTimes);
		}

		__proto.render=function(){
			if (!this.contextValid)
				return;
			this.makeCurrent();
			this.updateViewPort();
			this.mSupport.nextFrame();
			var scaleX=this.mViewPort.width / this.mStage.stageWidth;
			var scaleY=this.mViewPort.height / this.mStage.stageHeight;
			this.mContext.setDepthTest(false,/*iflash.display3D.Context3DCompareMode.ALWAYS*/"always");
			this.mContext.setCulling(/*iflash.display3D.Context3DTriangleFace.NONE*/"none");
			this.mSupport.renderTarget=null;
			this.mSupport.setProjectionMatrix(
			this.mViewPort.x < 0 ?-this.mViewPort.x / scaleX :0.0,
			this.mViewPort.y < 0 ?-this.mViewPort.y / scaleY :0.0,
			this.mClippedViewPort.width / scaleX,
			this.mClippedViewPort.height / scaleY,
			this.mStage.stageWidth,this.mStage.stageHeight,this.mStage.cameraPosition);
			if (!this.mShareContext)
				RenderSupport.clear(this.mStage.color,1.0);
			if (Laya.CONCHVER){
				this.mContext.onConchRestore();
			}
			this.mStage.render(this.mSupport,1.0);
			this.mSupport.finishQuadBatch();
			if (this.mStatsDisplay)
				this.mStatsDisplay.drawCount=this.mSupport.drawCount;
			if (!this.mShareContext)
				this.mContext.present();
		}

		__proto.updateViewPort=function(forceUpdate){
			(forceUpdate===void 0)&& (forceUpdate=false);
			if (forceUpdate || this.mPreviousViewPort.width !=this.mViewPort.width ||
				this.mPreviousViewPort.height !=this.mViewPort.height ||
			this.mPreviousViewPort.x !=this.mViewPort.x || this.mPreviousViewPort.y !=this.mViewPort.y){
				this.mPreviousViewPort.setTo(this.mViewPort.x,this.mViewPort.y,this.mViewPort.width,this.mViewPort.height);
				this.mClippedViewPort=this.mViewPort.intersection(
				new Rectangle(0,0,this.mNativeStage.stageWidth,this.mNativeStage.stageHeight));
				if (!this.mShareContext){
					if (this.mProfile=="baselineConstrained")
						this.configureBackBuffer(32,32,this.mAntiAliasing,true);
					this.mStage3D.x=this.mClippedViewPort.x;
					this.mStage3D.y=this.mClippedViewPort.y;
					this.configureBackBuffer(this.mClippedViewPort.width,this.mClippedViewPort.height,
					this.mAntiAliasing,true,this.mSupportHighResolutions);
					if (this.mSupportHighResolutions && "contentsScaleFactor" in this.mNativeStage)
						this.mNativeStageContentScaleFactor=this.mNativeStage["contentsScaleFactor"];
					else
					this.mNativeStageContentScaleFactor=1.0;
				}
			}
		}

		__proto.configureBackBuffer=function(width,height,antiAlias,enableDepthAndStencil,wantsBestResolution){
			(wantsBestResolution===void 0)&& (wantsBestResolution=false);
			enableDepthAndStencil=enableDepthAndStencil && SystemUtil.supportsDepthAndStencil;
			var configureBackBuffer=iflash.method.bind(this.mContext,this.mContext.configureBackBuffer);
			var methodArgs=[width,height,antiAlias,enableDepthAndStencil];
			if (configureBackBuffer.length > 4)methodArgs.push(wantsBestResolution);
			configureBackBuffer.apply(this.mContext,methodArgs);
		}

		__proto.updateNativeOverlay=function(){
			this.mNativeOverlay.x=this.mViewPort.x;
			this.mNativeOverlay.y=this.mViewPort.y;
			this.mNativeOverlay.scaleX=this.mViewPort.width / this.mStage.stageWidth;
			this.mNativeOverlay.scaleY=this.mViewPort.height / this.mStage.stageHeight;
		}

		__proto.stopWithFatalError=function(message){
			var background=new Shape();
			background.graphics.beginFill(0x0,0.8);
			background.graphics.drawRect(0,0,this.mStage.stageWidth,this.mStage.stageHeight);
			background.graphics.endFill();
			var textField=new TextField();
			var textFormat=new TextFormat("Verdana",14,0xFFFFFF);
			textFormat.align=/*iflash.text.TextFormatAlign.CENTER*/"center";
			textField.defaultTextFormat=textFormat;
			textField.wordWrap=true;
			textField.width=this.mStage.stageWidth *0.75;
			textField.autoSize=/*iflash.text.TextFieldAutoSize.CENTER*/"center";
			textField.text=message;
			textField.x=(this.mStage.stageWidth-textField.width)/ 2;
			textField.y=(this.mStage.stageHeight-textField.height)/ 2;
			textField.background=true;
			textField.backgroundColor=0x550000;
			this.updateNativeOverlay();
			this.nativeOverlay.addChild(background);
			this.nativeOverlay.addChild(textField);
			this.stop(true);
			console.log("[Starling]",message);
			this.dispatchEventWith(/*starling.events.Event.FATAL_ERROR*/"fatalError",false,message);
		}

		__proto.makeCurrent=function(){
			Starling.sCurrent=this;
		}

		__proto.start=function(){
			this.mStarted=this.mRendering=true;
			this.mLastFrameTimestamp=iflash.utils.getTimer()/ 1000.0;
		}

		__proto.stop=function(suspendRendering){
			(suspendRendering===void 0)&& (suspendRendering=false);
			this.mStarted=false;
			this.mRendering=!suspendRendering;
		}

		__proto.onStage3DError=function(event){
			if (event.errorID==3702){
				var mode=Capabilities.playerType=="Desktop" ? "renderMode" :"wmode";
				this.stopWithFatalError("Context3D not available! Possible reasons: wrong "+mode+
				" or missing device support.");
			}
			else
			this.stopWithFatalError("Stage3D error: "+event.text);
		}

		__proto.onContextCreated=function(event){
			if (!starling.core.Starling.handleLostContext && this.mContext){
				event.stopImmediatePropagation();
				this.stopWithFatalError("The application lost the device context!");
				console.log("[Starling] Enable 'Starling.handleLostContext' to avoid this error.");
			}
			else{
				this.initialize();
			}
		}

		__proto.onEnterFrame=function(event){
			if (!this.mShareContext){
				if (this.mStarted)this.nextFrame();
				else if (this.mRendering)this.render();
			}
			this.updateNativeOverlay();
		}

		__proto.onKey=function(event){
			if (!this.mStarted)return;
			var keyEvent=new starling.events.KeyboardEvent(
			event.type,event.charCode,event.keyCode,event.keyLocation,
			event.ctrlKey,event.altKey,event.shiftKey);
			this.makeCurrent();
			this.mStage.broadcastEvent(keyEvent);
			if (keyEvent.isDefaultPrevented())
				event.preventDefault();
		}

		__proto.onResize=function(event){
			var _$this=this;
			var stageWidth=event.target.stageWidth;
			var stageHeight=event.target.stageHeight;
			if (this.contextValid)
				dispatchResizeEvent();
			else
			this.addEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",dispatchResizeEvent);
			function dispatchResizeEvent (){
				_$this.makeCurrent();
				_$this.removeEventListener(/*iflash.events.Event.CONTEXT3D_CREATE*/"context3DCreate",dispatchResizeEvent);
				_$this.mStage.dispatchEvent(new ResizeEvent(/*iflash.events.Event.RESIZE*/"resize",stageWidth,stageHeight));
			}
		}

		__proto.onMouseLeave=function(event){
			this.mTouchProcessor.enqueueMouseLeftStage();
		}

		__proto.onTouch=function(event){
			if (!this.mStarted)return;
			var globalX=NaN;
			var globalY=NaN;
			var touchID=0;
			var phase;
			var pressure=1.0;
			var width=1.0;
			var height=1.0;
			if ((event instanceof iflash.events.MouseEvent )){
				var mouseEvent=event;
				globalX=mouseEvent.stageX;
				globalY=mouseEvent.stageY;
				touchID=0;
				if (event.type==/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown")this.mLeftMouseDown=true;
				else if (event.type==/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp")this.mLeftMouseDown=false;
			}
			else{
				var touchEvent=event;
				if (Mouse.supportsCursor && touchEvent.isPrimaryTouchPoint)return;
				else{
					globalX=touchEvent.stageX;
					globalY=touchEvent.stageY;
					touchID=touchEvent.touchPointID;
					pressure=touchEvent.pressure;
					width=touchEvent.sizeX;
					height=touchEvent.sizeY;
				}
			}
			switch (event.type){
				case /*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin":phase=/*starling.events.TouchPhase.BEGAN*/"began";break ;
				case /*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove":phase=/*starling.events.TouchPhase.MOVED*/"moved";break ;
				case /*iflash.events.TouchEvent.TOUCH_END*/"touchEnd":phase=/*starling.events.TouchPhase.ENDED*/"ended";break ;
				case /*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown":phase=/*starling.events.TouchPhase.BEGAN*/"began";break ;
				case /*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp":phase=/*starling.events.TouchPhase.ENDED*/"ended";break ;
				case /*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove":
					phase=(this.mLeftMouseDown ? /*starling.events.TouchPhase.MOVED*/"moved" :/*starling.events.TouchPhase.HOVER*/"hover");break ;
				}
			globalX=this.mStage.stageWidth *(globalX-this.mViewPort.x)/ this.mViewPort.width;
			globalY=this.mStage.stageHeight *(globalY-this.mViewPort.y)/ this.mViewPort.height;
			this.mTouchProcessor.enqueue(touchID,phase,globalX,globalY,pressure,width,height);
			if (event.type==/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp")
				this.mTouchProcessor.enqueue(touchID,/*starling.events.TouchPhase.HOVER*/"hover",globalX,globalY);
		}

		__proto.registerProgram=function(name,vertexShader,fragmentShader){
			this.deleteProgram(name);
			var program=this.mContext.createProgram();
			program.upload(vertexShader,fragmentShader);
			this.programs[name]=program;
			return program;
		}

		__proto.registerProgramFromSource=function(name,vertexShader,fragmentShader){
			this.deleteProgram(name);
			var program=RenderSupport.assembleAgal(vertexShader,fragmentShader);
			this.programs[name]=program;
			return program;
		}

		__proto.deleteProgram=function(name){
			var program=this.getProgram(name);
			if (program){
				program.dispose();
				delete this.programs[name];
			}
		}

		__proto.getProgram=function(name){
			return this.programs [name];
		}

		__proto.hasProgram=function(name){
			return name in this.programs;
		}

		__proto.showStatsAt=function(hAlign,vAlign,scale){
			var _$this=this;
			(hAlign===void 0)&& (hAlign="left");
			(vAlign===void 0)&& (vAlign="top");
			(scale===void 0)&& (scale=1);
			if (this.mContext==null){
				this.addEventListener(/*starling.events.Event.ROOT_CREATED*/"rootCreated",onRootCreated);
			}
			else{
				if (this.mStatsDisplay==null){
					this.mStatsDisplay=new StatsDisplay();
					this.mStatsDisplay.touchable=false;
					this.mStage.addChild(this.mStatsDisplay);
				};
				var stageWidth=this.mStage.stageWidth;
				var stageHeight=this.mStage.stageHeight;
				this.mStatsDisplay.scaleX=this.mStatsDisplay.scaleY=scale;
				if (hAlign==/*starling.utils.HAlign.LEFT*/"left")this.mStatsDisplay.x=0;
				else if (hAlign==/*starling.utils.HAlign.RIGHT*/"right")this.mStatsDisplay.x=stageWidth-this.mStatsDisplay.width;
				else this.mStatsDisplay.x=int((stageWidth-this.mStatsDisplay.width)/ 2);
				if (vAlign==/*starling.utils.VAlign.TOP*/"top")this.mStatsDisplay.y=0;
				else if (vAlign==/*starling.utils.VAlign.BOTTOM*/"bottom")this.mStatsDisplay.y=stageHeight-this.mStatsDisplay.height;
				else this.mStatsDisplay.y=int((stageHeight-this.mStatsDisplay.height)/ 2);
			}
			function onRootCreated (){
				_$this.showStatsAt(hAlign,vAlign,scale);
				_$this.removeEventListener(/*starling.events.Event.ROOT_CREATED*/"rootCreated",onRootCreated);
			}
		}

		__getset(0,__proto,'juggler',function(){return this.mJuggler;});
		__getset(0,__proto,'touchEventTypes',function(){
			var types=[];
			if (Starling.multitouchEnabled)
				types.push(/*iflash.events.TouchEvent.TOUCH_BEGIN*/"touchBegin",/*iflash.events.TouchEvent.TOUCH_MOVE*/"touchMove",/*iflash.events.TouchEvent.TOUCH_END*/"touchEnd");
			if (!Starling.multitouchEnabled || Mouse.supportsCursor)
				types.push(/*iflash.events.MouseEvent.MOUSE_DOWN*/"mouseDown",/*iflash.events.MouseEvent.MOUSE_MOVE*/"mouseMove",/*iflash.events.MouseEvent.MOUSE_UP*/"mouseUp");
			return types;
		});

		__getset(0,__proto,'programs',function(){return this.contextData["Starling.programs"];});
		__getset(0,__proto,'backBufferWidth',function(){return this.mClippedViewPort.width;});
		__getset(0,__proto,'isStarted',function(){return this.mStarted;});
		__getset(0,__proto,'backBufferPixelsPerPoint',function(){
			return this.mNativeStageContentScaleFactor;
		});

		__getset(0,__proto,'contextValid',function(){
			return this.mContext && this.mContext.driverInfo !="Disposed";
		});

		__getset(0,__proto,'context',function(){return this.mContext;});
		__getset(0,__proto,'contextData',function(){
			return Starling.sContextData.get(this.mStage3D);
		});

		__getset(0,__proto,'backBufferHeight',function(){return this.mClippedViewPort.height;});
		__getset(0,__proto,'simulateMultitouch',function(){return this.mSimulateMultitouch;},function(value){
			this.mSimulateMultitouch=value;
			if (this.mContext)this.mTouchProcessor.simulateMultitouch=value;
		});

		__getset(0,__proto,'enableErrorChecking',function(){return this.mEnableErrorChecking;},function(value){
			this.mEnableErrorChecking=value;
			if (this.mContext)this.mContext.enableErrorChecking=value;
		});

		__getset(0,__proto,'antiAliasing',function(){return this.mAntiAliasing;},function(value){
			if (this.mAntiAliasing !=value){
				this.mAntiAliasing=value;
				if (this.contextValid)this.updateViewPort(true);
			}
		});

		__getset(0,__proto,'viewPort',function(){return this.mViewPort;},function(value){
			this.mViewPort=value.clone();
			if (!this.contextValid)
				return;
			this.mContext.setMainViewPortPos(value.x,value.y);
		});

		__getset(0,__proto,'contentScaleFactor',function(){
			return (this.mViewPort.width *this.mNativeStageContentScaleFactor)/ this.mStage.stageWidth;
		});

		__getset(0,__proto,'nativeOverlay',function(){return this.mNativeOverlay;});
		__getset(0,__proto,'showStats',function(){
			if (this.mStatsDisplay==null)return false;
			return this.mStatsDisplay && this.mStatsDisplay.parent;
			},function(value){
			if (value==this.showStats)return;
			console.log("Please Use LayaBox's Native Status...");
			return;
			if (value){
				if (this.mStatsDisplay)this.mStage.addChild(this.mStatsDisplay);
				else this.showStatsAt();
			}
			else this.mStatsDisplay.removeFromParent();
		});

		__getset(0,__proto,'stage',function(){return this.mStage;});
		__getset(0,__proto,'stage3D',function(){return this.mStage3D;});
		__getset(0,__proto,'nativeStage',function(){return this.mNativeStage;});
		__getset(0,__proto,'root',function(){return this.mRoot;});
		__getset(0,__proto,'rootClass',function(){return this.mRootClass;},function(value){
			if (this.mRootClass !=null && this.mRoot !=null)
				throw new Error("Root class may not change after root has been instantiated");
			else if (this.mRootClass==null){
				this.mRootClass=value;
				if (this.mContext)this.initializeRoot();
			}
		});

		__getset(0,__proto,'shareContext',function(){return this.mShareContext;},function(value){this.mShareContext=value;});
		__getset(0,__proto,'profile',function(){return this.mProfile;});
		__getset(0,__proto,'supportHighResolutions',function(){return this.mSupportHighResolutions;},function(value){
			if (this.mSupportHighResolutions !=value){
				this.mSupportHighResolutions=value;
				if (this.contextValid)this.updateViewPort(true);
			}
		});

		__getset(0,__proto,'touchProcessor',function(){return this.mTouchProcessor;},function(value){
			if (value !=this.mTouchProcessor){
				this.mTouchProcessor.dispose();
				this.mTouchProcessor=value;
			}
		});

		__getset(1,Starling,'context',function(){return Starling.sCurrent ? Starling.sCurrent.context :null;},starling.events.EventDispatcher._$SET_context);
		__getset(1,Starling,'current',function(){return Starling.sCurrent;},starling.events.EventDispatcher._$SET_current);
		__getset(1,Starling,'all',function(){return Starling.sAll;},starling.events.EventDispatcher._$SET_all);
		__getset(1,Starling,'handleLostContext',function(){return Starling.sHandleLostContext;},function(value){
			if (Starling.sCurrent)throw new IllegalOperationError(
				"'handleLostContext' must be set before Starling instance is created");
			else
			Starling.sHandleLostContext=value;
		});

		__getset(1,Starling,'juggler',function(){return Starling.sCurrent ? Starling.sCurrent.juggler :null;},starling.events.EventDispatcher._$SET_juggler);
		__getset(1,Starling,'contentScaleFactor',function(){
			return Starling.sCurrent ? Starling.sCurrent.contentScaleFactor :1.0;
		},starling.events.EventDispatcher._$SET_contentScaleFactor);

		__getset(1,Starling,'multitouchEnabled',function(){
			return false;
			},function(value){
			if (Starling.sCurrent)throw new IllegalOperationError(
				"'multitouchEnabled' must be set before Starling instance is created");
		});

		Starling.VERSION="1.6.1";
		Starling.PROGRAM_DATA_NAME="Starling.programs";
		Starling.sCurrent=null
		Starling.sHandleLostContext=true;
		__static(Starling,
		['sContextData',function(){return this.sContextData=new LayaDictionary();},'sAll',function(){return this.sAll=/*new vector.<>*/[];}
		]);
		return Starling;
	})(EventDispatcher1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/enterframeevent.as
	//class starling.events.EnterFrameEvent extends starling.events.Event
	var EnterFrameEvent=(function(_super){
		function EnterFrameEvent(type,passedTime,bubbles){
			(bubbles===void 0)&& (bubbles=false);
			EnterFrameEvent.__super.call(this,type,bubbles,passedTime);
		}

		__class(EnterFrameEvent,'starling.events.EnterFrameEvent',false,_super);
		var __proto=EnterFrameEvent.prototype;
		__getset(0,__proto,'passedTime',function(){return this.data;});
		EnterFrameEvent.ENTER_FRAME="enterFrame";
		return EnterFrameEvent;
	})(Event1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/keyboardevent.as
	//class starling.events.KeyboardEvent extends starling.events.Event
	var KeyboardEvent1=(function(_super){
		function KeyboardEvent(type,charCode,keyCode,keyLocation,ctrlKey,altKey,shiftKey){
			this.mCharCode=0;
			this.mKeyCode=0;
			this.mKeyLocation=0;
			this.mAltKey=false;
			this.mCtrlKey=false;
			this.mShiftKey=false;
			this.mIsDefaultPrevented=false;
			(charCode===void 0)&& (charCode=0);
			(keyCode===void 0)&& (keyCode=0);
			(keyLocation===void 0)&& (keyLocation=0);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(altKey===void 0)&& (altKey=false);
			(shiftKey===void 0)&& (shiftKey=false);
			KeyboardEvent.__super.call(this,type,false,keyCode);
			this.mCharCode=charCode;
			this.mKeyCode=keyCode;
			this.mKeyLocation=keyLocation;
			this.mCtrlKey=ctrlKey;
			this.mAltKey=altKey;
			this.mShiftKey=shiftKey;
		}

		__class(KeyboardEvent,'starling.events.KeyboardEvent',false,_super,'KeyboardEvent1');
		var __proto=KeyboardEvent.prototype;
		__proto.preventDefault=function(){
			this.mIsDefaultPrevented=true;
		}

		__proto.isDefaultPrevented=function(){return this.mIsDefaultPrevented;}
		__getset(0,__proto,'charCode',function(){return this.mCharCode;});
		__getset(0,__proto,'keyCode',function(){return this.mKeyCode;});
		__getset(0,__proto,'ctrlKey',function(){return this.mCtrlKey;});
		__getset(0,__proto,'keyLocation',function(){return this.mKeyLocation;});
		__getset(0,__proto,'altKey',function(){return this.mAltKey;});
		__getset(0,__proto,'shiftKey',function(){return this.mShiftKey;});
		KeyboardEvent.KEY_UP="keyUp";
		KeyboardEvent.KEY_DOWN="keyDown";
		return KeyboardEvent;
	})(Event1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/resizeevent.as
	//class starling.events.ResizeEvent extends starling.events.Event
	var ResizeEvent=(function(_super){
		function ResizeEvent(type,width,height,bubbles){
			(bubbles===void 0)&& (bubbles=false);
			ResizeEvent.__super.call(this,type,bubbles,new Point(width,height));
		}

		__class(ResizeEvent,'starling.events.ResizeEvent',false,_super);
		var __proto=ResizeEvent.prototype;
		__getset(0,__proto,'width',function(){return (this.data).x;});
		__getset(0,__proto,'height',function(){return (this.data).y;});
		ResizeEvent.RESIZE="resize";
		return ResizeEvent;
	})(Event1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/touchevent.as
	;
	//class starling.events.TouchEvent extends starling.events.Event
	var TouchEvent1=(function(_super){
		function TouchEvent(type,touches,shiftKey,ctrlKey,bubbles){
			this.mShiftKey=false;
			this.mCtrlKey=false;
			this.mTimestamp=NaN;
			this.mVisitedObjects=null;
			(shiftKey===void 0)&& (shiftKey=false);
			(ctrlKey===void 0)&& (ctrlKey=false);
			(bubbles===void 0)&& (bubbles=true);
			TouchEvent.__super.call(this,type,bubbles,touches);
			this.mShiftKey=shiftKey;
			this.mCtrlKey=ctrlKey;
			this.mTimestamp=-1.0;
			this.mVisitedObjects=/*new vector.<>*/[];
			var numTouches=touches.length;
			for (var i=0;i<numTouches;++i)
			if (touches[i].timestamp > this.mTimestamp)
				this.mTimestamp=touches[i].timestamp;
		}

		__class(TouchEvent,'starling.events.TouchEvent',false,_super,'TouchEvent1');
		var __proto=TouchEvent.prototype;
		__proto.getTouches=function(target,phase,result){
			if (result==null)result=/*new vector.<>*/[];
			var allTouches=this.data;
			var numTouches=allTouches.length;
			for (var i=0;i<numTouches;++i){
				var touch=allTouches[i];
				var correctTarget=touch.isTouching(target);
				var correctPhase=(phase==null || phase==touch.phase);
				if (correctTarget && correctPhase)
					result[result.length]=touch;
			}
			return result;
		}

		__proto.getTouch=function(target,phase,id){
			(id===void 0)&& (id=-1);
			this.getTouches(target,phase,TouchEvent.sTouches);
			var numTouches=TouchEvent.sTouches.length;
			if (numTouches > 0){
				var touch=null;
				if (id < 0)touch=TouchEvent.sTouches[0];
				else{
					for (var i=0;i<numTouches;++i)
					if (TouchEvent.sTouches[i].id==id){touch=TouchEvent.sTouches[i];break ;}
						}
				TouchEvent.sTouches.length=0;
				return touch;
			}
			else return null;
		}

		__proto.interactsWith=function(target){
			var result=false;
			this.getTouches(target,null,TouchEvent.sTouches);
			for (var i=TouchEvent.sTouches.length-1;i>=0;--i){
				if (TouchEvent.sTouches[i].phase !=/*starling.events.TouchPhase.ENDED*/"ended"){
					result=true;
					break ;
				}
			}
			TouchEvent.sTouches.length=0;
			return result;
		}

		__proto.dispatch=function(chain){
			if (chain && chain.length){
				var chainLength=this.bubbles ? chain.length :1;
				var previousTarget=this.target;
				this.setTarget(chain [0]);
				for (var i=0;i<chainLength;++i){
					var chainElement=chain [i];
					if (this.mVisitedObjects.indexOf(chainElement)==-1){
						var stopPropagation=chainElement.invokeEvent(this);
						this.mVisitedObjects[this.mVisitedObjects.length]=chainElement;
						if (stopPropagation)break ;
					}
				}
				this.setTarget(previousTarget);
			}
		}

		__getset(0,__proto,'timestamp',function(){return this.mTimestamp;});
		__getset(0,__proto,'shiftKey',function(){return this.mShiftKey;});
		__getset(0,__proto,'touches',function(){return (this.data).concat();});
		__getset(0,__proto,'ctrlKey',function(){return this.mCtrlKey;});
		TouchEvent.TOUCH="touch";
		__static(TouchEvent,
		['sTouches',function(){return this.sTouches=/*new vector.<>*/[];}
		]);
		return TouchEvent;
	})(Event1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/utils/assetmanager.as
	//class starling.utils.AssetManager extends starling.events.EventDispatcher
	var AssetManager=(function(_super){
		function AssetManager(scaleFactor,useMipmaps){
			this.mStarling=null;
			this.mNumLostTextures=0;
			this.mNumRestoredTextures=0;
			this.mNumLoadingQueues=0;
			this.mDefaultTextureOptions=null;
			this.mCheckPolicyFile=false;
			this.mKeepAtlasXmls=false;
			this.mKeepFontXmls=false;
			this.mNumConnections=0;
			this.mVerbose=false;
			this.mQueue=null;
			this.mTextures=null;
			this.mAtlases=null;
			this.mSounds=null;
			this.mXmls=null;
			this.mObjects=null;
			this.mByteArrays=null;
			this.urlArray={};
			AssetManager.__super.call(this);
			(scaleFactor===void 0)&& (scaleFactor=1);
			(useMipmaps===void 0)&& (useMipmaps=false);
			this.mDefaultTextureOptions=new TextureOptions(scaleFactor,useMipmaps);
			this.mTextures=new Object();
			this.mAtlases=new Object();
			this.mSounds=new Object();
			this.mXmls=new Object();
			this.mObjects=new Object();
			this.mByteArrays=new Object();
			this.mNumConnections=3;
			this.mVerbose=true;
			this.mQueue=[];
		}

		__class(AssetManager,'starling.utils.AssetManager',false,_super);
		var __proto=AssetManager.prototype;
		__proto.dispose=function(){
			var texture;
			/*for each*/for(var $each_texture in this.mTextures){
				texture=this.mTextures[$each_texture];
				texture.dispose();
			}
			var atlas;
			/*for each*/for(var $each_atlas in this.mAtlases){
				atlas=this.mAtlases[$each_atlas];
				atlas.dispose();
			}
			var xml;
			/*for each*/for(var $each_xml in this.mXmls){
				xml=this.mXmls[$each_xml];
				System.disposeXML(xml);
			}
			var byteArray;
			/*for each*/for(var $each_byteArray in this.mByteArrays){
				byteArray=this.mByteArrays[$each_byteArray];
				byteArray.clear();
			}
		}

		__proto.getTexture=function(name){
			if (name in this.mTextures)return this.mTextures[name];
			else{
				var atlas;
				/*for each*/for(var $each_atlas in this.mAtlases){
					atlas=this.mAtlases[$each_atlas];
					var texture=atlas.getTexture(name);
					if (texture)return texture;
				}
				return null;
			}
		}

		__proto.getTextureDirect=function(name){
			return this.mTextures[name];
		}

		__proto.getTextures=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			if (result==null)result=/*new vector.<>*/[];
			var names=this.getTextureNames(prefix,AssetManager.sNames);
			var name;
			/*for each*/for(var $each_name in names){
				name=names[$each_name];
				result[result.length]=this.getTexture(name);
			}
			AssetManager.sNames.length=0;
			return result;
		}

		__proto.getTextureNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			result=this.getDictionaryKeys(this.mTextures,prefix,result);
			for(var name in this.mAtlases){
				var atlas=this.mAtlases[name];
				atlas.getNames(prefix,result);
			}
			result.sort(Array.CASEINSENSITIVE);
			return result;
		}

		__proto.getTextureAtlas=function(name){
			return iflash.method.typeAs(this.mAtlases[name],TextureAtlas);
		}

		__proto.getSound=function(name){
			return this.mSounds[name];
		}

		__proto.getSoundNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			return this.getDictionaryKeys(this.mSounds,prefix,result);
		}

		__proto.playSound=function(name,startTime,loops,transform){
			(startTime===void 0)&& (startTime=0);
			(loops===void 0)&& (loops=0);
			if (name in this.mSounds)
				return this.getSound(name).play(startTime,loops,transform);
			else
			return null;
		}

		__proto.getXml=function(name){
			return this.mXmls[name];
		}

		__proto.getXmlNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			return this.getDictionaryKeys(this.mXmls,prefix,result);
		}

		__proto.getObject=function(name){
			return this.mObjects[name];
		}

		__proto.getObjectNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			return this.getDictionaryKeys(this.mObjects,prefix,result);
		}

		__proto.getByteArray=function(name){
			return this.mByteArrays[name];
		}

		__proto.getByteArrayNames=function(prefix,result){
			(prefix===void 0)&& (prefix="");
			return this.getDictionaryKeys(this.mByteArrays,prefix,result);
		}

		__proto.addTexture=function(name,texture){
			this.log("Adding texture '"+name+"'");
			if (name in this.mTextures){
				this.log("Warning: name was already in use; the previous texture will be replaced.");
				this.mTextures[name].dispose();
			}
			this.mTextures[name]=texture;
		}

		__proto.addTextureAtlas=function(name,atlas){
			this.log("Adding texture atlas '"+name+"'");
			if (name in this.mAtlases){
				this.log("Warning: name was already in use; the previous atlas will be replaced.");
				this.mAtlases[name].dispose();
			}
			this.mAtlases[name]=atlas;
		}

		__proto.addSound=function(name,sound){
			this.log("Adding sound '"+name+"'");
			if (name in this.mSounds)
				this.log("Warning: name was already in use; the previous sound will be replaced.");
			this.mSounds[name]=sound;
		}

		__proto.addXml=function(name,xml){
			this.log("Adding XML '"+name+"'");
			if (name in this.mXmls){
				this.log("Warning: name was already in use; the previous XML will be replaced.");
			}
			this.mXmls[name]=xml;
		}

		__proto.addObject=function(name,object){
			this.log("Adding object '"+name+"'");
			if (name in this.mObjects)
				this.log("Warning: name was already in use; the previous object will be replaced.");
			this.mObjects[name]=object;
		}

		__proto.addByteArray=function(name,byteArray){
			this.log("Adding byte array '"+name+"'");
			if (name in this.mByteArrays){
				this.log("Warning: name was already in use; the previous byte array will be replaced.");
				this.mByteArrays[name].clear();
			}
			this.mByteArrays[name]=byteArray;
		}

		__proto.removeTexture=function(name,dispose){
			(dispose===void 0)&& (dispose=true);
			this.log("Removing texture '"+name+"'");
			if (dispose && name in this.mTextures)
				this.mTextures[name].dispose();
			delete this.mTextures[name];
		}

		__proto.removeTextureAtlas=function(name,dispose){
			(dispose===void 0)&& (dispose=true);
			this.log("Removing texture atlas '"+name+"'");
			if (dispose && name in this.mAtlases)
				this.mAtlases[name].dispose();
			delete this.mAtlases[name];
		}

		__proto.removeSound=function(name){
			this.log("Removing sound '"+name+"'");
			delete this.mSounds[name];
		}

		__proto.removeXml=function(name,dispose){
			(dispose===void 0)&& (dispose=true);
			this.log("Removing xml '"+name+"'");
			delete this.mXmls[name];
		}

		__proto.removeObject=function(name){
			this.log("Removing object '"+name+"'");
			delete this.mObjects[name];
		}

		__proto.removeByteArray=function(name,dispose){
			(dispose===void 0)&& (dispose=true);
			this.log("Removing byte array '"+name+"'");
			if (dispose && name in this.mByteArrays)
				this.mByteArrays[name].clear();
			delete this.mByteArrays[name];
		}

		__proto.purgeQueue=function(){
			this.mQueue.length=0;
			this.dispatchEventWith(/*starling.events.Event.CANCEL*/"cancel");
		}

		__proto.purge=function(){
			this.log("Purging all assets, emptying queue");
			this.purgeQueue();
			this.dispose();
			this.mTextures=new Object();
			this.mAtlases=new Object();
			this.mSounds=new Object();
			this.mXmls=new Object();
			this.mObjects=new Object();
			this.mByteArrays=new Object();
		}

		__proto.enqueue=function(__rawAssets){
			var rawAssets=[];for(var i=0,sz=arguments.length;i<sz;i++)rawAssets.push(arguments[i]);
			var rawAsset;
			/*for each*/for(var $each_rawAsset in rawAssets){
				rawAsset=rawAssets[$each_rawAsset];
				if ((rawAsset instanceof Array)){
					this.enqueue.apply(this,rawAsset);
				}
				else if (Laya.__isClass(rawAsset)){
					throw new Error("iLaya not support Embed...");
				}
				else if (iflash.utils.getQualifiedClassName(rawAsset)=="iflash.filesystem::File"){
					if (!rawAsset["exists"]){
						this.log("File or directory not found: '"+rawAsset["url"]+"'");
					}
					else if (!rawAsset["isHidden"]){
						if (rawAsset["isDirectory"])
							this.enqueue.apply(this,rawAsset["getDirectoryListing"]());
						else
						this.enqueueWithName(rawAsset);
					}
				}
				else if ((typeof rawAsset=='string')|| (rawAsset instanceof iflash.net.URLRequest )){
					this.enqueueWithName(rawAsset);
				}
				else{
					this.log("Ignoring unsupported asset type: "+iflash.utils.getQualifiedClassName(rawAsset));
				}
			}
		}

		__proto.enqueueWithName=function(asset,name,options){
			if(iflash.utils.getQualifiedClassName(asset)=="iflash.filesystem::File")
				asset=decodeURI(asset["url"]);
			if (name==null)name=this.getName(asset);
			if (options==null)options=this.mDefaultTextureOptions.clone();
			else options=options.clone();
			this.log("Enqueuing '"+name+"'");
			this.mQueue.push({
				name:name,
				asset:asset,
				options:options
			});
			return name;
		}

		__proto.loadQueue=function(onProgress){
			var _$this=this;
			if (onProgress==null)
				throw new Error("Argument 'onProgress' must not be null");
			if (this.mQueue.length==0){
				onProgress(1.0);
				return;
			}
			this.mStarling=Starling.current;
			if (this.mStarling==null || this.mStarling.context==null)
				throw new Error("The Starling instance needs to be ready before assets can be loaded.");
			var PROGRESS_PART_ASSETS=0.9;
			var PROGRESS_PART_XMLS=1.0-PROGRESS_PART_ASSETS;
			var i=0;
			var canceled=false;
			var xmls=/*new vector.<>*/[];
			var assetInfos=this.mQueue.concat();
			var assetCount=this.mQueue.length;
			var assetProgress=[];
			var assetIndex=0;
			for (i=0;i<assetCount;++i)
			assetProgress[i]=0.0;
			for (i=0;i<this.mNumConnections;++i)
			loadNextQueueElement();
			this.mQueue.length=0;
			this.mNumLoadingQueues++;
			this.addEventListener(/*starling.events.Event.CANCEL*/"cancel",cancel);
			function loadNextQueueElement (){
				if (assetIndex < assetInfos.length){
					var index=assetIndex++;
					loadQueueElement(index,assetInfos[index]);
				}
			}
			function loadQueueElement (index,assetInfo){
				if (canceled)return;
				var onElementProgress=function (progress){
					updateAssetProgress(index,progress *0.8);
				};
				var onElementLoaded=function (){
					updateAssetProgress(index,1.0);
					assetCount--;
					if (assetCount > 0)loadNextQueueElement();
					else processXmls();
				};
				_$this.processRawAsset(assetInfo.name,assetInfo.asset,assetInfo.options,
				xmls,onElementProgress,onElementLoaded);
			}
			function updateAssetProgress (index,progress){
				assetProgress[index]=progress;
				var sum=0.0;
				var len=assetProgress.length;
				for (i=0;i<len;++i)
				sum+=assetProgress[i];
				onProgress(sum / len *PROGRESS_PART_ASSETS);
			}
			function processXmls (){
				xmls.sort(function(a,b){
					return a.localName=="TextureAtlas" ?-1 :1;
				});
				iflash.utils.setTimeout(processXml,1,0);
			}
			function processXml (index){
				if (canceled)return;
				else if (index==xmls.length){
					finish();
					return;
				};
				var name;
				var texture;
				var xml=xmls[index];
				var rootNode=xml.localName;
				var xmlProgress=(index+1)/ (xmls.length+1);
				if (rootNode=="TextureAtlas"){
					name=_$this.getName(String(xml.attribute('imagePath')));
					texture=_$this.getTexture(name);
					if (texture){
						_$this.addTextureAtlas(name,new TextureAtlas(texture,xml));
						_$this.removeTexture(name,false);
						if (_$this.mKeepAtlasXmls)_$this.addXml(name,xml);
						else System.disposeXML(xml);
					}
					else _$this.log("Cannot create atlas: texture '"+name+"' is missing.");
				}
				else if (rootNode=="font"){
					name=_$this.getName(xml.pages.page.attribute('file').toString());
					texture=_$this.getTexture(name);
					if (texture){
						_$this.log("Adding bitmap font '"+name+"'");
						TextField1.registerBitmapFont(new BitmapFont(texture,xml),name);
						_$this.removeTexture(name,false);
						if (_$this.mKeepFontXmls)_$this.addXml(name,xml);
						else System.disposeXML(xml);
					}
					else _$this.log("Cannot create bitmap font: texture '"+name+"' is missing.");
				}
				else
				throw new Error("XML contents not recognized: "+rootNode);
				onProgress(PROGRESS_PART_ASSETS+PROGRESS_PART_XMLS *xmlProgress);
				iflash.utils.setTimeout(processXml,1,index+1);
			}
			function cancel (){
				_$this.removeEventListener(/*starling.events.Event.CANCEL*/"cancel",cancel);
				_$this.mNumLoadingQueues--;
				canceled=true;
			}
			function finish (){
				System.pauseForGCIfCollectionImminent(0);
				System.gc();
				iflash.utils.setTimeout(function(){
					if (!canceled){
						cancel();
						onProgress(1.0);
					}
				},1);
			}
		}

		__proto.processRawAsset=function(name,rawAsset,options,xmls,onProgress,onComplete){
			var _$this=this;
			var canceled=false;
			this.addEventListener(/*starling.events.Event.CANCEL*/"cancel",cancel);
			this.loadRawAsset(rawAsset,progress,process);
			function process (asset){
				var texture;
				var bytes;
				var object=null;
				var xml=null;
				_$this.mStarling.makeCurrent();
				var t_jsImgType="IMG";
				if (canceled){
				}
				else if (asset==null){
					onComplete();
				}
				else if ((asset instanceof iflash.media.Sound )){
					_$this.addSound(name,iflash.method.typeAs(asset,Sound));
					onComplete();
				}
				else if ((asset instanceof XML)){
					xml=asset;
					if (xml.localName=="TextureAtlas" || xml.localName=="font")
						xmls.push(xml);
					else
					_$this.addXml(name,xml);
					onComplete();
				}
				else if (Starling.handleLostContext && _$this.mStarling.context.driverInfo=="Disposed"){
					_$this.log("Context lost while processing assets, retrying ...");
					iflash.utils.setTimeout(process,1,asset);
					return;
				}
				else if ((asset instanceof iflash.display.Bitmap )){
					texture=Texture1.fromData(asset,options);
					texture.root.onRestore=function (){
						_$this.mNumLostTextures++;
						_$this.loadRawAsset(rawAsset,null,function(asset){
							try {texture.root.uploadBitmap(asset);}
							catch (e){_$this.log("Texture restoration failed: "+e.message);}
							asset.bitmapData.dispose();
							_$this.mNumRestoredTextures++;
							if (_$this.mNumLostTextures==_$this.mNumRestoredTextures)
								_$this.dispatchEventWith(/*starling.events.Event.TEXTURES_RESTORED*/"texturesRestored");
						});
					};
					asset.bitmapData.dispose();
					_$this.addTexture(name,texture);
					onComplete();
				}
				else if(asset && asset.tagName && (asset.tagName.valueOf()==t_jsImgType)){
					console.log("StartCreateTexture...");
					texture=Texture1.fromBitmap(asset,false,false,_$this.mDefaultTextureOptions.scale);
					_$this.addTexture(name,texture);
					onComplete();
				}
				else if ((asset instanceof iflash.utils.ByteArray )){
					bytes=asset;
					if (AtfData.isAtfData(bytes)){
						options.onReady=_$this.prependCallback(options.onReady,function(){
							_$this.addTexture(name,texture);
							onComplete();
						});
						texture=Texture1.fromData(bytes,options);
						texture.root.onRestore=function (){
							_$this.mNumLostTextures++;
							_$this.loadRawAsset(rawAsset,null,function(asset){
								try {texture.root.uploadAtfData(asset,0,true);}
								catch (e){_$this.log("Texture restoration failed: "+e.message);}
								asset.clear();
								_$this.mNumRestoredTextures++;
								if (_$this.mNumLostTextures==_$this.mNumRestoredTextures)
									_$this.dispatchEventWith(/*starling.events.Event.TEXTURES_RESTORED*/"texturesRestored");
							});
						};
						bytes.clear();
					}
					else if (_$this.byteArrayStartsWith(bytes,"{")|| _$this.byteArrayStartsWith(bytes,"[")){
						try {object=JSON.parse(bytes.readUTFBytes(bytes.length));}
						catch (e){
							_$this.log("Could not parse JSON: "+e.message);
							_$this.dispatchEventWith(/*starling.events.Event.PARSE_ERROR*/"parseError",false,name);
						}
						if (object)_$this.addObject(name,object);
						bytes.clear();
						onComplete();
					}
					else if (_$this.byteArrayStartsWith(bytes,"<")){
						try {xml=new XML(bytes.readUTFBytes(bytes.length));}
						catch (e){
							_$this.log("Could not parse XML: "+e.message);
							_$this.dispatchEventWith(/*starling.events.Event.PARSE_ERROR*/"parseError",false,name);
						}
						process(xml);
						bytes.clear();
					}
					else{
						_$this.addByteArray(name,bytes);
						onComplete();
					}
				}
				else{
					_$this.addObject(name,asset);
					onComplete();
				}
				asset=null;
				bytes=null;
				_$this.removeEventListener(/*starling.events.Event.CANCEL*/"cancel",cancel);
			}
			function progress (ratio){
				if (!canceled)onProgress(ratio);
			}
			function cancel (){
				canceled=true;
			}
		}

		__proto.loadRawAsset=function(rawAsset,onProgress,onComplete){
			var _$this=this;
			var extension=null;
			var loaderInfo=null;
			var urlLoader=null;
			var urlRequest=null;
			var url=null;
			var sound;
			if (Laya.__isClass(rawAsset)){
				iflash.utils.setTimeout(complete,1,new rawAsset());
			}
			else if ((typeof rawAsset=='string')|| (rawAsset instanceof iflash.net.URLRequest )){
				var t_strAsset=rawAsset;
				urlRequest=iflash.method.typeAs(rawAsset,URLRequest)|| new URLRequest(t_strAsset);
				urlRequest.url=urlRequest.url.replace("app:/","");
				urlRequest.url=urlRequest.url.replace("app-storage:/","");
				url=urlRequest.url;
				extension=this.getExtensionFromUrl(url);
				switch (extension){
					case "mpeg":
					case "mp3":
					case "wav":
						sound=new Sound();
						sound.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",onIoError);
						sound.addEventListener(/*starling.events.Event.COMPLETE*/"complete",onsoundComplete);
						sound.load(urlRequest);
						this.urlArray[url]=sound
						break ;
					default :
						urlLoader=new URLLoader();
						urlLoader.dataFormat=/*iflash.net.URLLoaderDataFormat.BINARY*/"binary";
						urlLoader.addEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",onIoError);
						urlLoader.addEventListener("httpResponseStatus",onHttpResponseStatus);
						urlLoader.addEventListener(/*starling.events.Event.COMPLETE*/"complete",onUrlLoaderComplete);
						urlLoader.load(urlRequest);
						this.urlArray[url]=urlLoader;
						break ;
					}
			}
			function onsoundComplete (event){
				complete(sound);
			}
			function onIoError (event){
				_$this.log("IO error: "+event.text);
				_$this.dispatchEventWith(/*starling.events.Event.IO_ERROR*/"ioError",false,url);
				complete(null);
			}
			function onHttpResponseStatus (event){
				if (extension==null){
					var headers=event["responseHeaders"];
					var contentType=_$this.getHttpHeader(headers,"Content-Type");
					var reg=new RegExp("/(audio|image)\//");
					if (contentType && reg.exec(contentType))
						extension=contentType.split("/").pop();
				}
			}
			function onLoadProgress (event){
				if (onProgress !=null && event.bytesTotal > 0)
					onProgress(event.bytesLoaded / event.bytesTotal);
			}
			function onUrlLoaderComplete (event){
				var bytes=(urlLoader.data);
				bytes=_$this.transformData(bytes,url);
				if (bytes==null){
					complete(null);
					return;
				}
				if (extension)
					extension=extension.toLowerCase();
				switch (extension){
					case "jpg":
					case "jpeg":
					case "png":
					case "gif":
						complete(bytes);
						break ;
					default :
						complete(bytes);
						break ;
					}
			}
			function onLoaderComplete (event){
				urlLoader.data.clear();
				complete(event.target.content);
			}
			function complete (asset){
				if (urlLoader){
					urlLoader.removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",onIoError);
					urlLoader.removeEventListener("httpResponseStatus",onHttpResponseStatus);
					urlLoader.removeEventListener(/*iflash.events.ProgressEvent.PROGRESS*/"progress",onLoadProgress);
					urlLoader.removeEventListener(/*starling.events.Event.COMPLETE*/"complete",onUrlLoaderComplete);
					urlLoader.close();
					urlLoader=null;
				}
				if (loaderInfo){
					loaderInfo.removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",onIoError);
					loaderInfo.removeEventListener(/*starling.events.Event.COMPLETE*/"complete",onLoaderComplete);
					loaderInfo=null;
				}
				if(sound){
					sound.removeEventListener(/*iflash.events.IOErrorEvent.IO_ERROR*/"ioError",onIoError);
					sound.removeEventListener(/*starling.events.Event.COMPLETE*/"complete",onsoundComplete);
					sound.close();
					sound=null;
				}
				delete _$this.urlArray[url];
				if (SystemUtil.isDesktop)
					onComplete(asset);
				else
				SystemUtil.executeWhenApplicationIsActive(onComplete,asset);
			}
		}

		__proto.getName=function(rawAsset){
			var name;
			if ((typeof rawAsset=='string'))name=rawAsset;
			else if ((rawAsset instanceof iflash.net.URLRequest ))name=(rawAsset).url;
			else if ((rawAsset instanceof iflash.net.FileReference ))name=(rawAsset).name;
			if (name){
				var t_regexp=new RegExp("/%20/g");
				name=name.replace(t_regexp," ");
				name=this.getBasenameFromUrl(name);
				if (name)return name;
				else throw new Error("Could not extract name from String '"+rawAsset+"'");
			}
			else{
				name=iflash.utils.getQualifiedClassName(rawAsset);
				throw new Error("Cannot extract names for objects of type '"+name+"'");
			}
		}

		__proto.transformData=function(data,url){
			return data;
		}

		__proto.log=function(message){
			if (this.mVerbose)console.log("[AssetManager]",message);
		}

		__proto.byteArrayStartsWith=function(bytes,char){
			var start=0;
			var length=bytes.length;
			var wanted=char.charCodeAt(0);
			if (length >=4 &&
				(iflash.method.byteAt(bytes,0)==0x00 && iflash.method.byteAt(bytes,1)==0x00 && iflash.method.byteAt(bytes,2)==0xfe && iflash.method.byteAt(bytes,3)==0xff)||
			(iflash.method.byteAt(bytes,0)==0xff && iflash.method.byteAt(bytes,1)==0xfe && iflash.method.byteAt(bytes,2)==0x00 && iflash.method.byteAt(bytes,3)==0x00)){
				start=4;
			}
			else if (length >=3 && iflash.method.byteAt(bytes,0)==0xef && iflash.method.byteAt(bytes,1)==0xbb && iflash.method.byteAt(bytes,2)==0xbf){
				start=3;
			}
			else if (length >=2 &&
			(iflash.method.byteAt(bytes,0)==0xfe && iflash.method.byteAt(bytes,1)==0xff)|| (iflash.method.byteAt(bytes,0)==0xff && iflash.method.byteAt(bytes,1)==0xfe)){
				start=2;
			}
			for (var i=start;i<length;++i){
				var byte=iflash.method.byteAt(bytes,i);
				if (byte==0 || byte==10 || byte==13 || byte==32)continue ;
				else return byte==wanted;
			}
			return false;
		}

		__proto.getDictionaryKeys=function(dictionary,prefix,result){
			(prefix===void 0)&& (prefix="");
			if (result==null)result=/*new vector.<>*/[];
			for (var name in dictionary)
			if (name.indexOf(prefix)==0)
				result[result.length]=name;
			result.sort(Array.CASEINSENSITIVE);
			return result;
		}

		__proto.getHttpHeader=function(headers,headerName){
			if (headers){
				var header;
				/*for each*/for(var $each_header in headers){
					header=headers[$each_header];
					if (header.name==headerName)return header.value;
				}
			}
			return null;
		}

		__proto.getBasenameFromUrl=function(url){
			var matches=AssetManager.NAME_REGEX.exec(url);
			if (matches && matches.length > 0)return matches[1];
			else return null;
		}

		__proto.getExtensionFromUrl=function(url){
			var matches=AssetManager.NAME_REGEX.exec(url);
			if (matches && matches.length > 1)return matches[2];
			else return null;
		}

		__proto.prependCallback=function(oldCallback,newCallback){
			if (oldCallback==null)return newCallback;
			else if (newCallback==null)return oldCallback;
			else return function (){
				newCallback();
				oldCallback();
			};
		}

		__getset(0,__proto,'queue',function(){return this.mQueue;});
		__getset(0,__proto,'isLoading',function(){return this.mNumLoadingQueues > 0;});
		__getset(0,__proto,'numQueuedAssets',function(){return this.mQueue.length;});
		__getset(0,__proto,'verbose',function(){return this.mVerbose;},function(value){this.mVerbose=value;});
		__getset(0,__proto,'checkPolicyFile',function(){return this.mCheckPolicyFile;},function(value){this.mCheckPolicyFile=value;});
		__getset(0,__proto,'useMipMaps',function(){return this.mDefaultTextureOptions.mipMapping;},function(value){this.mDefaultTextureOptions.mipMapping=value;});
		__getset(0,__proto,'textureRepeat',function(){return this.mDefaultTextureOptions.repeat;},function(value){this.mDefaultTextureOptions.repeat=value;});
		__getset(0,__proto,'scaleFactor',function(){return this.mDefaultTextureOptions.scale;},function(value){this.mDefaultTextureOptions.scale=value;});
		__getset(0,__proto,'textureFormat',function(){return this.mDefaultTextureOptions.format;},function(value){this.mDefaultTextureOptions.format=value;});
		__getset(0,__proto,'keepAtlasXmls',function(){return this.mKeepAtlasXmls;},function(value){this.mKeepAtlasXmls=value;});
		__getset(0,__proto,'keepFontXmls',function(){return this.mKeepFontXmls;},function(value){this.mKeepFontXmls=value;});
		__getset(0,__proto,'numConnections',function(){return this.mNumConnections;},function(value){this.mNumConnections=value;});
		AssetManager.instance=function(){
			if (AssetManager.m_assetMgr==null){
				AssetManager.m_assetMgr=new AssetManager();
			}
			return AssetManager.m_assetMgr;
		}

		AssetManager.HTTP_RESPONSE_STATUS="httpResponseStatus";
		AssetManager.m_assetMgr=null;
		__static(AssetManager,
		['sNames',function(){return this.sNames=/*new vector.<>*/[];},'NAME_REGEX',function(){return this.NAME_REGEX=new RegExp("([^\\?\\/\\\\]+?)(?:\\.([\\w\\-]+))?(?:\\?.*)?$");}
		]);
		return AssetManager;
	})(EventDispatcher1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/extensions/pdparticle.as
	//class starling.extensions.PDParticle extends starling.extensions.Particle
	var PDParticle=(function(_super){
		function PDParticle(){
			this.colorArgb=null;
			this.colorArgbDelta=null;
			this.startX=NaN;
			this.startY=NaN;
			this.velocityX=NaN;
			this.velocityY=NaN;
			this.radialAcceleration=NaN;
			this.tangentialAcceleration=NaN;
			this.emitRadius=NaN;
			this.emitRadiusDelta=NaN;
			this.emitRotation=NaN;
			this.emitRotationDelta=NaN;
			this.rotationDelta=NaN;
			this.scaleDelta=NaN;
			PDParticle.__super.call(this);
			this.colorArgb=new ColorArgb();
			this.colorArgbDelta=new ColorArgb();
		}

		__class(PDParticle,'starling.extensions.PDParticle',false,_super);
		return PDParticle;
	})(Particle)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/blurfilter.as
	//class starling.filters.BlurFilter extends starling.filters.FragmentFilter
	var BlurFilter1=(function(_super){
		function BlurFilter(blurX,blurY,resolution){
			this.mNormalProgram=null;
			this.mTintedProgram=null;
			this.mBlurX=NaN;
			this.mBlurY=NaN;
			this.mUniformColor=false;
			this.mOffsets=/*new vector.<>*/[0,0,0,0];
			this.mWeights=/*new vector.<>*/[0,0,0,0];
			this.mColor=/*new vector.<>*/[1,1,1,1];
			this.sTmpWeights=__newvec(5,0);
			(blurX===void 0)&& (blurX=1);
			(blurY===void 0)&& (blurY=1);
			(resolution===void 0)&& (resolution=1);
			BlurFilter.__super.call(this,1,resolution);
			this.mBlurX=blurX;
			this.mBlurY=blurY;
			this.updateMarginsAndPasses();
		}

		__class(BlurFilter,'starling.filters.BlurFilter',false,_super,'BlurFilter1');
		var __proto=BlurFilter.prototype;
		__proto.createPrograms=function(){
			this.mNormalProgram=this.createProgram(false);
			this.mTintedProgram=this.createProgram(true);
		}

		__proto.createProgram=function(tinted){
			var programName=tinted ? "BF_t" :"BF_n";
			var target=Starling.current;
			if (target.hasProgram(programName))
				return target.getProgram(programName);
			var vertexShader=GLSL_ShaderList.shader.BF_VS;
			var fragmentShader=tinted ? GLSL_ShaderList.shader.BF_FS_TINTED :GLSL_ShaderList.shader.BF_FS;
			return target.registerProgramFromSource(programName,vertexShader,fragmentShader);
		}

		__proto.activate=function(pass,context,texture){
			this.updateParameters(pass,texture.nativeWidth,texture.nativeHeight);
			if (this.mUniformColor && pass==this.numPasses-1){
				context.setProgram(this.mTintedProgram);
			}
			else{
				context.setProgram(this.mNormalProgram);
			};
			var local;
			local=context.m_currentProgram.getUniformLocation("u_kernel_offset");
			if(local !=null){
				context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",local,this.mOffsets);
				local=null;
			}
			local=context.m_currentProgram.getUniformLocation("u_weight");
			if(local !=null){
				context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",local,this.mWeights);
				local=null;
			}
			if (this.mUniformColor && pass==this.numPasses-1){
				local=context.m_currentProgram.getUniformLocation("u_color");
				if(local !=null){
					context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",local,this.mColor);
					local=null;
				}
			};
			var local=context.m_currentProgram.getUniformLocation("u_flipY");
			if(local !=null){
				var t_flip=1.0;
				if (pass !=(this.numPasses-1)){
					t_flip=-1.0;
				}
				context.webglContext.uniform1f(local,t_flip);
				local=null;
			}
		}

		__proto.updateParameters=function(pass,textureWidth,textureHeight){
			var sigma=NaN;
			var horizontal=pass < this.mBlurX;
			var pixelSize=NaN;
			if (horizontal){
				sigma=Math.min(1.0,this.mBlurX-pass)*2.0;
				pixelSize=1.0 / textureWidth;
			}
			else{
				sigma=Math.min(1.0,this.mBlurY-(pass-Math.ceil(this.mBlurX)))*2.0;
				pixelSize=1.0 / textureHeight;
			};
			var twoSigmaSq=2 *sigma *sigma;
			var multiplier=1.0 / Math.sqrt(twoSigmaSq *Math.PI);
			for (var i=0;i<5;++i)
			this.sTmpWeights[i]=multiplier *Math.exp(-i*i / twoSigmaSq);
			this.mWeights[0]=this.sTmpWeights[0];
			this.mWeights[1]=this.sTmpWeights[1]+this.sTmpWeights[2];
			this.mWeights[2]=this.sTmpWeights[3]+this.sTmpWeights[4];
			var weightSum=this.mWeights[0]+2*this.mWeights[1]+2*this.mWeights[2];
			var invWeightSum=1.0 / weightSum;
			this.mWeights[0] *=invWeightSum;
			this.mWeights[1] *=invWeightSum;
			this.mWeights[2] *=invWeightSum;
			var offset1=(pixelSize *this.sTmpWeights[1]+2*pixelSize *this.sTmpWeights[2])/ this.mWeights[1];
			var offset2=(3*pixelSize *this.sTmpWeights[3]+4*pixelSize *this.sTmpWeights[4])/ this.mWeights[2];
			if (horizontal){
				this.mOffsets[0]=offset1;
				this.mOffsets[1]=0;
				this.mOffsets[2]=offset2;
				this.mOffsets[3]=0;
			}
			else{
				this.mOffsets[0]=0;
				this.mOffsets[1]=offset1;
				this.mOffsets[2]=0;
				this.mOffsets[3]=offset2;
			}
		}

		__proto.updateMarginsAndPasses=function(){
			if (this.mBlurX==0 && this.mBlurY==0)this.mBlurX=0.001;
			this.numPasses=Math.ceil(this.mBlurX)+Math.ceil(this.mBlurY);
			this.marginX=(3+Math.ceil(this.mBlurX))/ this.resolution;
			this.marginY=(3+Math.ceil(this.mBlurY))/ this.resolution;
		}

		__proto.setUniformColor=function(enable,color,alpha){
			(color===void 0)&& (color=0x0);
			(alpha===void 0)&& (alpha=1.0);
			this.mColor[0]=Color.getRed(color)/ 255.0;
			this.mColor[1]=Color.getGreen(color)/ 255.0;
			this.mColor[2]=Color.getBlue(color)/ 255.0;
			this.mColor[3]=alpha;
			this.mUniformColor=enable;
		}

		__getset(0,__proto,'blurX',function(){return this.mBlurX;},function(value){
			this.mBlurX=value;
			this.updateMarginsAndPasses();
		});

		__getset(0,__proto,'blurY',function(){return this.mBlurY;},function(value){
			this.mBlurY=value;
			this.updateMarginsAndPasses();
		});

		BlurFilter.createDropShadow=function(distance,angle,color,alpha,blur,resolution){
			(distance===void 0)&& (distance=4.0);
			(angle===void 0)&& (angle=0.785);
			(color===void 0)&& (color=0x0);
			(alpha===void 0)&& (alpha=0.5);
			(blur===void 0)&& (blur=1.0);
			(resolution===void 0)&& (resolution=0.5);
			var dropShadow=new BlurFilter(blur,blur,resolution);
			dropShadow.offsetX=Math.cos(angle)*distance;
			dropShadow.offsetY=Math.sin(angle)*distance;
			dropShadow.mode=/*starling.filters.FragmentFilterMode.BELOW*/"below";
			dropShadow.setUniformColor(true,color,alpha);
			return dropShadow;
		}

		BlurFilter.createGlow=function(color,alpha,blur,resolution){
			(color===void 0)&& (color=0xffff00);
			(alpha===void 0)&& (alpha=1.0);
			(blur===void 0)&& (blur=1.0);
			(resolution===void 0)&& (resolution=0.5);
			var glow=new BlurFilter(blur,blur,resolution);
			glow.mode=/*starling.filters.FragmentFilterMode.BELOW*/"below";
			glow.setUniformColor(true,color,alpha);
			return glow;
		}

		BlurFilter.NORMAL_PROGRAM_NAME="BF_n";
		BlurFilter.TINTED_PROGRAM_NAME="BF_t";
		BlurFilter.MAX_SIGMA=2.0;
		return BlurFilter;
	})(FragmentFilter)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/colormatrixfilter.as
	//class starling.filters.ColorMatrixFilter extends starling.filters.FragmentFilter
	var ColorMatrixFilter1=(function(_super){
		function ColorMatrixFilter(matrix){
			this.mShaderProgram=null;
			this.mUserMatrix=null;
			this.mShaderMatrix=null;
			ColorMatrixFilter.__super.call(this);
			this.mUserMatrix=/*new vector.<>*/[];
			this.mShaderMatrix=/*new vector.<>*/[];
			this.matrix=matrix;
		}

		__class(ColorMatrixFilter,'starling.filters.ColorMatrixFilter',false,_super,'ColorMatrixFilter1');
		var __proto=ColorMatrixFilter.prototype;
		__proto.createPrograms=function(){
			var target=Starling.current;
			if (target.hasProgram("CMF")){
				this.mShaderProgram=target.getProgram("CMF");
			}
			else{
				var fragmentShader=GLSL_ShaderList.shader.CLR_MAT_FLT_FS;
				this.mShaderProgram=target.registerProgramFromSource("CMF",GLSL_ShaderList.shader.FRA_FLT_STD_VS,fragmentShader);
			}
		}

		__proto.activate=function(pass,context,texture){
			context.setProgram(this.mShaderProgram);
			var loc;
			loc=context.m_currentProgram.getUniformLocation("u_color_matrix");
			var t_vec=__newvec(16,0);
			for (var t_i=0;t_i < 16;t_i++){
				t_vec[t_i]=this.mShaderMatrix[t_i];
			};
			var t_mat=new Matrix3D(t_vec);
			context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",loc,t_mat,true);
			loc=context.m_currentProgram.getUniformLocation("u_offset");
			var t_vec4=__newvec(4,0);
			t_vec4[0]=this.mShaderMatrix[16];
			t_vec4[1]=this.mShaderMatrix[17];
			t_vec4[2]=this.mShaderMatrix[18];
			t_vec4[3]=this.mShaderMatrix[19];
			context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",loc,t_vec4);
			loc=context.m_currentProgram.getUniformLocation("u_minimal_color")
			context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",loc,ColorMatrixFilter.MIN_COLOR);
		}

		__proto.invert=function(){
			return this.concatValues(-1,0,0,0,255,
			0,-1,0,0,255,
			0,0,-1,0,255,
			0,0,0,1,0);
		}

		__proto.adjustSaturation=function(sat){
			sat+=1;
			var invSat=1-sat;
			var invLumR=invSat *0.3333;
			var invLumG=invSat *0.3333;
			var invLumB=invSat *0.3333;
			return this.concatValues((invLumR+sat),invLumG,invLumB,0,0,
			invLumR,(invLumG+sat),invLumB,0,0,
			invLumR,invLumG,(invLumB+sat),0,0,
			0,0,0,1,0);
		}

		__proto.adjustContrast=function(value){
			var s=value+1;
			var o=128 *(1-s);
			return this.concatValues(s,0,0,0,o,
			0,s,0,0,o,
			0,0,s,0,o,
			0,0,0,1,0);
		}

		__proto.adjustBrightness=function(value){
			value *=255;
			return this.concatValues(1,0,0,0,value,
			0,1,0,0,value,
			0,0,1,0,value,
			0,0,0,1,0);
		}

		__proto.adjustHue=function(value){
			value *=Math.PI;
			var cos=Math.cos(value);
			var sin=Math.sin(value);
			return this.concatValues(
			((0.3333+(cos *(1-0.3333)))+(sin *-(0.3333))),((0.3333+(cos *-(0.3333)))+(sin *-(0.3333))),((0.3333+(cos *-(0.3333)))+(sin *(1-0.3333))),0,0,
			((0.3333+(cos *-(0.3333)))+(sin *0.143)),((0.3333+(cos *(1-0.3333)))+(sin *0.14)),((0.3333+(cos *-(0.3333)))+(sin *-0.283)),0,0,
			((0.3333+(cos *-(0.3333)))+(sin *-((1-0.3333)))),((0.3333+(cos *-(0.3333)))+(sin *0.3333)),((0.3333+(cos *(1-0.3333)))+(sin *0.3333)),0,0,
			0,0,0,1,0);
		}

		__proto.tint=function(color,amount){
			(amount===void 0)&& (amount=1.0);
			var r=Color.getRed(color)/ 255.0;
			var g=Color.getGreen(color)/ 255.0;
			var b=Color.getBlue(color)/ 255.0;
			var q=1-amount;
			var rA=amount *r;
			var gA=amount *g;
			var bA=amount *b;
			return this.concatValues(
			q+rA *0.3333,rA *0.3333,rA *0.3333,0,0,
			gA *0.3333,q+gA *0.3333,gA *0.3333,0,0,
			bA *0.3333,bA *0.3333,q+bA *0.3333,0,0,
			0,0,0,1,0);
		}

		__proto.reset=function(){
			this.matrix=null;
			return this;
		}

		__proto.concat=function(matrix){
			var i=0;
			for (var y=0;y<4;++y){
				for (var x=0;x<5;++x){
					ColorMatrixFilter.sTmpMatrix1[int(i+x)]=
					matrix[i] *this.mUserMatrix[x]+
					matrix[int(i+1)] *this.mUserMatrix[int(x+5)]+
					matrix[int(i+2)] *this.mUserMatrix[int(x+10)]+
					matrix[int(i+3)] *this.mUserMatrix[int(x+15)]+
					(x==4 ? matrix[int(i+4)] :0);
				}
				i+=5;
			}
			this.copyMatrix(ColorMatrixFilter.sTmpMatrix1,this.mUserMatrix);
			this.updateShaderMatrix();
			return this;
		}

		__proto.concatValues=function(m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19){
			ColorMatrixFilter.sTmpMatrix2.length=0;
			ColorMatrixFilter.sTmpMatrix2.push(m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,
			m10,m11,m12,m13,m14,m15,m16,m17,m18,m19);
			this.concat(ColorMatrixFilter.sTmpMatrix2);
			return this;
		}

		__proto.copyMatrix=function(from,to){
			for (var i=0;i<20;++i)
			to[i]=from[i];
		}

		__proto.updateShaderMatrix=function(){
			this.mShaderMatrix.length=0;
			this.mShaderMatrix.push(
			this.mUserMatrix[0],this.mUserMatrix[1],this.mUserMatrix[2],this.mUserMatrix[3],
			this.mUserMatrix[5],this.mUserMatrix[6],this.mUserMatrix[7],this.mUserMatrix[8],
			this.mUserMatrix[10],this.mUserMatrix[11],this.mUserMatrix[12],this.mUserMatrix[13],
			this.mUserMatrix[15],this.mUserMatrix[16],this.mUserMatrix[17],this.mUserMatrix[18],
			this.mUserMatrix[4] / 255.0,this.mUserMatrix[9] / 255.0,this.mUserMatrix[14] / 255.0,
			this.mUserMatrix[19] / 255.0);
		}

		__getset(0,__proto,'matrix',function(){return this.mUserMatrix;},function(value){
			if (value && value.length !=20)
				throw new Error("Invalid matrix length: must be 20");
			if (value==null){
				this.mUserMatrix.length=0;
				this.mUserMatrix.push.apply(this.mUserMatrix,ColorMatrixFilter.IDENTITY);
			}
			else{
				this.copyMatrix(value,this.mUserMatrix);
			}
			this.updateShaderMatrix();
		});

		ColorMatrixFilter.PROGRAM_NAME="CMF";
		ColorMatrixFilter.LUMA_R=0.3333;
		ColorMatrixFilter.LUMA_G=0.3333;
		ColorMatrixFilter.LUMA_B=0.3333;
		__static(ColorMatrixFilter,
		['MIN_COLOR',function(){return this.MIN_COLOR=/*new vector.<>*/[0,0,0,0.0001];},'IDENTITY',function(){return this.IDENTITY=[1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0];},'sTmpMatrix1',function(){return this.sTmpMatrix1=__newvec(20,0);},'sTmpMatrix2',function(){return this.sTmpMatrix2=/*new vector.<>*/[];}
		]);
		return ColorMatrixFilter;
	})(FragmentFilter)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/displacementmapfilter.as
	//class starling.filters.DisplacementMapFilter extends starling.filters.FragmentFilter
	var DisplacementMapFilter1=(function(_super){
		function DisplacementMapFilter(mapTexture,mapPoint,componentX,componentY,scaleX,scaleY,repeat){
			this.mMapTexture=null;
			this.mMapPoint=null;
			this.mComponentX=0;
			this.mComponentY=0;
			this.mScaleX=NaN;
			this.mScaleY=NaN;
			this.mRepeat=false;
			this.mShaderProgram=null;
			this.mMapTexCoordBuffer=null;
			(componentX===void 0)&& (componentX=0);
			(componentY===void 0)&& (componentY=0);
			(scaleX===void 0)&& (scaleX=0.0);
			(scaleY===void 0)&& (scaleY=0.0);
			(repeat===void 0)&& (repeat=false);
			this.mMapTexture=mapTexture;
			this.mMapPoint=new Point();
			this.mComponentX=componentX;
			this.mComponentY=componentY;
			this.mScaleX=scaleX;
			this.mScaleY=scaleY;
			this.mRepeat=repeat;
			this.mapPoint=mapPoint;
			DisplacementMapFilter.__super.call(this);
		}

		__class(DisplacementMapFilter,'starling.filters.DisplacementMapFilter',false,_super,'DisplacementMapFilter1');
		var __proto=DisplacementMapFilter.prototype;
		__proto.dispose=function(){
			if (this.mMapTexCoordBuffer)this.mMapTexCoordBuffer.dispose();
			_super.prototype.dispose.call(this);
		}

		__proto.createPrograms=function(){
			if (this.mMapTexCoordBuffer)this.mMapTexCoordBuffer.dispose();
			this.mMapTexCoordBuffer=Starling.context.createVertexBuffer(4,2);
			var target=Starling.current;
			var mapFlags=RenderSupport.getTextureLookupFlags(
			this.mapTexture.format,this.mapTexture.mipMapping,this.mapTexture.repeat);
			var inputFlags=RenderSupport.getTextureLookupFlags(
			/*iflash.display3D.Context3DTextureFormat.BGRA*/"bgra",false,this.mRepeat);
			var programName=starling.utils.formatString("DMF_m{0}_i{1}",mapFlags,inputFlags);
			if (target.hasProgram(programName)){
				this.mShaderProgram=target.getProgram(programName);
			}
			else{
				var vertexShader=GLSL_ShaderList.shader.DPM_MAP_FLT_VS;
				var fragmentShader=GLSL_ShaderList.shader.DPM_MAP_FLT_FS;
				this.mShaderProgram=target.registerProgramFromSource(programName,
				vertexShader,fragmentShader);
			}
		}

		__proto.activate=function(pass,context,texture){
			this.updateParameters(texture.nativeWidth,texture.nativeHeight);
			context.setVertexBufferAt(2,this.mMapTexCoordBuffer,0,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
			context.setTextureAt(1,this.mMapTexture.base);
			context.setProgram(this.mShaderProgram);
			var loc=null;
			loc=context.m_currentProgram.getUniformLocation("u_one_half");
			if(loc !=null)context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",loc,DisplacementMapFilter.sOneHalf);
			loc=context.m_currentProgram.getUniformLocation("u_color_matrix");
			if(loc !=null)context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.FRAGMENT*/"fragment",loc,DisplacementMapFilter.sMatrix,true);
			loc=context.m_currentProgram.getUniformLocation("u_tex_01");
			if (loc !=null)context.webglContext.uniform1i(loc,1);
			loc=context.m_currentProgram.getUniformLocation("u_tex_00");
			if (loc !=null)context.webglContext.uniform1i(loc,0);
		}

		__proto.deactivate=function(pass,context,texture){
			context.setVertexBufferAt(2,null);
			context.setTextureAt(1,null);
		}

		__proto.updateParameters=function(textureWidth,textureHeight){
			var scale=Starling.contentScaleFactor;
			var columnX=0,columnY=0;
			for (var i=0;i<16;++i)
			DisplacementMapFilter.sMatrixData[i]=0;
			if (this.mComponentX==/*iflash.display.BitmapDataChannel.RED*/1)columnX=0;
			else if (this.mComponentX==/*iflash.display.BitmapDataChannel.GREEN*/2)columnX=1;
			else if (this.mComponentX==/*iflash.display.BitmapDataChannel.BLUE*/4)columnX=2;
			else columnX=3;
			if (this.mComponentY==/*iflash.display.BitmapDataChannel.RED*/1)columnY=0;
			else if (this.mComponentY==/*iflash.display.BitmapDataChannel.GREEN*/2)columnY=1;
			else if (this.mComponentY==/*iflash.display.BitmapDataChannel.BLUE*/4)columnY=2;
			else columnY=3;
			DisplacementMapFilter.sMatrixData[int(columnX *4)]=this.mScaleX *scale / textureWidth;
			DisplacementMapFilter.sMatrixData[int(columnY *4+1)]=this.mScaleY *scale / textureHeight;
			DisplacementMapFilter.sMatrix.copyRawDataFrom(DisplacementMapFilter.sMatrixData);
			var mapX=this.mMapPoint.x / this.mapTexture.width;
			var mapY=this.mMapPoint.y / this.mapTexture.height;
			var maxU=textureWidth / (this.mapTexture.width *scale);
			var maxV=textureHeight / (this.mapTexture.height *scale);
			DisplacementMapFilter.sMapTexCoords[0]=-mapX;DisplacementMapFilter.sMapTexCoords[1]=-mapY;
			DisplacementMapFilter.sMapTexCoords[2]=-mapX+maxU;DisplacementMapFilter.sMapTexCoords[3]=-mapY;
			DisplacementMapFilter.sMapTexCoords[4]=-mapX;DisplacementMapFilter.sMapTexCoords[5]=-mapY+maxV;
			DisplacementMapFilter.sMapTexCoords[6]=-mapX+maxU;DisplacementMapFilter.sMapTexCoords[7]=-mapY+maxV;
			this.mMapTexture.adjustTexCoords(DisplacementMapFilter.sMapTexCoords);
			this.mMapTexCoordBuffer.uploadFromVector(DisplacementMapFilter.sMapTexCoords,0,4);
		}

		__getset(0,__proto,'componentX',function(){return this.mComponentX;},function(value){this.mComponentX=value;});
		__getset(0,__proto,'componentY',function(){return this.mComponentY;},function(value){this.mComponentY=value;});
		__getset(0,__proto,'scaleX',function(){return this.mScaleX;},function(value){this.mScaleX=value;});
		__getset(0,__proto,'scaleY',function(){return this.mScaleY;},function(value){this.mScaleY=value;});
		__getset(0,__proto,'mapTexture',function(){return this.mMapTexture;},function(value){
			if (this.mMapTexture !=value){
				this.mMapTexture=value;
				this.createPrograms();
			}
		});

		__getset(0,__proto,'mapPoint',function(){return this.mMapPoint;},function(value){
			if (value)this.mMapPoint.setTo(value.x,value.y);
			else this.mMapPoint.setTo(0,0);
		});

		__getset(0,__proto,'repeat',function(){return this.mRepeat;},function(value){
			if (this.mRepeat !=value){
				this.mRepeat=value;
				this.createPrograms();
			}
		});

		__static(DisplacementMapFilter,
		['sOneHalf',function(){return this.sOneHalf=/*new vector.<>*/[0.5,0.5,0.5,0.5];},'sMapTexCoords',function(){return this.sMapTexCoords=/*new vector.<>*/[0,0,1,0,0,1,1,1];},'sMatrix',function(){return this.sMatrix=new Matrix3D();},'sMatrixData',function(){return this.sMatrixData=
			/*new vector.<>*/[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];}
		]);
		return DisplacementMapFilter;
	})(FragmentFilter)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/geom/ellipse.as
	//class starling.geom.Ellipse extends starling.geom.Polygon
	var Ellipse=(function(_super){
		function Ellipse(x,y,radiusX,radiusY,numSides){
			this.mX=NaN;
			this.mY=NaN;
			this.mRadiusX=NaN;
			this.mRadiusY=NaN;
			(numSides===void 0)&& (numSides=-1);
			this.mX=x;
			this.mY=y;
			this.mRadiusX=radiusX;
			this.mRadiusY=radiusY;
			Ellipse.__super.call(this,this.getVertices(numSides));
		}

		__class(Ellipse,'starling.geom.Ellipse',false,_super);
		var __proto=Ellipse.prototype;
		__proto.getVertices=function(numSides){
			if (numSides < 0)numSides=Math.PI *(this.mRadiusX+this.mRadiusY)/ 4.0;
			if (numSides < 6)numSides=6;
			var vertices=[];
			var angleDelta=2 *Math.PI / numSides;
			var angle=0;
			for (var i=0;i<numSides;++i){
				vertices[i *2]=Math.cos(angle)*this.mRadiusX+this.mX;
				vertices[i *2+1]=Math.sin(angle)*this.mRadiusY+this.mY;
				angle+=angleDelta;
			}
			return vertices;
		}

		__proto.triangulate=function(result){
			if (result==null)result=/*new vector.<>*/[];
			var from=1;
			var to=this.numVertices-1;
			var pos=result.length;
			for (var i=from;i<to;++i){
				result[pos++]=0;
				result[pos++]=i;
				result[pos++]=i+1;
			}
			return result;
		}

		__proto.contains=function(x,y){
			var vx=x-this.mX;
			var vy=y-this.mY;
			var a=vx / this.mRadiusX;
			var b=vy / this.mRadiusY;
			return a *a+b *b <=1;
		}

		__getset(0,__proto,'area',function(){
			return Math.PI *this.mRadiusX *this.mRadiusY;
		});

		__getset(0,__proto,'isSimple',function(){
			return true;
		});

		__getset(0,__proto,'isConvex',function(){
			return true;
		});

		return Ellipse;
	})(Polygon)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/geom/immutablepolygon.as
	//class starling.geom.ImmutablePolygon extends starling.geom.Polygon
	var ImmutablePolygon=(function(_super){
		function ImmutablePolygon(vertices){
			this.mFrozen=false;
			ImmutablePolygon.__super.call(this,vertices);
			this.mFrozen=true;
		}

		__class(ImmutablePolygon,'starling.geom.ImmutablePolygon',false,_super);
		return ImmutablePolygon;
	})(Polygon)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/geom/srectangle.as
	//class starling.geom.sRectangle extends starling.geom.Polygon
	var sRectangle=(function(_super){
		function sRectangle(x,y,width,height){
			this.mX=NaN;
			this.mY=NaN;
			this.mWidth=NaN;
			this.mHeight=NaN;
			this.mX=x;
			this.mY=y;
			this.mWidth=width;
			this.mHeight=height;
			sRectangle.__super.call(this,[x,y,x+width,y,x+width,y+height,x,y+height]);
		}

		__class(sRectangle,'starling.geom.sRectangle',false,_super);
		var __proto=sRectangle.prototype;
		__proto.triangulate=function(result){
			if (result==null)result=/*new vector.<>*/[];
			result.push(0,1,3,1,2,3);
			return result;
		}

		__proto.contains=function(x,y){
			return x >=this.mX && x <=this.mX+this.mWidth &&
			y >=this.mY && y <=this.mY+this.mHeight;
		}

		__getset(0,__proto,'area',function(){
			return this.mWidth *this.mHeight;
		});

		__getset(0,__proto,'isSimple',function(){
			return true;
		});

		__getset(0,__proto,'isConvex',function(){
			return true;
		});

		return sRectangle;
	})(Polygon)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/concretetexture.as
	//class starling.textures.ConcreteTexture extends starling.textures.Texture
	var ConcreteTexture=(function(_super){
		function ConcreteTexture(base,format,width,height,mipMapping,premultipliedAlpha,optimizedForRenderTexture,scale,repeat){
			this.mBase=null;
			this.mFormat=null;
			this.mWidth=0;
			this.mHeight=0;
			this.mMipMapping=false;
			this.mPremultipliedAlpha=false;
			this.mOptimizedForRenderTexture=false;
			this.mScale=NaN;
			this.mRepeat=false;
			this.mOnRestore=null;
			this.mDataUploaded=false;
			this.mTextureReadyCallback=null;
			ConcreteTexture.__super.call(this);
			(optimizedForRenderTexture===void 0)&& (optimizedForRenderTexture=false);
			(scale===void 0)&& (scale=1);
			(repeat===void 0)&& (repeat=false);
			this.mScale=scale <=0 ? 1.0 :scale;
			this.mBase=base;
			this.mFormat=format;
			this.mWidth=width;
			this.mHeight=height;
			this.mMipMapping=mipMapping;
			this.mPremultipliedAlpha=premultipliedAlpha;
			this.mOptimizedForRenderTexture=optimizedForRenderTexture;
			this.mRepeat=repeat;
			this.mOnRestore=null;
			this.mDataUploaded=false;
			this.mTextureReadyCallback=null;
		}

		__class(ConcreteTexture,'starling.textures.ConcreteTexture',false,_super);
		var __proto=ConcreteTexture.prototype;
		__proto.dispose=function(){
			if (this.mBase){
				this.mBase.removeEventListener("textureReady",__bind(this,this.onTextureReady));
				this.mBase.dispose();
			}
			this.onRestore=null;
			_super.prototype.dispose.call(this);
		}

		__proto.uploadBitmap=function(bitmap){
			this.uploadBitmapData(bitmap.bitmapData);
		}

		__proto.uploadBitmapData=function(data){
			if ((data instanceof iflash.display.BitmapData ))
				data=data.getCanvas();
			if ((this.mBase instanceof iflash.display3D.textures.Texture )){
				var potTexture=this.mBase;
				potTexture.uploadFromBitmapData(data);
				if (this.mMipMapping && data.width > 1 && data.height > 1){
					var gl=Starling.context.webglContext;
					gl.bindTexture(gl.TEXTURE_2D,potTexture.m_texID);
					gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR_MIPMAP_NEAREST);
					gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);
					gl.generateMipmap(gl.TEXTURE_2D);
					gl.bindTexture(gl.TEXTURE_2D,null);
				}
			}
			else{
				this.mBase["uploadFromBitmapData"](data);
			}
			this.mDataUploaded=true;
		}

		__proto.uploadAtfData=function(data,offset,async){
			(offset===void 0)&& (offset=0);
			var isAsync=(typeof async=='function')|| async==true;
			var potTexture=this.mBase;
			if (potTexture==null)
				throw new Error("This texture type does not support ATF data");
			if ((typeof async=='function')){
				this.mTextureReadyCallback=async;
				this.mBase.addEventListener("textureReady",__bind(this,this.onTextureReady));
			}
			potTexture.uploadCompressedTextureFromByteArray(data,offset,isAsync);
			this.mDataUploaded=true;
		}

		__proto.attachNetStream=function(netStream,onComplete){
			this.attachVideo("NetStream",netStream,onComplete);
		}

		__proto.attachCamera=function(camera,onComplete){
			this.attachVideo("Camera",camera,onComplete);
		}

		__proto.attachVideo=function(type,attachment,onComplete){
			var className=iflash.utils.getQualifiedClassName(this.mBase);
			if (className=="flash.display3D.textures::VideoTexture"){
				this.mDataUploaded=true;
				this.mTextureReadyCallback=onComplete;
				this.mBase["attach"+type](attachment);
				this.mBase.addEventListener("textureReady",__bind(this,this.onTextureReady));
			}
			else throw new Error("This texture type does not support "+type+" data");
		}

		__proto.onTextureReady=function(event){
			this.mBase.removeEventListener("textureReady",__bind(this,this.onTextureReady));
			starling.utils.execute(this.mTextureReadyCallback,this);
			this.mTextureReadyCallback=null;
		}

		__proto.onContextCreated=function(){
			this.createBase();
			if (this.mOnRestore !=null)this.mOnRestore();
			if (!this.mDataUploaded)this.clear();
		}

		__proto.createBase=function(){
			var context=Starling.context;
			var className=iflash.utils.getQualifiedClassName(this.mBase);
			if (className=="flash.display3D.textures::Texture")
				this.mBase=context.createTexture(this.mWidth,this.mHeight,this.mFormat,
			this.mOptimizedForRenderTexture);
			else if (className=="flash.display3D.textures::RectangleTexture")
			this.mBase=context["createRectangleTexture"](this.mWidth,this.mHeight,this.mFormat,
			this.mOptimizedForRenderTexture);
			else if (className=="flash.display3D.textures::VideoTexture")
			this.mBase=context["createVideoTexture"]();
			else
			throw new NotSupportedError("Texture type not supported: "+className);
			this.mDataUploaded=false;
		}

		__proto.clear=function(color,alpha){
			(color===void 0)&& (color=0x0);
			(alpha===void 0)&& (alpha=0.0);
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			if (this.mPremultipliedAlpha && alpha < 1.0)
				color=Color.rgb(Color.getRed(color)*alpha,
			Color.getGreen(color)*alpha,
			Color.getBlue(color)*alpha);
			context.setRenderToTexture(this.mBase);
			try {RenderSupport.clear(color,alpha);}
			catch (e){}
			context.setRenderToBackBuffer();
			this.mDataUploaded=true;
		}

		__getset(0,__proto,'base',function(){return this.mBase;});
		__getset(0,__proto,'nativeWidth',function(){return this.mWidth;});
		__getset(0,__proto,'optimizedForRenderTexture',function(){return this.mOptimizedForRenderTexture;});
		__getset(0,__proto,'height',function(){return this.mHeight / this.mScale;});
		__getset(0,__proto,'onRestore',function(){return this.mOnRestore;},function(value){
			if (Starling.handleLostContext && value !=null){
				this.mOnRestore=value;
			}
			else this.mOnRestore=null;
		});

		__getset(0,__proto,'root',function(){return this;});
		__getset(0,__proto,'format',function(){return this.mFormat;});
		__getset(0,__proto,'scale',function(){return this.mScale;});
		__getset(0,__proto,'width',function(){return this.mWidth / this.mScale;});
		__getset(0,__proto,'nativeHeight',function(){return this.mHeight;});
		__getset(0,__proto,'mipMapping',function(){return this.mMipMapping;});
		__getset(0,__proto,'premultipliedAlpha',function(){return this.mPremultipliedAlpha;});
		__getset(0,__proto,'repeat',function(){return this.mRepeat;});
		ConcreteTexture.TEXTURE_READY="textureReady";
		__static(ConcreteTexture,
		['sOrigin',function(){return this.sOrigin=new Point();}
		]);
		return ConcreteTexture;
	})(Texture1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/subtexture.as
	//class starling.textures.SubTexture extends starling.textures.Texture
	var SubTexture=(function(_super){
		function SubTexture(parent,region,ownsParent,frame,rotated){
			this.mParent=null;
			this.mOwnsParent=false;
			this.mRegion=null;
			this.mFrame=null;
			this.mRotated=false;
			this.mWidth=NaN;
			this.mHeight=NaN;
			this.mTransformationMatrix=null;
			SubTexture.__super.call(this);
			(ownsParent===void 0)&& (ownsParent=false);
			(rotated===void 0)&& (rotated=false);
			this.mParent=parent;
			this.mRegion=region ? region.clone():new Rectangle(0,0,parent.width,parent.height);
			this.mFrame=frame ? frame.clone():null;
			this.mOwnsParent=ownsParent;
			this.mRotated=rotated;
			this.mWidth=rotated ? this.mRegion.height :this.mRegion.width;
			this.mHeight=rotated ? this.mRegion.width :this.mRegion.height;
			this.mTransformationMatrix=new Matrix();
			if (rotated){
				this.mTransformationMatrix.translate(0,-1);
				this.mTransformationMatrix.rotate(Math.PI / 2.0);
			}
			if (this.mFrame && (this.mFrame.x > 0 || this.mFrame.y > 0 ||
				this.mFrame.right < this.mWidth || this.mFrame.bottom < this.mHeight)){
				console.log("[Starling] Warning: frames inside the texture's region are unsupported.");
			}
			this.mTransformationMatrix.scale(this.mRegion.width / this.mParent.width,
			this.mRegion.height / this.mParent.height);
			this.mTransformationMatrix.translate(this.mRegion.x / this.mParent.width,
			this.mRegion.y / this.mParent.height);
		}

		__class(SubTexture,'starling.textures.SubTexture',false,_super);
		var __proto=SubTexture.prototype;
		__proto.dispose=function(){
			if (this.mOwnsParent)this.mParent.dispose();
			_super.prototype.dispose.call(this);
		}

		__proto.adjustVertexData=function(vertexData,vertexID,count){
			var startIndex=vertexID */*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8+/*starling.utils.VertexData.TEXCOORD_OFFSET*/6;
			var stride=/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8-2;
			this.adjustTexCoords(vertexData.rawData,startIndex,stride,count);
			if (this.mFrame){
				if (count !=4)
					throw new Error("Textures with a frame can only be used on quads");
				var deltaRight=this.mFrame.width+this.mFrame.x-this.mWidth;
				var deltaBottom=this.mFrame.height+this.mFrame.y-this.mHeight;
				vertexData.translateVertex(vertexID,-this.mFrame.x,-this.mFrame.y);
				vertexData.translateVertex(vertexID+1,-deltaRight,-this.mFrame.y);
				vertexData.translateVertex(vertexID+2,-this.mFrame.x,-deltaBottom);
				vertexData.translateVertex(vertexID+3,-deltaRight,-deltaBottom);
			}
		}

		__proto.adjustTexCoords=function(texCoords,startIndex,stride,count){
			(startIndex===void 0)&& (startIndex=0);
			(stride===void 0)&& (stride=0);
			(count===void 0)&& (count=-1);
			if (count < 0)
				count=(texCoords.length-startIndex-2)/ (stride+2)+1;
			var endIndex=startIndex+count *(2+stride);
			var texture=this;
			var u=NaN,v=NaN;
			SubTexture.sMatrix.identity();
			while (texture){
				SubTexture.sMatrix.concat(texture.mTransformationMatrix);
				texture=iflash.method.typeAs(texture.parent,SubTexture);
			}
			for (var i=startIndex;i<endIndex;i+=2+stride){
				u=texCoords[ i];
				v=texCoords[int(i+1)];
				MatrixUtil1.transformCoords(SubTexture.sMatrix,u,v,SubTexture.sTexCoords);
				texCoords[ i]=SubTexture.sTexCoords.x;
				texCoords[int(i+1)]=SubTexture.sTexCoords.y;
			}
		}

		__getset(0,__proto,'base',function(){return this.mParent.base;});
		__getset(0,__proto,'region',function(){return this.mRegion;});
		__getset(0,__proto,'parent',function(){return this.mParent;});
		__getset(0,__proto,'ownsParent',function(){return this.mOwnsParent;});
		__getset(0,__proto,'rotated',function(){return this.mRotated;});
		__getset(0,__proto,'clipping',function(){
			var topLeft=new Point();
			var bottomRight=new Point();
			MatrixUtil1.transformCoords(this.mTransformationMatrix,0.0,0.0,topLeft);
			MatrixUtil1.transformCoords(this.mTransformationMatrix,1.0,1.0,bottomRight);
			var clipping=new Rectangle(topLeft.x,topLeft.y,
			bottomRight.x-topLeft.x,bottomRight.y-topLeft.y);
			RectangleUtil.normalize(clipping);
			return clipping;
		});

		__getset(0,__proto,'transformationMatrix',function(){return this.mTransformationMatrix;});
		__getset(0,__proto,'root',function(){return this.mParent.root;});
		__getset(0,__proto,'format',function(){return this.mParent.format;});
		__getset(0,__proto,'scale',function(){return this.mParent.scale;});
		__getset(0,__proto,'width',function(){return this.mWidth;});
		__getset(0,__proto,'height',function(){return this.mHeight;});
		__getset(0,__proto,'nativeWidth',function(){return this.mWidth *this.scale;});
		__getset(0,__proto,'nativeHeight',function(){return this.mHeight *this.scale;});
		__getset(0,__proto,'mipMapping',function(){return this.mParent.mipMapping;});
		__getset(0,__proto,'premultipliedAlpha',function(){return this.mParent.premultipliedAlpha;});
		__getset(0,__proto,'repeat',function(){return this.mParent.repeat;});
		__getset(0,__proto,'frame',function(){
			return this.mFrame ? this.mFrame.clone():new Rectangle(0,0,this.width,this.height);
		});

		__static(SubTexture,
		['sTexCoords',function(){return this.sTexCoords=new Point();},'sMatrix',function(){return this.sMatrix=new Matrix();}
		]);
		return SubTexture;
	})(Texture1)


	//file:///e:/develop/projects_b/gameframework_laya/src/demo/cliptest.as
	//class demo.ClipTest extends framework.objs.GameObject
	var ClipTest=(function(_super){
		function ClipTest(){
			ClipTest.__super.call(this);
		}

		__class(ClipTest,'demo.ClipTest',false,_super);
		var __proto=ClipTest.prototype;
		__proto.init=function(info){
			var sp=new Sprite1();
			this._game.global.main.addChild(sp);
			var clip=Clip.fromDefName(info.defName,true,true,this._game.global.main);
			this.scheduleUpdate(/*framework.UpdateType.UPDATE*/2);
			_super.prototype.init.call(this,info);
		}

		__proto.update=function(){}
		ClipTest.create=function(clipDefName){
			var game=Game.getInstance();
			game.createGameObj(new ClipTest(),{defName:clipDefName});
		}

		return ClipTest;
	})(GameObject)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/demo/showimage.as
	//class demo.ShowImage extends framework.objs.GameObject
	var ShowImage=(function(_super){
		function ShowImage(){
			ShowImage.__super.call(this);
		}

		__class(ShowImage,'demo.ShowImage',false,_super);
		var __proto=ShowImage.prototype;
		__proto.init=function(info){
			var sp=new Sprite1();
			this._game.global.main.addChild(sp);
			var texture=Texture1.fromBitmapData(LibUtil.getDefBitmapData("BitmapDataA"));
			var image=new Image2(texture);
			sp.addChild(image);
			_super.prototype.init.call(this,info);
		}

		ShowImage.create=function(){
			var game=Game.getInstance();
			game.createGameObj(new ShowImage());
		}

		return ShowImage;
	})(GameObject)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/myobj.as
	//class g.MyObj extends framework.objs.GameObject
	var MyObj=(function(_super){
		function MyObj(){
			MyObj.__super.call(this);
		}

		__class(MyObj,'g.MyObj',false,_super);
		var __proto=MyObj.prototype;
		__getset(0,__proto,'_myGame',function(){return this._game});
		return MyObj;
	})(GameObject)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/displayobjectcontainer.as
	;
	//class starling.display.DisplayObjectContainer extends starling.display.DisplayObject
	var DisplayObjectContainer1=(function(_super){
		function DisplayObjectContainer(){
			this.mChildren=null;
			this.mTouchGroup=false;
			DisplayObjectContainer.__super.call(this);
			if (Capabilities.isDebugger &&
				iflash.utils.getQualifiedClassName(this)=="starling.display::DisplayObjectContainer"){
				throw new AbstractClassError();
			}
			this.mChildren=/*new vector.<>*/[];
		}

		__class(DisplayObjectContainer,'starling.display.DisplayObjectContainer',false,_super,'DisplayObjectContainer1');
		var __proto=DisplayObjectContainer.prototype;
		__proto.dispose=function(){
			if(this.numChildren>0)
				this.removeChildren(0,this.numChildren,true);
			_super.prototype.dispose.call(this);
		}

		__proto.addChild=function(child){
			return this.addChildAt(child,this.mChildren.length);
		}

		__proto.addChildAt=function(child,index){
			var numChildren=this.mChildren.length;
			if (index >=0 && index <=numChildren){
				if (child.parent==this){
					this.setChildIndex(child,index);
				}
				else{
					child.removeFromParent();
					if (index==numChildren)this.mChildren[numChildren]=child;
					else this.spliceChildren(index,0,child);
					child.setParent(this);
					child.dispatchEventWith(/*starling.events.Event.ADDED*/"added",true);
					if (this.stage){
						var container=iflash.method.typeAs(child,DisplayObjectContainer);
						if (container)container.broadcastEventWith(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage");
						else child.dispatchEventWith(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage");
					}
				}
				return child;
			}
			else{
				throw new RangeError("Invalid child index");
			}
		}

		__proto.removeChild=function(child,dispose){
			(dispose===void 0)&& (dispose=false);
			var childIndex=this.getChildIndex(child);
			if (childIndex !=-1)this.removeChildAt(childIndex,dispose);
			return child;
		}

		__proto.removeChildAt=function(index,dispose){
			(dispose===void 0)&& (dispose=false);
			if (index >=0 && index < this.mChildren.length){
				var child=this.mChildren[index];
				child.dispatchEventWith(/*starling.events.Event.REMOVED*/"removed",true);
				index=this.mChildren.indexOf(child);
				if (index >=0)this.spliceChildren(index,1);
				if (this.stage){
					var container=iflash.method.typeAs(child,DisplayObjectContainer);
					if (container)
						container.broadcastEventWith(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage");
					else
					child.dispatchEventWith(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage");
				}
				child.setParent(null);
				if (dispose)child.dispose();
				return child;
			}
			else{
				throw new RangeError("Invalid child index");
			}
		}

		__proto.removeChildren=function(beginIndex,endIndex,dispose){
			(beginIndex===void 0)&& (beginIndex=0);
			(endIndex===void 0)&& (endIndex=-1);
			(dispose===void 0)&& (dispose=false);
			if (endIndex < 0 || endIndex >=this.numChildren)
				endIndex=this.numChildren-1;
			for (var i=beginIndex;i<=endIndex;++i)
			this.removeChildAt(beginIndex,dispose);
		}

		__proto.getChildAt=function(index){
			var numChildren=this.mChildren.length;
			if (index < 0)
				index=numChildren+index;
			if (index >=0 && index < numChildren)
				return this.mChildren[index];
			else
			throw new RangeError("Invalid child index");
		}

		__proto.getChildByName=function(name){
			var numChildren=this.mChildren.length;
			for (var i=0;i<numChildren;++i)
			if (this.mChildren[i].name==name)return this.mChildren[i];
			return null;
		}

		__proto.getChildIndex=function(child){
			return this.mChildren.indexOf(child);
		}

		__proto.setChildIndex=function(child,index){
			var oldIndex=this.getChildIndex(child);
			if (oldIndex==index)return;
			if (oldIndex==-1)throw new Error("Not a child of this container");
			this.spliceChildren(oldIndex,1);
			this.spliceChildren(index,0,child);
		}

		__proto.swapChildren=function(child1,child2){
			var index1=this.getChildIndex(child1);
			var index2=this.getChildIndex(child2);
			if (index1==-1 || index2==-1)throw new Error("Not a child of this container");
			this.swapChildrenAt(index1,index2);
		}

		__proto.swapChildrenAt=function(index1,index2){
			var child1=this.getChildAt(index1);
			var child2=this.getChildAt(index2);
			this.mChildren[index1]=child2;
			this.mChildren[index2]=child1;
		}

		__proto.sortChildren=function(compareFunction){
			DisplayObjectContainer.sSortBuffer.length=this.mChildren.length;
			DisplayObjectContainer.mergeSort(this.mChildren,compareFunction,0,this.mChildren.length,DisplayObjectContainer.sSortBuffer);
			DisplayObjectContainer.sSortBuffer.length=0;
		}

		__proto.contains=function(child){
			while (child){
				if (child==this)return true;
				else child=child.parent;
			}
			return false;
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			var numChildren=this.mChildren.length;
			if (numChildren==0){
				this.getTransformationMatrix(targetSpace,DisplayObjectContainer.sHelperMatrix);
				MatrixUtil1.transformCoords(DisplayObjectContainer.sHelperMatrix,0.0,0.0,DisplayObjectContainer.sHelperPoint);
				resultRect.setTo(DisplayObjectContainer.sHelperPoint.x,DisplayObjectContainer.sHelperPoint.y,0,0);
			}
			else if (numChildren==1){
				this.mChildren[0].getBounds(targetSpace,resultRect);
			}
			else{
				var minX=Number.MAX_VALUE,maxX=-Number.MAX_VALUE;
				var minY=Number.MAX_VALUE,maxY=-Number.MAX_VALUE;
				for (var i=0;i<numChildren;++i){
					this.mChildren[i].getBounds(targetSpace,resultRect);
					if (minX > resultRect.x)minX=resultRect.x;
					if (maxX < resultRect.right)maxX=resultRect.right;
					if (minY > resultRect.y)minY=resultRect.y;
					if (maxY < resultRect.bottom)maxY=resultRect.bottom;
				}
				resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			}
			return resultRect;
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (forTouch && (!this.visible || !this.touchable))return null;
			if (!this.hitTestMask(localPoint))return null;
			var target=null;
			var localX=localPoint.x;
			var localY=localPoint.y;
			var numChildren=this.mChildren.length;
			for (var i=numChildren-1;i >=0;--i){
				var child=this.mChildren[i];
				if (child.isMask)continue ;
				DisplayObjectContainer.sHelperMatrix.copyFrom(child.transformationMatrix);
				DisplayObjectContainer.sHelperMatrix.invert();
				MatrixUtil1.transformCoords(DisplayObjectContainer.sHelperMatrix,localX,localY,DisplayObjectContainer.sHelperPoint);
				target=child.hitTest(DisplayObjectContainer.sHelperPoint,forTouch);
				if (target)return forTouch && this.mTouchGroup ? this :target;
			}
			return null;
		}

		__proto.render=function(support,parentAlpha){
			var alpha=parentAlpha *this.alpha;
			var numChildren=this.mChildren.length;
			var blendMode=support.blendMode;
			for (var i=0;i<numChildren;++i){
				var child=this.mChildren[i];
				if (child.hasVisibleArea){
					var filter=child.filter;
					var mask=child.mask;
					support.pushMatrix();
					support.transformMatrix(child);
					support.blendMode=child.blendMode;
					if (mask)support.pushMask(mask);
					if (filter)filter.render(child,support,alpha);
					else child.render(support,alpha);
					if (mask)support.popMask();
					support.blendMode=blendMode;
					support.popMatrix();
				}
			}
		}

		__proto.broadcastEvent=function(event){
			if (event.bubbles)
				throw new Error("Broadcast of bubbling events is prohibited");
			var fromIndex=DisplayObjectContainer.sBroadcastListeners.length;
			this.getChildEventListeners(this,event.type,DisplayObjectContainer.sBroadcastListeners);
			var toIndex=DisplayObjectContainer.sBroadcastListeners.length;
			for (var i=fromIndex;i<toIndex;++i){
				DisplayObjectContainer.sBroadcastListeners[i].dispatchEvent(event);
			}
			DisplayObjectContainer.sBroadcastListeners.length=fromIndex;
		}

		__proto.broadcastEventWith=function(type,data){
			var event=Event1.fromPool(type,false,data);
			this.broadcastEvent(event);
			Event1.toPool(event);
		}

		__proto.spliceChildren=function(startIndex,deleteCount,insertee){
			(deleteCount===void 0)&& (deleteCount=/*uint.MAX_VALUE*/4294967295);
			var vector=this.mChildren;
			var oldLength=vector.length;
			if (startIndex < 0)startIndex+=oldLength;
			if (startIndex < 0)startIndex=0;else if (startIndex > oldLength)startIndex=oldLength;
			if (startIndex+deleteCount > oldLength)deleteCount=oldLength-startIndex;
			var i=0;
			var insertCount=insertee ? 1 :0;
			var deltaLength=insertCount-deleteCount;
			var newLength=oldLength+deltaLength;
			var shiftCount=oldLength-startIndex-deleteCount;
			if (deltaLength < 0){
				i=startIndex+insertCount;
				while (shiftCount){
					vector[i]=vector[int(i-deltaLength)];
					--shiftCount;++i;
				}
				vector.length=newLength;
			}
			else if (deltaLength > 0){
				i=1;
				while (shiftCount){
					vector[int(newLength-i)]=vector[int(oldLength-i)];
					--shiftCount;++i;
				}
				vector.length=newLength;
			}
			if (insertee)
				vector[startIndex]=insertee;
		}

		__proto.getChildEventListeners=function(object,eventType,listeners){
			var container=iflash.method.typeAs(object,DisplayObjectContainer);
			if (object.hasEventListener(eventType))
				listeners[listeners.length]=object;
			if (container){
				var children=container.mChildren;
				var numChildren=children.length;
				for (var i=0;i<numChildren;++i)
				this.getChildEventListeners(children[i],eventType,listeners);
			}
		}

		__getset(0,__proto,'numChildren',function(){return this.mChildren.length;});
		__getset(0,__proto,'touchGroup',function(){return this.mTouchGroup;},function(value){this.mTouchGroup=value;});
		DisplayObjectContainer.mergeSort=function(input,compareFunc,startIndex,length,buffer){
			if (length <=1)return;
			else{
				var i=0;
				var endIndex=startIndex+length;
				var halfLength=length / 2;
				var l=startIndex;
				var r=startIndex+halfLength;
				DisplayObjectContainer.mergeSort(input,compareFunc,startIndex,halfLength,buffer);
				DisplayObjectContainer.mergeSort(input,compareFunc,startIndex+halfLength,length-halfLength,buffer);
				for (i=0;i < length;i++){
					if (l < startIndex+halfLength &&
						(r==endIndex || compareFunc(input[l],input[r])<=0)){
						buffer[i]=input[l];
						l++;
					}
					else{
						buffer[i]=input[r];
						r++;
					}
				}
				for(i=startIndex;i < endIndex;i++)
				input[i]=buffer[int(i-startIndex)];
			}
		}

		__static(DisplayObjectContainer,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sHelperPoint',function(){return this.sHelperPoint=new Point();},'sBroadcastListeners',function(){return this.sBroadcastListeners=/*new vector.<>*/[];},'sSortBuffer',function(){return this.sSortBuffer=/*new vector.<>*/[];}
		]);
		return DisplayObjectContainer;
	})(DisplayObject1)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/storyui.as
	//class g.StoryUI extends framework.objs.GameObject
	var StoryUI=(function(_super){
		function StoryUI(){
			this._view=null;
			this._animation=null;
			this._skip=null;
			StoryUI.__super.call(this);
		}

		__class(StoryUI,'g.StoryUI',false,_super);
		var __proto=StoryUI.prototype;
		__proto.init=function(info){
			this._view=LibUtil.getDefSprite("StoryUI_mc");
			this._animation=this._view.getChildByName("animation");
			this._skip=this._view.getChildByName("skip");
			this._game.global.layerMan.uiLayer.addChild(this._view);
			ButtonEffect.to(this._skip,{scale:{}});
			this._skip.addEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
		}

		__proto.clickHandler=function(e){
			e.target.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			this._game.dispatchEvent(new MyEvent(/*g.MyEvent.TO_SELECT_LEVEL*/"toSelectLevel",{doDestroy:false }));
			this.destroy();
		}

		__proto.playFinish=function(e){
			this._game.dispatchEvent(new MyEvent(/*g.MyEvent.GO_TO_LEVEL*/"gotoLevel",{level:1 }));
			this.destroy();
		}

		__proto.destroy=function(){
			if(this._skip)this._skip.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			ButtonEffect.killOf(this._skip);
			this._animation&&this._animation.removeEventListener(/*iflash.events.Event.COMPLETE*/"complete",__bind(this,this.playFinish));
			FuncUtil.removeChild(this._animation);
			FuncUtil.removeChild(this._view);
			this._skip=null;
			this._view=null;
			this._animation=null;
			_super.prototype.destroy.call(this);
		}

		StoryUI.create=function(){
			var game=Game.getInstance();
			game.createGameObj(new StoryUI());
		}

		return StoryUI;
	})(GameObject)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/mygame.as
	//class g.MyGame extends framework.Game
	var MyGame=(function(_super){
		function MyGame(){
			MyGame.__super.call(this);
		}

		__class(MyGame,'g.MyGame',false,_super);
		var __proto=MyGame.prototype;
		__proto.startup=function(main,stage,info){
			console.log("==== startup MyGame mode:",false?"2d":"3d","====");
			this._global=new MyGlobal(main,this,MyData.stageW,MyData.stageH,MyData.box2dDebugVisible,MyData.ptm_ratio);
			var world=this._global.createBox2dMan(0,this._global.layerMan.gameLayer,MyData.gravity,MyData.useMouseJoint,MyData.deltaTime,MyData.ptm_ratio).world;
			this._global.setCurWorld(world);
			if (MyData.clearLocalData)this._global.localManager.clear();
			_super.prototype.startup.call(this,main,stage,info);
			this.toTitle();
		}

		__proto.saveUnlockLevel=function(){
			var localMan=this._global.localManager;
			var unlockLevel=int(localMan.get("unlockLevel"));
			if (this.myGlobal.gameLevel+1>unlockLevel)
				localMan.save("unlockLevel",(this.myGlobal.gameLevel+1>MyData.maxLevel)?MyData.maxLevel:this.myGlobal.gameLevel+1);
		}

		__proto.destroyCurLevel=function(){
			this.destroyAll();
		}

		__proto.toTitle=function(isDestroyCurLevel){
			(isDestroyCurLevel===void 0)&& (isDestroyCurLevel=false);
			if(isDestroyCurLevel)this.destroyCurLevel();
			UI.create(/*g.UI.TITLE*/"title");
		}

		__proto.toSelectLevel=function(isDestroyCurLevel){
			(isDestroyCurLevel===void 0)&& (isDestroyCurLevel=false);
			if(isDestroyCurLevel)this.destroyCurLevel();
			UI.create(/*g.UI.SELECT_LEVEL*/"selectLevel");
		}

		__proto.toHelp=function(){
			UI.create(/*g.UI.HELP*/"help");
		}

		__proto.gameWin=function(){
			if (this.myGlobal.gameStatus==/*g.MyGlobal.GAME_END*/"gameEnd")return;
			console.log("gameWin");
			this.myGlobal.gameWin();
			if (this.myGlobal.gameLevel<MyData.maxLevel){
				UI.create(/*g.UI.MISSION_COMPLETE*/"missionComplete");
				}else {
				UI.create(/*g.UI.VICTORY*/"victory");
			}
			this.saveUnlockLevel();
		}

		__proto.gameFaiure=function(){
			if (this.myGlobal.gameStatus==/*g.MyGlobal.GAME_END*/"gameEnd")return;
			console.log("gameFailure");
			this.myGlobal.gameFailure();
			UI.create(/*g.UI.FAILURE*/"failure");
		}

		__proto.resetLevel=function(){
			this.destroyCurLevel();
			this.myGlobal.resetLevel();
			this.gotoLevel(this.myGlobal.gameLevel);
		}

		__proto.nextLevel=function(){
			this.destroyCurLevel();
			this.myGlobal.nextLevel();
			this.gotoLevel(this.myGlobal.gameLevel+1);
		}

		__proto.gotoLevel=function(level){
			this.myGlobal.gotoLevel(level);
			UI.create(/*g.UI.CONTROL_BAR*/"controlBar");
			Map.create();
			this.dispatchEvent(new MyEvent(/*g.MyEvent.CREATE_MAP_COMPLETE*/"createMapComplete"));
			TestObj.create();
		}

		__getset(0,__proto,'myGlobal',function(){return this._global;});
		MyGame.getInstance=function(){
			return (Game._instance=Game._instance||new MyGame());
		}

		return MyGame;
	})(Game)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/myevent.as
	//class g.MyEvent extends framework.events.FrameworkEvent
	var MyEvent=(function(_super){
		function MyEvent(type,info,bubbles,cancelable){
			(bubbles===void 0)&& (bubbles=false);
			(cancelable===void 0)&& (cancelable=false);
			MyEvent.__super.call(this,type,info,bubbles);
		}

		__class(MyEvent,'g.MyEvent',false,_super);
		var __proto=MyEvent.prototype;
		__proto.toString=function(){
			return _super.prototype.toString.call(this);
		}

		MyEvent.TO_TITLE="toTitle";
		MyEvent.TO_SELECT_LEVEL="toSelectLevel";
		MyEvent.TO_HELP="toHelp";
		MyEvent.GO_TO_LEVEL="gotoLevel";
		MyEvent.NEXT_LEVEL="nextLevel";
		MyEvent.RESET_LEVEL="resetLevel";
		MyEvent.WIN="win";
		MyEvent.FAILURE="failure";
		MyEvent.CREATE_MAP_COMPLETE="createMapComplete";
		MyEvent.UPDATE_MAP_BODIES="updateMapBodies";
		MyEvent.UPDATE_BITMAP_DATA="updateBitmapData";
		MyEvent.RESET_BITMAP_POSITION="resetBitmapPosition";
		MyEvent.CREATE_ITEMS="createItems";
		return MyEvent;
	})(FrameworkEvent)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/g/myglobal.as
	//class g.MyGlobal extends framework.system.Global
	var MyGlobal=(function(_super){
		function MyGlobal(main,game,gameWidth,gameHeight,box2dDebugVisible,ptm_ratio){
			this._gameLevel=0;
			this._gameStatus=null;
			this._disableKeyboard=false;
			this._resetPointList=null;
			this.playerHp=0;
			(box2dDebugVisible===void 0)&& (box2dDebugVisible=false);
			(ptm_ratio===void 0)&& (ptm_ratio=30);
			MyGlobal.__super.call(this,main,game,gameWidth,gameHeight,box2dDebugVisible,ptm_ratio);
			this._game.addEventListener(FrameworkEvent.PAUSE,__bind(this,this.pauseResumeHandler));
			this._game.addEventListener(FrameworkEvent.RESUME,__bind(this,this.pauseResumeHandler));
		}

		__class(MyGlobal,'g.MyGlobal',false,_super);
		var __proto=MyGlobal.prototype;
		__proto.gotoLevel=function(level){
			this.reset();
			this._gameLevel=level;
			this._gameStatus="gameing";
			this._disableKeyboard=false;
			this._nativeMain["gameLevel"]=this._gameLevel;
			this._resetPointList=[];
		}

		__proto.gameWin=function(){
			this._gameStatus="gameEnd";
			this._disableKeyboard=true;
		}

		__proto.gameFailure=function(){
			this._gameStatus="gameEnd";
			this._disableKeyboard=true;
		}

		__proto.pauseResumeHandler=function(e){
			this._disableKeyboard=this._game.pause;
		}

		__proto.resetLevel=function(){this.disposeVars();}
		__proto.nextLevel=function(){this.disposeVars();}
		__proto.disposeVars=function(){
			this._resetPointList.length=0;
		}

		__getset(0,__proto,'gameLevel',function(){return this._gameLevel;});
		__getset(0,__proto,'gameStatus',function(){return this._gameStatus;});
		__getset(0,__proto,'resetPointList',function(){return this._resetPointList;});
		__getset(0,__proto,'disableKeyboard',function(){return this._disableKeyboard;});
		MyGlobal.GAMEING="gameing";
		MyGlobal.GAME_END="gameEnd";
		return MyGlobal;
	})(Global)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/canvas.as
	//class starling.display.Canvas extends starling.display.DisplayObject
	var Canvas1=(function(_super){
		function Canvas(){
			this.mSyncRequired=false;
			this.mPolygons=null;
			this.mVertexData=null;
			this.mVertexBuffer=null;
			this.mIndexData=null;
			this.mIndexBuffer=null;
			this.mFillColor=0;
			this.mFillAlpha=NaN;
			Canvas.__super.call(this);
			this.mPolygons=/*new vector.<>*/[];
			this.mVertexData=new VertexData(0);
			this.mIndexData=/*new vector.<>*/[];
			this.mSyncRequired=false;
			this.mFillColor=0xffffff;
			this.mFillAlpha=1.0;
			Canvas.registerPrograms();
			Starling.current.addEventListener(/*starling.events.Event.CONTEXT3D_CREATE*/"context3DCreate",__bind(this,this.onContextCreated));
		}

		__class(Canvas,'starling.display.Canvas',false,_super,'Canvas1');
		var __proto=Canvas.prototype;
		__proto.onContextCreated=function(event){
			Canvas.registerPrograms();
			this.syncBuffers();
		}

		__proto.dispose=function(){
			this.destroyBuffers();
			_super.prototype.dispose.call(this);
		}

		__proto.drawCircle=function(x,y,radius){
			var t_poly=new Ellipse(x,y,radius,radius);
			this.appendPolygon(t_poly);
		}

		__proto.drawEllipse=function(x,y,width,height){
			var radiusX=width / 2.0;
			var radiusY=height / 2.0;
			this.appendPolygon(Polygon.createEllipse(x+radiusX,y+radiusY,radiusX,radiusY));
		}

		__proto.drawRectangle=function(x,y,width,height){
			this.appendPolygon(Polygon.createRectangle(x,y,width,height));
		}

		__proto.drawPolygon=function(polygon){
			this.appendPolygon(polygon);
		}

		__proto.beginFill=function(color,alpha){
			(color===void 0)&& (color=0xffffff);
			(alpha===void 0)&& (alpha=1.0);
			this.mFillColor=color;
			this.mFillAlpha=alpha;
		}

		__proto.endFill=function(){
			this.mFillColor=0xffffff;
			this.mFillAlpha=1.0;
		}

		__proto.clear=function(){
			this.mVertexData.numVertices=0;
			this.mIndexData.length=0;
		}

		__proto.render=function(support,parentAlpha){
			if (this.mIndexData.length==0)return;
			if (this.mSyncRequired)this.syncBuffers();
			support.finishQuadBatch();
			support.raiseDrawCount();
			Canvas.sRenderAlpha[0]=Canvas.sRenderAlpha[1]=Canvas.sRenderAlpha[2]=1.0;
			Canvas.sRenderAlpha[3]=parentAlpha *this.alpha;
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			support.applyBlendMode(false);
			var pro=Starling.current.getProgram("Shape");
			context.setProgram(pro);
			var loc1,loc2;
			loc1=pro.getUniformLocation("u_mvpMatrix");
			if(loc1 !=null){
				context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",loc1,support.mvpMatrix3D,true);
				loc1=null;
			}
			loc1=pro.getUniformLocation("u_alpha");
			if(loc1 !=null){
				context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",loc1,Canvas.sRenderAlpha,1);
				loc1=null;
			};
			var locx=context.webglContext.getUniformLocation(pro.m_programID,"u_flipY");
			if(locx !=null){
				var t_flip=1.0;
				context.webglContext.uniform1f(locx,t_flip);
				locx=null;
			}
			loc1=pro.getAttributeLocation("a_position");
			if(loc1 !=null){
				context.setVertexBufferAt(loc1,this.mVertexBuffer,0,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
			}
			loc2=pro.getAttributeLocation("a_color");
			if(loc2 !=null){
				context.setVertexBufferAt(loc2,this.mVertexBuffer,/*starling.utils.VertexData.COLOR_OFFSET*/2,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_4*/"float4");
			}
			context.drawTriangles(this.mIndexBuffer,0,this.mIndexData.length / 3);
			context.setVertexBufferAt(0,null);
			context.setVertexBufferAt(1,null);
			context.setVertexBufferAt(loc2,null);
			context.setVertexBufferAt(loc1,null);
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (resultRect==null)resultRect=new iflash.geom.Rectangle();
			var transformationMatrix=targetSpace==this ?
			null :this.getTransformationMatrix(targetSpace,Canvas.sHelperMatrix);
			return this.mVertexData.getBounds(transformationMatrix,0,-1,resultRect);
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (forTouch && (!this.visible || !this.touchable))return null;
			if (!this.hitTestMask(localPoint))return null;
			for (var i=0,len=this.mPolygons.length;i < len;++i)
			if (this.mPolygons[i].containsPoint(localPoint))return this;
			return null;
		}

		__proto.appendPolygon=function(polygon){
			var oldNumVertices=this.mVertexData.numVertices;
			var oldNumIndices=this.mIndexData.length;
			polygon.triangulate(this.mIndexData);
			polygon.copyToVertexData(this.mVertexData,oldNumVertices);
			var newNumIndices=this.mIndexData.length;
			for (var i=oldNumIndices;i<newNumIndices;++i)
			this.mIndexData[i]+=oldNumVertices;
			this.applyFillColor(oldNumVertices,polygon.numVertices);
			this.mPolygons[this.mPolygons.length]=polygon;
			this.mSyncRequired=true;
		}

		__proto.applyFillColor=function(vertexIndex,numVertices){
			var endIndex=vertexIndex+numVertices;
			for (var i=vertexIndex;i<endIndex;++i)
			this.mVertexData.setColorAndAlpha(i,this.mFillColor,this.mFillAlpha);
		}

		__proto.syncBuffers=function(){
			this.destroyBuffers();
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			var numVertices=this.mVertexData.numVertices;
			var numIndices=this.mIndexData.length;
			this.mVertexBuffer=context.createVertexBuffer(numVertices,/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8);
			this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,numVertices);
			this.mIndexBuffer=context.createIndexBuffer(numIndices);
			this.mIndexBuffer.uploadFromVector(this.mIndexData,0,numIndices);
			this.mSyncRequired=false;
		}

		__proto.destroyBuffers=function(){
			if (this.mVertexBuffer)this.mVertexBuffer.dispose();
			if (this.mIndexBuffer)this.mIndexBuffer.dispose();
			this.mVertexBuffer=null;
			this.mIndexBuffer=null;
			this.mSyncRequired=true;
		}

		Canvas.registerPrograms=function(){
			var target=Starling.current;
			if (target.hasProgram("Shape"))return;
			var vertexShader=null;
			var fragmentShader=null;
			vertexShader=GLSL_ShaderList.shader.QB_NOT_TEX_VS;
			fragmentShader=GLSL_ShaderList.shader.QB_NOT_TEX_FS;
			target.registerProgramFromSource("Shape",vertexShader,fragmentShader);
		}

		Canvas.PROGRAM_NAME="Shape";
		__static(Canvas,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sRenderAlpha',function(){return this.sRenderAlpha=/*new vector.<>*/[1.0,1.0,1.0,1.0];}
		]);
		return Canvas;
	})(DisplayObject1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/quad.as
	//class starling.display.Quad extends starling.display.DisplayObject
	var Quad=(function(_super){
		function Quad(width,height,color,premultipliedAlpha){
			this.mTinted=false;
			this.mVertexData=null;
			Quad.__super.call(this);
			(color===void 0)&& (color=0xffffff);
			(premultipliedAlpha===void 0)&& (premultipliedAlpha=true);
			if (width==0.0 || height==0.0)
				throw new Error("Invalid size: width and height must not be zero");
			this.mTinted=color !=0xffffff;
			this.mVertexData=new VertexData(4,premultipliedAlpha);
			this.mVertexData.setPosition(0,0.0,0.0);
			this.mVertexData.setPosition(1,width,0.0);
			this.mVertexData.setPosition(2,0.0,height);
			this.mVertexData.setPosition(3,width,height);
			this.mVertexData.setUniformColor(color);
			this.onVertexDataChanged();
		}

		__class(Quad,'starling.display.Quad',false,_super);
		var __proto=Quad.prototype;
		__proto.onVertexDataChanged=function(){}
		__proto.getBounds=function(targetSpace,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			if (targetSpace==this){
				this.mVertexData.getPosition(3,Quad.sHelperPoint);
				resultRect.setTo(0.0,0.0,Quad.sHelperPoint.x,Quad.sHelperPoint.y);
			}
			else if (targetSpace==this.parent && this.rotation==0.0){
				var scaleX=this.scaleX;
				var scaleY=this.scaleY;
				this.mVertexData.getPosition(3,Quad.sHelperPoint);
				resultRect.setTo(this.x-this.pivotX *scaleX,this.y-this.pivotY *scaleY,
				Quad.sHelperPoint.x *scaleX,Quad.sHelperPoint.y *scaleY);
				if (scaleX < 0){resultRect.width *=-1;resultRect.x-=resultRect.width;}
					if (scaleY < 0){resultRect.height *=-1;resultRect.y-=resultRect.height;}
			}
			else if (this.is3D && this.stage){
				this.stage.getCameraPosition(targetSpace,Quad.sHelperPoint3D);
				this.getTransformationMatrix3D(targetSpace,Quad.sHelperMatrix3D);
				this.mVertexData.getBoundsProjected(Quad.sHelperMatrix3D,Quad.sHelperPoint3D,0,4,resultRect);
			}
			else{
				this.getTransformationMatrix(targetSpace,Quad.sHelperMatrix);
				this.mVertexData.getBounds(Quad.sHelperMatrix,0,4,resultRect);
			}
			return resultRect;
		}

		__proto.getVertexColor=function(vertexID){
			return this.mVertexData.getColor(vertexID);
		}

		__proto.setVertexColor=function(vertexID,color){
			this.mVertexData.setColor(vertexID,color);
			this.onVertexDataChanged();
			if (color !=0xffffff)this.mTinted=true;
			else this.mTinted=this.mVertexData.tinted;
		}

		__proto.getVertexAlpha=function(vertexID){
			return this.mVertexData.getAlpha(vertexID);
		}

		__proto.setVertexAlpha=function(vertexID,alpha){
			this.mVertexData.setAlpha(vertexID,alpha);
			this.onVertexDataChanged();
			if (alpha !=1.0)this.mTinted=true;
			else this.mTinted=this.mVertexData.tinted;
		}

		__proto.setAlphaColor=function(value,alpha){
			this.mVertexData.setUinformCAA(value,alpha);
			this.onVertexDataChanged();
			if (value !=0xffffff || alpha !=1.0)this.mTinted=true;
			else this.mTinted=this.mVertexData.tinted;
		}

		__proto.copyVertexDataTo=function(targetData,targetVertexID){
			(targetVertexID===void 0)&& (targetVertexID=0);
			this.mVertexData.copyTo(targetData,targetVertexID);
		}

		__proto.copyVertexDataTransformedTo=function(targetData,targetVertexID,matrix){
			(targetVertexID===void 0)&& (targetVertexID=0);
			this.mVertexData.copyTransformedTo(targetData,targetVertexID,matrix,0,4);
		}

		__proto.render=function(support,parentAlpha){
			support.batchQuad(this,parentAlpha);
		}

		__getset(0,__proto,'color',function(){
			return this.mVertexData.getColor(0);
			},function(value){
			this.mVertexData.setUniformColor(value);
			this.onVertexDataChanged();
			if (value !=0xffffff || this.alpha !=1.0)this.mTinted=true;
			else this.mTinted=this.mVertexData.tinted;
		});

		__getset(0,__proto,'alpha',_super.prototype._$get_alpha,function(value){
			_super.prototype._$set_alpha.call(this,value);
			if (value < 1.0)this.mTinted=true;
			else this.mTinted=this.mVertexData.tinted;
		});

		__getset(0,__proto,'tinted',function(){return this.mTinted;});
		__getset(0,__proto,'premultipliedAlpha',function(){return this.mVertexData.premultipliedAlpha;});
		__static(Quad,
		['sHelperPoint',function(){return this.sHelperPoint=new Point();},'sHelperPoint3D',function(){return this.sHelperPoint3D=new Vector3D();},'sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sHelperMatrix3D',function(){return this.sHelperMatrix3D=new Matrix3D();}
		]);
		return Quad;
	})(DisplayObject1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/quadbatch.as
	;
	//class starling.display.QuadBatch extends starling.display.DisplayObject
	var QuadBatch=(function(_super){
		function QuadBatch(){
			this.mNumQuads=0;
			this.mSyncRequired=false;
			this.mBatchable=false;
			this.mForceTinted=false;
			this.mTinted=false;
			this.mTexture=null;
			this.mSmoothing=null;
			this.mVertexBuffer=null;
			this.mIndexData=null;
			this.mIndexBuffer=null;
			this.mVertexData=null;
			QuadBatch.__super.call(this);
			if(Laya.CONCHVER){
				this.addEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addToStageHandle));
				this.addEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",QuadBatch.removeFromStage);
			}
			this.mVertexData=new VertexData(0,true);
			this.mIndexData=/*new vector.<>*/[];
			this.mNumQuads=0;
			this.mTinted=false;
			this.mSyncRequired=false;
			this.mBatchable=false;
			this.mForceTinted=false;
		}

		__class(QuadBatch,'starling.display.QuadBatch',false,_super);
		var __proto=QuadBatch.prototype;
		__proto.addToStageHandle=function(){
			QuadBatch.szQuadBatchList.push(this);
		}

		__proto.dispose=function(){
			this.destroyBuffers();
			this.mVertexData.numVertices=0;
			this.mIndexData.length=0;
			this.mNumQuads=0;
			for(var a in QuadBatch.sProgramNameCache){
				delete QuadBatch.sProgramNameCache[a];
			}
			this.removeEventListeners();
			_super.prototype.dispose.call(this);
			if(Laya.CONCHVER){
				this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addToStageHandle));
				this.removeEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",QuadBatch.removeFromStage);
				QuadBatch.removeFromStage(null);
			}
		}

		__proto.onContextCreated=function(event){
			this.createBuffers();
		}

		__proto.onVertexDataChanged=function(){
			this.mSyncRequired=true;
		}

		__proto.clone=function(){
			var clone=new QuadBatch();
			clone.mVertexData=this.mVertexData.clone(0,this.mNumQuads *4);
			clone.mIndexData=this.mIndexData.slice(0,this.mNumQuads *6);
			clone.mNumQuads=this.mNumQuads;
			clone.mTinted=this.mTinted;
			clone.mTexture=this.mTexture;
			clone.mSmoothing=this.mSmoothing;
			clone.mSyncRequired=true;
			clone.blendMode=this.blendMode;
			clone.alpha=this.alpha;
			return clone;
		}

		__proto.expand=function(){
			var oldCapacity=this.capacity;
			if (oldCapacity >=16383)
				throw new Error("Exceeded maximum number of quads!");
			this.capacity=oldCapacity < 8 ? 16 :oldCapacity *2;
		}

		__proto.createBuffers=function(){
			this.destroyBuffers();
			var numVertices=this.mVertexData.numVertices;
			var numIndices=this.mIndexData.length;
			var context=Starling.context;
			if (numVertices==0)return;
			if (context==null)throw new MissingContextError();
			this.mVertexBuffer=context.createVertexBuffer(numVertices,/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8);
			this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,numVertices);
			this.mIndexBuffer=context.createIndexBuffer(numIndices);
			this.mIndexBuffer.uploadFromVector(this.mIndexData,0,numIndices);
			this.mSyncRequired=false;
		}

		__proto.destroyBuffers=function(){
			if (this.mVertexBuffer){
				this.mVertexBuffer.dispose();
				this.mVertexBuffer=null;
			}
			if (this.mIndexBuffer){
				this.mIndexBuffer.dispose();
				this.mIndexBuffer=null;
			}
		}

		__proto.syncBuffers=function(){
			if (this.mVertexBuffer==null){
				this.createBuffers();
			}
			else{
				this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,this.mVertexData.numVertices);
				this.mSyncRequired=false;
			}
		}

		__proto.renderCustom=function(mvpMatrix,parentAlpha,blendMode){
			(parentAlpha===void 0)&& (parentAlpha=1.0);
			if (this.mNumQuads==0)return;
			if (this.mSyncRequired)this.syncBuffers();
			var pma=this.mVertexData.premultipliedAlpha;
			var context=Starling.context;
			var tinted=this.mTinted || (parentAlpha !=1.0);
			QuadBatch.sRenderAlpha[0]=QuadBatch.sRenderAlpha[1]=QuadBatch.sRenderAlpha[2]=pma ? parentAlpha :1.0;
			QuadBatch.sRenderAlpha[3]=parentAlpha;
			RenderSupport.setBlendFactors(pma,blendMode ? blendMode :this.blendMode);
			var pro=this.getProgram(tinted);
			context.setProgram(pro);
			var loc1,loc2,loc3;
			loc1=pro.getUniformLocation("u_alpha");
			if(loc1 !=null){
				context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",loc1,QuadBatch.sRenderAlpha,1);
				loc1=null;
			}
			loc1=pro.getUniformLocation("u_mvpMatrix");
			if(loc1 !=null){
				context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",loc1,mvpMatrix,true);
				loc1=null;
			};
			var locx=context.webglContext.getUniformLocation(pro.m_programID,"u_flipY");
			if(locx !=null){
				var t_flip=1.0;
				if(QuadBatch.Y_FLIP)t_flip=-1.0;
				context.webglContext.uniform1f(locx,t_flip);
				locx=null;
			}
			loc1=pro.getAttributeLocation("a_position");
			if(loc1 !=null){
				context.setVertexBufferAt(loc1,this.mVertexBuffer,/*starling.utils.VertexData.POSITION_OFFSET*/0,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
			}
			if (this.mTexture==null || tinted){
				loc2=pro.getAttributeLocation("a_color");
				if(loc2 !=null){
					context.setVertexBufferAt(loc2,this.mVertexBuffer,/*starling.utils.VertexData.COLOR_OFFSET*/2,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_4*/"float4");
				}
			}
			if (this.mTexture){
				loc3=pro.getUniformLocation("u_tex_00");
				if(loc3 !=null){
					context.setTextureAt(0,this.mTexture.base);
					loc3=null;
				}
				loc3=pro.getAttributeLocation("a_texCoord");
				if(loc3 !=null){
					context.setVertexBufferAt(loc3,this.mVertexBuffer,/*starling.utils.VertexData.TEXCOORD_OFFSET*/6,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
				}
			}
			context.drawTriangles(this.mIndexBuffer,0,this.mNumQuads *2);
			if (this.mTexture){
				context.setTextureAt(0,null);
				context.setVertexBufferAt(loc3,null);
			}
			if(loc2)context.setVertexBufferAt(loc2,null);
			if(loc1)context.setVertexBufferAt(loc1,null);
			context.webglContext.disableVertexAttribArray(0);
			context.webglContext.disableVertexAttribArray(1);
			context.webglContext.disableVertexAttribArray(2);
		}

		__proto.reset=function(){
			this.mNumQuads=0;
			this.mTexture=null;
			this.mSmoothing=null;
			this.mSyncRequired=true;
		}

		__proto.addImage=function(image,parentAlpha,modelViewMatrix,blendMode){
			(parentAlpha===void 0)&& (parentAlpha=1.0);
			this.addQuad(image,parentAlpha,image.texture,image.smoothing,modelViewMatrix,blendMode);
		}

		__proto.addQuad=function(quad,parentAlpha,texture,smoothing,modelViewMatrix,blendMode){
			(parentAlpha===void 0)&& (parentAlpha=1.0);
			if (modelViewMatrix==null)
				modelViewMatrix=quad.transformationMatrix;
			var alpha=parentAlpha *quad.alpha;
			var vertexID=this.mNumQuads *4;
			if (this.mNumQuads+1 > this.mVertexData.numVertices / 4)this.expand();
			if (this.mNumQuads==0){
				this.blendMode=blendMode ? blendMode :quad.blendMode;
				this.mTexture=texture;
				this.mTinted=this.mForceTinted || quad.tinted || parentAlpha !=1.0;
				this.mSmoothing=smoothing;
				this.mVertexData.setPremultipliedAlpha(quad.premultipliedAlpha);
			}
			quad.copyVertexDataTransformedTo(this.mVertexData,vertexID,modelViewMatrix);
			if (alpha !=1.0)
				this.mVertexData.scaleAlpha(vertexID,alpha,4);
			this.mSyncRequired=true;
			this.mNumQuads++;
		}

		__proto.addQuadBatch=function(quadBatch,parentAlpha,modelViewMatrix,blendMode){
			(parentAlpha===void 0)&& (parentAlpha=1.0);
			if (modelViewMatrix==null)
				modelViewMatrix=quadBatch.transformationMatrix;
			var alpha=parentAlpha *quadBatch.alpha;
			var vertexID=this.mNumQuads *4;
			var numQuads=quadBatch.numQuads;
			if (this.mNumQuads+numQuads > this.capacity)this.capacity=this.mNumQuads+numQuads;
			if (this.mNumQuads==0){
				this.blendMode=blendMode ? blendMode :quadBatch.blendMode;
				this.mTexture=quadBatch.mTexture;
				this.mTinted=this.mForceTinted || quadBatch.mTinted || parentAlpha !=1.0;
				this.mSmoothing=quadBatch.mSmoothing;
				this.mVertexData.setPremultipliedAlpha(quadBatch.mVertexData.premultipliedAlpha,false);
			}
			quadBatch.mVertexData.copyTransformedTo(this.mVertexData,vertexID,modelViewMatrix,
			0,numQuads*4);
			if (alpha !=1.0)
				this.mVertexData.scaleAlpha(vertexID,alpha,numQuads*4);
			this.mSyncRequired=true;
			this.mNumQuads+=numQuads;
		}

		__proto.isStateChange=function(tinted,parentAlpha,texture,smoothing,blendMode,numQuads){
			(numQuads===void 0)&& (numQuads=1);
			if (this.mNumQuads==0)return false;
			else if (this.mNumQuads+numQuads > 16383)return true;
			else if (this.mTexture==null && texture==null)
			return this.blendMode !=blendMode;
			else if (this.mTexture !=null && texture !=null)
			return this.mTexture.base !=texture.base ||
			this.mTexture.repeat !=texture.repeat ||
			this.mSmoothing !=smoothing ||
			this.mTinted !=(this.mForceTinted || tinted || parentAlpha !=1.0)||
			this.blendMode !=blendMode;
			else return true;
		}

		__proto.transformQuad=function(quadID,matrix){
			this.mVertexData.transformVertex(quadID *4,matrix,4);
			this.mSyncRequired=true;
		}

		__proto.getVertexColor=function(quadID,vertexID){
			return this.mVertexData.getColor(quadID *4+vertexID);
		}

		__proto.setVertexColor=function(quadID,vertexID,color){
			this.mVertexData.setColor(quadID *4+vertexID,color);
			this.mSyncRequired=true;
		}

		__proto.getVertexAlpha=function(quadID,vertexID){
			return this.mVertexData.getAlpha(quadID *4+vertexID);
		}

		__proto.setVertexAlpha=function(quadID,vertexID,alpha){
			this.mVertexData.setAlpha(quadID *4+vertexID,alpha);
			this.mSyncRequired=true;
		}

		__proto.getQuadColor=function(quadID){
			return this.mVertexData.getColor(quadID *4);
		}

		__proto.setQuadColor=function(quadID,color){
			for (var i=0;i<4;++i)
			this.mVertexData.setColor(quadID *4+i,color);
			this.mSyncRequired=true;
		}

		__proto.getQuadAlpha=function(quadID){
			return this.mVertexData.getAlpha(quadID *4);
		}

		__proto.setQuadAlpha=function(quadID,alpha){
			for (var i=0;i<4;++i)
			this.mVertexData.setAlpha(quadID *4+i,alpha);
			this.mSyncRequired=true;
		}

		__proto.setQuad=function(quadID,quad){
			var matrix=quad.transformationMatrix;
			var alpha=quad.alpha;
			var vertexID=quadID *4;
			quad.copyVertexDataTransformedTo(this.mVertexData,vertexID,matrix);
			if (alpha !=1.0)this.mVertexData.scaleAlpha(vertexID,alpha,4);
			this.mSyncRequired=true;
		}

		__proto.getQuadBounds=function(quadID,transformationMatrix,resultRect){
			return this.mVertexData.getBounds(transformationMatrix,quadID *4,4,resultRect);
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			var transformationMatrix=targetSpace==this ?
			null :this.getTransformationMatrix(targetSpace,QuadBatch.sHelperMatrix);
			return this.mVertexData.getBounds(transformationMatrix,0,this.mNumQuads*4,resultRect);
		}

		__proto.render=function(support,parentAlpha){
			if (this.mNumQuads){
				if (this.mBatchable)
					support.batchQuadBatch(this,parentAlpha);
				else{
					support.finishQuadBatch();
					support.raiseDrawCount();
					this.renderCustom(support.mvpMatrix3D,this.alpha *parentAlpha,support.blendMode);
				}
			}
		}

		__proto.getProgram=function(tinted){
			var target=Starling.current;
			var programName="QB_q";
			if (this.mTexture)
				programName=QuadBatch.getImageProgramName(tinted,this.mTexture.mipMapping,
			this.mTexture.repeat,this.mTexture.format,this.mSmoothing);
			var program=target.getProgram(programName);
			if (!program){
				var vertexShader;
				var fragmentShader;
				if (!this.mTexture){
					vertexShader=GLSL_ShaderList.shader.QB_NOT_TEX_VS;
					fragmentShader=GLSL_ShaderList.shader.QB_NOT_TEX_FS;
				}
				else{
					if (tinted){
						vertexShader=GLSL_ShaderList.shader.QB_TEX_VS_TINTED;
						fragmentShader=GLSL_ShaderList.shader.QB_TEX_FS_TINTED;
					}
					else{
						vertexShader=GLSL_ShaderList.shader.QB_TEX_VS_NOT_TINTED;
						fragmentShader=GLSL_ShaderList.shader.QB_TEX_FS_NOT_TINTED;
					}
				}
				program=target.registerProgramFromSource(programName,
				vertexShader,fragmentShader);
			}
			return program;
		}

		__getset(0,__proto,'forceTinted',function(){return this.mForceTinted;},function(value){
			this.mForceTinted=value;
		});

		__getset(0,__proto,'numQuads',function(){return this.mNumQuads;});
		__getset(0,__proto,'tinted',function(){return this.mTinted || this.mForceTinted;});
		__getset(0,__proto,'texture',function(){return this.mTexture;});
		__getset(0,__proto,'smoothing',function(){return this.mSmoothing;});
		__getset(0,__proto,'premultipliedAlpha',function(){return this.mVertexData.premultipliedAlpha;});
		__getset(0,__proto,'batchable',function(){return this.mBatchable;},function(value){this.mBatchable=value;});
		__getset(0,__proto,'capacity',function(){return this.mVertexData.numVertices / 4;},function(value){
			var oldCapacity=this.capacity;
			if (value==oldCapacity)return;
			else if (value==0)throw new Error("Capacity must be > 0");
			else if (value > 16383)value=16383;
			if (this.mNumQuads > value)this.mNumQuads=value;
			this.mVertexData.numVertices=value *4;
			this.mIndexData.length=value *6;
			for (var i=oldCapacity;i<value;++i){
				this.mIndexData[int(i*6)]=i*4;
				this.mIndexData[int(i*6+1)]=i*4+1;
				this.mIndexData[int(i*6+2)]=i*4+2;
				this.mIndexData[int(i*6+3)]=i*4+1;
				this.mIndexData[int(i*6+4)]=i*4+3;
				this.mIndexData[int(i*6+5)]=i*4+2;
			}
			this.destroyBuffers();
			this.mSyncRequired=true;
		});

		QuadBatch.removeFromStage=function(e){
			for (var t_i=0,len=QuadBatch.szQuadBatchList.length;t_i < len;t_i++){
				if (QuadBatch.szQuadBatchList[t_i] !=this)continue ;
				QuadBatch.szQuadBatchList.splice(t_i,1);
				break ;
			}
		}

		QuadBatch.syncAllQuadBatch=function(){
			for (var t_i=0,len=QuadBatch.szQuadBatchList.length;t_i < len;t_i++){
				QuadBatch.szQuadBatchList[t_i].onVertexDataChanged();
			}
		}

		QuadBatch.compile=function(object,quadBatches){
			QuadBatch.compileObject(object,quadBatches,-1,new Matrix());
		}

		QuadBatch.optimize=function(quadBatches){
			var batch1,batch2;
			for (var i=0;i<quadBatches.length;++i){
				batch1=quadBatches[i];
				for (var j=i+1;j<quadBatches.length;){
					batch2=quadBatches[j];
					if (!batch1.isStateChange(batch2.tinted,1.0,batch2.texture,
						batch2.smoothing,batch2.blendMode)){
						batch1.addQuadBatch(batch2);
						batch2.dispose();
						quadBatches.splice(j,1);
					}
					else++j;
				}
			}
		}

		QuadBatch.compileObject=function(object,quadBatches,quadBatchID,transformationMatrix,alpha,blendMode,ignoreCurrentFilter){
			(alpha===void 0)&& (alpha=1.0);
			(ignoreCurrentFilter===void 0)&& (ignoreCurrentFilter=false);
			if ((object instanceof starling.display.Sprite3D ))
				throw new IllegalOperationError("Sprite3D objects cannot be flattened");
			var i=0;
			var quadBatch;
			var isRootObject=false;
			var objectAlpha=object.alpha;
			var container=iflash.method.typeAs(object,DisplayObjectContainer1);
			var quad=iflash.method.typeAs(object,Quad);
			var batch=iflash.method.typeAs(object,QuadBatch);
			var filter=object.filter;
			if (quadBatchID==-1){
				isRootObject=true;
				quadBatchID=0;
				objectAlpha=1.0;
				blendMode=object.blendMode;
				ignoreCurrentFilter=true;
				if (quadBatches.length==0)quadBatches.push(new QuadBatch());
				else quadBatches[0].reset();
			}
			else{
				if (object.mask)
					console.log("[Starling] Masks are ignored on children of a flattened sprite.");
				if (((object instanceof starling.display.Sprite ))&& (object).clipRect)
					console.log("[Starling] ClipRects are ignored on children of a flattened sprite.");
			}
			if (filter && !ignoreCurrentFilter){
				if (filter.mode==/*starling.filters.FragmentFilterMode.ABOVE*/"above"){
					quadBatchID=QuadBatch.compileObject(object,quadBatches,quadBatchID,
					transformationMatrix,alpha,blendMode,true);
				}
				quadBatchID=QuadBatch.compileObject(filter.compile(object),quadBatches,quadBatchID,
				transformationMatrix,alpha,blendMode);
				if (filter.mode==/*starling.filters.FragmentFilterMode.BELOW*/"below"){
					quadBatchID=QuadBatch.compileObject(object,quadBatches,quadBatchID,
					transformationMatrix,alpha,blendMode,true);
				}
			}
			else if (container){
				var numChildren=container.numChildren;
				var childMatrix=new Matrix();
				for (i=0;i<numChildren;++i){
					var child=container.getChildAt(i);
					if (child.hasVisibleArea){
						var childBlendMode=child.blendMode==/*starling.display.BlendMode.AUTO*/"auto" ?
						blendMode :child.blendMode;
						childMatrix.copyFrom(transformationMatrix);
						RenderSupport.transformMatrixForObject(childMatrix,child);
						quadBatchID=QuadBatch.compileObject(child,quadBatches,quadBatchID,childMatrix,
						alpha*objectAlpha,childBlendMode);
					}
				}
			}
			else if (quad || batch){
				var texture;
				var smoothing;
				var tinted=false;
				var numQuads=0;
				if (quad){
					var image=quad;
					texture=image ? image.texture :null;
					smoothing=image ? image.smoothing :null;
					tinted=quad.tinted;
					numQuads=1;
				}
				else{
					texture=batch.mTexture;
					smoothing=batch.mSmoothing;
					tinted=batch.mTinted;
					numQuads=batch.mNumQuads;
				}
				quadBatch=quadBatches[quadBatchID];
				if (quadBatch.isStateChange(tinted,alpha*objectAlpha,texture,
					smoothing,blendMode,numQuads)){
					quadBatchID++;
					if (quadBatches.length <=quadBatchID)quadBatches.push(new QuadBatch());
					quadBatch=quadBatches[quadBatchID];
					quadBatch.reset();
				}
				if (quad)
					quadBatch.addQuad(quad,alpha,texture,smoothing,transformationMatrix,blendMode);
				else
				quadBatch.addQuadBatch(batch,alpha,transformationMatrix,blendMode);
			}
			else{
				throw new Error("Unsupported display object: "+iflash.utils.getQualifiedClassName(object));
			}
			if (isRootObject){
				for (i=quadBatches.length-1;i>quadBatchID;--i)
				quadBatches.pop().dispose();
			}
			return quadBatchID;
		}

		QuadBatch.getImageProgramName=function(tinted,mipMap,repeat,format,smoothing){
			(mipMap===void 0)&& (mipMap=true);
			(repeat===void 0)&& (repeat=false);
			(format===void 0)&& (format="bgra");
			(smoothing===void 0)&& (smoothing="bilinear");
			var bitField=0;
			if (tinted)bitField |=1;
			if (mipMap)bitField |=1 << 1;
			if (repeat)bitField |=1 << 2;
			if (smoothing==/*starling.textures.TextureSmoothing.NONE*/"none")
				bitField |=1 << 3;
			else if (smoothing==/*starling.textures.TextureSmoothing.TRILINEAR*/"trilinear")
			bitField |=1 << 4;
			if (format==/*iflash.display3D.Context3DTextureFormat.COMPRESSED*/"compressed")
				bitField |=1 << 5;
			else if (format=="compressedAlpha")
			bitField |=1 << 6;
			var name=QuadBatch.sProgramNameCache[bitField];
			if (name==null){
				name="QB_i."+bitField.toString(16);
				QuadBatch.sProgramNameCache[bitField]=name;
			}
			return name;
		}

		QuadBatch.MAX_NUM_QUADS=16383;
		QuadBatch.QUAD_PROGRAM_NAME="QB_q";
		QuadBatch.Y_FLIP=false;
		QuadBatch.szQuadBatchList=[];
		__static(QuadBatch,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sRenderAlpha',function(){return this.sRenderAlpha=/*new vector.<>*/[1.0,1.0,1.0,1.0];},'sProgramNameCache',function(){return this.sProgramNameCache=new Object();}
		]);
		return QuadBatch;
	})(DisplayObject1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/extensions/particlesystem.as
	//class starling.extensions.ParticleSystem extends starling.display.DisplayObject
	var ParticleSystem=(function(_super){
		function ParticleSystem(texture,emissionRate,initialCapacity,maxCapacity,blendFactorSource,blendFactorDest){
			this.mTexture=null;
			this.mParticles=null;
			this.mFrameTime=NaN;
			this.mProgram=null;
			this.mVertexData=null;
			this.mVertexBuffer=null;
			this.mIndices=null;
			this.mIndexBuffer=null;
			this.mNumParticles=0;
			this.mMaxCapacity=0;
			this.mEmissionRate=NaN;
			this.mEmissionTime=NaN;
			this.mEmitterX=NaN;
			this.mEmitterY=NaN;
			this.mBlendFactorSource=null;
			this.mBlendFactorDestination=null;
			this.mSmoothing=null;
			ParticleSystem.__super.call(this);
			(initialCapacity===void 0)&& (initialCapacity=128);
			(maxCapacity===void 0)&& (maxCapacity=16383);
			if (texture==null)throw new ArgumentError("texture must not be null");
			this.mTexture=texture;
			this.mParticles=__newvec(0,null);
			this.mVertexData=new VertexData(0);
			this.mIndices=/*new vector.<>*/[];
			this.mEmissionRate=emissionRate;
			this.mEmissionTime=0.0;
			this.mFrameTime=0.0;
			this.mEmitterX=this.mEmitterY=0;
			this.mMaxCapacity=Math.min(16383,maxCapacity);
			this.mSmoothing=/*starling.textures.TextureSmoothing.BILINEAR*/"bilinear";
			this.mBlendFactorSource=blendFactorSource || /*iflash.display3D.Context3DBlendFactor.ONE*/"one";
			this.mBlendFactorDestination=blendFactorDest || /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha";
			this.createProgram();
			this.updatePremultipliedAlpha();
			this.raiseCapacity(initialCapacity);
		}

		__class(ParticleSystem,'starling.extensions.ParticleSystem',false,_super);
		var __proto=ParticleSystem.prototype;
		Laya.imps(__proto,{"starling.animation.IAnimatable":true})
		__proto.dispose=function(){
			Starling.current.stage3D.removeEventListener(/*starling.events.Event.CONTEXT3D_CREATE*/"context3DCreate",__bind(this,this.onContextCreated));
			if (this.mVertexBuffer)this.mVertexBuffer.dispose();
			if (this.mIndexBuffer)this.mIndexBuffer.dispose();
			_super.prototype.dispose.call(this);
		}

		__proto.onContextCreated=function(event){
			this.createProgram();
			this.raiseCapacity(0);
		}

		__proto.updatePremultipliedAlpha=function(){
			var pma=this.mTexture.premultipliedAlpha;
			if (this.mBlendFactorSource==/*iflash.display3D.Context3DBlendFactor.ONE*/"one" &&
				this.mBlendFactorDestination==/*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha"){
				this.mVertexData.premultipliedAlpha=this.mTexture.premultipliedAlpha;
				if (!pma)this.mBlendFactorSource=/*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha";
			}
			else{
				this.mVertexData.premultipliedAlpha=false;
			}
		}

		__proto.createParticle=function(){
			return new Particle();
		}

		__proto.initParticle=function(particle){
			particle.x=this.mEmitterX;
			particle.y=this.mEmitterY;
			particle.currentTime=0;
			particle.totalTime=1;
			particle.color=Math.random()*0xffffff;
		}

		__proto.advanceParticle=function(particle,passedTime){
			particle.y+=passedTime *250;
			particle.alpha=1.0-particle.currentTime / particle.totalTime;
			particle.scale=1.0-particle.alpha;
			particle.currentTime+=passedTime;
		}

		__proto.raiseCapacity=function(byAmount){
			var oldCapacity=this.capacity;
			var newCapacity=Math.min(this.mMaxCapacity,oldCapacity+byAmount);
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			var baseVertexData=new VertexData(4);
			baseVertexData.setTexCoords(0,0.0,0.0);
			baseVertexData.setTexCoords(1,1.0,0.0);
			baseVertexData.setTexCoords(2,0.0,1.0);
			baseVertexData.setTexCoords(3,1.0,1.0);
			this.mTexture.adjustVertexData(baseVertexData,0,4);
			this.mParticles.fixed=false;
			this.mIndices.fixed=false;
			for (var i=oldCapacity;i<newCapacity;++i){
				var numVertices=i *4;
				var numIndices=i *6;
				this.mParticles[i]=this.createParticle();
				this.mVertexData.append(baseVertexData);
				this.mIndices[ numIndices]=numVertices;
				this.mIndices[int(numIndices+1)]=numVertices+1;
				this.mIndices[int(numIndices+2)]=numVertices+2;
				this.mIndices[int(numIndices+3)]=numVertices+1;
				this.mIndices[int(numIndices+4)]=numVertices+3;
				this.mIndices[int(numIndices+5)]=numVertices+2;
			}
			if (newCapacity < oldCapacity){
				this.mParticles.length=newCapacity;
				this.mIndices.length=newCapacity *6;
			}
			this.mParticles.fixed=true;
			this.mIndices.fixed=true;
			if (this.mVertexBuffer)this.mVertexBuffer.dispose();
			if (this.mIndexBuffer)this.mIndexBuffer.dispose();
			if (newCapacity > 0){
				this.mVertexBuffer=context.createVertexBuffer(newCapacity *4,/*starling.utils.VertexData.ELEMENTS_PER_VERTEX*/8);
				this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,newCapacity *4);
				this.mIndexBuffer=context.createIndexBuffer(newCapacity *6);
				this.mIndexBuffer.uploadFromVector(this.mIndices,0,newCapacity *6);
			}
		}

		__proto.start=function(duration){
			(duration===void 0)&& (duration=Number.MAX_VALUE);
			if (this.mEmissionRate !=0)
				this.mEmissionTime=duration;
		}

		__proto.stop=function(clearParticles){
			(clearParticles===void 0)&& (clearParticles=false);
			this.mEmissionTime=0.0;
			if (clearParticles)this.clear();
		}

		__proto.clear=function(){
			this.mNumParticles=0;
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (resultRect==null)resultRect=new Rectangle();
			this.getTransformationMatrix(targetSpace,ParticleSystem.sHelperMatrix);
			MatrixUtil1.transformCoords(ParticleSystem.sHelperMatrix,0,0,ParticleSystem.sHelperPoint);
			resultRect.x=ParticleSystem.sHelperPoint.x;
			resultRect.y=ParticleSystem.sHelperPoint.y;
			resultRect.width=resultRect.height=0;
			return resultRect;
		}

		__proto.advanceTime=function(passedTime){
			var particleIndex=0;
			var particle;
			while (particleIndex < this.mNumParticles){
				particle=this.mParticles [particleIndex];
				if (particle.currentTime < particle.totalTime){
					this.advanceParticle(particle,passedTime);
					++particleIndex;
				}
				else{
					if (particleIndex !=this.mNumParticles-1){
						var nextParticle=this.mParticles [int(this.mNumParticles-1)];
						this.mParticles[int(this.mNumParticles-1)]=particle;
						this.mParticles[particleIndex]=nextParticle;
					}
					--this.mNumParticles;
					if (this.mNumParticles==0 && this.mEmissionTime==0)
						this.dispatchEventWith(/*starling.events.Event.COMPLETE*/"complete");
				}
			}
			if (this.mEmissionTime > 0){
				var timeBetweenParticles=1.0 / this.mEmissionRate;
				this.mFrameTime+=passedTime;
				while (this.mFrameTime > 0){
					if (this.mNumParticles < this.mMaxCapacity){
						if (this.mNumParticles==this.capacity)
							this.raiseCapacity(this.capacity);
						particle=this.mParticles [this.mNumParticles];
						this.initParticle(particle);
						if (particle.totalTime > 0.0){
							this.advanceParticle(particle,this.mFrameTime);
							++this.mNumParticles
						}
					}
					this.mFrameTime-=timeBetweenParticles;
				}
				if (this.mEmissionTime !=Number.MAX_VALUE)
					this.mEmissionTime=Math.max(0.0,this.mEmissionTime-passedTime);
				if (this.mNumParticles==0 && this.mEmissionTime==0)
					this.dispatchEventWith(/*starling.events.Event.COMPLETE*/"complete");
			};
			var vertexID=0;
			var color=0;
			var alpha=NaN;
			var rotation=NaN;
			var x=NaN,y=NaN;
			var xOffset=NaN,yOffset=NaN;
			var textureWidth=this.mTexture.width;
			var textureHeight=this.mTexture.height;
			for (var i=0;i<this.mNumParticles;++i){
				vertexID=i << 2;
				particle=this.mParticles [i];
				color=particle.color;
				alpha=particle.alpha;
				rotation=particle.rotation;
				x=particle.x;
				y=particle.y;
				xOffset=textureWidth *particle.scale >> 1;
				yOffset=textureHeight *particle.scale >> 1;
				for (var j=0;j<4;++j)
				this.mVertexData.setColorAndAlpha(vertexID+j,color,alpha);
				if (rotation){
					var cos=Math.cos(rotation);
					var sin=Math.sin(rotation);
					var cosX=cos *xOffset;
					var cosY=cos *yOffset;
					var sinX=sin *xOffset;
					var sinY=sin *yOffset;
					this.mVertexData.setPosition(vertexID,x-cosX+sinY,y-sinX-cosY);
					this.mVertexData.setPosition(vertexID+1,x+cosX+sinY,y+sinX-cosY);
					this.mVertexData.setPosition(vertexID+2,x-cosX-sinY,y-sinX+cosY);
					this.mVertexData.setPosition(vertexID+3,x+cosX-sinY,y+sinX+cosY);
				}
				else{
					this.mVertexData.setPosition(vertexID,x-xOffset,y-yOffset);
					this.mVertexData.setPosition(vertexID+1,x+xOffset,y-yOffset);
					this.mVertexData.setPosition(vertexID+2,x-xOffset,y+yOffset);
					this.mVertexData.setPosition(vertexID+3,x+xOffset,y+yOffset);
				}
			}
		}

		__proto.render=function(support,alpha){
			if (this.mNumParticles==0)return;
			support.finishQuadBatch();
			if (support.hasOwnProperty("raiseDrawCount"))
				support.raiseDrawCount();
			alpha *=this.alpha;
			var context=Starling.context;
			var pma=this.texture.premultipliedAlpha;
			ParticleSystem.sRenderAlpha[0]=ParticleSystem.sRenderAlpha[1]=ParticleSystem.sRenderAlpha[2]=pma ? alpha :1.0;
			ParticleSystem.sRenderAlpha[3]=alpha;
			if (context==null)throw new MissingContextError();
			this.mVertexBuffer.uploadFromVector(this.mVertexData.rawData,0,this.mNumParticles *4);
			this.mIndexBuffer.uploadFromVector(this.mIndices,0,this.mNumParticles *6);
			context.setBlendFactors(this.mBlendFactorSource,this.mBlendFactorDestination);
			context.setProgram(this.mProgram);
			var loc=context.m_currentProgram.getUniformLocation("u_tex");
			if (loc !=null)context.webglContext.uniform1i(loc,0);
			context.setTextureAt(0,this.mTexture.base);
			var local;
			local=context.m_currentProgram.getUniformLocation("u_mvpMatrix");
			if(local !=null){
				context.setProgramConstantsFromMatrix(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",local,support.mvpMatrix3D,true);
				local=null;
			}
			local=context.m_currentProgram.getUniformLocation("u_alpha");
			if(local !=null){
				context.setProgramConstantsFromVector(/*iflash.display3D.Context3DProgramType.VERTEX*/"vertex",local,ParticleSystem.sRenderAlpha);
				local=null;
			}
			local=context.m_currentProgram.getAttributeLocation("a_position");
			if(local !=null){
				context.setVertexBufferAt(local,this.mVertexBuffer,/*starling.utils.VertexData.POSITION_OFFSET*/0,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
				local=null;
			}
			local=context.m_currentProgram.getAttributeLocation("a_texCoord");
			if(local !=null){
				context.setVertexBufferAt(local,this.mVertexBuffer,/*starling.utils.VertexData.TEXCOORD_OFFSET*/6,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_2*/"float2");
				local=null;
			}
			local=context.m_currentProgram.getAttributeLocation("a_color");
			if(local !=null){
				context.setVertexBufferAt(local,this.mVertexBuffer,/*starling.utils.VertexData.COLOR_OFFSET*/2,/*iflash.display3D.Context3DVertexBufferFormat.FLOAT_4*/"float4");
				local=null;
			}
			context.drawTriangles(this.mIndexBuffer,0,this.mNumParticles *2);
		}

		__proto.populate=function(count){
			count=Math.min(count,this.mMaxCapacity-this.mNumParticles);
			if (this.mNumParticles+count > this.capacity)
				this.raiseCapacity(this.mNumParticles+count-this.capacity);
			var p;
			for (var i=0;i<count;i++){
				p=this.mParticles[this.mNumParticles+i];
				this.initParticle(p);
				this.advanceParticle(p,Math.random()*p.totalTime);
			}
			this.mNumParticles+=count;
		}

		__proto.createProgram=function(){
			var mipmap=this.mTexture.mipMapping;
			var textureFormat=this.mTexture.format;
			var programName="ext.ParticleSystem."+textureFormat+"/"+
			this.mSmoothing.charAt(0)+(mipmap ? "+mm" :"");
			this.mProgram=Starling.current.getProgram(programName);
			if (this.mProgram)return;
			var vertexProgramCode=null;
			var fragmentProgramCode=null;
			vertexProgramCode=
			"uniform   mat4  u_mvpMatrix;\n"+
			"uniform   vec4  u_alpha;\n"+
			"attribute vec4  a_position;\n"+
			"attribute vec2  a_texCoord;\n"+
			"attribute vec4  a_color;\n"+
			"varying   vec4  v_color;\n"+
			"varying   vec2  v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_Position = u_mvpMatrix * a_position;\n"+
			"	v_color = a_color * u_alpha;\n"+
			"	v_texCoord = a_texCoord;\n"+
			"}";
			fragmentProgramCode=
			"precision  mediump    float;\n"+
			"uniform    sampler2D  u_tex;\n"+
			"varying    vec4       v_color;\n"+
			"varying    vec2       v_texCoord;\n"+
			"void main()\n"+
			"{\n"+
			"	gl_FragColor = texture2D(u_tex, v_texCoord);\n"+
			"	gl_FragColor *= v_color;\n"+
			"}";
			this.mProgram=RenderSupport.assembleAgal(vertexProgramCode,fragmentProgramCode);
		}

		__getset(0,__proto,'isEmitting',function(){return this.mEmissionTime > 0 && this.mEmissionRate > 0;});
		__getset(0,__proto,'capacity',function(){return this.mVertexData.numVertices / 4;});
		__getset(0,__proto,'blendFactorDestination',function(){return this.mBlendFactorDestination;},function(value){
			this.mBlendFactorDestination=value;
			this.updatePremultipliedAlpha();
		});

		__getset(0,__proto,'emissionRate',function(){return this.mEmissionRate;},function(value){this.mEmissionRate=value;});
		__getset(0,__proto,'smoothing',function(){return this.mSmoothing;},function(value){this.mSmoothing=value;});
		__getset(0,__proto,'numParticles',function(){return this.mNumParticles;});
		__getset(0,__proto,'maxCapacity',function(){return this.mMaxCapacity;},function(value){
			this.mMaxCapacity=Math.min(16383,value);
		});

		__getset(0,__proto,'blendFactorSource',function(){return this.mBlendFactorSource;},function(value){
			this.mBlendFactorSource=value;
			this.updatePremultipliedAlpha();
		});

		__getset(0,__proto,'emitterX',function(){return this.mEmitterX;},function(value){this.mEmitterX=value;});
		__getset(0,__proto,'emitterY',function(){return this.mEmitterY;},function(value){this.mEmitterY=value;});
		__getset(0,__proto,'texture',function(){return this.mTexture;},function(value){
			if (value==null)throw new ArgumentError("Texture cannot be null");
			this.mTexture=value;
			this.createProgram();
			this.updatePremultipliedAlpha();
			for (var i=this.mVertexData.numVertices-4;i >=0;i-=4){
				this.mVertexData.setTexCoords(i+0,0.0,0.0);
				this.mVertexData.setTexCoords(i+1,1.0,0.0);
				this.mVertexData.setTexCoords(i+2,0.0,1.0);
				this.mVertexData.setTexCoords(i+3,1.0,1.0);
				this.mTexture.adjustVertexData(this.mVertexData,i,4);
			}
		});

		ParticleSystem.MAX_NUM_PARTICLES=16383;
		__static(ParticleSystem,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sHelperPoint',function(){return this.sHelperPoint=new Point();},'sRenderAlpha',function(){return this.sRenderAlpha=/*new vector.<>*/[1.0,1.0,1.0,1.0];}
		]);
		return ParticleSystem;
	})(DisplayObject1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/concretevideotexture.as
	//class starling.textures.ConcreteVideoTexture extends starling.textures.ConcreteTexture
	var ConcreteVideoTexture=(function(_super){
		function ConcreteVideoTexture(base,scale){
			(scale===void 0)&& (scale=1);
			var format=/*iflash.display3D.Context3DTextureFormat.BGRA*/"bgra";
			var width="videoWidth" in base ? base["videoWidth"] :0;
			var height="videoHeight" in base ? base["videoHeight"] :0;
			ConcreteVideoTexture.__super.call(this,base,format,width,height,false,false,false,scale,false);
			if (iflash.utils.getQualifiedClassName(base)!="flash.display3D.textures::VideoTexture")
				throw new Error("'base' must be VideoTexture");
		}

		__class(ConcreteVideoTexture,'starling.textures.ConcreteVideoTexture',false,_super);
		var __proto=ConcreteVideoTexture.prototype;
		__getset(0,__proto,'nativeWidth',function(){
			return this.base["videoWidth"];
		});

		__getset(0,__proto,'nativeHeight',function(){
			return this.base["videoHeight"];
		});

		__getset(0,__proto,'width',function(){
			return this.nativeWidth / this.scale;
		});

		__getset(0,__proto,'height',function(){
			return this.nativeHeight / this.scale;
		});

		return ConcreteVideoTexture;
	})(ConcreteTexture)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/textures/rendertexture.as
	//class starling.textures.RenderTexture extends starling.textures.SubTexture
	var RenderTexture=(function(_super){
		function RenderTexture(width,height,persistent,scale,format,repeat){
			this.CONTEXT_POT_SUPPORT_KEY="RenderTexture.supportsNonPotDimensions";
			this.PMA=true;
			this.mActiveTexture=null;
			this.mBufferTexture=null;
			this.mHelperImage=null;
			this.mDrawing=false;
			this.mBufferReady=false;
			this.mIsPersistent=false;
			this.mSupport=null;
			(persistent===void 0)&& (persistent=true);
			(scale===void 0)&& (scale=-1);
			(format===void 0)&& (format="bgra");
			(repeat===void 0)&& (repeat=false);
			if (scale <=0)scale=Starling.contentScaleFactor;
			var legalWidth=width;
			var legalHeight=height;
			if (!this.supportsNonPotDimensions){
				legalWidth=starling.utils.getNextPowerOfTwo(width *scale)/ scale;
				legalHeight=starling.utils.getNextPowerOfTwo(height *scale)/ scale;
			}
			this.mActiveTexture=Texture1.empty(legalWidth,legalHeight,this.PMA,false,true,scale,format,repeat);
			this.mActiveTexture.root.onRestore=this.mActiveTexture.root.clear;
			this.mActiveTexture.root.mBase.bTargetS=true;
			RenderTexture.__super.call(this,this.mActiveTexture,new Rectangle(0,0,width,height),true,null,false);
			var rootWidth=this.mActiveTexture.root.width;
			var rootHeight=this.mActiveTexture.root.height;
			this.mIsPersistent=persistent;
			this.mSupport=new RenderSupport();
			this.mSupport.setProjectionMatrix(0,0,rootWidth,rootHeight,width,height);
			if (persistent && (!RenderTexture.optimizePersistentBuffers || !SystemUtil.supportsRelaxedTargetClearRequirement)){
				this.mBufferTexture=Texture1.empty(legalWidth,legalHeight,this.PMA,false,true,scale,format,repeat);
				this.mBufferTexture.root.onRestore=this.mBufferTexture.root.clear;
				this.mBufferTexture.root.mBase.bTargetS=true;
				this.mHelperImage=new Image2(this.mBufferTexture);
				this.mHelperImage.smoothing=/*starling.textures.TextureSmoothing.NONE*/"none";
			}
		}

		__class(RenderTexture,'starling.textures.RenderTexture',false,_super);
		var __proto=RenderTexture.prototype;
		__proto.dispose=function(){
			if(this.mSupport)
				this.mSupport.dispose();
			this.mActiveTexture.dispose();
			if (this.isDoubleBuffered){
				this.mBufferTexture.dispose();
				this.mHelperImage.dispose();
			}
			_super.prototype.dispose.call(this);
		}

		__proto.draw=function(object,matrix,alpha,antiAliasing){
			(alpha===void 0)&& (alpha=1.0);
			(antiAliasing===void 0)&& (antiAliasing=0);
			if (object==null)return;
			if (this.mDrawing)
				this.render(object,matrix,alpha);
			else
			this.renderBundled(__bind(this,this.render),object,matrix,alpha,antiAliasing);
		}

		__proto.drawBundled=function(drawingBlock,antiAliasing){
			(antiAliasing===void 0)&& (antiAliasing=0);
			this.renderBundled(drawingBlock,null,null,1.0,antiAliasing);
		}

		__proto.render=function(object,matrix,alpha){
			(alpha===void 0)&& (alpha=1.0);
			var filter=object.filter;
			var mask=object.mask;
			this.mSupport.loadIdentity();
			this.mSupport.blendMode=object.blendMode==/*starling.display.BlendMode.AUTO*/"auto" ?
			/*starling.display.BlendMode.NORMAL*/"normal" :object.blendMode;
			if (matrix)this.mSupport.prependMatrix(matrix);
			else this.mSupport.transformMatrix(object);
			if (mask)this.mSupport.pushMask(mask);
			if (filter)filter.render(object,this.mSupport,alpha);
			else object.render(this.mSupport,alpha);
			if (mask)this.mSupport.popMask();
		}

		__proto.renderBundled=function(renderBlock,object,matrix,alpha,antiAliasing){
			(alpha===void 0)&& (alpha=1.0);
			(antiAliasing===void 0)&& (antiAliasing=0);
			var context=Starling.context;
			if (context==null)throw new MissingContextError();
			if (!Starling.current.contextValid)return;
			if (this.isDoubleBuffered){
				var tmpTexture=this.mActiveTexture;
				this.mActiveTexture=this.mBufferTexture;
				this.mBufferTexture=tmpTexture;
				this.mHelperImage.texture=this.mBufferTexture;
			}
			RenderTexture.sClipRect.setTo(0,0,this.mActiveTexture.width,this.mActiveTexture.height);
			this.mSupport.pushClipRect(RenderTexture.sClipRect);
			this.mSupport.setRenderTarget(this.mActiveTexture,antiAliasing);
			if (this.isDoubleBuffered || !this.isPersistent || !this.mBufferReady)
				this.mSupport.clear();
			QuadBatch.Y_FLIP=true;
			if (this.isDoubleBuffered && this.mBufferReady)
				this.mHelperImage.render(this.mSupport,1.0);
			else
			this.mBufferReady=true;
			try{
				this.mDrawing=true;
				starling.utils.execute(renderBlock,object,matrix,alpha);
			}
			finally{
				this.mDrawing=false;
				this.mSupport.finishQuadBatch();
				this.mSupport.nextFrame();
				this.mSupport.renderTarget=null;
				this.mSupport.popClipRect();
			}
			QuadBatch.Y_FLIP=false;
		}

		__proto.clear=function(rgb,alpha){
			(rgb===void 0)&& (rgb=0);
			(alpha===void 0)&& (alpha=0.0);
			if (!Starling.current.contextValid)return;
			var previousRenderTarget=this.mSupport.renderTarget;
			this.mSupport.renderTarget=this.mActiveTexture;
			this.mSupport.clear(rgb,alpha);
			this.mSupport.renderTarget=previousRenderTarget;
			this.mBufferReady=true;
		}

		__getset(0,__proto,'conchRestore',null,function(func){
			if(Laya.CONCHVER && (func !=null)){
				this.mActiveTexture.root.mBase.restoreFunc=func;
				if(this.mBufferTexture)this.mBufferTexture.root.mBase.restoreFunc=func;
				console.log("Register conchRestore Func at client...");
			}
		});

		__getset(0,__proto,'supportsNonPotDimensions',function(){
			var target=Starling.current;
			var context=Starling.context;
			var support=target.contextData[this.CONTEXT_POT_SUPPORT_KEY];
			if (support==null){
				if (target.profile !="baselineConstrained" && "createRectangleTexture" in context){
					var texture;
					var buffer;
					try{
						texture=context["createRectangleTexture"](2,3,"bgra",true);
						context.setRenderToTexture(texture);
						context.clear();
						context.setRenderToBackBuffer();
						context.createVertexBuffer(1,1);
						support=true;
					}
					catch (e){
						support=false;
					}
					finally{
						if (texture)texture.dispose();
						if (buffer)buffer.dispose();
					}
				}
				else{
					support=false;
				}
				target.contextData[this.CONTEXT_POT_SUPPORT_KEY]=support;
			}
			return support;
		});

		__getset(0,__proto,'isDoubleBuffered',function(){return this.mBufferTexture !=null;});
		__getset(0,__proto,'isPersistent',function(){return this.mIsPersistent;});
		__getset(0,__proto,'base',function(){return this.mActiveTexture.base;});
		__getset(0,__proto,'root',function(){return this.mActiveTexture.root;});
		RenderTexture.optimizePersistentBuffers=false;
		__static(RenderTexture,
		['sClipRect',function(){return this.sClipRect=new Rectangle();}
		]);
		return RenderTexture;
	})(SubTexture)


	//file:///e:/develop/projects_b/gameframework_laya/src/demo/testobj.as
	//class demo.TestObj extends g.MyObj
	var TestObj=(function(_super){
		function TestObj(){
			this.sp=null;
			this.bb=null;
			this.cc=null;
			this.b=null;
			TestObj.__super.call(this);
			console.log("new player");
		}

		__class(TestObj,'demo.TestObj',false,_super);
		var __proto=TestObj.prototype;
		__proto.init=function(info){
			this.bb=this.createBtn(150,100,"胜利",this._game.global.layerMan.uiLayer);
			this.bb.name="胜利";
			this.cc=this.createBtn(250,100,"失败",this._game.global.layerMan.uiLayer);
			this.cc.name="失败";
			this.bb.addEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			this.cc.addEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			this.scheduleUpdate(/*framework.UpdateType.UPDATE*/2);
		}

		__proto.clickHandler=function(e){
			var targetName=e.target["name"];
			switch (targetName){
				case "胜利":
					console.log("发送胜利");
					this._myGame.gameWin();
					break ;
				case "失败":
					console.log("发送失败");
					this._myGame.gameFaiure();
					break ;
				default :
				}
		}

		__proto.createBtn=function(x,y,text,parent){
			var sp=new Sprite();
			sp.x=x;
			sp.y=y;
			sp.graphics.beginFill(0xcccccc,1);
			sp.graphics.drawRect(0,0,60,20);
			sp.graphics.endFill();
			var txt=new TextField();
			txt.textColor=0x0000ff;
			txt.text=text;
			txt.width=60;
			txt.height=20;
			sp.addChild(txt);
			parent.addChild(sp);
			sp.mouseChildren=false;
			sp.buttonMode=true;
			return sp;
		}

		__proto.update=function(){}
		__proto.destroy=function(){
			this.unscheduleUpdate(/*framework.UpdateType.UPDATE*/2);
			console.log("destroy TestObj");
			this.bb.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			this.cc.removeEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			FuncUtil.removeChild(this.bb);
			FuncUtil.removeChild(this.cc);
			FuncUtil.removeChild(this.sp);
			this._game.global.curWorld.DestroyBody(this.b);
			this.b=null;
			this.bb=null;
			this.cc=null;
			this.sp=null;
			framework.objs.GameObject.prototype.destroy.call(this);
		}

		TestObj.create=function(){
			var game=Game.getInstance();
			game.createGameObj(new TestObj());
		}

		return TestObj;
	})(MyObj)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/map.as
	//class g.Map extends g.MyObj
	var Map=(function(_super){
		function Map(){
			this._model=null;
			Map.__super.call(this);}
		__class(Map,'g.Map',false,_super);
		var __proto=Map.prototype;
		__proto.init=function(info){
			this._model=MapModel.create(this._myGame);
		}

		__proto.destroy=function(){
			this._model.dispose();
			framework.objs.GameObject.prototype.destroy.call(this);
		}

		__getset(0,__proto,'width',function(){return this._model.width;});
		__getset(0,__proto,'height',function(){return this._model.height;});
		Map.create=function(){
			var game=Game.getInstance();
			game.createGameObj(new Map());
		}

		return Map;
	})(MyObj)


	;
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/sprite.as
	//class starling.display.Sprite extends starling.display.DisplayObjectContainer
	var Sprite1=(function(_super){
		function Sprite(){
			this.mFlattenedContents=null;
			this.mFlattenRequested=false;
			this.mFlattenOptimized=false;
			this.mClipRect=null;
			Sprite.__super.call(this);
		}

		__class(Sprite,'starling.display.Sprite',false,_super,'Sprite1');
		var __proto=Sprite.prototype;
		__proto.dispose=function(){
			this.disposeFlattenedContents();
			_super.prototype.dispose.call(this);
		}

		__proto.disposeFlattenedContents=function(){
			if (this.mFlattenedContents){
				for (var i=0,max=this.mFlattenedContents.length;i<max;++i)
				this.mFlattenedContents[i].dispose();
				this.mFlattenedContents=null;
			}
		}

		__proto.flatten=function(ignoreChildOrder){
			(ignoreChildOrder===void 0)&& (ignoreChildOrder=false);
			this.mFlattenRequested=true;
			this.mFlattenOptimized=ignoreChildOrder;
			this.broadcastEventWith(/*starling.events.Event.FLATTEN*/"flatten");
		}

		__proto.unflatten=function(){
			this.mFlattenRequested=false;
			this.disposeFlattenedContents();
		}

		__proto.getClipRect=function(targetSpace,resultRect){
			if (this.mClipRect==null)return null;
			if (resultRect==null)resultRect=new Rectangle();
			var x=NaN,y=NaN;
			var minX=Number.MAX_VALUE;
			var maxX=-Number.MAX_VALUE;
			var minY=Number.MAX_VALUE;
			var maxY=-Number.MAX_VALUE;
			var transMatrix=this.getTransformationMatrix(targetSpace,Sprite.sHelperMatrix);
			for (var i=0;i<4;++i){
				switch(i){
					case 0:x=this.mClipRect.left;y=this.mClipRect.top;break ;
					case 1:x=this.mClipRect.left;y=this.mClipRect.bottom;break ;
					case 2:x=this.mClipRect.right;y=this.mClipRect.top;break ;
					case 3:x=this.mClipRect.right;y=this.mClipRect.bottom;break ;
					};
				var transformedPoint=MatrixUtil1.transformCoords(transMatrix,x,y,Sprite.sHelperPoint);
				if (minX > transformedPoint.x)minX=transformedPoint.x;
				if (maxX < transformedPoint.x)maxX=transformedPoint.x;
				if (minY > transformedPoint.y)minY=transformedPoint.y;
				if (maxY < transformedPoint.y)maxY=transformedPoint.y;
			}
			resultRect.setTo(minX,minY,maxX-minX,maxY-minY);
			return resultRect;
		}

		__proto.getBounds=function(targetSpace,resultRect){
			var bounds=_super.prototype.getBounds.call(this,targetSpace,resultRect);
			if (this.mClipRect)
				RectangleUtil.intersect(bounds,this.getClipRect(targetSpace,Sprite.sHelperRect),
			bounds);
			return bounds;
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (this.mClipRect !=null && !this.mClipRect.containsPoint(localPoint))
				return null;
			else
			return _super.prototype.hitTest.call(this,localPoint,forTouch);
		}

		__proto.render=function(support,parentAlpha){
			if (this.mClipRect){
				var clipRect=support.pushClipRect(this.getClipRect(this.stage,Sprite.sHelperRect));
				if (clipRect.isEmpty()){
					support.popClipRect();
					return;
				}
			}
			if (this.mFlattenedContents || this.mFlattenRequested){
				if (this.mFlattenedContents==null)
					this.mFlattenedContents=/*new vector.<>*/[];
				if (this.mFlattenRequested){
					QuadBatch.compile(this,this.mFlattenedContents);
					if (this.mFlattenOptimized)QuadBatch.optimize(this.mFlattenedContents);
					support.applyClipRect();
					this.mFlattenRequested=false;
				};
				var alpha=parentAlpha *this.alpha;
				var numBatches=this.mFlattenedContents.length;
				var mvpMatrix=support.mvpMatrix3D;
				support.finishQuadBatch();
				support.raiseDrawCount(numBatches);
				for (var i=0;i<numBatches;++i){
					var quadBatch=this.mFlattenedContents[i];
					var blendMode=quadBatch.blendMode==/*starling.display.BlendMode.AUTO*/"auto" ?
					support.blendMode :quadBatch.blendMode;
					quadBatch.renderCustom(mvpMatrix,alpha,blendMode);
				}
			}
			else _super.prototype.render.call(this,support,parentAlpha);
			if (this.mClipRect)
				support.popClipRect();
		}

		__getset(0,__proto,'isFlattened',function(){
			return (this.mFlattenedContents !=null)|| this.mFlattenRequested;
		});

		__getset(0,__proto,'clipRect',function(){return this.mClipRect;},function(value){
			if (this.mClipRect && value)this.mClipRect.copyFrom(value);
			else this.mClipRect=(value ? value.clone():null);
		});

		__static(Sprite,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sHelperPoint',function(){return this.sHelperPoint=new Point();},'sHelperRect',function(){return this.sHelperRect=new Rectangle();}
		]);
		return Sprite;
	})(DisplayObjectContainer1)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/ui.as
	//class g.UI extends g.MyObj
	var UI=(function(_super){
		function UI(){
			this._view=null;
			this._type=null;
			this._moreGame=null;
			this._toSelectLevel=null;
			this._help=null;
			this._toTitle=null;
			this._resetLevel=null;
			this._nextLevel=null;
			this._mute=null;
			this._pause=null;
			this._toStory=null;
			this._numMcList=null;
			this._keyboardMan=null;
			this._pauseIsMute=false;
			UI.__super.call(this);
		}

		__class(UI,'g.UI',false,_super);
		var __proto=UI.prototype;
		__proto.init=function(info){
			this._type=info.type;
			this._view=info.viewComponent;
			this._view.addEventListener(/*iflash.events.MouseEvent.CLICK*/"click",__bind(this,this.clickHandler));
			this._moreGame=this._view.getChildByName("moreGame");
			this._toSelectLevel=this._view.getChildByName("toSelectLevel");
			this._help=this._view.getChildByName("help");
			this._toTitle=this._view.getChildByName("toTitle");
			this._resetLevel=this._view.getChildByName("resetLevel");
			this._nextLevel=this._view.getChildByName("nextLevel");
			this._mute=this._view.getChildByName("mute");
			this._pause=this._view.getChildByName("pause");
			this._toStory=this._view.getChildByName("toStory");
			var unlockLevel=int(this._game.global.localManager.get("unlockLevel"))|| 1;
			var numMc;
			var i=0;
			while (++i <=MyData.maxLevel){
				numMc=this._view.getChildByName("numMc"+i);
				if(numMc){
					numMc.gotoAndStop((MyData.unlock || i <=unlockLevel)? 1 :2);
					if (numMc.txt)numMc.txt.text=(i<10?"0":"")+i;
					numMc.mouseChildren=false;
					if (numMc.currentFrame==1){
						numMc.buttonMode=true;
						ButtonEffect.to(numMc,{scale:{}});
						}else{
						numMc.buttonMode=false;
					}this._numMcList=this._numMcList|| [];
					this._numMcList[i-1]=numMc;
				}
			}
			if (this._muteMc){
				this._muteMc.buttonMode=true;
			}
			if (this._pauseMc){
				this._pauseMc.buttonMode=true;
				this._pauseMc.gotoAndStop(this._game.pause ? 2 :1);
			}
			this._keyboardMan=new KeyboardManager(this._game);
			if (this.isEndUI())this.addAnimtion();
			if (this._type !="controlBar"){
				ButtonEffect.to(this._moreGame,{scale:{}});
				ButtonEffect.to(this._toSelectLevel,{scale:{}});
				ButtonEffect.to(this._help,{scale:{}});
				ButtonEffect.to(this._toTitle,{scale:{}});
				ButtonEffect.to(this._resetLevel,{scale:{}});
				ButtonEffect.to(this._nextLevel,{scale:{}});
				ButtonEffect.to(this._toStory,{scale:{}});
			}
			this._game.global.layerMan.uiLayer.addChild(this._view);
			this.scheduleUpdate();
			this._game.addEventListener(FrameworkEvent.PAUSE,__bind(this,this.pauseResumeHandler));
			this._game.addEventListener(FrameworkEvent.RESUME,__bind(this,this.pauseResumeHandler));
			this._game.global.nativeStage.addEventListener(/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver",__bind(this,this.mouseOverHandler));
		}

		__proto.mouseOverHandler=function(e){
			var check=true;check=check&&e&&e.target;check=check&& (e.target instanceof iflash.display.SimpleButton );check=check|| (e.target instanceof iflash.display.MovieClip )&&(e.target).buttonMode;
		}

		__proto.pauseResumeHandler=function(e){
			if (this._pauseMc)this._pauseMc.gotoAndStop(this._game.pause ? 2 :1);
		}

		__proto.addAnimtion=function(){}
		__proto.isEndUI=function(){
			return this._type=="failure"
			|| this._type=="missionComplete"
			|| this._type=="victory";
		}

		__proto.isGameingUI=function(){
			return this._type=="victory"
			|| this._type=="missionComplete"
			|| this._type=="failure"
			||this._type=="controlBar";
		}

		__proto.linkHomePage=function(){
			if (MyData.linkHomePageFunc !=null)MyData.linkHomePageFunc();
			else console.log("MyData.linkHomePageFunc == null");
		}

		__proto.clickHandler=function(e){
			var doDestroy=this.isGameingUI();
			var newFunc;
			var game=this._game;
			switch (e.target){
				case this._moreGame:
					this.playDownSound();
					this.linkHomePage();
					break ;
				case this._toSelectLevel:
					this.playDownSound();
					newFunc=function (){game.toSelectLevel(doDestroy);}
					UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
					break ;
				case this._help:
					this.playDownSound();
					newFunc=function (){game.toHelp();}
					UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
					break ;
				case this._toTitle:
					this.playDownSound();
					newFunc=function (){game.toTitle(doDestroy)}
					UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
					break ;
				case this._resetLevel:
					this.playDownSound();
					this.resetLevel();
					break ;
				case this._nextLevel:
					this.playDownSound();
					this.nextLevel();
					break ;
				case this._pause:
					this.playDownSound();
					this.pressPauseHandler();
					break ;
				case this._mute:
					this.playDownSound();
					break ;
				case this._toStory:
					this.playDownSound();
					newFunc=function (){StoryUI.create();}
					UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
					break ;
				default :;
					var unlockLevel=int(this._game.global.localManager.get("unlockLevel"))|| 1;
					newFunc=function (){game.gotoLevel(id+1);}
					if (this._numMcList){
						var id=this._numMcList.indexOf(e.target);
						if (id >-1&&(id+1)<=unlockLevel){
							this.playDownSound();
							UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
						}
					}
				}
		}

		__proto.playDownSound=function(){}
		__proto.update=function(){
			if (MyData.version=="cn"){
				if (this._keyboardMan.jP("SPACE")){
					if (this._type=="selectLevel"){
						this.startCurUnlockLevel();
						}else if (this._type=="missionComplete"){
						this.nextLevel();
					}
				}
			}
			if (this._type=="controlBar"){
				if(this._keyboardMan&&this._keyboardMan.jP("P"))this.pressPauseHandler();
				if (this._keyboardMan.jP("R"))this.resetLevel();
			}
		}

		__proto.pressPauseHandler=function(){
			this._game.pause=!this._game.pause;
			if (this._game.pause){
			}else{}
		}

		__proto.startCurUnlockLevel=function(){
			var game=this._game;
			this.destroy();
			var unlockLevel=Math.max(1,int(game.global.localManager.get("unlockLevel")));
			game.dispatchEvent(new MyEvent(/*g.MyEvent.GO_TO_LEVEL*/"gotoLevel",{level:unlockLevel }));
		}

		__proto.nextLevel=function(){
			var myGame=this._game;
			var newFunc=function (){myGame.nextLevel();}
			UITween.create(this._game.global.nativeMain,__bind(this,this.destroy),null,newFunc);
		}

		__proto.resetLevel=function(){
			this._myGame.resetLevel();
		}

		__proto.destroy=function(){
			this.unscheduleUpdate();
			this._game.removeEventListener(FrameworkEvent.PAUSE,__bind(this,this.pauseResumeHandler));
			this._game.removeEventListener(FrameworkEvent.RESUME,__bind(this,this.pauseResumeHandler));
			this._game.global.nativeStage.removeEventListener(/*iflash.events.MouseEvent.MOUSE_OVER*/"mouseOver",__bind(this,this.mouseOverHandler));
			if (this._view.parent)this._view.parent.removeChild(this._view);
			if (this._numMcList){
				var i=this._numMcList.length;
				while (--i >=0)
				ButtonEffect.killOf(this._numMcList[i]);
			}
			ButtonEffect.killOf(this._moreGame);
			ButtonEffect.killOf(this._toSelectLevel);
			ButtonEffect.killOf(this._help);
			ButtonEffect.killOf(this._toTitle);
			ButtonEffect.killOf(this._resetLevel);
			ButtonEffect.killOf(this._nextLevel);
			ButtonEffect.killOf(this._toStory);
			if (this._keyboardMan){
				this._keyboardMan.destroy();
				this._keyboardMan=null;
			}
			this._moreGame=null;
			this._toSelectLevel=null;
			this._help=null;
			this._toTitle=null;
			this._numMcList=null;
			this._resetLevel=null;
			this._nextLevel=null;
			this._mute=null;
			this._pause=null;
			this._toStory=null;
			this._view=null;
			framework.objs.GameObject.prototype.destroy.call(this);
		}

		__getset(0,__proto,'_muteMc',function(){return this._mute;});
		__getset(0,__proto,'_pauseMc',function(){return this._pause;});
		UI.create=function(type){
			var game=Game.getInstance();
			var defName;
			switch(type){
				case /*CLASS CONST:g.UI.TITLE*/"title":defName="TitleUI_mc";break ;
				case /*CLASS CONST:g.UI.SELECT_LEVEL*/"selectLevel":defName="SelectLevelUI_mc";break ;
				case /*CLASS CONST:g.UI.FAILURE*/"failure":defName="Failure_mc";break ;
				case /*CLASS CONST:g.UI.VICTORY*/"victory":defName="VictoryUI_mc";break ;
				case /*CLASS CONST:g.UI.MISSION_COMPLETE*/"missionComplete":defName="MissionCompleteUI_mc";break ;
				case /*CLASS CONST:g.UI.CONTROL_BAR*/"controlBar":defName="ControlUI_mc";break ;
				case /*CLASS CONST:g.UI.HELP*/"help":defName="HelpUI_mc";break ;
				default :
				}
			game.createGameObj(new UI(),{
				viewComponent:LibUtil.getDefSprite(defName),
				type:type
			});
		}

		UI.TITLE="title";
		UI.SELECT_LEVEL="selectLevel";
		UI.FAILURE="failure";
		UI.VICTORY="victory";
		UI.MISSION_COMPLETE="missionComplete";
		UI.CONTROL_BAR="controlBar";
		UI.HELP="help";
		return UI;
	})(MyObj)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/button.as
	//class starling.display.Button extends starling.display.DisplayObjectContainer
	var Button=(function(_super){
		function Button(upState,text,downState,overState,disabledState){
			this.mUpState=null;
			this.mDownState=null;
			this.mOverState=null;
			this.mDisabledState=null;
			this.mContents=null;
			this.mBody=null;
			this.mTextField=null;
			this.mTextBounds=null;
			this.mOverlay=null;
			this.mScaleWhenDown=NaN;
			this.mScaleWhenOver=NaN;
			this.mAlphaWhenDown=NaN;
			this.mAlphaWhenDisabled=NaN;
			this.mUseHandCursor=false;
			this.mEnabled=false;
			this.mState=null;
			this.mTriggerBounds=null;
			Button.__super.call(this);
			(text===void 0)&& (text="");
			if (upState==null)throw new Error("Texture 'upState' cannot be null");
			this.mUpState=upState;
			this.mDownState=downState;
			this.mOverState=overState;
			this.mDisabledState=disabledState;
			this.mState=/*starling.display.ButtonState.UP*/"up";
			this.mBody=new Image2(upState);
			this.mScaleWhenDown=downState ? 1.0 :0.9;
			this.mScaleWhenOver=this.mAlphaWhenDown=1.0;
			this.mAlphaWhenDisabled=disabledState ? 1.0:0.5;
			this.mEnabled=true;
			this._$3_mUseHandCursor=true;
			this.mTextBounds=new Rectangle(0,0,this.mBody.width,this.mBody.height);
			this.mContents=new Sprite1();
			this.mContents.addChild(this.mBody);
			this.addChild(this.mContents);
			this.addEventListener(/*starling.events.TouchEvent.TOUCH*/"touch",__bind(this,this.onTouch_Button));
			this.touchGroup=true;
			this.text=text;
		}

		__class(Button,'starling.display.Button',false,_super);
		var __proto=Button.prototype;
		__proto.dispose=function(){
			if (this.mTextField){
				this.mTextField.removeFromParent();
				this.mTextField.dispose();
				this.mTextField=null;
			}
			_super.prototype.dispose.call(this);
		}

		__proto.readjustSize=function(resetTextBounds){
			(resetTextBounds===void 0)&& (resetTextBounds=true);
			this.mBody.readjustSize();
			if (resetTextBounds && this.mTextField !=null)
				this.textBounds=new Rectangle(0,0,this.mBody.width,this.mBody.height);
		}

		__proto.createTextField=function(){
			if (this.mTextField==null){
				this.mTextField=new TextField1(this.mTextBounds.width,this.mTextBounds.height,"");
				this.mTextField.vAlign=/*starling.utils.VAlign.CENTER*/"center";
				this.mTextField.hAlign=/*starling.utils.HAlign.CENTER*/"center";
				this.mTextField.touchable=false;
				this.mTextField.autoScale=true;
				this.mTextField.batchable=true;
			}
			this.mTextField.width=this.mTextBounds.width;
			this.mTextField.height=this.mTextBounds.height;
			this.mTextField.x=this.mTextBounds.x;
			this.mTextField.y=this.mTextBounds.y;
		}

		__proto.onTouch_Button=function(event){
			Mouse.cursor=(this._$3_mUseHandCursor && this.mEnabled && event.interactsWith(this))?
			/*iflash.ui.MouseCursor.BUTTON*/"button" :/*iflash.ui.MouseCursor.AUTO*/"auto";
			var touch=event.getTouch(this);
			var isWithinBounds=false;
			if (!this.mEnabled){
				return;
			}
			else if (touch==null){
				this.state=/*starling.display.ButtonState.UP*/"up";
			}
			else if (touch.phase==/*starling.events.TouchPhase.HOVER*/"hover"){
				this.state=/*starling.display.ButtonState.OVER*/"over";
			}
			else if (touch.phase==/*starling.events.TouchPhase.BEGAN*/"began" && this.mState !=/*starling.display.ButtonState.DOWN*/"down"){
				this.mTriggerBounds=this.getBounds(this.stage,this.mTriggerBounds);
				this.mTriggerBounds.inflate(50,50);
				this.state=/*starling.display.ButtonState.DOWN*/"down";
			}
			else if (touch.phase==/*starling.events.TouchPhase.MOVED*/"moved"){
				isWithinBounds=this.mTriggerBounds.contains(touch.globalX,touch.globalY);
				if (this.mState==/*starling.display.ButtonState.DOWN*/"down" && !isWithinBounds){
					this.state=/*starling.display.ButtonState.UP*/"up";
				}
				else if (this.mState==/*starling.display.ButtonState.UP*/"up" && isWithinBounds){
					this.state=/*starling.display.ButtonState.DOWN*/"down";
				}
			}
			else if (touch.phase==/*starling.events.TouchPhase.ENDED*/"ended" && this.mState==/*starling.display.ButtonState.DOWN*/"down"){
				this.state=/*starling.display.ButtonState.UP*/"up";
				if (!touch.cancelled)this.dispatchEventWith(/*starling.events.Event.TRIGGERED*/"triggered",true);
			}
		}

		__proto.setStateTexture=function(texture){
			this.mBody.texture=texture ? texture :this.mUpState;
		}

		__getset(0,__proto,'fontSize',function(){return this.mTextField ? this.mTextField.fontSize :12;},function(value){
			this.createTextField();
			this.mTextField.fontSize=value;
		});

		__getset(0,__proto,'state',function(){return this.mState;},function(value){
			this.mState=value;
			this.mContents.x=this.mContents.y=0;
			this.mContents.scaleX=this.mContents.scaleY=this.mContents.alpha=1.0;
			switch (this.mState){
				case /*starling.display.ButtonState.DOWN*/"down":
					this.setStateTexture(this.mDownState);
					this.mContents.alpha=this.mAlphaWhenDown;
					this.mContents.scaleX=this.mContents.scaleY=this.mScaleWhenDown;
					this.mContents.x=(1.0-this.mScaleWhenDown)/ 2.0 *this.mBody.width;
					this.mContents.y=(1.0-this.mScaleWhenDown)/ 2.0 *this.mBody.height;
					break ;
				case /*starling.display.ButtonState.UP*/"up":
					this.setStateTexture(this.mUpState);
					break ;
				case /*starling.display.ButtonState.OVER*/"over":
					this.setStateTexture(this.mOverState);
					this.mContents.scaleX=this.mContents.scaleY=this.mScaleWhenOver;
					this.mContents.x=(1.0-this.mScaleWhenOver)/ 2.0 *this.mBody.width;
					this.mContents.y=(1.0-this.mScaleWhenOver)/ 2.0 *this.mBody.height;
					break ;
				case /*starling.display.ButtonState.DISABLED*/"disabled":
					this.setStateTexture(this.mDisabledState);
					this.mContents.alpha=this.mAlphaWhenDisabled;
					break ;
				default :
					throw new Error("Invalid button state: "+this.mState);
				}
		});

		__getset(0,__proto,'fontColor',function(){return this.mTextField ? this.mTextField.color :0x0;},function(value){
			this.createTextField();
			this.mTextField.color=value;
		});

		__getset(0,__proto,'fontName',function(){return this.mTextField ? this.mTextField.fontName :"Verdana";},function(value){
			this.createTextField();
			this.mTextField.fontName=value;
		});

		__getset(0,__proto,'textVAlign',function(){
			return this.mTextField ? this.mTextField.vAlign :/*starling.utils.VAlign.CENTER*/"center";
			},function(value){
			this.createTextField();
			this.mTextField.vAlign=value;
		});

		__getset(0,__proto,'disabledState',function(){return this.mDisabledState;},function(value){
			if (this.mDisabledState !=value){
				this.mDisabledState=value;
				if (this.mState==/*starling.display.ButtonState.DISABLED*/"disabled")this.setStateTexture(value);
			}
		});

		__getset(0,__proto,'scaleWhenDown',function(){return this.mScaleWhenDown;},function(value){this.mScaleWhenDown=value;});
		__getset(0,__proto,'text',function(){return this.mTextField ? this.mTextField.text :"";},function(value){
			if (value.length==0){
				if (this.mTextField){
					this.mTextField.text=value;
					this.mTextField.removeFromParent();
				}
			}
			else{
				this.createTextField();
				this.mTextField.text=value;
				if (this.mTextField.parent==null)
					this.mContents.addChild(this.mTextField);
			}
		});

		__getset(0,__proto,'scaleWhenOver',function(){return this.mScaleWhenOver;},function(value){this.mScaleWhenOver=value;});
		__getset(0,__proto,'alphaWhenDisabled',function(){return this.mAlphaWhenDisabled;},function(value){this.mAlphaWhenDisabled=value;});
		__getset(0,__proto,'alphaWhenDown',function(){return this.mAlphaWhenDown;},function(value){this.mAlphaWhenDown=value;});
		__getset(0,__proto,'enabled',function(){return this.mEnabled;},function(value){
			if (this.mEnabled !=value){
				this.mEnabled=value;
				this.state=value ? /*starling.display.ButtonState.UP*/"up" :/*starling.display.ButtonState.DISABLED*/"disabled";
			}
		});

		__getset(0,__proto,'fontBold',function(){return this.mTextField ? this.mTextField.bold :false;},function(value){
			this.createTextField();
			this.mTextField.bold=value;
		});

		__getset(0,__proto,'upState',function(){return this.mUpState;},function(value){
			if (value==null)
				throw new Error("Texture 'upState' cannot be null");
			if (this.mUpState !=value){
				this.mUpState=value;
				if (this.mState==/*starling.display.ButtonState.UP*/"up" ||
					(this.mState==/*starling.display.ButtonState.DISABLED*/"disabled" && this.mDisabledState==null)||
				(this.mState==/*starling.display.ButtonState.DOWN*/"down" && this.mDownState==null)||
				(this.mState==/*starling.display.ButtonState.OVER*/"over" && this.mOverState==null)){
					this.setStateTexture(value);
				}
			}
		});

		__getset(0,__proto,'downState',function(){return this.mDownState;},function(value){
			if (this.mDownState !=value){
				this.mDownState=value;
				if (this.mState==/*starling.display.ButtonState.DOWN*/"down")this.setStateTexture(value);
			}
		});

		__getset(0,__proto,'overState',function(){return this.mOverState;},function(value){
			if (this.mOverState !=value){
				this.mOverState=value;
				if (this.mState==/*starling.display.ButtonState.OVER*/"over")this.setStateTexture(value);
			}
		});

		__getset(0,__proto,'textHAlign',function(){
			return this.mTextField ? this.mTextField.hAlign :/*starling.utils.HAlign.CENTER*/"center";
			},function(value){
			this.createTextField();
			this.mTextField.hAlign=value;
		});

		__getset(0,__proto,'textBounds',function(){return this.mTextBounds.clone();},function(value){
			this.mTextBounds=value.clone();
			this.createTextField();
		});

		__getset(0,__proto,'color',function(){return this.mBody.color;},function(value){this.mBody.color=value;});
		__getset(0,__proto,'overlay',function(){
			if (this.mOverlay==null)
				this.mOverlay=new Sprite1();
			this.mContents.addChild(this.mOverlay);
			return this.mOverlay;
		});

		__getset(0,__proto,'useHandCursor',function(){return this._$3_mUseHandCursor;},function(value){this._$3_mUseHandCursor=value;});
		Button.MAX_DRAG_DIST=50;
		return Button;
	})(DisplayObjectContainer1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/sprite3d.as
	//class starling.display.Sprite3D extends starling.display.DisplayObjectContainer
	var Sprite3D=(function(_super){
		function Sprite3D(){
			this.mRotationX=NaN;
			this.mRotationY=NaN;
			this.mScaleZ=NaN;
			this.mPivotZ=NaN;
			this.mZ=NaN;
			this.mTransformationMatrix_Sprite3D=null;
			this.mTransformationMatrix3D_Sprite3D=null;
			this.mTransformationChanged=false;
			Sprite3D.__super.call(this);
			this.mScaleZ=1.0;
			this.mRotationX=this.mRotationY=this.mPivotZ=this.mZ=0.0;
			this.mTransformationMatrix_Sprite3D=new Matrix();
			this.mTransformationMatrix3D_Sprite3D=new Matrix3D();
			this.setIs3D(true);
			this.addEventListener(/*starling.events.Event.ADDED*/"added",__bind(this,this.onAddedChild));
			this.addEventListener(/*starling.events.Event.REMOVED*/"removed",__bind(this,this.onRemovedChild));
		}

		__class(Sprite3D,'starling.display.Sprite3D',false,_super);
		var __proto=Sprite3D.prototype;
		__proto.render=function(support,parentAlpha){
			if (this.is2D)_super.prototype.render.call(this,support,parentAlpha);
			else{
				support.finishQuadBatch();
				support.pushMatrix3D();
				support.transformMatrix3D(this);
				_super.prototype.render.call(this,support,parentAlpha);
				support.finishQuadBatch();
				support.popMatrix3D();
			}
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (this.is2D)return _super.prototype.hitTest.call(this,localPoint,forTouch);
			else{
				if (forTouch && (!this.visible || !this.touchable))
					return null;
				Sprite3D.sHelperMatrix.copyFrom(this.transformationMatrix3D);
				Sprite3D.sHelperMatrix.invert();
				this.stage.getCameraPosition(this,Sprite3D.sHelperPoint);
				MatrixUtil1.transformCoords3D(Sprite3D.sHelperMatrix,localPoint.x,localPoint.y,0,Sprite3D.sHelperPointAlt);
				MathUtil.intersectLineWithXYPlane(Sprite3D.sHelperPoint,Sprite3D.sHelperPointAlt,localPoint);
				return _super.prototype.hitTest.call(this,localPoint,forTouch);
			}
		}

		__proto.onAddedChild=function(event){
			this.recursivelySetIs3D(event.target,true);
		}

		__proto.onRemovedChild=function(event){
			this.recursivelySetIs3D(event.target,false);
		}

		__proto.recursivelySetIs3D=function(object,value){
			if ((object instanceof starling.display.Sprite3D ))
				return;
			if ((object instanceof starling.display.DisplayObjectContainer )){
				var container=object;
				var numChildren=container.numChildren;
				for (var i=0;i<numChildren;++i)
				this.recursivelySetIs3D(container.getChildAt(i),value);
			}
			object.setIs3D(value);
		}

		__proto.updateMatrices=function(){
			var x=this.x;
			var y=this.y;
			var scaleX=this.scaleX;
			var scaleY=this.scaleY;
			var pivotX=this.pivotX;
			var pivotY=this.pivotY;
			var rotationZ=this.rotation;
			this.mTransformationMatrix3D_Sprite3D.identity();
			if (scaleX !=1.0 || scaleY !=1.0 || this.mScaleZ !=1.0)
				this.mTransformationMatrix3D_Sprite3D.appendScale(scaleX || 0.00001 ,scaleY || 0.00001,this.mScaleZ || 0.00001);
			if (this.mRotationX !=0.0)
				this.mTransformationMatrix3D_Sprite3D.appendRotation(starling.utils.rad2deg(this.mRotationX),Vector3D.X_AXIS);
			if (this.mRotationY !=0.0)
				this.mTransformationMatrix3D_Sprite3D.appendRotation(starling.utils.rad2deg(this.mRotationY),Vector3D.Y_AXIS);
			if (rotationZ !=0.0)
				this.mTransformationMatrix3D_Sprite3D.appendRotation(starling.utils.rad2deg(rotationZ),Vector3D.Z_AXIS);
			if (x !=0.0 || y !=0.0 || this.mZ !=0.0)
				this.mTransformationMatrix3D_Sprite3D.appendTranslation(x,y,this.mZ);
			if (pivotX !=0.0 || pivotY !=0.0 || this.mPivotZ !=0.0)
				this.mTransformationMatrix3D_Sprite3D.prependTranslation(-pivotX,-pivotY,-this.mPivotZ);
			if (this.is2D)MatrixUtil1.convertTo2D(this.mTransformationMatrix3D_Sprite3D,this.mTransformationMatrix_Sprite3D);
			else this.mTransformationMatrix_Sprite3D.identity();
		}

		__getset(0,__proto,'is2D',function(){
			return this.mZ >-0.00001 && this.mZ < 0.00001 &&
			this.mRotationX >-0.00001 && this.mRotationX < 0.00001 &&
			this.mRotationY >-0.00001 && this.mRotationY < 0.00001 &&
			this.mPivotZ >-0.00001 && this.mPivotZ < 0.00001;
		});

		__getset(0,__proto,'transformationMatrix3D',function(){
			if (this.mTransformationChanged){
				this.updateMatrices();
				this.mTransformationChanged=false;
			}
			return this.mTransformationMatrix3D_Sprite3D;
		});

		__getset(0,__proto,'transformationMatrix',function(){
			if (this.mTransformationChanged){
				this.updateMatrices();
				this.mTransformationChanged=false;
			}
			return this.mTransformationMatrix_Sprite3D;
			},function(value){
			_super.prototype._$set_transformationMatrix.call(this,value);
			this.mRotationX=this.mRotationY=this.mPivotZ=this.mZ=0;
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'pivotZ',function(){return this.mPivotZ;},function(value){
			this.mPivotZ=value;
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'x',_super.prototype._$get_x,function(value){
			_super.prototype._$set_x.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'y',_super.prototype._$get_y,function(value){
			_super.prototype._$set_y.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'pivotX',_super.prototype._$get_pivotX,function(value){
			_super.prototype._$set_pivotX.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'pivotY',_super.prototype._$get_pivotY,function(value){
			_super.prototype._$set_pivotY.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'z',function(){return this.mZ;},function(value){
			this.mZ=value;
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'scaleX',_super.prototype._$get_scaleX,function(value){
			_super.prototype._$set_scaleX.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'rotation',_super.prototype._$get_rotation,function(value){
			_super.prototype._$set_rotation.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'scaleY',_super.prototype._$get_scaleY,function(value){
			_super.prototype._$set_scaleY.call(this,value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'scaleZ',function(){return this.mScaleZ;},function(value){
			this.mScaleZ=value;
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'skewX',_super.prototype._$get_skewX,function(value){
			throw new Error("3D objects do not support skewing");
		});

		__getset(0,__proto,'skewY',_super.prototype._$get_skewY,function(value){
			throw new Error("3D objects do not support skewing");
		});

		__getset(0,__proto,'rotationX',function(){return this.mRotationX;},function(value){
			this.mRotationX=MathUtil.normalizeAngle(value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'rotationY',function(){return this.mRotationY;},function(value){
			this.mRotationY=MathUtil.normalizeAngle(value);
			this.mTransformationChanged=true;
		});

		__getset(0,__proto,'rotationZ',function(){return this.rotation;},function(value){this.rotation=value;});
		Sprite3D.E=0.00001;
		__static(Sprite3D,
		['sHelperPoint',function(){return this.sHelperPoint=new Vector3D();},'sHelperPointAlt',function(){return this.sHelperPointAlt=new Vector3D();},'sHelperMatrix',function(){return this.sHelperMatrix=new Matrix3D();}
		]);
		return Sprite3D;
	})(DisplayObjectContainer1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/stage.as
	;
	//class starling.display.Stage extends starling.display.DisplayObjectContainer
	var Stage1=(function(_super){
		function Stage(width,height,color){
			this.mWidth=0;
			this.mHeight=0;
			this.mColor=0;
			this.mFieldOfView=NaN;
			this.mProjectionOffset=null;
			this.mCameraPosition=null;
			this.mEnterFrameEvent=null;
			this.mEnterFrameListeners=null;
			Stage.__super.call(this);
			(color===void 0)&& (color=0);
			this.mWidth=width;
			this.mHeight=height;
			this.mColor=color;
			this.mFieldOfView=1.0;
			this.mProjectionOffset=new Point();
			this.mCameraPosition=new Vector3D();
			this.mEnterFrameEvent=new EnterFrameEvent(/*starling.events.Event.ENTER_FRAME*/"enterFrame",0.0);
			this.mEnterFrameListeners=/*new vector.<>*/[];
		}

		__class(Stage,'starling.display.Stage',false,_super,'Stage1');
		var __proto=Stage.prototype;
		__proto.advanceTime=function(passedTime){
			this.mEnterFrameEvent.reset(/*starling.events.Event.ENTER_FRAME*/"enterFrame",false,passedTime);
			this.broadcastEvent(this.mEnterFrameEvent);
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (forTouch && (!this.visible || !this.touchable))
				return null;
			if (localPoint.x < 0 || localPoint.x > this.mWidth ||
				localPoint.y < 0 || localPoint.y > this.mHeight)
			return null;
			var target=_super.prototype.hitTest.call(this,localPoint,forTouch);
			if (target==null)target=this;
			return target;
		}

		__proto.drawToBitmapData=function(destination,transparent){
			(transparent===void 0)&& (transparent=true);
			var support=new RenderSupport();
			var star=Starling.current;
			if (destination==null){
				var width=star.backBufferWidth *star.backBufferPixelsPerPoint;
				var height=star.backBufferHeight *star.backBufferPixelsPerPoint;
				destination=new BitmapData(width,height,transparent);
			}
			support.renderTarget=null;
			support.setProjectionMatrix(0,0,this.mWidth,this.mHeight,this.mWidth,this.mHeight,this.cameraPosition);
			if (transparent)support.clear();
			else support.clear(this.mColor,1);
			this.render(support,1.0);
			support.finishQuadBatch();
			support.dispose();
			Starling.current.context.drawToBitmapData(destination);
			Starling.current.context.present();
			return destination;
		}

		__proto.getCameraPosition=function(space,result){
			this.getTransformationMatrix3D(space,Stage.sHelperMatrix);
			return MatrixUtil1.transformCoords3D(Stage.sHelperMatrix,
			this.mWidth / 2+this.mProjectionOffset.x,this.mHeight / 2+this.mProjectionOffset.y,
			-this.focalLength,result);
		}

		__proto.addEnterFrameListener=function(listener){
			this.mEnterFrameListeners.push(listener);
		}

		__proto.removeEnterFrameListener=function(listener){
			var index=this.mEnterFrameListeners.indexOf(listener);
			if (index >=0)this.mEnterFrameListeners.splice(index,1);
		}

		__proto.getChildEventListeners=function(object,eventType,listeners){
			if (eventType==/*starling.events.Event.ENTER_FRAME*/"enterFrame" && object==this){
				for (var i=0,length=this.mEnterFrameListeners.length;i<length;++i)
				listeners[listeners.length]=this.mEnterFrameListeners[i];
			}
			else
			_super.prototype.getChildEventListeners.call(this,object,eventType,listeners);
		}

		__getset(0,__proto,'skewX',_super.prototype._$get_skewX,function(value){
			throw new IllegalOperationError("Cannot skew stage");
		});

		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			throw new IllegalOperationError("Cannot set width of stage");
		});

		__getset(0,__proto,'skewY',_super.prototype._$get_skewY,function(value){
			throw new IllegalOperationError("Cannot skew stage");
		});

		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			throw new IllegalOperationError("Cannot set height of stage");
		});

		__getset(0,__proto,'x',_super.prototype._$get_x,function(value){
			throw new IllegalOperationError("Cannot set x-coordinate of stage");
		});

		__getset(0,__proto,'y',_super.prototype._$get_y,function(value){
			throw new IllegalOperationError("Cannot set y-coordinate of stage");
		});

		__getset(0,__proto,'rotation',_super.prototype._$get_rotation,function(value){
			throw new IllegalOperationError("Cannot rotate stage");
		});

		__getset(0,__proto,'scaleY',_super.prototype._$get_scaleY,function(value){
			throw new IllegalOperationError("Cannot scale stage");
		});

		__getset(0,__proto,'scaleX',_super.prototype._$get_scaleX,function(value){
			throw new IllegalOperationError("Cannot scale stage");
		});

		__getset(0,__proto,'filter',_super.prototype._$get_filter,function(value){
			throw new IllegalOperationError("Cannot add filter to stage. Add it to 'root' instead!");
		});

		__getset(0,__proto,'color',function(){return this.mColor;},function(value){this.mColor=value;});
		__getset(0,__proto,'stageWidth',function(){return this.mWidth;},function(value){this.mWidth=value;});
		__getset(0,__proto,'stageHeight',function(){return this.mHeight;},function(value){this.mHeight=value;});
		__getset(0,__proto,'focalLength',function(){
			return this.mWidth / (2 *Math.tan(this.mFieldOfView/2));
			},function(value){
			this.mFieldOfView=2 *Math.atan(this.stageWidth / (2*value));
		});

		__getset(0,__proto,'fieldOfView',function(){return this.mFieldOfView;},function(value){this.mFieldOfView=value;});
		__getset(0,__proto,'projectionOffset',function(){return this.mProjectionOffset;},function(value){
			this.mProjectionOffset.setTo(value.x,value.y);
		});

		__getset(0,__proto,'cameraPosition',function(){
			return this.getCameraPosition(null,this.mCameraPosition);
		});

		__static(Stage,
		['sHelperMatrix',function(){return this.sHelperMatrix=new Matrix3D();}
		]);
		return Stage;
	})(DisplayObjectContainer1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/text/textfield.as
	//class starling.text.TextField extends starling.display.DisplayObjectContainer
	var TextField1=(function(_super){
		function TextField(width,height,text,fontName,fontSize,color,bold){
			this.mFontSize=NaN;
			this.mColor=0;
			this.mText=null;
			this.mHTMLContent=null;
			this.mFontName=null;
			this.mHAlign=null;
			this.mVAlign=null;
			this.mBold=false;
			this.mItalic=false;
			this.mUnderline=false;
			this.mAutoScale=false;
			this.mAutoSize=null;
			this.mKerning=false;
			this.mNativeFilters=null;
			this.mRequiresRedraw=false;
			this.mIsHtmlText=false;
			this.mTextBounds=null;
			this.mBatchable=false;
			this.mHitArea=null;
			this.mBorder=null;
			this.mImage=null;
			this.mQuadBatch=null;
			this.mNodes=null;
			this.mWid=0;
			this.mHei=0;
			this.strokeColor=null;
			this.strokeThickness=null;
			this.texture=null;
			this.mRows=null;
			this.mWidths=null;
			this.mHeights=null;
			TextField.__super.call(this);
			this.mDefaultFormat=/*__JS__ */new iflash.text.TextFormat();
			this.ConchMemoryCanvas=/*__JS__ */Laya.CONCHVER ? ConchMemoryCanvas :null;
			(fontName===void 0)&& (fontName="Verdana");
			(fontSize===void 0)&& (fontSize=12);
			(color===void 0)&& (color=0x0);
			(bold===void 0)&& (bold=false);
			this.mText=text ? text :"";
			this.mFontSize=fontSize;
			this.mColor=color;
			this.mHAlign=/*starling.utils.HAlign.CENTER*/"center";
			this.mVAlign=/*starling.utils.VAlign.CENTER*/"center";
			this.mBorder=null;
			this.mKerning=true;
			this.mBold=bold;
			this.mAutoSize=/*starling.text.TextFieldAutoSize.NONE*/"none";
			this.mHitArea=new Rectangle(0,0,width,height);
			this.fontName=fontName.length ? fontName :"Verdana";
			this.addEventListener(/*starling.events.Event.FLATTEN*/"flatten",__bind(this,this.onFlatten));
			/*__JS__ */LAYABOX.ENABLE3D=false;;
			/*__JS__ */LAYABOX.ENABLE3D=true;;
			if(!TextField.m_context2D)
				this.createCanvas();
		}

		__class(TextField,'starling.text.TextField',false,_super,'TextField1');
		var __proto=TextField.prototype;
		__proto.createCanvas=function(){
			if(Laya.CONCHVER){
				TextField.m_canvas2D=/*__JS__ */ConchMemoryCanvas;
				TextField.m_context2D=TextField.m_canvas2D;
			}
			else{
				TextField.m_canvas2D=/*__JS__ */document.createElement("canvas");
				TextField.m_context2D=TextField.m_canvas2D.getContext('2d');
			}
		}

		__proto.dispose=function(){
			this.removeEventListener(/*starling.events.Event.FLATTEN*/"flatten",__bind(this,this.onFlatten));
			if (this.mImage)
				this.mImage.texture.dispose();
			if (this.mQuadBatch)
				this.mQuadBatch.dispose();
			this.mQuadBatch=null;
			if(this.texture)
				this.texture.dispose();
			this.texture=null;
			_super.prototype.dispose.call(this);
		}

		__proto.onFlatten=function(){
			if (this.mRequiresRedraw)
				this.redraw();
		}

		__proto.render=function(support,parentAlpha){
			if (this.mText=="")
				return;
			if (this.mRequiresRedraw)
				this.redraw();
			_super.prototype.render.call(this,support,parentAlpha);
		}

		__proto.redraw=function(){
			if (this.mText=="")
				return;
			if (this.mRequiresRedraw){
				if (TextField.getBitmapFont(this.mFontName))
					this.createComposedContents();
				else
				this.createRenderedContents();
				this.updateBorder();
				this.mRequiresRedraw=false;
			}
		}

		__proto.createRenderedContents=function(){
			if (this.mQuadBatch){
				this.mQuadBatch.removeFromParent(true);
				this.mQuadBatch=null;
			}
			if (this.mTextBounds==null)
				this.mTextBounds=new Rectangle();
			var scale=Starling.contentScaleFactor;
			this.mDefaultFormat.font=this.mFontName;
			this.mDefaultFormat.size=this.mFontSize *scale;
			this.mDefaultFormat.bold=this.mBold;
			this.mDefaultFormat.italic=this.mItalic;
			this.mDefaultFormat.align=this.hAlign;
			this.mDefaultFormat.color=this.mColor;
			this.mDefaultFormat.underline=this.mUnderline;
			this.mDefaultFormat.kerning=this.mKerning;
			this.formatText(TextField.iflashTextField,this.mDefaultFormat);
			this.mIsHtmlText || this.layout(scale);
			TextField.m_canvas2D.originalWidth=this.mHitArea.width;
			TextField.m_canvas2D.originalHeight=this.mHitArea.height;
			TextField.m_canvas2D.width=this.mathCeilPowerOfTwo(this.mHitArea.width);
			TextField.m_canvas2D.height=this.mathCeilPowerOfTwo(this.mHitArea.height);
			if(TextField.m_canvas2D.width <=0)TextField.m_canvas2D.width=1;
			if(TextField.m_canvas2D.height <=0)TextField.m_canvas2D.height=1;
			this.renderTextCanvas(scale,this.mTextBounds);
			var bUseCon=false;
			if(!Laya.CONCHVER || !this.texture){
				this.texture=Texture1.fromBitmapData(TextField.m_canvas2D,false);
			}
			else{
				if(TextField.m_canvas2D.originalHeight > this.texture.height || TextField.m_canvas2D.originalWidth > this.texture.width){
					this.texture=Texture1.fromBitmapData(TextField.m_canvas2D,false);
					}else{
					bUseCon=true;
					this.texture.root.uploadBitmapData(TextField.m_canvas2D);
				}
			}
			if (this.mImage==null){
				this.mImage=new Image2(this.texture);
				this.mImage.touchable=false;
				this.addChild(this.mImage);
			}
			else{
				if(Laya.CONCHVER&&bUseCon){
					var oldW=this.texture.width;
					this.mImage.width=TextField.m_canvas2D.width;
					this.mImage.height=TextField.m_canvas2D.height;
					this.mImage.getTexCoords(1,TextField.mpoint);
					this.mImage.getTexCoords(3,TextField.m2point);
					this.mImage.setTexCoordsTo(1,TextField.m_canvas2D.width/oldW,TextField.mpoint.y);
					this.mImage.setTexCoordsTo(3,TextField.m_canvas2D.width/oldW,TextField.m2point.y);
				}
				bUseCon=false;
				this.mImage.texture=this.texture;
				this.mImage.readjustSize();
			}
		}

		__proto.layout=function(scale){
			this.mRows || (this.mRows=[]);
			this.mWidths || (this.mWidths=[]);
			this.mHeights || (this.mHeights=[]);
			var textAlign="left";
			var textBaseline="top";
			var t_x=2;
			var t_y=2;
			this.mRows=this.mText.split("\n");
			if(this.mRows[this.mRows.length-1]=="")
				this.mRows.pop();
			this.mWidths.length=0;
			this.mHeights.length=0;
			var len=this.mRows.length;
			this.mTextBounds || (this.mTextBounds=new Rectangle());
			this.mTextBounds.setTo(1E8,2,0,0);
			if(Laya.CONCHVER)
				this.ConchMemoryCanvas.font="normal "+(this.mBold ? "bold" :"normal")+" "+this.fontSize+"px "+this.fontName;
			else
			TextField.m_context2D.font="normal "+(this.mBold ? "bold" :"normal")+" "+this.fontSize+"px "+this.fontName;
			var metrics=0;
			var line;
			if (this.mRows.length==1 && (this.mAutoSize==/*starling.text.TextFieldAutoSize.BOTH_DIRECTIONS*/"bothDirections" || this.mAutoSize==/*starling.text.TextFieldAutoSize.HORIZONTAL*/"horizontal")){
				var measureRes=TextField.m_context2D.measureText(this.mText);
				this.mTextBounds.width=measureRes.width1 || measureRes.width;
				this.mTextBounds.height=measureRes.height || this.mFontSize;
				this.mWidths.push(this.mTextBounds.width);
				this.mHeights.push(this.mTextBounds.height || this.fontSize);
			}
			else{
				this.mTextBounds.height=0;
				for (var i=0;i < len;i++){
					line=this.mRows[i];
					measureRes=TextField.m_context2D.measureText(line);
					metrics=measureRes.width1 || measureRes.width;
					if (metrics > this.mHitArea.width-2-2){
						var splitInfo;
						splitInfo=this.getSplitIndex(line);
						var splitIdx=splitInfo[0];
						metrics=splitInfo[1];
						this.mRows[i]=line.substring(0,splitIdx+1);
						this.mRows.splice(i+1,0,line.substr(splitIdx+1));
						len++;
					}
					this.mWidths.push(metrics);
					this.mHeights.push(measureRes.height || this.fontSize);
					this.mTextBounds.height+=((measureRes.height || this.mFontSize)+TextField.LINE_LEADING+(this.mDefaultFormat.leading || 0));
					this.mTextBounds.width=Math.max(this.mTextBounds.width,metrics);
				}
				this.mTextBounds.height-=((this.mDefaultFormat.leading || 0)+TextField.LINE_LEADING);
			}
			if (this.vAlign !="top" && !(this.isVerticalAutoSize)){
				if (this.vAlign=="center")
					t_y=(this.mHitArea.height-this.mTextBounds.height)/ 2 | 0;
				else if (this.vAlign=="bottom")
				t_y=this.mHitArea.height-this.mTextBounds.height-3;
				this.mTextBounds.y=t_y;
			}
			if(this.autoSize !=/*starling.text.TextFieldAutoSize.NONE*/"none"){
				if (this.autoSize==/*starling.text.TextFieldAutoSize.HORIZONTAL*/"horizontal")
					this.mHitArea.width=this.mTextBounds.width+2+2+1;
				else if (this.mAutoSize==/*starling.text.TextFieldAutoSize.VERTICAL*/"vertical")
				this.mHitArea.height=this.mTextBounds.height+3+2;
				else if (this.mAutoSize==/*starling.text.TextFieldAutoSize.BOTH_DIRECTIONS*/"bothDirections"){
					this.mHitArea.width=this.mTextBounds.width+2+2+1;
					this.mHitArea.height=this.mTextBounds.height+3+2;
				}
			}
		}

		__proto.reverseColor=function(color){
			var r=color >> 16 & 0xFF;
			var g=color >> 8 & 0xFF;
			var b=color & 0xFF;
			color=b << 16 | g << 8 | r;
			return color;
		}

		__proto.getSplitIndex=function(str){
			var measureRes=TextField.m_context2D.measureText(str.charAt(0));
			var tw=measureRes.width1 || measureRes.width;
			var charWidth=0;
			for (var i=1,len=str.length;i < len;i++){
				measureRes=TextField.m_context2D.measureText(str.charAt(i));
				charWidth=measureRes.width1 || measureRes.width;
				if (tw+charWidth > this.mHitArea.width-2-2){
					return [i-1,tw];
				}
				tw+=charWidth;
			}
			return [0,0];
		}

		__proto.renderTextCanvas=function(scale,resultTextBounds){
			if(!this.mText || this.mText.length==0)
				return;
			var t_fontName="";
			var t_i=0;
			if(!Laya.CONCHVER)
				TextField.m_context2D.clearRect(0,0,TextField.m_canvas2D.width ,TextField.m_canvas2D.height);
			if (this.isHtmlText){
				TextField.iflashTextField.nodes=this.mNodes;
				DrawText.printText(TextField.iflashTextField,TextField.m_context2D,0,0);
				return;
			};
			var t_x=2;
			var t_y=this.mTextBounds.y;
			var line;
			TextField.m_context2D.fillStyle=this.getColorString(this.mColor);
			var fontStr="normal "+(this.mBold ? 700 :100)+" "+this.fontSize+"px "+this.fontName;
			if(Laya.CONCHVER){
				fontStr+=" ";
				fontStr+=this.strokeColor ? "1 "+this.strokeColor :"0 0 ";
			}
			TextField.m_context2D.font=fontStr;
			TextField.m_context2D.textBaseline="top";
			var len=this.mRows.length;
			for (var i=0;i < len;i++){
				line=this.mRows[i];
				if(t_y+this.mHeights[i] > this.mHitArea.height && i > 0)
					return;
				if (this.hAlign !="left" && this.mAutoSize && this.mAutoSize !=/*starling.text.TextFieldAutoSize.HORIZONTAL*/"horizontal" && this.mAutoSize !=/*starling.text.TextFieldAutoSize.BOTH_DIRECTIONS*/"bothDirections"){
					if (this.hAlign=='center')
						t_x=(this.mHitArea.width-this.mWidths[i])/ 2;
					else if (this.hAlign=='right')
					t_x=this.mHitArea.width-this.mWidths[i]-2;
				}
				else
				t_x=2;
				this.mTextBounds.x=Math.min(this.mTextBounds.x,t_x);
				if(!Laya.CONCHVER && this.strokeColor){
					TextField.m_context2D.strokeStyle=this.strokeColor;
					TextField.m_context2D.lineWidth=this.strokeThickness;
					TextField.m_context2D.lineCap="round";
					TextField.m_context2D.strokeText(line,t_x,t_y);
				}
				TextField.m_context2D.fillText(line ,t_x,t_y);
				t_y+=this.mHeights[i]+TextField.LINE_LEADING+(this.mDefaultFormat.leading || 0);
			}
		}

		__proto.formatText=function(textField,textFormat){
			TextField.iflashTextField.defaultTextFormat=this.mDefaultFormat;
			if(this.mIsHtmlText){
				this.updateIflashTextField();
			}
		}

		__proto.renderText=function(scale,resultTextBounds){
			var width=this.mHitArea.width *scale;
			var height=this.mHitArea.height *scale;
			var hAlign=this.mHAlign;
			var vAlign=this.mVAlign;
			if (this.isHorizontalAutoSize){
				width=/*int.MAX_VALUE*/2147483647;
				hAlign=/*starling.utils.HAlign.LEFT*/"left";
			}
			if (this.isVerticalAutoSize){
				height=/*int.MAX_VALUE*/2147483647;
				vAlign=/*starling.utils.VAlign.TOP*/"top";
			};
			var textFormat=new TextFormat(this.mFontName,
			this.mFontSize *scale,this.mColor,this.mBold,this.mItalic,this.mUnderline,null,null,hAlign);
			textFormat.kerning=this.mKerning;
			TextField.sNativeTextField.defaultTextFormat=textFormat;
			TextField.sNativeTextField.width=width;
			TextField.sNativeTextField.height=height;
			TextField.sNativeTextField.antiAliasType=/*iflash.text.AntiAliasType.ADVANCED*/"advanced";
			TextField.sNativeTextField.selectable=false;
			TextField.sNativeTextField.multiline=true;
			TextField.sNativeTextField.wordWrap=true;
			if (this.mIsHtmlText)
				TextField.sNativeTextField.htmlText=this.mText;
			else
			TextField.sNativeTextField.text=this.mText;
			TextField.sNativeTextField.embedFonts=true;
			TextField.sNativeTextField.filters=this.mNativeFilters;
			if (TextField.sNativeTextField.textWidth==0.0 || TextField.sNativeTextField.textHeight==0.0)
				TextField.sNativeTextField.embedFonts=false;
			this.formatText(TextField.sNativeTextField,textFormat);
			if (this.mAutoScale)
				this.autoScaleNativeTextField(TextField.sNativeTextField);
			var textWidth=TextField.sNativeTextField.textWidth;
			var textHeight=TextField.sNativeTextField.textHeight;
			if (this.isHorizontalAutoSize)
				TextField.sNativeTextField.width=width=Math.ceil(textWidth+5);
			if (this.isVerticalAutoSize)
				TextField.sNativeTextField.height=height=Math.ceil(textHeight+4);
			if (width < 1)
				width=1.0;
			if (height < 1)
				height=1.0;
			var textOffsetX=0.0;
			if (hAlign==/*starling.utils.HAlign.LEFT*/"left")
				textOffsetX=2;
			else if (hAlign==/*starling.utils.HAlign.CENTER*/"center")
			textOffsetX=(width-textWidth)/ 2.0;
			else if (hAlign==/*starling.utils.HAlign.RIGHT*/"right")
			textOffsetX=width-textWidth-2;
			var textOffsetY=0.0;
			if (vAlign==/*starling.utils.VAlign.TOP*/"top")
				textOffsetY=2;
			else if (vAlign==/*starling.utils.VAlign.CENTER*/"center")
			textOffsetY=(height-textHeight)/ 2.0;
			else if (vAlign==/*starling.utils.VAlign.BOTTOM*/"bottom")
			textOffsetY=height-textHeight-2;
			var filterOffset=this.calculateFilterOffset(TextField.sNativeTextField,hAlign,vAlign);
			var bitmapData=new BitmapData(width,height,true,0x0);
			var drawMatrix=new Matrix(1,0,0,1,
			filterOffset.x,filterOffset.y+int(textOffsetY)-2);
			var drawWithQualityFunc=
			"drawWithQuality" in bitmapData ? bitmapData["drawWithQuality"] :null;
			if ((typeof drawWithQualityFunc=='function'))
				drawWithQualityFunc.call(bitmapData,TextField.sNativeTextField,drawMatrix,
			null,null,null,false,/*iflash.display.StageQuality.MEDIUM*/"medium");
			else
			bitmapData.draw(TextField.sNativeTextField,drawMatrix);
			TextField.sNativeTextField.text="";
			resultTextBounds.setTo((textOffsetX+filterOffset.x)/ scale,
			(textOffsetY+filterOffset.y)/ scale,
			textWidth / scale,textHeight / scale);
			return bitmapData;
		}

		__proto.autoScaleNativeTextField=function(textField){
			var size=Number(textField.defaultTextFormat.size);
			var maxHeight=textField.height-4;
			var maxWidth=textField.width-4;
			while (textField.textWidth > maxWidth || textField.textHeight > maxHeight){
				if (size <=4)
					break ;
				var format=textField.defaultTextFormat;
				format.size=size--;
				textField.defaultTextFormat=format;
				if (this.mIsHtmlText)
					textField.htmlText=this.mText;
				else
				textField.text=this.mText;
			}
		}

		__proto.calculateFilterOffset=function(textField,hAlign,vAlign){
			var resultOffset=new Point();
			var filters=textField.filters;
			if (filters !=null && filters.length > 0){
				var textWidth=textField.textWidth;
				var textHeight=textField.textHeight;
				var bounds=new Rectangle();
				var filter;
				/*for each*/for(var $each_filter in filters){
					filter=filters[$each_filter];
					var blurX="blurX" in filter ? filter["blurX"] :0;
					var blurY="blurY" in filter ? filter["blurY"] :0;
					var angleDeg="angle" in filter ? filter["angle"] :0;
					var distance="distance" in filter ? filter["distance"] :0;
					var angle=starling.utils.deg2rad(angleDeg);
					var marginX=blurX *1.33;
					var marginY=blurY *1.33;
					var offsetX=Math.cos(angle)*distance-marginX / 2.0;
					var offsetY=Math.sin(angle)*distance-marginY / 2.0;
					var filterBounds=new Rectangle(
					offsetX,offsetY,textWidth+marginX,textHeight+marginY);
					bounds=bounds.union(filterBounds);
				}
				if (hAlign==/*starling.utils.HAlign.LEFT*/"left" && bounds.x < 0)
					resultOffset.x=-bounds.x;
				else if (hAlign==/*starling.utils.HAlign.RIGHT*/"right" && bounds.y > 0)
				resultOffset.x=-(bounds.right-textWidth);
				if (vAlign==/*starling.utils.VAlign.TOP*/"top" && bounds.y < 0)
					resultOffset.y=-bounds.y;
				else if (vAlign==/*starling.utils.VAlign.BOTTOM*/"bottom" && bounds.y > 0)
				resultOffset.y=-(bounds.bottom-textHeight);
			}
			return resultOffset;
		}

		__proto.createComposedContents=function(){
			if (this.mImage){
				this.mImage.removeFromParent(true);
				this.mImage.texture.dispose();
				this.mImage=null;
			}
			if (this.mQuadBatch==null){
				this.mQuadBatch=new QuadBatch();
				this.mQuadBatch.touchable=false;
				this.addChild(this.mQuadBatch);
			}
			else
			this.mQuadBatch.reset();
			var bitmapFont=TextField.getBitmapFont(this.mFontName);
			if (bitmapFont==null)
				throw new Error("Bitmap font not registered: "+this.mFontName);
			var width=this.mHitArea.width;
			var height=this.mHitArea.height;
			var hAlign=this.mHAlign;
			var vAlign=this.mVAlign;
			if (this.isHorizontalAutoSize){
				width=/*int.MAX_VALUE*/2147483647;
				hAlign=/*starling.utils.HAlign.LEFT*/"left";
			}
			if (this.isVerticalAutoSize){
				height=/*int.MAX_VALUE*/2147483647;
				vAlign=/*starling.utils.VAlign.TOP*/"top";
			}
			bitmapFont.fillQuadBatch(this.mQuadBatch,
			width,height,this.mText,this.mFontSize,this.mColor,hAlign,vAlign,this.mAutoScale,this.mKerning);
			this.mQuadBatch.batchable=this.mBatchable;
			if (this.mAutoSize !=/*starling.text.TextFieldAutoSize.NONE*/"none"){
				this.mTextBounds=this.mQuadBatch.getBounds(this.mQuadBatch,this.mTextBounds);
				if (this.isHorizontalAutoSize)
					this.mHitArea.width=this.mTextBounds.x+this.mTextBounds.width;
				if (this.isVerticalAutoSize)
					this.mHitArea.height=this.mTextBounds.y+this.mTextBounds.height;
			}
			else{
				this.mTextBounds=null;
			}
		}

		__proto.updateBorder=function(){
			if (this.mBorder==null)
				return;
			var width=this.mHitArea.width;
			var height=this.mHitArea.height;
			var topLine=this.mBorder.getChildAt(0);
			var rightLine=this.mBorder.getChildAt(1);
			var bottomLine=this.mBorder.getChildAt(2);
			var leftLine=this.mBorder.getChildAt(3);
			topLine.width=width;
			topLine.height=1;
			bottomLine.width=width;
			bottomLine.height=1;
			leftLine.width=1;
			leftLine.height=height;
			rightLine.width=1;
			rightLine.height=height;
			rightLine.x=width-1;
			bottomLine.y=height-1;
			topLine.color=rightLine.color=bottomLine.color=leftLine.color=this.mColor;
		}

		__proto.getBounds=function(targetSpace,resultRect){
			if (this.mRequiresRedraw)
				this.redraw();
			this.getTransformationMatrix(targetSpace,TextField.sHelperMatrix);
			return RectangleUtil.getBounds(this.mHitArea,TextField.sHelperMatrix,resultRect);
		}

		__proto.hitTest=function(localPoint,forTouch){
			(forTouch===void 0)&& (forTouch=false);
			if (forTouch && (!this.visible || !this.touchable))
				return null;
			else if (this.mHitArea.containsPoint(localPoint)&& this.hitTestMask(localPoint))
			return this;
			else
			return null;
		}

		__proto.updateIflashTextField=function(){
			this.mTextBounds || (this.mTextBounds=new Rectangle());
			this.mDefaultFormat.font=this.fontName;
			this.mDefaultFormat.size=this.fontSize;
			this.mDefaultFormat.bold=this.mBold;
			this.mDefaultFormat.align=this.hAlign;
			this.mDefaultFormat.color=this.mColor;
			TextField.iflashTextField.defaultTextFormat=this.mDefaultFormat;
			TextField.iflashTextField.multiline=true;
			TextField.iflashTextField.wordWrap=(this.mAutoSize=="none")? true :false;
			TextField.iflashTextField._width=this.mHitArea.width;
			TextField.iflashTextField._height=this.mHitArea.height;
			TextField.iflashTextField._autoSize=this.mAutoSize;
			this.mHTMLContent=TextField.iflashTextField.htmlText=this.mText;
			/*__JS__ */iflash.text.TextField.renderTexts();
			this.mNodes=TextField.iflashTextField.nodes.clone();
			var yOffset=0;
			if(this.vAlign=="center")
				yOffset=(TextField.iflashTextField.height-TextField.iflashTextField._textHeight)/2;
			else if(this.vAlign=="bottom")
			yOffset=TextField.iflashTextField.height-TextField.iflashTextField._textHeight;
			if(yOffset){
				for(var i=TextField.iflashTextField.nodes.length-1;i>=0;i--){
					this.mNodes.getElem(i).y+=yOffset;
				}
			}
			this.mTextBounds.y=yOffset;
			this.mTextBounds.width=TextField.iflashTextField._textWidth;
			this.mTextBounds.height=TextField.iflashTextField._textHeight+3;
			if(this.mAutoSize && this.mAutoSize !="none"){
				this.mHitArea.width=TextField.iflashTextField._textWidth+/*CLASS CONST:starling.text.TextField.RIGHT_PADDING*/2+/*CLASS CONST:starling.text.TextField.LEFT_PADDING*/2;
				this.mHitArea.height=TextField.iflashTextField._textHeight+/*CLASS CONST:starling.text.TextField.BOTTOM_PADDING*/3+/*CLASS CONST:starling.text.TextField.TOP_PADDING*/2;
			}
		}

		__proto.getColorString=function(value){
			if(!value && value !=0)
				return null;
			var s;
			s=value.toString(16).toUpperCase();
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s="#"+str+s;
			return s;
		}

		__proto.mathCeilPowerOfTwo=function(x){
			x--;
			x |=x >> 1;
			x |=x >> 2;
			x |=x >> 4;
			x |=x >> 8;
			x |=x >> 16;
			x++;
			return x;
		}

		__getset(0,__proto,'isHorizontalAutoSize',function(){
			return this.mAutoSize==/*starling.text.TextFieldAutoSize.HORIZONTAL*/"horizontal" ||
			this.mAutoSize==/*starling.text.TextFieldAutoSize.BOTH_DIRECTIONS*/"bothDirections";
		});

		__getset(0,__proto,'isVerticalAutoSize',function(){
			return this.mAutoSize==/*starling.text.TextFieldAutoSize.VERTICAL*/"vertical" ||
			this.mAutoSize==/*starling.text.TextFieldAutoSize.BOTH_DIRECTIONS*/"bothDirections";
		});

		__getset(0,__proto,'height',_super.prototype._$get_height,function(value){
			this.mHitArea.height=value;
			this.mRequiresRedraw=true;
			this.mHei=value;
			/*__JS__ */this.isHtmlText && (iflash.text.TextField.renderTexts());
		});

		__getset(0,__proto,'textBounds',function(){
			this.mTextBounds || (this.mTextBounds=new Rectangle());
			if(this.mTextBounds.isEmpty())
				this.layout();
			if(this.isHtmlText){
				if(this.hAlign=="center")
					this.mTextBounds.x=(TextField.iflashTextField._width-TextField.iflashTextField._textWidth)/ 2;
				else if(this.hAlign=='right')
				this.mTextBounds.x=TextField.iflashTextField._width-TextField.iflashTextField._textWidth;
				else
				this.mTextBounds.x=/*iflash.text.TextField.LEFT_PADDING*/2;
			}
			return this.mTextBounds.clone();
		});

		__getset(0,__proto,'isHtmlText',function(){
			return this.mIsHtmlText;
			},function(value){
			if (this.mIsHtmlText !=value){
				this.mIsHtmlText=value;
				this.mRequiresRedraw=true;
			}
			if(!this.mNodes && value){
				this.text=this.mText;
			}
		});

		__getset(0,__proto,'width',_super.prototype._$get_width,function(value){
			this.mHitArea.width=value;
			this.mRequiresRedraw=true;
			this.mWid=value;
			/*__JS__ */this.isHtmlText && (iflash.text.TextField.renderTexts());
		});

		__getset(0,__proto,'fontName',function(){
			return this.mFontName;
			},function(value){
			if (this.mFontName !=value){
				this.mFontName=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'border',function(){
			return this.mBorder !=null;
			},function(value){
			if (value && this.mBorder==null){
				this.mBorder=new Sprite1();
				this.addChild(this.mBorder);
				for (var i=0;i < 4;++i)
				this.mBorder.addChild(new Quad(1.0,1.0));
				this.updateBorder();
			}
			else if (!value && this.mBorder !=null){
				this.mBorder.removeFromParent(true);
				this.mBorder=null;
			}
		});

		__getset(0,__proto,'text',function(){
			return this.mText;
			},function(value){
			if (value==null)
				value="";{
				this.mText=value.toString();
				this.mRequiresRedraw=true;
				this.mTextBounds && this.mTextBounds.setTo(0,0,0,0);
				if(this.isHtmlText){
					this.updateIflashTextField();
				}
			}
		});

		__getset(0,__proto,'fontSize',function(){
			return this.mFontSize;
			},function(value){
			if (this.mFontSize !=value){
				this.mFontSize=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'color',function(){
			return this.mColor;
			},function(value){
			if (this.mColor !=value){
				this.mColor=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'hAlign',function(){
			return this.mHAlign;
			},function(value){
			if (!HAlign.isValid(value))
				throw new Error("Invalid horizontal align: "+value);
			if (this.mHAlign !=value){
				this.mHAlign=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'vAlign',function(){
			return this.mVAlign;
			},function(value){
			if (!VAlign.isValid(value))
				throw new Error("Invalid vertical align: "+value);
			if (this.mVAlign !=value){
				this.mVAlign=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'bold',function(){
			return this.mBold;
			},function(value){
			if (this.mBold !=value){
				this.mBold=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'italic',function(){
			return this.mItalic;
			},function(value){
			if (this.mItalic !=value){
				this.mItalic=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'underline',function(){
			return this.mUnderline;
			},function(value){
			if (this.mUnderline !=value){
				this.mUnderline=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'kerning',function(){
			return this.mKerning;
			},function(value){
			if (this.mKerning !=value){
				this.mKerning=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'autoScale',function(){
			return this.mAutoScale;
			},function(value){
			if (this.mAutoScale !=value){
				this.mAutoScale=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'autoSize',function(){
			return this.mAutoSize;
			},function(value){
			if (this.mAutoSize !=value){
				this.mAutoSize=value;
				this.mRequiresRedraw=true;
			}
		});

		__getset(0,__proto,'batchable',function(){
			return this.mBatchable;
			},function(value){
			this.mBatchable=value;
			if (this.mQuadBatch)
				this.mQuadBatch.batchable=value;
		});

		__getset(0,__proto,'nativeFilters',function(){
			return this.mNativeFilters;
			},function(value){
			this.mNativeFilters=value.concat();
			this.mRequiresRedraw=true;
			if (!value)
				return;
			var strokeFilter;
			for (var i=value.length-1;i >=0;i--){
				if (((value[i])instanceof iflash.filters.GlowFilter )){
					strokeFilter=value[i];
					value.splice(i,1);
					break ;
				}
			}
			if (strokeFilter){
				this.strokeColor=this.getColorString(strokeFilter.color);
				this.strokeThickness=(strokeFilter.blurX / 5)*3+1;
			}
			else{
				this.strokeColor=null;
				this.strokeThickness=null;
			}
		});

		__getset(1,TextField,'defaultTextureFormat',function(){
			return TextField.sDefaultTextureFormat;
			},function(value){
			TextField.sDefaultTextureFormat=value;
		});

		__getset(1,TextField,'bitmapFonts',function(){
			var fonts=Starling.current.contextData ["starling.display.TextField.BitmapFonts"];
			if (fonts==null){
				fonts=new Object();
				Starling.current.contextData["starling.display.TextField.BitmapFonts"]=fonts;
			}
			return fonts;
		},starling.display.DisplayObjectContainer._$SET_bitmapFonts);

		TextField.getColorString=function(value){
			if(!value && value !=0)
				return null;
			var s;
			s=value.toString(16).toUpperCase();
			s=s.replace(/0x|0X/,'');
			var len=6-s.length,str="";
			if(s.length<6){
				for(var i=0;i<len;i++){
					str+=0;
				}
			}
			s="#"+str+s;
			return s;
		}

		TextField.registerBitmapFont=function(bitmapFont,name){
			if (name==null)
				name=bitmapFont.name;
			TextField.bitmapFonts[TextField.convertToLowerCase(name)]=bitmapFont;
			return name;
		}

		TextField.unregisterBitmapFont=function(name,dispose){
			(dispose===void 0)&& (dispose=true);
			name=TextField.convertToLowerCase(name);
			if (dispose && TextField.bitmapFonts[name] !=undefined)
				TextField.bitmapFonts[name].dispose();
			delete TextField.bitmapFonts[name];
		}

		TextField.getBitmapFont=function(name){
			return TextField.bitmapFonts[TextField.convertToLowerCase(name)];
		}

		TextField.convertToLowerCase=function(string){
			var result=TextField.sStringCache[string];
			if (result==null){
				result=string.toLowerCase();
				TextField.sStringCache[string]=result;
			}
			return result;
		}

		TextField.BITMAP_FONT_DATA_NAME="starling.display.TextField.BitmapFonts";
		TextField.LEFT_PADDING=2;
		TextField.RIGHT_PADDING=2;
		TextField.TOP_PADDING=2;
		TextField.BOTTOM_PADDING=3;
		TextField.m_canvas2D=null;
		TextField.m_context2D=null;
		__static(TextField,
		['sDefaultTextureFormat',function(){return this.sDefaultTextureFormat=
			"BGRA_PACKED" in Context3DTextureFormat ? "bgraPacked4444" :"bgra";},'LINE_LEADING',function(){return this.LINE_LEADING=Laya.CONCHVER ? 0 :4;},'iflashTextField',function(){return this.iflashTextField=new iflash.text.TextField();},'sHelperMatrix',function(){return this.sHelperMatrix=new Matrix();},'sNativeTextField',function(){return this.sNativeTextField=new iflash.text.TextField();},'mpoint',function(){return this.mpoint=new Point();},'m2point',function(){return this.m2point=new Point();},'sStringCache',function(){return this.sStringCache=new Object();}
		]);
		return TextField;
	})(DisplayObjectContainer1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/image.as
	//class starling.display.Image extends starling.display.Quad
	var Image2=(function(_super){
		function Image(texture){
			this.mTexture=null;
			this.mSmoothing=null;
			this.mVertexDataCache=null;
			this.mVertexDataCacheInvalid=false;
			if (texture){
				var frame=texture.frame;
				var width=frame ? frame.width :texture.width;
				var height=frame ? frame.height :texture.height;
				var pma=texture.premultipliedAlpha;
				Image.__super.call(this,width,height,0xffffff,pma);
				this.mVertexData.setTexCoords(0,0.0,0.0);
				this.mVertexData.setTexCoords(1,1.0,0.0);
				this.mVertexData.setTexCoords(2,0.0,1.0);
				this.mVertexData.setTexCoords(3,1.0,1.0);
				this.mTexture=texture;
				this.mSmoothing=/*starling.textures.TextureSmoothing.BILINEAR*/"bilinear";
				this.mVertexDataCache=new VertexData(4,pma);
				this.mVertexDataCacheInvalid=true;
			}
			else{
				throw new Error("Texture cannot be null");
			}
		}

		__class(Image,'starling.display.Image',false,_super,'Image2');
		var __proto=Image.prototype;
		__proto.onVertexDataChanged=function(){
			this.mVertexDataCacheInvalid=true;
		}

		__proto.readjustSize=function(){
			var frame=this.texture.frame;
			var width=frame ? frame.width :this.texture.width;
			var height=frame ? frame.height :this.texture.height;
			this.mVertexData.setPosition(0,0.0,0.0);
			this.mVertexData.setPosition(1,width,0.0);
			this.mVertexData.setPosition(2,0.0,height);
			this.mVertexData.setPosition(3,width,height);
			this.onVertexDataChanged();
		}

		__proto.setTexCoords=function(vertexID,coords){
			this.mVertexData.setTexCoords(vertexID,coords.x,coords.y);
			this.onVertexDataChanged();
		}

		__proto.setTexCoordsTo=function(vertexID,u,v){
			this.mVertexData.setTexCoords(vertexID,u,v);
			this.onVertexDataChanged();
		}

		__proto.getTexCoords=function(vertexID,resultPoint){
			if (resultPoint==null)resultPoint=new Point();
			this.mVertexData.getTexCoords(vertexID,resultPoint);
			return resultPoint;
		}

		__proto.copyVertexDataTo=function(targetData,targetVertexID){
			(targetVertexID===void 0)&& (targetVertexID=0);
			this.copyVertexDataTransformedTo(targetData,targetVertexID,null);
		}

		__proto.copyVertexDataTransformedTo=function(targetData,targetVertexID,matrix){
			(targetVertexID===void 0)&& (targetVertexID=0);
			if (this.mVertexDataCacheInvalid){
				this.mVertexDataCacheInvalid=false;
				this.mVertexData.copyTo(this.mVertexDataCache);
				this.mTexture.adjustVertexData(this.mVertexDataCache,0,4);
			}
			this.mVertexDataCache.copyTransformedTo(targetData,targetVertexID,matrix,0,4);
		}

		__proto.render=function(support,parentAlpha){
			support.batchQuad(this,parentAlpha,this.mTexture,this.mSmoothing);
		}

		__getset(0,__proto,'texture',function(){return this.mTexture;},function(value){
			if (value==null){
				throw new Error("Texture cannot be null");
			}
			else if (value !=this.mTexture){
				this.mTexture=value;
				this.mVertexData.setPremultipliedAlpha(this.mTexture.premultipliedAlpha);
				this.mVertexDataCache.setPremultipliedAlpha(this.mTexture.premultipliedAlpha,false);
				this.onVertexDataChanged();
			}
		});

		__getset(0,__proto,'smoothing',function(){return this.mSmoothing;},function(value){
			if (TextureSmoothing.isValid(value))
				this.mSmoothing=value;
			else
			throw new Error("Invalid smoothing mode: "+value);
		});

		Image.fromBitmap=function(bitmap,generateMipMaps,scale){
			(generateMipMaps===void 0)&& (generateMipMaps=true);
			(scale===void 0)&& (scale=1);
			return new Image(Texture1.fromBitmap(bitmap,generateMipMaps,false,scale));
		}

		return Image;
	})(Quad)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/filters/cachequadbatch.as
	//class starling.filters.CacheQuadBatch extends starling.display.QuadBatch
	var CacheQuadBatch=(function(_super){
		function CacheQuadBatch(){
			CacheQuadBatch.__super.call(this);
		}

		__class(CacheQuadBatch,'starling.filters.CacheQuadBatch',false,_super);
		var __proto=CacheQuadBatch.prototype;
		__proto.dispose=function(){
			if (this.texture)this.texture.dispose();
			_super.prototype.dispose.call(this);
		}

		return CacheQuadBatch;
	})(QuadBatch)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/extensions/pdparticlesystem.as
	//class starling.extensions.PDParticleSystem extends starling.extensions.ParticleSystem
	var PDParticleSystem=(function(_super){
		function PDParticleSystem(config,texture){
			this.EMITTER_TYPE_GRAVITY=0;
			this.EMITTER_TYPE_RADIAL=1;
			this.mEmitterType=0;
			this.mEmitterXVariance=NaN;
			this.mEmitterYVariance=NaN;
			this.mMaxNumParticles=0;
			this.mLifespan=NaN;
			this.mLifespanVariance=NaN;
			this.mStartSize=NaN;
			this.mStartSizeVariance=NaN;
			this.mEndSize=NaN;
			this.mEndSizeVariance=NaN;
			this.mEmitAngle=NaN;
			this.mEmitAngleVariance=NaN;
			this.mStartRotation=NaN;
			this.mStartRotationVariance=NaN;
			this.mEndRotation=NaN;
			this.mEndRotationVariance=NaN;
			this.mSpeed=NaN;
			this.mSpeedVariance=NaN;
			this.mGravityX=NaN;
			this.mGravityY=NaN;
			this.mRadialAcceleration=NaN;
			this.mRadialAccelerationVariance=NaN;
			this.mTangentialAcceleration=NaN;
			this.mTangentialAccelerationVariance=NaN;
			this.mMaxRadius=NaN;
			this.mMaxRadiusVariance=NaN;
			this.mMinRadius=NaN;
			this.mMinRadiusVariance=NaN;
			this.mRotatePerSecond=NaN;
			this.mRotatePerSecondVariance=NaN;
			this.mStartColor=null;
			this.mStartColorVariance=null;
			this.mEndColor=null;
			this.mEndColorVariance=null;
			this.parseConfig(config);
			var emissionRate=this.mMaxNumParticles / this.mLifespan;
			PDParticleSystem.__super.call(this,texture,emissionRate,this.mMaxNumParticles,this.mMaxNumParticles,
			this.mBlendFactorSource,this.mBlendFactorDestination);
		}

		__class(PDParticleSystem,'starling.extensions.PDParticleSystem',false,_super);
		var __proto=PDParticleSystem.prototype;
		__proto.createParticle=function(){
			return new PDParticle();
		}

		__proto.initParticle=function(aParticle){
			var particle=aParticle;
			var lifespan=this.mLifespan+this.mLifespanVariance *(Math.random()*2.0-1.0);
			particle.currentTime=0.0;
			particle.totalTime=lifespan > 0.0 ? lifespan :0.0;
			if (lifespan <=0.0)return;
			particle.x=this.mEmitterX+this.mEmitterXVariance *(Math.random()*2.0-1.0);
			particle.y=this.mEmitterY+this.mEmitterYVariance *(Math.random()*2.0-1.0);
			particle.startX=this.mEmitterX;
			particle.startY=this.mEmitterY;
			var angle=this.mEmitAngle+this.mEmitAngleVariance *(Math.random()*2.0-1.0);
			var speed=this.mSpeed+this.mSpeedVariance *(Math.random()*2.0-1.0);
			particle.velocityX=speed *Math.cos(angle);
			particle.velocityY=speed *Math.sin(angle);
			var startRadius=this.mMaxRadius+this.mMaxRadiusVariance *(Math.random()*2.0-1.0);
			var endRadius=this.mMinRadius+this.mMinRadiusVariance *(Math.random()*2.0-1.0);
			particle.emitRadius=startRadius;
			particle.emitRadiusDelta=(endRadius-startRadius)/ lifespan;
			particle.emitRotation=this.mEmitAngle+this.mEmitAngleVariance *(Math.random()*2.0-1.0);
			particle.emitRotationDelta=this.mRotatePerSecond+this.mRotatePerSecondVariance *(Math.random()*2.0-1.0);
			particle.radialAcceleration=this.mRadialAcceleration+this.mRadialAccelerationVariance *(Math.random()*2.0-1.0);
			particle.tangentialAcceleration=this.mTangentialAcceleration+this.mTangentialAccelerationVariance *(Math.random()*2.0-1.0);
			var startSize=this.mStartSize+this.mStartSizeVariance *(Math.random()*2.0-1.0);
			var endSize=this.mEndSize+this.mEndSizeVariance *(Math.random()*2.0-1.0);
			if (startSize < 0.1)startSize=0.1;
			if (endSize < 0.1)endSize=0.1;
			particle.scale=startSize / this.texture.width;
			particle.scaleDelta=((endSize-startSize)/ lifespan)/ this.texture.width;
			var startColor=particle.colorArgb;
			var colorDelta=particle.colorArgbDelta;
			startColor.red=this.mStartColor.red;
			startColor.green=this.mStartColor.green;
			startColor.blue=this.mStartColor.blue;
			startColor.alpha=this.mStartColor.alpha;
			if (this.mStartColorVariance.red !=0)startColor.red+=this.mStartColorVariance.red *(Math.random()*2.0-1.0);
			if (this.mStartColorVariance.green !=0)startColor.green+=this.mStartColorVariance.green *(Math.random()*2.0-1.0);
			if (this.mStartColorVariance.blue !=0)startColor.blue+=this.mStartColorVariance.blue *(Math.random()*2.0-1.0);
			if (this.mStartColorVariance.alpha !=0)startColor.alpha+=this.mStartColorVariance.alpha *(Math.random()*2.0-1.0);
			var endColorRed=this.mEndColor.red;
			var endColorGreen=this.mEndColor.green;
			var endColorBlue=this.mEndColor.blue;
			var endColorAlpha=this.mEndColor.alpha;
			if (this.mEndColorVariance.red !=0)endColorRed+=this.mEndColorVariance.red *(Math.random()*2.0-1.0);
			if (this.mEndColorVariance.green !=0)endColorGreen+=this.mEndColorVariance.green *(Math.random()*2.0-1.0);
			if (this.mEndColorVariance.blue !=0)endColorBlue+=this.mEndColorVariance.blue *(Math.random()*2.0-1.0);
			if (this.mEndColorVariance.alpha !=0)endColorAlpha+=this.mEndColorVariance.alpha *(Math.random()*2.0-1.0);
			colorDelta.red=(endColorRed-startColor.red)/ lifespan;
			colorDelta.green=(endColorGreen-startColor.green)/ lifespan;
			colorDelta.blue=(endColorBlue-startColor.blue)/ lifespan;
			colorDelta.alpha=(endColorAlpha-startColor.alpha)/ lifespan;
			var startRotation=this.mStartRotation+this.mStartRotationVariance *(Math.random()*2.0-1.0);
			var endRotation=this.mEndRotation+this.mEndRotationVariance *(Math.random()*2.0-1.0);
			particle.rotation=startRotation;
			particle.rotationDelta=(endRotation-startRotation)/ lifespan;
		}

		__proto.advanceParticle=function(aParticle,passedTime){
			var particle=aParticle;
			var restTime=particle.totalTime-particle.currentTime;
			passedTime=restTime > passedTime ? passedTime :restTime;
			particle.currentTime+=passedTime;
			if (this.mEmitterType==this.EMITTER_TYPE_RADIAL){
				particle.emitRotation+=particle.emitRotationDelta *passedTime;
				particle.emitRadius+=particle.emitRadiusDelta *passedTime;
				particle.x=this.mEmitterX-Math.cos(particle.emitRotation)*particle.emitRadius;
				particle.y=this.mEmitterY-Math.sin(particle.emitRotation)*particle.emitRadius;
				if (particle.emitRadius < this.mMinRadius)
					particle.currentTime=particle.totalTime;
			}
			else{
				var distanceX=particle.x-particle.startX;
				var distanceY=particle.y-particle.startY;
				var distanceScalar=Math.sqrt(distanceX*distanceX+distanceY*distanceY);
				if (distanceScalar < 0.01)distanceScalar=0.01;
				var radialX=distanceX / distanceScalar;
				var radialY=distanceY / distanceScalar;
				var tangentialX=radialX;
				var tangentialY=radialY;
				radialX *=particle.radialAcceleration;
				radialY *=particle.radialAcceleration;
				var newY=tangentialX;
				tangentialX=-tangentialY *particle.tangentialAcceleration;
				tangentialY=newY *particle.tangentialAcceleration;
				particle.velocityX+=passedTime *(this.mGravityX+radialX+tangentialX);
				particle.velocityY+=passedTime *(this.mGravityY+radialY+tangentialY);
				particle.x+=particle.velocityX *passedTime;
				particle.y+=particle.velocityY *passedTime;
			}
			particle.scale+=particle.scaleDelta *passedTime;
			particle.rotation+=particle.rotationDelta *passedTime;
			particle.colorArgb.red+=particle.colorArgbDelta.red *passedTime;
			particle.colorArgb.green+=particle.colorArgbDelta.green *passedTime;
			particle.colorArgb.blue+=particle.colorArgbDelta.blue *passedTime;
			particle.colorArgb.alpha+=particle.colorArgbDelta.alpha *passedTime;
			particle.color=particle.colorArgb.toRgb();
			particle.alpha=particle.colorArgb.alpha;
		}

		__proto.updateEmissionRate=function(){
			this.emissionRate=this.mMaxNumParticles / this.mLifespan;
		}

		__proto.parseConfig=function(config){
			this.mEmitterXVariance=parseFloat(config.sourcePositionVariance.attribute("x"));
			this.mEmitterYVariance=parseFloat(config.sourcePositionVariance.attribute("y"));
			this.mGravityX=parseFloat(config.gravity.attribute("x"));
			this.mGravityY=parseFloat(config.gravity.attribute("y"));
			this.mEmitterType=getIntValue(config.emitterType);
			this.mMaxNumParticles=getIntValue(config.maxParticles);
			this.mLifespan=Math.max(0.01,getFloatValue(config.particleLifeSpan));
			this.mLifespanVariance=getFloatValue(config.particleLifespanVariance);
			this.mStartSize=getFloatValue(config.startParticleSize);
			this.mStartSizeVariance=getFloatValue(config.startParticleSizeVariance);
			this.mEndSize=getFloatValue(config.finishParticleSize);
			this.mEndSizeVariance=getFloatValue(config.FinishParticleSizeVariance);
			this.mEmitAngle=starling.utils.deg2rad(getFloatValue(config.angle));
			this.mEmitAngleVariance=starling.utils.deg2rad(getFloatValue(config.angleVariance));
			this.mStartRotation=starling.utils.deg2rad(getFloatValue(config.rotationStart));
			this.mStartRotationVariance=starling.utils.deg2rad(getFloatValue(config.rotationStartVariance));
			this.mEndRotation=starling.utils.deg2rad(getFloatValue(config.rotationEnd));
			this.mEndRotationVariance=starling.utils.deg2rad(getFloatValue(config.rotationEndVariance));
			this.mSpeed=getFloatValue(config.speed);
			this.mSpeedVariance=getFloatValue(config.speedVariance);
			this.mRadialAcceleration=getFloatValue(config.radialAcceleration);
			this.mRadialAccelerationVariance=getFloatValue(config.radialAccelVariance);
			this.mTangentialAcceleration=getFloatValue(config.tangentialAcceleration);
			this.mTangentialAccelerationVariance=getFloatValue(config.tangentialAccelVariance);
			this.mMaxRadius=getFloatValue(config.maxRadius);
			this.mMaxRadiusVariance=getFloatValue(config.maxRadiusVariance);
			this.mMinRadius=getFloatValue(config.minRadius);
			this.mMinRadiusVariance=getFloatValue(config.minRadiusVariance);
			this.mRotatePerSecond=starling.utils.deg2rad(getFloatValue(config.rotatePerSecond));
			this.mRotatePerSecondVariance=starling.utils.deg2rad(getFloatValue(config.rotatePerSecondVariance));
			this.mStartColor=getColor(config.startColor);
			this.mStartColorVariance=getColor(config.startColorVariance);
			this.mEndColor=getColor(config.finishColor);
			this.mEndColorVariance=getColor(config.finishColorVariance);
			this.mBlendFactorSource=getBlendFunc(config.blendFuncSource);
			this.mBlendFactorDestination=getBlendFunc(config.blendFuncDestination);
			if (isNaN(this.mEndSizeVariance))
				this.mEndSizeVariance=getFloatValue(config.finishParticleSizeVariance);
			if (isNaN(this.mLifespan))
				this.mLifespan=Math.max(0.01,getFloatValue(config.particleLifespan));
			if (isNaN(this.mLifespanVariance))
				this.mLifespanVariance=getFloatValue(config.particleLifeSpanVariance);
			if (isNaN(this.mMinRadiusVariance))
				this.mMinRadiusVariance=0.0;
			function getIntValue (element){
				return element==undefined ? 0 :Laya.__parseInt(element.attribute("value"))
			}
			function getFloatValue (element){
				return element==undefined ? 0 :parseFloat(element.attribute("value"))
			}
			function getColor (element){
				var color=new ColorArgb();
				color.red=parseFloat(element.attribute("red"));
				color.green=parseFloat(element.attribute("green"));
				color.blue=parseFloat(element.attribute("blue"));
				color.alpha=parseFloat(element.attribute("alpha"));
				return color;
			}
			function getBlendFunc (element){
				var value=getIntValue(element);
				switch (value){
					case 0:return /*iflash.display3D.Context3DBlendFactor.ZERO*/"zero";
					case 1:return /*iflash.display3D.Context3DBlendFactor.ONE*/"one";
					case 0x300:return /*iflash.display3D.Context3DBlendFactor.SOURCE_COLOR*/"sourceColor";
					case 0x301:return /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_COLOR*/"oneMinusSourceColor";
					case 0x302:return /*iflash.display3D.Context3DBlendFactor.SOURCE_ALPHA*/"sourceAlpha";
					case 0x303:return /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_SOURCE_ALPHA*/"oneMinusSourceAlpha";
					case 0x304:return /*iflash.display3D.Context3DBlendFactor.DESTINATION_ALPHA*/"destinationAlpha";
					case 0x305:return /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_DESTINATION_ALPHA*/"oneMinusDestinationAlpha";
					case 0x306:return /*iflash.display3D.Context3DBlendFactor.DESTINATION_COLOR*/"destinationColor";
					case 0x307:return /*iflash.display3D.Context3DBlendFactor.ONE_MINUS_DESTINATION_COLOR*/"oneMinusDestinationColor";
					default :throw new ArgumentError("unsupported blending function: "+value);
					}
			}
		}

		__getset(0,__proto,'emitterType',function(){return this.mEmitterType;},function(value){this.mEmitterType=value;});
		__getset(0,__proto,'emitterYVariance',function(){return this.mEmitterYVariance;},function(value){this.mEmitterYVariance=value;});
		__getset(0,__proto,'minRadius',function(){return this.mMinRadius;},function(value){this.mMinRadius=value;});
		__getset(0,__proto,'startSize',function(){return this.mStartSize;},function(value){this.mStartSize=value;});
		__getset(0,__proto,'startSizeVariance',function(){return this.mStartSizeVariance;},function(value){this.mStartSizeVariance=value;});
		__getset(0,__proto,'emitterXVariance',function(){return this.mEmitterXVariance;},function(value){this.mEmitterXVariance=value;});
		__getset(0,__proto,'speed',function(){return this.mSpeed;},function(value){this.mSpeed=value;});
		__getset(0,__proto,'maxNumParticles',function(){return this.mMaxNumParticles;},function(value){
			this.maxCapacity=value;
			this.mMaxNumParticles=this.maxCapacity;
			this.updateEmissionRate();
		});

		__getset(0,__proto,'lifespan',function(){return this.mLifespan;},function(value){
			this.mLifespan=Math.max(0.01,value);
			this.updateEmissionRate();
		});

		__getset(0,__proto,'endSizeVariance',function(){return this.mEndSizeVariance;},function(value){this.mEndSizeVariance=value;});
		__getset(0,__proto,'lifespanVariance',function(){return this.mLifespanVariance;},function(value){this.mLifespanVariance=value;});
		__getset(0,__proto,'endSize',function(){return this.mEndSize;},function(value){this.mEndSize=value;});
		__getset(0,__proto,'maxRadius',function(){return this.mMaxRadius;},function(value){this.mMaxRadius=value;});
		__getset(0,__proto,'emitAngle',function(){return this.mEmitAngle;},function(value){this.mEmitAngle=value;});
		__getset(0,__proto,'emitAngleVariance',function(){return this.mEmitAngleVariance;},function(value){this.mEmitAngleVariance=value;});
		__getset(0,__proto,'startRotation',function(){return this.mStartRotation;},function(value){this.mStartRotation=value;});
		__getset(0,__proto,'startRotationVariance',function(){return this.mStartRotationVariance;},function(value){this.mStartRotationVariance=value;});
		__getset(0,__proto,'endRotation',function(){return this.mEndRotation;},function(value){this.mEndRotation=value;});
		__getset(0,__proto,'endRotationVariance',function(){return this.mEndRotationVariance;},function(value){this.mEndRotationVariance=value;});
		__getset(0,__proto,'speedVariance',function(){return this.mSpeedVariance;},function(value){this.mSpeedVariance=value;});
		__getset(0,__proto,'gravityX',function(){return this.mGravityX;},function(value){this.mGravityX=value;});
		__getset(0,__proto,'gravityY',function(){return this.mGravityY;},function(value){this.mGravityY=value;});
		__getset(0,__proto,'radialAcceleration',function(){return this.mRadialAcceleration;},function(value){this.mRadialAcceleration=value;});
		__getset(0,__proto,'radialAccelerationVariance',function(){return this.mRadialAccelerationVariance;},function(value){this.mRadialAccelerationVariance=value;});
		__getset(0,__proto,'tangentialAcceleration',function(){return this.mTangentialAcceleration;},function(value){this.mTangentialAcceleration=value;});
		__getset(0,__proto,'tangentialAccelerationVariance',function(){return this.mTangentialAccelerationVariance;},function(value){this.mTangentialAccelerationVariance=value;});
		__getset(0,__proto,'maxRadiusVariance',function(){return this.mMaxRadiusVariance;},function(value){this.mMaxRadiusVariance=value;});
		__getset(0,__proto,'minRadiusVariance',function(){return this.mMinRadiusVariance;},function(value){this.mMinRadiusVariance=value;});
		__getset(0,__proto,'rotatePerSecond',function(){return this.mRotatePerSecond;},function(value){this.mRotatePerSecond=value;});
		__getset(0,__proto,'rotatePerSecondVariance',function(){return this.mRotatePerSecondVariance;},function(value){this.mRotatePerSecondVariance=value;});
		__getset(0,__proto,'startColor',function(){return this.mStartColor;},function(value){this.mStartColor=value;});
		__getset(0,__proto,'startColorVariance',function(){return this.mStartColorVariance;},function(value){this.mStartColorVariance=value;});
		__getset(0,__proto,'endColor',function(){return this.mEndColor;},function(value){this.mEndColor=value;});
		__getset(0,__proto,'endColorVariance',function(){return this.mEndColorVariance;},function(value){this.mEndColorVariance=value;});
		return PDParticleSystem;
	})(ParticleSystem)


	//file:///e:/develop/projects_b/gameframework_laya/src/framework/objs/clip.as
	;
	//class framework.objs.Clip extends starling.display.Sprite
	var Clip=(function(_super){
		var Cacher,FrameInfo;
		function Clip(infoList,addToPool,removeIsDestroy,parent,x,y,customName,controlled){
			this._renderedIndex=0;
			this._curIndex=0;
			this._maxIndex=-1;
			this._infoList=null;
			this._isPlaying=false;
			this._addToPool=false;
			this.controlled=false;
			this.isDispatchComplete=false;
			this.removeIsDestroy=false;
			this.removeIsStop=true;
			this.customName=null;
			this._bitmap=null;
			this._image=null;
			this._funObj=null;
			this._game=Game.getInstance();
			(addToPool===void 0)&& (addToPool=false);
			(removeIsDestroy===void 0)&& (removeIsDestroy=true);
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(controlled===void 0)&& (controlled=false);
			Clip.__super.call(this);
			this.x=x;
			this.y=y;
			this.customName=customName?customName:this.customName;
			this._addToPool=addToPool;
			this.removeIsDestroy=removeIsDestroy;
			this.alpha=1;
			this.rotation=0;
			this.visible=true;
			this.scaleX=this.scaleY=1;
			this.controlled=controlled;
			this._image=new Image2(Texture1.empty(2,2));
			this.addChild(this._image);
			this._curIndex=0;
			this._maxIndex=-1;
			this._isPlaying=true;
			this.setInfoList(infoList);
			this.addEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addOrRemoveStage));
			this.addEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.addOrRemoveStage));
			this._game.addEventListener(FrameworkEvent.PAUSE,__bind(this,this.pauseResumeHandler));
			this._game.addEventListener(FrameworkEvent.RESUME,__bind(this,this.pauseResumeHandler));
			parent && parent.addChild(this);
		}

		__class(Clip,'framework.objs.Clip',false,_super);
		var __proto=Clip.prototype;
		__proto.pauseResumeHandler=function(e){
			this.controlled || (this._game.pause ? this.stop():this.play());
		}

		__proto.addOrRemoveStage=function(e){
			if (e.type==/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage"){
				this._isPlaying=!this.controlled;
				if (this._maxIndex==0)
					this.gotoFrame(this._curIndex);
				else
				(this._maxIndex >-1)&& (this._isPlaying ? this.updatePlayStatus():this.gotoFrame(this._curIndex));
				}else{
				this.removeIsStop && this.stop();
				this.removeIsDestroy && this.destroy();
			}
		}

		__proto.play=function(){
			this._isPlaying=true;
			this.updatePlayStatus();
		}

		__proto.stop=function(){
			this._isPlaying=false;
			this.updatePlayStatus();
		}

		__proto.updatePlayStatus=function(){
			if (this._isPlaying && this._maxIndex >-1 && this.stage){
				this._game.addUpdate(/*framework.UpdateType.FOREVER*/0,__bind(this,this.enterFrame));
				}else{
				this._game.removeUpdate(/*framework.UpdateType.FOREVER*/0,__bind(this,this.enterFrame));
			}
		}

		__proto.nextFrame=function(){
			this.gotoFrame(this._curIndex);
			var funcName="frame"+this._curIndex+"Func";
			if (this._funObj && this._funObj[funcName]){
				this._funObj[funcName]();
			}
			this._curIndex==this._maxIndex && this.isDispatchComplete && this.dispatchEvent(new Event1(/*starling.events.Event.COMPLETE*/"complete"));
			(++this._curIndex > this._maxIndex)&& (this._curIndex=0);
		}

		__proto.gotoAndPlay=function(frameIndex){
			this.gotoFrame(frameIndex-1);
			this.play();
		}

		__proto.gotoAndStop=function(frameIndex){
			this.gotoFrame(frameIndex-1);
			this.stop();
		}

		__proto.enterFrame=function(){
			this.nextFrame();
		}

		__proto.gotoFrame=function(frameIndex){
			this._curIndex=frameIndex > this._maxIndex ? this._maxIndex :(frameIndex < 0 ? 0 :frameIndex);
			var f_info=this._infoList[this._curIndex];
			var isChange=f_info.texture!=this._image.texture;
			if(isChange){
				this._image.texture=f_info.texture;
				this._image.readjustSize();
				this._image.x=f_info.x;
				this._image.y=f_info.y;
				this._image.alpha=f_info.alpha;
			}
			this._renderedIndex=this._curIndex;
		}

		__proto.addFrameScript=function(frameNo,func){
			if (func==null)return;this._funObj=this._funObj|| {};
			this._funObj["frame"+frameNo+"Func"]=func;
		}

		__proto.destroy=function(){
			if (!this._addToPool && this._infoList){
				var frameInfo;
				var i=this._infoList.length;
				while(--i>=0){
					frameInfo=this._infoList[i];
					if (frameInfo.texture)frameInfo.texture.dispose();
				}
			}
			this._game.removeEventListener(FrameworkEvent.PAUSE,__bind(this,this.pauseResumeHandler));
			this._game.removeEventListener(FrameworkEvent.RESUME,__bind(this,this.pauseResumeHandler));
			this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.addOrRemoveStage));
			this.removeEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.addOrRemoveStage));
			if(this._image){
				this._image.parent&&this._image.parent.removeChild(this._image);
				this._image=null;
			}
			this._funObj=null;
			this._infoList=null;
			this._game=null;
		}

		__proto.setInfoList=function(value){
			if(!value)return;
			this._infoList=value;
			this._maxIndex=this._infoList.length-1;
			if (this._maxIndex >-1)this.gotoFrame(0);
		}

		__getset(0,__proto,'isPlaying',function(){return this._isPlaying;});
		__getset(0,__proto,'smoothing',function(){return this._image.smoothing;},function(value){this._image.smoothing=value;});
		__getset(0,__proto,'currentFrame',function(){return this._renderedIndex+1;});
		__getset(0,__proto,'totalFrames',function(){return this._infoList ? this._infoList.length :0;});
		Clip.fromDisplayObject=function(disObj,poolKey,removeIsDestroy,parent,controlled){
			(removeIsDestroy===void 0)&& (removeIsDestroy=true);
			(controlled===void 0)&& (controlled=false);
			var pool=ObjectPool.getInstance();
			var infoList;
			if (poolKey&&pool.has(poolKey)){
				infoList=pool.get(poolKey);
				if (infoList==null)throw new Error("对象池中存在: "+poolKey+" 但不是 Vector.<FrameInfo> 类型");
				}else{
				infoList=Cacher.cacheDisObj(disObj,poolKey);
			}
			return new Clip(infoList,Boolean(poolKey),removeIsDestroy,parent,disObj.x,disObj.y,disObj.name,controlled);
		}

		Clip.fromDefName=function(defName,addToPool,removeIsDestroy,parent,x,y,controlled){
			(addToPool===void 0)&& (addToPool=false);
			(removeIsDestroy===void 0)&& (removeIsDestroy=true);
			(x===void 0)&& (x=0);
			(y===void 0)&& (y=0);
			(controlled===void 0)&& (controlled=false);
			var key=defName+"_frameInfoList";
			var pool=ObjectPool.getInstance();
			var infoList;
			if (addToPool && pool.has(key)){
				infoList=pool.get(key);
				if (infoList==null)throw new Error("对象池中存在: "+key+" 但不是 Vector.<FrameInfo> 类型");
				}else{
				infoList=Cacher.cacheDefName(defName,addToPool);
				if (addToPool)pool.add(infoList,key);
			}
			return new Clip(infoList,addToPool,removeIsDestroy,parent,x,y,null,controlled);
		}

		Clip.__init$=function(){
			false;
			true;;
			//class Cacher
			Cacher=(function(){
				function Cacher(){};
				__class(Cacher,'',true);
				Cacher.cacheSingle=function(source,poolKey,transparent,fillColor,scale){
					(transparent===void 0)&& (transparent=true);
					(fillColor===void 0)&& (fillColor=0x00000000);
					(scale===void 0)&& (scale=1);
					var pool=ObjectPool.getInstance();
					var frameInfo;
					if (poolKey && pool.has(poolKey)){
						frameInfo=pool.get(poolKey);
						if (frameInfo==null)throw new Error("对象池中存在: "+poolKey+" 但不是 FrameInfo 类型");
						}else{
						var matrix=source.transform.matrix.clone();
						var w=0,h=0,x=0,y=0,rect;
						if (source.parent){
							rect=source.getBounds(source.parent);
							matrix.a *=scale;
							matrix.d *=scale;
							matrix.tx=int((matrix.tx-rect.x)*scale+0.5);
							matrix.ty=int((matrix.ty-rect.y)*scale+0.5);
							}else{
							rect=source.getBounds(null);
							matrix.a=scale;
							matrix.d=scale;
							matrix.tx=-int(rect.x *scale+0.5);
							matrix.ty=-int(rect.y *scale+0.5);
						}
						w=uint(rect.width *scale+0.9);
						h=uint(rect.height *scale+0.9);
						x=-matrix.tx;
						y=-matrix.ty;
						var bitData=new BitmapData(w < 1 ? 1 :w,h < 1 ? 1 :h ,transparent,fillColor);
						bitData.draw(source,matrix,null,null,null,true);
						frameInfo=new FrameInfo(bitData,x,y,source.alpha);
						if (poolKey)pool.add(frameInfo,poolKey);
					}
					return frameInfo;
				}
				Cacher.cacheDisObj=function(source,poolKey,transparent,fillColor,scale){
					(transparent===void 0)&& (transparent=true);
					(fillColor===void 0)&& (fillColor=0x00000000);
					(scale===void 0)&& (scale=1);
					var v_bitInfo;
					var mc=source;
					if (!mc){
						v_bitInfo=__newvec(1,null);
						v_bitInfo[0]=Cacher.cacheSingle(source,poolKey,transparent,fillColor,scale);
						}else{
						var i=0;
						var c=mc.totalFrames;
						mc.gotoAndStop(1);
						v_bitInfo=new Array(c);
						var frameNoKey;
						while (i < c){
							frameNoKey=poolKey ? poolKey+"_frameNo_"+i :null;
							v_bitInfo[i]=Cacher.cacheSingle(mc,frameNoKey,transparent,fillColor,scale);
							mc.nextFrame();
							i++;
						}
					}
					return v_bitInfo;
				}
				Cacher.cacheDefName=function(defName,addToPool,transparent,fillColor,scale){
					(addToPool===void 0)&& (addToPool=false);
					(transparent===void 0)&& (transparent=true);
					(fillColor===void 0)&& (fillColor=0x00000000);
					(scale===void 0)&& (scale=1);
					var disObj=LibUtil.getDefDisObj(defName);
					var infoList;
					if(disObj)infoList=Cacher.cacheDisObj(disObj);
					return infoList;
				}
				__static(Cacher,
				['_pt',function(){return this._pt=new Point(0,0);}
				]);
				return Cacher;
			})()
			//class FrameInfo
			FrameInfo=(function(){
				function FrameInfo(bitmapData,x,y,alpha){
					this.x=NaN;
					this.y=NaN;
					this.alpha=NaN;
					this.bitmapData=null;
					this.texture=null;
					(x===void 0)&& (x=0);
					(y===void 0)&& (y=0);
					(alpha===void 0)&& (alpha=0);
					this.texture=Texture1.fromBitmapData(bitmapData);
					this.x=x;
					this.y=y;
					this.alpha=alpha;
				}
				__class(FrameInfo,'',true);
				FrameInfo.__init$=function(){
					false;
					true;
				}
				return FrameInfo;
			})()
		}

		return Clip;
	})(Sprite1)


	;
	;
	;
	//file:///e:/develop/projects_b/gameframework_laya/src/starling/core/statsdisplay.as
	//class starling.core.StatsDisplay extends starling.display.Sprite
	var StatsDisplay=(function(_super){
		function StatsDisplay(){
			this.UPDATE_INTERVAL=0.5;
			this.mBackground=null;
			this.mTextField=null;
			this.mFrameCount=0;
			this.mTotalTime=0;
			this.mFps=0;
			this.mMemory=0;
			this.mDrawCount=0;
			StatsDisplay.__super.call(this);
			this.mBackground=new Quad(50,25,0x0);
			this.mTextField=new TextField1(120,36,"",/*starling.text.BitmapFont.MINI*/"mini",/*starling.text.BitmapFont.NATIVE_SIZE*/6,0xffffff);
			this.mTextField.x=2;
			this.mTextField.hAlign=/*starling.utils.HAlign.LEFT*/"left";
			this.mTextField.vAlign=/*starling.utils.VAlign.TOP*/"top";
			this.addChild(this.mBackground);
			this.addChild(this.mTextField);
			this.blendMode=/*starling.display.BlendMode.NONE*/"none";
			this.addEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.onAddedToStage));
			this.addEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.onRemovedFromStage));
		}

		__class(StatsDisplay,'starling.core.StatsDisplay',false,_super);
		var __proto=StatsDisplay.prototype;
		__proto.onAddedToStage=function(){
			this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.onAddedToStage));
			this.addEventListener(/*starling.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame));
			this.mTotalTime=this.mFrameCount=0;
			this.update();
		}

		__proto.onRemovedFromStage=function(){
			this.removeEventListener(/*starling.events.Event.ENTER_FRAME*/"enterFrame",__bind(this,this.onEnterFrame));
			this.removeEventListener(/*starling.events.Event.REMOVED_FROM_STAGE*/"removedFromStage",__bind(this,this.onRemovedFromStage));
		}

		__proto.onEnterFrame=function(event){
			this.mTotalTime+=event.passedTime;
			this.mFrameCount++;
			if (this.mTotalTime > this.UPDATE_INTERVAL){
				this.update();
				this.mFrameCount=this.mTotalTime=0;
			}
		}

		__proto.update=function(){
			this.mFps=this.mTotalTime > 0 ? this.mFrameCount / this.mTotalTime :0;
			this.mMemory=System.totalMemory *0.000000954;
			this.mTextField.text="FPS: "+this.mFps.toFixed(this.mFps < 100 ? 1 :0)+
			"\nMEM: "+this.mMemory.toFixed(this.mMemory < 100 ? 1 :0)+
			"\nDRW: "+(this.mTotalTime > 0 ? this.mDrawCount-2 :this.mDrawCount);
		}

		__proto.render=function(support,parentAlpha){
			support.finishQuadBatch();
			_super.prototype.render.call(this,support,parentAlpha);
		}

		__getset(0,__proto,'drawCount',function(){return this.mDrawCount;},function(value){this.mDrawCount=value;});
		__getset(0,__proto,'fps',function(){return this.mFps;},function(value){this.mFps=value;});
		__getset(0,__proto,'memory',function(){return this.mMemory;},function(value){this.mMemory=value;});
		return StatsDisplay;
	})(Sprite1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/events/touchmarker.as
	//class starling.events.TouchMarker extends starling.display.Sprite
	var TouchMarker=(function(_super){
		function TouchMarker(){
			this.mCenter=null;
			this.mTexture=null;
			TouchMarker.__super.call(this);
			this.mCenter=new Point();
			this.mTexture=this.createTexture();
			for (var i=0;i<2;++i){
				var marker=new Image2(this.mTexture);
				marker.pivotX=this.mTexture.width / 2;
				marker.pivotY=this.mTexture.height / 2;
				marker.touchable=false;
				this.addChild(marker);
			}
		}

		__class(TouchMarker,'starling.events.TouchMarker',false,_super);
		var __proto=TouchMarker.prototype;
		__proto.dispose=function(){
			this.mTexture.dispose();
			_super.prototype.dispose.call(this);
		}

		__proto.moveMarker=function(x,y,withCenter){
			(withCenter===void 0)&& (withCenter=false);
			if (withCenter){
				this.mCenter.x+=x-this.realMarker.x;
				this.mCenter.y+=y-this.realMarker.y;
			}
			this.realMarker.x=x;
			this.realMarker.y=y;
			this.mockMarker.x=2*this.mCenter.x-x;
			this.mockMarker.y=2*this.mCenter.y-y;
		}

		__proto.moveCenter=function(x,y){
			this.mCenter.x=x;
			this.mCenter.y=y;
			this.moveMarker(this.realX,this.realY);
		}

		__proto.createTexture=function(){
			return Texture1.empty(32,32);
		}

		__getset(0,__proto,'realMarker',function(){return this.getChildAt(0);});
		__getset(0,__proto,'mockMarker',function(){return this.getChildAt(1);});
		__getset(0,__proto,'realX',function(){return this.realMarker.x;});
		__getset(0,__proto,'realY',function(){return this.realMarker.y;});
		__getset(0,__proto,'mockX',function(){return this.mockMarker.x;});
		__getset(0,__proto,'mockY',function(){return this.mockMarker.y;});
		return TouchMarker;
	})(Sprite1)


	//file:///e:/develop/projects_b/gameframework_laya/src/starling/display/movieclip.as
	//class starling.display.MovieClip extends starling.display.Image
	var MovieClip1=(function(_super){
		function MovieClip(textures,fps){
			this.mTextures=null;
			this.mSounds=null;
			this.mDurations=null;
			this.mStartTimes=null;
			this.mDefaultFrameDuration=NaN;
			this.mCurrentTime=NaN;
			this.mCurrentFrame=0;
			this.mLoop=false;
			this.mPlaying=false;
			this.mMuted=false;
			this.mSoundTransform=null;
			(fps===void 0)&& (fps=12);
			if (textures.length > 0){
				MovieClip.__super.call(this,textures[0]);
				this.init(textures,fps);
			}
			else{
				throw new Error("Empty texture array");
			}
		}

		__class(MovieClip,'starling.display.MovieClip',false,_super,'MovieClip1');
		var __proto=MovieClip.prototype;
		Laya.imps(__proto,{"starling.animation.IAnimatable":true})
		__proto.init=function(textures,fps){
			if (fps <=0)throw new Error("Invalid fps: "+fps);
			var numFrames=textures.length;
			this.mDefaultFrameDuration=1.0 / fps;
			this.mLoop=true;
			this.mPlaying=true;
			this.mCurrentTime=0.0;
			this.mCurrentFrame=0;
			this.mTextures=textures.concat();
			this.mSounds=__newvec(numFrames);
			this.mDurations=__newvec(numFrames);
			this.mStartTimes=__newvec(numFrames);
			for (var i=0;i<numFrames;++i){
				this.mDurations[i]=this.mDefaultFrameDuration;
				this.mStartTimes[i]=i *this.mDefaultFrameDuration;
			}
		}

		__proto.addFrame=function(texture,sound,duration){
			(duration===void 0)&& (duration=-1);
			this.addFrameAt(this.numFrames,texture,sound,duration);
		}

		__proto.addFrameAt=function(frameID,texture,sound,duration){
			(duration===void 0)&& (duration=-1);
			if (frameID < 0 || frameID > this.numFrames)throw new Error("Invalid frame id");
			if (duration < 0)duration=this.mDefaultFrameDuration;
			this.mTextures.splice(frameID,0,texture);
			this.mSounds.splice(frameID,0,sound);
			this.mDurations.splice(frameID,0,duration);
			if (frameID > 0 && frameID==this.numFrames)
				this.mStartTimes[frameID]=this.mStartTimes[int(frameID-1)]+this.mDurations[int(frameID-1)];
			else
			this.updateStartTimes();
		}

		__proto.removeFrameAt=function(frameID){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			if (this.numFrames==1)throw new IllegalOperationError("Movie clip must not be empty");
			this.mTextures.splice(frameID,1);
			this.mSounds.splice(frameID,1);
			this.mDurations.splice(frameID,1);
			this.updateStartTimes();
		}

		__proto.getFrameTexture=function(frameID){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			return this.mTextures[frameID];
		}

		__proto.setFrameTexture=function(frameID,texture){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			this.mTextures[frameID]=texture;
		}

		__proto.getFrameSound=function(frameID){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			return this.mSounds[frameID];
		}

		__proto.setFrameSound=function(frameID,sound){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			this.mSounds[frameID]=sound;
		}

		__proto.getFrameDuration=function(frameID){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			return this.mDurations[frameID];
		}

		__proto.setFrameDuration=function(frameID,duration){
			if (frameID < 0 || frameID >=this.numFrames)throw new Error("Invalid frame id");
			this.mDurations[frameID]=duration;
			this.updateStartTimes();
		}

		__proto.reverseFrames=function(){
			this.mTextures.reverse();
			this.mSounds.reverse();
			this.mDurations.reverse();
			this.updateStartTimes();
			this.mCurrentTime=this.totalTime-this.mCurrentTime;
			this.mCurrentFrame=this.numFrames-this.mCurrentFrame-1;
		}

		__proto.play=function(){
			this.mPlaying=true;
		}

		__proto.pause=function(){
			this.mPlaying=false;
		}

		__proto.stop=function(){
			this.mPlaying=false;
			this.currentFrame=0;
		}

		__proto.updateStartTimes=function(){
			var numFrames=this.numFrames;
			this.mStartTimes.length=0;
			this.mStartTimes[0]=0;
			for (var i=1;i<numFrames;++i)
			this.mStartTimes[i]=this.mStartTimes[int(i-1)]+this.mDurations[int(i-1)];
		}

		__proto.advanceTime=function(passedTime){
			if (!this.mPlaying || passedTime <=0.0)return;
			var finalFrame=0;
			var previousFrame=this.mCurrentFrame;
			var restTime=0.0;
			var breakAfterFrame=false;
			var dispatchCompleteEvent=false;
			var totalTime=this.totalTime;
			if (this.mLoop && this.mCurrentTime >=totalTime){
				this.mCurrentTime=0.0;
				this.mCurrentFrame=0;
			}
			if (this.mCurrentTime < totalTime){
				this.mCurrentTime+=passedTime;
				finalFrame=this.mTextures.length-1;
				while (this.mCurrentTime > this.mStartTimes[this.mCurrentFrame]+this.mDurations[this.mCurrentFrame]){
					if (this.mCurrentFrame==finalFrame){
						if (this.mLoop && !this.hasEventListener(/*starling.events.Event.COMPLETE*/"complete")){
							this.mCurrentTime-=totalTime;
							this.mCurrentFrame=0;
						}
						else{
							breakAfterFrame=true;
							restTime=this.mCurrentTime-totalTime;
							dispatchCompleteEvent=true;
							this.mCurrentFrame=finalFrame;
							this.mCurrentTime=totalTime;
						}
					}
					else{
						this.mCurrentFrame++;
					};
					var sound=this.mSounds[this.mCurrentFrame];
					if (sound && !this.mMuted)sound.play(0,0,this.mSoundTransform);
					if (breakAfterFrame)break ;
				}
				if (this.mCurrentFrame==finalFrame && this.mCurrentTime==totalTime)
					dispatchCompleteEvent=true;
			}
			if (this.mCurrentFrame !=previousFrame)
				this.texture=this.mTextures[this.mCurrentFrame];
			if (dispatchCompleteEvent)
				this.dispatchEventWith(/*starling.events.Event.COMPLETE*/"complete");
			if (this.mLoop && restTime > 0.0)
				this.advanceTime(restTime);
		}

		__getset(0,__proto,'totalTime',function(){
			var numFrames=this.mTextures.length;
			return this.mStartTimes[int(numFrames-1)]+this.mDurations[int(numFrames-1)];
		});

		__getset(0,__proto,'currentTime',function(){return this.mCurrentTime;});
		__getset(0,__proto,'isPlaying',function(){
			if (this.mPlaying)
				return this.mLoop || this.mCurrentTime < this.totalTime;
			else
			return false;
		});

		__getset(0,__proto,'muted',function(){return this.mMuted;},function(value){this.mMuted=value;});
		__getset(0,__proto,'numFrames',function(){return this.mTextures.length;});
		__getset(0,__proto,'loop',function(){return this.mLoop;},function(value){this.mLoop=value;});
		__getset(0,__proto,'soundTransform',function(){return this.mSoundTransform;},function(value){this.mSoundTransform=value;});
		__getset(0,__proto,'currentFrame',function(){return this.mCurrentFrame;},function(value){
			this.mCurrentFrame=value;
			this.mCurrentTime=0.0;
			for (var i=0;i<value;++i)
			this.mCurrentTime+=this.getFrameDuration(i);
			this.texture=this.mTextures[this.mCurrentFrame];
			if (!this.mMuted && this.mSounds[this.mCurrentFrame])this.mSounds[this.mCurrentFrame].play();
		});

		__getset(0,__proto,'fps',function(){return 1.0 / this.mDefaultFrameDuration;},function(value){
			if (value <=0)throw new Error("Invalid fps: "+value);
			var newFrameDuration=1.0 / value;
			var acceleration=newFrameDuration / this.mDefaultFrameDuration;
			this.mCurrentTime *=acceleration;
			this.mDefaultFrameDuration=newFrameDuration;
			for (var i=0;i<this.numFrames;++i)
			this.mDurations[i] *=acceleration;
			this.updateStartTimes();
		});

		__getset(0,__proto,'isComplete',function(){
			return !this.mLoop && this.mCurrentTime >=this.totalTime;
		});

		return MovieClip;
	})(Image2)


	//file:///d:/personal/layaflash/tools/lib2.6/libs/iflash/src/iflashmain.as
	//class IFlashMain extends iflash.display.Sprite
	var IFlashMain=(function(_super){
		function IFlashMain(){
			IFlashMain.__super.call(this);
			if (this.stage)this.init();
			else this.addEventListener(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.init));
		}

		__class(IFlashMain,'IFlashMain',false,_super);
		var __proto=IFlashMain.prototype;
		__proto.init=function(e){
			this.removeEventListener(/*iflash.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.init));
		}

		return IFlashMain;
	})(Sprite)


	//file:///e:/develop/projects_b/gameframework_laya/src/g/main.as
	//class g.Main extends iflash.display.MovieClip
	var Main=(function(_super){
		var StarlingRoot;
		function Main(){
			Main.__super.call(this);
			this.layaInit();
			this.addEventListener("enterFrame",__bind(this,this.init));
		}

		__class(Main,'g.Main',false,_super);
		var __proto=Main.prototype;
		__proto.layaInit=function(){
			/*__JS__ */MyData.stageW=Laya.window.innerWidth;;
			/*__JS__ */MyData.stageH=Laya.window.innerHeight;;
			IFlash.setSize(MyData.stageW,MyData.stageH);
			IFlash.setOrientationEx(1);
			IFlash.setBgcolor("#ffffff");
			IFlash.showInfo(false);
		}

		__proto.init=function(e){
			this.removeEventListener("enterFrame",__bind(this,this.init));
			if (!MyData.cancelStageMask)this.setMask();
			this.stage.frameRate=MyData.frameRate;
			Assets_h5.getInstance().addEventListener("complete",__bind(this,this.assetsLoaded));
		}

		__proto.setMask=function(){
			var shape=new Shape();
			shape.graphics.beginFill(0,1);
			shape.graphics.drawRect(0,0,MyData.stageW,MyData.stageH);
			shape.graphics.endFill();
			this.addChild(shape);
			this.mask=shape;
		}

		__proto.assetsLoaded=function(e){
			e.target.removeEventListener("complete",__bind(this,this.assetsLoaded));
			var starling=new Starling(StarlingRoot,this.stage);
			starling.start();
		}

		Main.__init$=function(){
			//class StarlingRoot extends starling.display.Sprite
			StarlingRoot=(function(_super){
				function StarlingRoot(){
					StarlingRoot.__super.call(this);
					if(this.stage)this.init();else this.addEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.init));
				}
				__class(StarlingRoot,'',false,_super);
				var __proto=StarlingRoot.prototype;
				__proto.init=function(e){
					this.removeEventListener(/*starling.events.Event.ADDED_TO_STAGE*/"addedToStage",__bind(this,this.init));
					MyGame.getInstance().startup(this,this.stage);
				}
				return StarlingRoot;
			})(Sprite1)
		}

		return Main;
	})(MovieClip)


	;
	;
	starling.utils.deprecationNotified = false;
	window.Fns = {};
	iflash.net.classDic={};
	iflash.utils.flash_proxy=null;
	Laya.__init([Browser,UITween,b2ContactListener,Clip,ObjectPool,Main,Assets_h5]);
	Laya.Main(function(){IFlash.Start();IFlash.Run(new g.Main(),800,600);});

